
0000 ; ---------------------------------------------------------------------------
0000 ; File Name   : Rampage\Rom\game.bin
0000 ; Format      : Binary file
0000 ; Base Address: 0000h Range: 0000h - E000h Loaded length: E000h
0000
0000 ; Processor       : z80 []
0000 ; Target assembler: Zilog Macro Assembler
0000 ; Note: It is not a complete commented disassembly, I wasn't so much interested in the games working way
0000 ; but more about how it stored the maps and level data, as well as how the sprites were handled at the time
0000 ; Whilst I am first to admit I really am not a Z80 person so I did my best to understand how it hangs together
0000 ; Anyone is welcome to pick up and finish off, but it's a lot of code to trace basically a lot of movement code
0000 ; Many data tables I know what they do, either sprite codes or characters. (like building cracks etc)
0000 ; I did find some redundant code, but I see a youtube video of the programmer about time constraints, so it's
0000 ; totally understandable you don't want to read endless times the same stuff, so easy to see now, but at time it wouldn't
0000 ; And if you wonder why I picked Rampage, was because I programmed the C64 European version so I know the effort this took
0000 ; The arcade game broke new ground having three players so that's cool! And yes the humble C64 version I did also supported this
0000 ; Last edited 4th June 2025 by Michael Archer
0000 ; ===========================================================================
0000
0000 ; Segment type: Pure code
0000                         segment ROM
0000
0000 loc_0:                                                      ; 0681↓o 0698↓o 
0000                         jp      Game_Entry
0000 ; ---------------------------------------------------------------------------
0003 DSW1_DIP_SWITCHES:      db 0FFh                             ; get_dip_switch_settings↓o
0004 IN4_P3_AND_SOUND_READY: db 0FFh                             ; 0B0C↓o
0004                                                             ; wait_polling↓o
0005 OUT0_COIN_FLIP:         db 0FFh                             ; 0118↓o 013A↓o 
0006 OUT6_SOUND_GOOD_WRITE:  db 0FFh                             ; 010B↓o 0158↓o 
0006                                                             ;  OUT6 Sound Control Port (8-bit latch: Sound CPU → Sound Hardware)
0006                                                             ;  Bit 7  ($80): [Unused/Reserved]
0006                                                             ;  Bit 6  ($40): [Data Strobe / Latch / Data Valid]  (varies by game)
0006                                                             ;  Bit 5  ($20): Global Sound Enable / Reset / Ack
0006                                                             ;  Bit 4  ($10): [Unused or Data (high nibble)]
0006                                                             ;  Bit 3  ($08): [Unused or Data]
0006                                                             ;  Bit 2  ($04): [Unused or Data]
0006                                                             ;  Bit 1  ($02): [Unused or Data]
0006                                                             ;  Bit 0  ($01): Data Strobe / Command Write / Handshake
0006                                                             ;
0006                                                             ;  - Set Bit 5 ($20) to enable or reset sound hardware
0006                                                             ;  - Toggle Bit 0 ($01) as a strobe when writing data/commands
0006                                                             ;  - Bits 4–1 may be used for parallel/serial data to the sound chip,
0006                                                             ;    depending on protocol (see code for specifics)
0007 OUT7_WATCHDOG_RESET:    db 0FFh                             ; 0115↓o
0007                                                             ; hardware_failure↓o 
0008                         dw CTC_Channel0_IRQ
000A                         dw CTC_Channel1_IRQ
000C                         dw CTC_Channel2_IRQ                 ; Interrupt handler for CTC channel 2
000E                         dw CTC_Channel3_IRQ
0010
0010 ; =============== S U B R O U T I N E =======================================
0010
0010
0010 sub_10:                                                     ; sub_10↓j
0010                         jr      $
0010 ; End of function sub_10
0010
0010 ; ---------------------------------------------------------------------------
0012 byte_12:                db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
0018
0018 ; =============== S U B R O U T I N E =======================================
0018
0018 ; HL_plus_A
0018 ; Attributes: thunk
0018
0018 HL_plus_A:                                                  ; 051B↓p 07F7↓p 
0018                         jp      hl_add_helper               ; Generic helper HL = HL + A
0018 ; End of function HL_plus_A
0018
0018 ; ---------------------------------------------------------------------------
001B                         db 0FFh,0FFh,0FFh,0FFh,0FFh
0020 ; [00000003 BYTES: COLLAPSED FUNCTION dispatch_sound]
0023                         db 0FFh,0FFh,0FFh,0FFh,0FFh
0028 ; [00000003 BYTES: COLLAPSED FUNCTION clear_all_sprite]
002B                         db 0FFh,0FFh,0FFh,0FFh,0FFh
0030 ; [00000003 BYTES: COLLAPSED FUNCTION do_sprite_clear_loop]
0033                         db 0FFh,0FFh,0FFh,0FFh,0FFh
0038
0038 ; =============== S U B R O U T I N E =======================================
0038
0038 ; Attributes: thunk
0038
0038 random_number:                                              ; CTC_CHANNEL0↓p
0038                                                             ; CTC_CHANNEL1↓p 
0038                         jp      update_random_number
0038 ; End of function random_number
0038
0038 ; ---------------------------------------------------------------------------
003B                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
0046                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
0051                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
005A                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
0065                         db 0FFh
0066                         db  76h ; v
0067 aCopyRightBally:        .ascii 'COPY RIGHT BALLY MIDWAY MFG 1986'
0087                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
0092                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
009D                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00A8                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00B3                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00BE                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00C9                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00D4                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00DF                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00EA                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00F0 ; ---------------------------------------------------------------------------
00F0
00F0 CTC_CHANNEL0:                                               ; 01C7↓o 01CB↓o 
00F0                         rst     38h
00F1
00F1 CTC_CHANNEL1:                                               ; 0852↓o 0862↓o 
00F1                         rst     38h
00F2
00F2 CTC_CHANNEL2:                                               ; 01B4↓o 0854↓o
00F2                         rst     38h
00F2 ; ---------------------------------------------------------------------------
00F3 CTC_CHANNEL3:           db 0FFh                             ; 0856↓o 085A↓o 
00F4                         db 0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
00FF                         db 0FFh
0100 ; ---------------------------------------------------------------------------
0100
0100 Game_Entry:                                                 ; loc_0
0100                         di                                  ; Disable interrupts
0101                         ld      a, 1
0103                         ld      (unused_live_status), a
0106                         ld      a, 0
0108                         ld      (global_sound_enable), a    ; Disable sound (at startup)
010B                         out     (OUT6_SOUND_GOOD_WRITE), a  ; Send zero to sound board
010D                         ld      hl, 100                     ; Short delay loop (HL = $64 = 100)
0110
0110 startup_hardware_delay:                                     ; 0113↓j
0110                         dec     hl                          ; --- Delay loop for hardware stabilization ---
0111                         ld      a, h
0112                         or      l
0113                         jr      nz, startup_hardware_delay  ; Wait until HL == 0
0115                         out     (OUT7_WATCHDOG_RESET), a    ; Reset hardware watchdog timer
0117                         xor     a
0118                         out     (OUT0_COIN_FLIP), a         ; Reset coin flip and other outputs to zero
011A                         ld      sp, stack_pointer_top       ; Stack pointer to top of RAM
011D                         call    ram_segments_init
0120                         call    system_init                 ; If successful (Z set), proceed
0123                         jr      z, system_good
0125
0125 hardware_failure:                                           ; 0127↓j
0125                         out     (OUT7_WATCHDOG_RESET), a    ; Keep kicking the watchdog
0127                         jr      hardware_failure            ; Infinite loop on failure
0129 ; ---------------------------------------------------------------------------
0129
0129 system_good:                                                ; 0123
0129                         call    init_settings
012C                         jr      loc_153
012E ; ---------------------------------------------------------------------------
012E
012E service_reset:                                              ; 0246↓j D6E5↓j
012E                         di                                  ; Disable interrupts
012F                         ld      hl, 100                     ; Short delay loop (HL = $64 = 100)
0132
0132 secondary_wait:                                             ; 0135↓j
0132                         dec     hl                          ; --- Delay loop for hardware stabilization ---
0133                         ld      a, h
0134                         or      l
0135                         jr      nz, secondary_wait          ; Wait until HL == 0
0137                         out     (OUT7_WATCHDOG_RESET), a    ; Reset hardware watchdog timer
0139                         xor     a
013A                         out     (OUT0_COIN_FLIP), a         ; Reset coin flip and other outputs to zero
013C                         ld      sp, stack_pointer_top       ; top of ram for stack pointer
013F                         call    ram_segments_init
0142                         call    system_init
0145                         jr      z, system_good2
0147
0147 hardware_failure2:                                          ; 0149↓j
0147                         out     (OUT7_WATCHDOG_RESET), a    ; Keep kicking the watchdog
0149                         jr      hardware_failure2           ; Infinite loop on failure
014B ; ---------------------------------------------------------------------------
014B
014B system_good2:                                               ; 0145
014B                         call    sound_setup
014E                         call    sub_5F8
0151                         jr      loc_15D
0153 ; ---------------------------------------------------------------------------
0153
0153 loc_153:                                                    ; 012C
0153                         ld      a, 100000b                  ; a = $20: set sound system enable bit
0155                         ld      (global_sound_enable), a    ; Signal sound hardware to enable
0158                         out     (OUT6_SOUND_GOOD_WRITE), a  ; Prepare for main dispatch (no sounds)
015A                         ld      c, 0                        ; Kill any sounds off
015C                         rst     dispatch_sound              ; Sound 0 is reset or kills all channels afaik
015D
015D loc_15D:                                                    ; 0151
015D                         call    get_dip_switch_settings     ; --- Rampage DIP Switches: PORT 3 (in a, (3)) ---
015D                                                             ;  Bit(s)  Mask   Description
015D                                                             ;  0-1     0x03   Difficulty:
015D                                                             ;                   0 = Free Play
015D                                                             ;                   1 = Hard
015D                                                             ;                   2 = Easy
015D                                                             ;                   3 = Normal
015D                                                             ;  2       0x04   Score Option:
015D                                                             ;                   0 = Lose score when continuing
015D                                                             ;                   1 = Keep score when continuing
015D                                                             ;  3       0x08   Coin A:
015D                                                             ;                   0 = 2C/1C
015D                                                             ;                   1 = 1C/1C
015D                                                             ;  4-6     0x70   Coin B:
015D                                                             ;                   0x00 = 3C/1C
015D                                                             ;                   0x10 = 2C/1C
015D                                                             ;                   0x70 = 1C/1C
015D                                                             ;                   0x60 = 1C/2C
015D                                                             ;                   0x50 = 1C/3C
015D                                                             ;                   0x40 = 1C/4C
015D                                                             ;                   0x30 = 1C/5C
015D                                                             ;                   0x20 = 1C/6C
015D                                                             ;  7       0x80   Rack Advance (Cheat, F1):
015D                                                             ;                   0 = On
015D                                                             ;                   1 = Off
015D                                                             ;
0160                         call    sound_init
0163                         xor     a
0164                         ld      (unused_status), a
0167                         ei
0168                         ld      hl,  bg_row15+28h
016B                         ld      a, 20h ; ' '
016D                         ld      (hl), 54h ; 'T'
016F                         inc     hl
0170                         ld      (hl), a
0171                         inc     hl
0172                         ld      (hl), 49h ; 'I'
0174                         inc     hl
0175                         ld      (hl), a
0176                         inc     hl
0177                         ld      (hl), 4Ch ; 'L'
0179                         inc     hl
017A                         ld      (hl), a
017B                         inc     hl
017C                         ld      (hl), 54h ; 'T'
017E                         inc     hl
017F                         ld      (hl), a
0180                         ld      hl,  bg_row30+18h
0183                         ld      (hl), 4Dh ; 'M'
0185                         inc     hl
0186                         ld      (hl), a
0187                         inc     hl
0188                         ld      (hl), 49h ; 'I'
018A                         inc     hl
018B                         ld      (hl), a
018C                         inc     hl
018D                         ld      (hl), 43h ; 'C'
018F                         inc     hl
0190                         ld      (hl), a
0191                         inc     hl
0192                         ld      (hl), 48h ; 'H'
0194                         inc     hl
0195                         ld      (hl), a
0196                         inc     hl
0197                         ld      (hl), 45h ; 'E'
0199                         inc     hl
019A                         ld      (hl), a
019B                         inc     hl
019C                         ld      (hl), 4Ch ; 'L'
019E                         inc     hl
019F                         ld      (hl), a
01A0                         inc     hl
01A1                         ld      (hl), 4Ch ; 'L'
01A3                         inc     hl
01A4                         ld      (hl), a
01A5                         inc     hl
01A6                         ld      (hl), 45h ; 'E'
01A8                         inc     hl
01A9                         ld      (hl), a
01AA                         call    watchdog_reset
01AD                         jp      loc_873
01B0 ; ---------------------------------------------------------------------------
01B0
01B0 CTC_Channel2_IRQ:                                           ; 000C↑o
01B0                         ex      af, af'                     ; Preserve alternate accumulator/flags
01B1                         exx                                 ; Swap BC, DE, HL with shadow
01B2                         ld      a, 3                        ; Value to acknowledge/reset CTC
01B4                         out     (CTC_CHANNEL2), a           ; Write to CTC to acknowledge/re-arm
01B6                         exx                                 ; Restore main BC, DE, HL
01B7                         ex      af, af'                     ; Restore main accumulator/flags
01B8                         ei                                  ; Enable interrupts (if nesting allowed)
01B9                         reti                                ; Return from interrupt
01BB ; ---------------------------------------------------------------------------
01BB
01BB CTC_Channel3_IRQ:                                           ; 000E↑o
01BB                         ex      af, af'
01BC                         exx
01BD                         push    ix
01BF                         push    iy
01C1                         xor     a
01C2                         ld      (irq_handshake_flag), a     ; Clear the Flag
01C5                         ld      a, 10100111b                ; 0xA7: ctrl word, timer mode, IRQ on, ÷16, timer value follows
01C7                         out     (CTC_CHANNEL0), a           ; Send control word to CTC ch. 0
01C9                         ld      a, 24                       ; Interrupt Rate = 2,000,000 / (16 × 24) = 2,000,000 / 384 = ~5208 Hz
01CB                         out     (CTC_CHANNEL0), a           ; Set timer value
01CD                         ei                                  ; Make sure the IRQ is running or we will be stuck here forever
01CE                         call    irq_sound_handler           ; IRQ Sound Handler ot process buffer and soundFX which are processed and shuffled
01D1                         call    sub_306
01D4                         pop     iy
01D6                         pop     ix
01D8
01D8 irq_handshake_wait:                                         ; 01DC↓j
01D8                         ld      a, (irq_handshake_flag)     ; Now wait for the handshake to change via CTC 0 IRQ
01DB                         or      a
01DC                         jr      z, irq_handshake_wait
01DE                         exx
01DF                         ex      af, af'
01E0                         ei
01E1                         reti
01E3 ; ---------------------------------------------------------------------------
01E3
01E3 CTC_Channel0_IRQ:                                           ; 0008↑o
01E3                         push    af
01E4                         ld      a, (watchdog_flag)          ; Read the flag value
01E7                         inc     a                           ; Increment (acts like a "tick" or heartbeat)
01E8                         ld      (watchdog_flag), a          ; Save back
01EB                         ld      a, 3
01ED                         out     (CTC_CHANNEL0), a           ; Reset or acknowledge the CTC channel (possibly reset interrupt or watchdog
01EF                         ld      (irq_handshake_flag), a     ; Set a "handshake" flag for the main loop or another CPU
01F2                         pop     af
01F3                         reti                                ; Return from interrupt
01F5 ; ---------------------------------------------------------------------------
01F5
01F5 CTC_Channel1_IRQ:                                           ; 000A↑o
01F5                         push    af
01F6                         push    hl
01F7                         push    bc
01F8                         push    ix
01FA                         push    iy
01FC                         push    de
01FD                         call    sub_67E
0200                         call    sub_714
0203                         call    sub_75A
0206                         ld      hl, game_credits
0209                         call    add_game_credit
020C                         in      a, (0)
020E                         and     10h
0210                         jr      nz, loc_24C
0212                         ld      a, 2
0214                         ld      (active_sound_channels), a
0217                         ld      hl, soundfx_list
021A                         ld      (hl), 0
021C                         inc     hl
021D                         ld      (hl), 69h ; 'i'
021F                         call    irq_sound_handler           ; IRQ Sound Handler ot process buffer and soundFX which are processed and shuffled
0222
0222 loc_222:                                                    ; 022E↓j
0222                         ld      hl, 9999h
0225
0225 loc_225:                                                    ; 0228↓j
0225                         dec     hl
0226                         ld      a, h
0227                         or      l
0228                         jr      nz, loc_225
022A                         in      a, (0)
022C                         and     10h
022E                         jr      z, loc_222
0230                         ld      a, (game_credits)
0233                         or      a
0234                         jr      z, loc_23C
0236                         dec     a
0237                         ld      (game_credits), a
023A                         ld      b, 0FFh
023C
023C loc_23C:                                                    ; 0234 023E↓j
023C                         out     (OUT7_WATCHDOG_RESET), a
023E                         djnz    loc_23C
0240                         call    sub_249
0243                         call    nullsub_1
0246                         jp      service_reset
0249
0249 ; =============== S U B R O U T I N E =======================================
0249
0249
0249 sub_249:                                                    ; 0240↑p
0249                         ei
0249 ; End of function sub_249
0249
024A ; [00000002 BYTES: COLLAPSED FUNCTION nullsub_1]
024C ; ---------------------------------------------------------------------------
024C
024C loc_24C:                                                    ; 0210
024C                         pop     de
024D                         pop     iy
024F                         pop     ix
0251                         pop     bc
0252                         pop     hl
0253                         pop     af
0254                         ei
0255                         reti
0257
0257 ; =============== S U B R O U T I N E =======================================
0257
0257
0257 add_game_credit:                                            ; 0209↑p
0257                         ld      a, (hl)
0258                         cp      9
025A                         ret     c
025B                         ld      (hl), 9
025D                         ret
025D ; End of function add_game_credit
025D
025E ; ---------------------------------------------------------------------------
025E
025E message_print_white_swap:                                   ; D8EF↓p D911↓p 
025E                         push    bc
025F                         pop     hl
0260
0260 ; =============== S U B R O U T I N E =======================================
0260
0260
0260 message_print_white:                                        ; 0397↓p 03D0↓p 
0260                         ld      c, 0FFh
0262                         jr      message_print_own_control_code
0262 ; End of function message_print_white
0262
0264
0264 ; =============== S U B R O U T I N E =======================================
0264
0264
0264 message_print_text_only:                                    ; DD2B↓p DF1E↓p 
0264                         ld      c, 0
0266                         jr      message_print_own_control_code
0266 ; End of function message_print_text_only
0266
0268
0268 ; =============== S U B R O U T I N E =======================================
0268
0268 ; Print string c=colour hl=screen, source=de
0268
0268 message_print:                                              ; 0937↓p 0F3B↓p 
0268                         ld      a, c
0269                         and     7Fh                         ; mask down c 2nd code for plotting
026B                         ld      c, a
026C
026C message_print_own_control_code:                             ; 0262 0266
026C                         push    hl
026D
026D next_character:                                             ; 0295↓j 02A3↓j 
026D                         ld      a, (de)                     ; Get string / data
026E                         or      a                           ; 0 delimeters the text
026F                         jr      z, end_print
0271                         cp      2Fh ; '/'                   ; Control character "/"
0273                         jr      z, new_line
0275                         cp      23h ; '#'                   ; Control character "#" skip with next as number of chracters
0277                         jr      z, skip_character
0279                         cp      40h ; '@'                   ; Control "@" plots a count of space so unlike skip this pokes 32
027B                         jr      z, space_count
027D                         cp      20h ; ' '
027F                         jr      nz, loc_285                 ; Plot to screen
0281                         ld      (hl), 20h ; ' '
0283                         jr      loc_286                     ; move along
0285 ; ---------------------------------------------------------------------------
0285
0285 loc_285:                                                    ; 027F
0285                         ld      (hl), a                     ; Plot to screen
0286
0286 loc_286:                                                    ; 0283
0286                         inc     de                          ; move along
0287                         inc     hl                          ; and you move along also
0288                         ld      a, c                        ; if pass the routine with a=$ff
0289                         cp      0FFh
028B                         jr      nz, used_passed_colour      ; Used passed c to plot as 2nd code
028D                         ld      a, (hl)                     ; Get the next byte
028E                         and     3Ch ; '<'                   ; remove any palette info
0290                         ld      (hl), a                     ; save to character screen
0291                         jr      skip_me
0293 ; ---------------------------------------------------------------------------
0293
0293 used_passed_colour:                                         ; 028B
0293                         ld      (hl), c                     ; Used passed c to plot as 2nd code
0294
0294 skip_me:                                                    ; 0291
0294                         inc     hl
0295                         jr      next_character              ; Get string / data
0297 ; ---------------------------------------------------------------------------
0297
0297 skip_character:                                             ; 0277
0297                         push    bc
0298                         inc     de
0299                         ld      a, (de)                     ; Get next byte
029A                         sub     30h ; '0'                   ; get decimal count as a binary
029C                         inc     de                          ; advance pointer
029D                         ld      b, a
029E
029E skip_loop:                                                  ; 02A0↓j
029E                         inc     hl                          ; now skip screen space 2byes (1 character)
029F                         inc     hl
02A0                         djnz    skip_loop                   ; count for how many
02A2                         pop     bc
02A3                         jp      next_character              ; Get string / data
02A6 ; ---------------------------------------------------------------------------
02A6
02A6 space_count:                                                ; 027B
02A6                         push    bc
02A7                         inc     de
02A8                         ld      a, (de)                     ; get next byte
02A9                         sub     30h ; '0'                   ; get decimal from the string value
02AB                         inc     de
02AC                         ld      b, a                        ; use as count
02AD
02AD space_loop:                                                 ; 02BD↓j
02AD                         ld      (hl), 20h ; ' '             ; fill the count with spaces
02AF                         inc     hl
02B0                         ld      a, c
02B1                         cp      0FFh                        ; Check if we need clear palette colour
02B3                         jr      nz, not_black
02B5                         ld      a, (hl)                     ; so read current contents
02B6                         and     0FCh                        ; Wack a mole the first 2 bits (palette)
02B8                         ld      (hl), a                     ; save to screen
02B9                         jr      skip_color
02BB ; ---------------------------------------------------------------------------
02BB
02BB not_black:                                                  ; 02B3
02BB                         ld      (hl), c
02BC
02BC skip_color:                                                 ; 02B9
02BC                         inc     hl
02BD                         djnz    space_loop                  ; fill the count with spaces
02BF                         pop     bc
02C0                         jp      next_character              ; Get string / data
02C3 ; ---------------------------------------------------------------------------
02C3
02C3 new_line:                                                   ; 0273
02C3                         pop     hl
02C4                         push    bc
02C5                         ld      bc, 40h ; '@'               ; Advance plot to next character line
02C8                         add     hl, bc
02C9                         pop     bc
02CA                         push    hl
02CB                         inc     de
02CC                         jp      next_character              ; Get string / data
02CF ; ---------------------------------------------------------------------------
02CF
02CF end_print:                                                  ; 026F
02CF                         pop     hl
02D0                         ret
02D0 ; End of function message_print
02D0
02D1
02D1 ; =============== S U B R O U T I N E =======================================
02D1
02D1 ; Generic display of text stored at de to hl with colour in c
02D1
02D1 display_text_at_de:                                         ; 02E1↓j 02EC↓j 
02D1                         ld      a, (de)
02D2                         or      a                           ; 0 delimited
02D3                         ret     z
02D4                         cp      20h ; ' '
02D6                         jr      nz, not_space               ; store to screen
02D8                         ld      (hl), 20h ; ' '             ; manually add a space
02DA                         inc     de
02DB                         inc     hl                          ; advance screen and source
02DC                         ld      a, (hl)                     ; get current high character
02DD                         and     3Ch ; '<'                   ; kill any palette value
02DF                         ld      (hl), a                     ; save it back so it's a true blank, so palette colour is 0
02E0                         inc     hl                          ; advance screen
02E1                         jr      display_text_at_de          ; keep on going
02E3 ; ---------------------------------------------------------------------------
02E3
02E3 not_space:                                                  ; 02D6
02E3                         ld      (hl), a                     ; store to screen
02E4                         inc     de                          ; advance source
02E5                         inc     hl                          ; move to palette / high character byte
02E6                         ld      a, (hl)                     ; get current value
02E7                         and     3Ch ; '<'                   ; knock out the palette colour
02E9                         or      c                           ; set the palette colour
02EA                         ld      (hl), a                     ; save to screen
02EB                         inc     hl                          ; advance screen position
02EC                         jr      display_text_at_de          ; Generic display of text stored at de to hl with colour in c
02EC ; End of function display_text_at_de
02EC
02EC ; ---------------------------------------------------------------------------
02EE aGeorge:                .ascii ' GEORGE',0                  ; 0394↓o
02F6 aLizzie:                .ascii ' LIZZIE',0                  ; 03CD↓o 3F75↓o
02FE aRalph:                 .ascii ' RALPH ',0                  ; 0406↓o 40C6↓o
0306
0306 ; =============== S U B R O U T I N E =======================================
0306
0306
0306 sub_306:                                                    ; 01D1↑p
0306                         ld      a, (byte_E60E)
0309                         or      a
030A                         ret     z
030B                         ld      a, (byte_E60E)
030E                         cp      1
0310                         jr      z, loc_373
0312                         ld      hl,  bg_row02+6
0315                         ld      de, george_score
0318                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
0318                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
0318                                                             ; HL = destination address for output (usually a screen buffer)
0318                                                             ;
031B                         ld      ix, George_data
031F                         ld      hl,  bg_row03+8
0322                         ld      a, (ix+1)
0325                         cp      0
0327                         jr      nz, loc_32E
0329                         call    sub_41C
032C                         jr      loc_333
032E ; ---------------------------------------------------------------------------
032E
032E loc_32E:                                                    ; 0327
032E                         ld      a, 0FFh
0330                         call    sub_455
0333
0333 loc_333:                                                    ; 032C
0333                         ld      hl,  bg_row02+18h
0336                         ld      de, lizzie_score
0339                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
0339                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
0339                                                             ; HL = destination address for output (usually a screen buffer)
0339                                                             ;
033C                         ld      ix, Lizzie_data
0340                         ld      hl,  bg_row03+1Ah
0343                         ld      a, (ix+1)
0346                         cp      0
0348                         jr      nz, loc_34F
034A                         call    sub_41C
034D                         jr      loc_354
034F ; ---------------------------------------------------------------------------
034F
034F loc_34F:                                                    ; 0348
034F                         ld      a, 11h
0351                         call    sub_461
0354
0354 loc_354:                                                    ; 034D
0354                         ld      hl,  bg_row02+2Ah
0357                         ld      de, ralf_score
035A                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
035A                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
035A                                                             ; HL = destination address for output (usually a screen buffer)
035A                                                             ;
035D                         ld      ix, Ralph_data
0361                         ld      hl,  bg_row03+2Ch
0364                         ld      a, (ix+1)
0367                         cp      0
0369                         jr      nz, loc_36E
036B                         jp      sub_41C
036E ; ---------------------------------------------------------------------------
036E
036E loc_36E:                                                    ; 0369
036E                         ld      a, 22h ; '"'
0370                         jp      loc_46D
0373 ; ---------------------------------------------------------------------------
0373
0373 loc_373:                                                    ; 0310
0373                         ld      ix, George_data
0377                         ld      a, (ix+1)
037A                         cp      2
037C                         jr      z, loc_382
037E                         cp      3
0380                         jr      nz, loc_391
0382
0382 loc_382:                                                    ; 037C
0382                         ld      hl,  bg_row02+6
0385                         ld      de, george_score
0388                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
0388                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
0388                                                             ; HL = destination address for output (usually a screen buffer)
0388                                                             ;
038B                         ld      ix, George_data
038F                         jr      loc_39A
0391 ; ---------------------------------------------------------------------------
0391
0391 loc_391:                                                    ; 0380
0391                         ld      hl,  bg_row02+6
0394                         ld      de, aGeorge                 ; " GEORGE"
0397                         call    message_print_white
039A
039A loc_39A:                                                    ; 038F
039A                         ld      hl,  bg_row03+8
039D                         ld      a, (ix+1)
03A0                         cp      0
03A2                         jr      nz, loc_3A9
03A4                         call    show_credits
03A7                         jr      loc_3AC
03A9 ; ---------------------------------------------------------------------------
03A9
03A9 loc_3A9:                                                    ; 03A2
03A9                         call    sub_455
03AC
03AC loc_3AC:                                                    ; 03A7
03AC                         ld      ix, Lizzie_data
03B0                         ld      a, (ix+1)
03B3                         cp      2
03B5                         jr      z, loc_3BB
03B7                         cp      3
03B9                         jr      nz, loc_3CA
03BB
03BB loc_3BB:                                                    ; 03B5
03BB                         ld      hl,  bg_row02+18h
03BE                         ld      de, lizzie_score
03C1                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
03C1                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
03C1                                                             ; HL = destination address for output (usually a screen buffer)
03C1                                                             ;
03C4                         ld      ix, Lizzie_data
03C8                         jr      loc_3D3
03CA ; ---------------------------------------------------------------------------
03CA
03CA loc_3CA:                                                    ; 03B9
03CA                         ld      hl,  bg_row02+18h
03CD                         ld      de, aLizzie                 ; " LIZZIE"
03D0                         call    message_print_white
03D3
03D3 loc_3D3:                                                    ; 03C8
03D3                         ld      hl,  bg_row03+1Ah
03D6                         ld      a, (ix+1)
03D9                         cp      0
03DB                         jr      nz, loc_3E2
03DD                         call    show_credits
03E0                         jr      loc_3E5
03E2 ; ---------------------------------------------------------------------------
03E2
03E2 loc_3E2:                                                    ; 03DB
03E2                         call    sub_461
03E5
03E5 loc_3E5:                                                    ; 03E0
03E5                         ld      ix, Ralph_data
03E9                         ld      a, (ix+1)
03EC                         cp      2
03EE                         jr      z, loc_3F4
03F0                         cp      3
03F2                         jr      nz, loc_403
03F4
03F4 loc_3F4:                                                    ; 03EE
03F4                         ld      hl,  bg_row02+2Ah
03F7                         ld      de, ralf_score
03FA                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
03FA                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
03FA                                                             ; HL = destination address for output (usually a screen buffer)
03FA                                                             ;
03FD                         ld      ix, Ralph_data
0401                         jr      loc_40C
0403 ; ---------------------------------------------------------------------------
0403
0403 loc_403:                                                    ; 03F2
0403                         ld      hl,  bg_row02+2Ah
0406                         ld      de, aRalph                  ; " RALPH "
0409                         call    message_print_white
040C
040C loc_40C:                                                    ; 0401
040C                         ld      hl,  bg_row03+2Ch
040F                         ld      a, (ix+1)
0412                         cp      0
0414                         jr      nz, loc_419
0416                         jp      show_credits
0419 ; ---------------------------------------------------------------------------
0419
0419 loc_419:                                                    ; 0414
0419                         jp      loc_46D
0419 ; End of function sub_306
0419
041C
041C ; =============== S U B R O U T I N E =======================================
041C
041C
041C sub_41C:                                                    ; 0329↑p 034A↑p 
041C                         ld      a, (game_credits)
041F                         or      a
0420                         jr      z, loc_42A
0422                         ld      de, join_in_now
0425                         ld      c, 0
0427                         jp      display_text_at_de          ; Generic display of text stored at de to hl with colour in c
042A ; ---------------------------------------------------------------------------
042A
042A loc_42A:                                                    ; 0420
042A                         ld      de, now_characters
042D                         ld      c, 1
042F                         jp      display_text_at_de          ; Generic display of text stored at de to hl with colour in c
042F ; End of function sub_41C
042F
042F ; ---------------------------------------------------------------------------
0432 now_characters:         db  76h, 77h, 78h,0D8h,0D9h, 20h,   0 ; loc_42A↑o
0439 join_in_now:            db  73h, 74h, 75h, 76h, 77h, 20h,   0 ; 0422↑o
0440
0440 ; =============== S U B R O U T I N E =======================================
0440
0440
0440 show_credits:                                               ; 03A4↑p 03DD↑p 
0440                         ld      de, credits_text            ; Display graphc graphic CREDITS.. $1 highbyte palette 2
0443                         ld      c, 1                        ; High byte for character codes
0445                         call    display_text_at_de          ; Generic display of text stored at de to hl with colour in c
0448                         ld      a, (game_credits)
044B                         add     a, 30h ; '0'
044D                         ld      (hl), a
044E                         ret
044E ; End of function show_credits
044E
044E ; ---------------------------------------------------------------------------
044F credits_text:           db 0DAh,0DBh,0DCh,0E1h,0E2h,   0    ; show_credits↑o
044F                                                             ; Display graphc graphic CREDITS.. $1 highbyte palette 2
0455
0455 ; =============== S U B R O U T I N E =======================================
0455
0455
0455 sub_455:                                                    ; 0330↑p
0455                                                             ; loc_3A9↑p
0455                         ld      de,  bg_row03+8
0458                         ld      ix, George_data
045C                         ld      a, 0
045E                         jp      loc_476
045E ; End of function sub_455
045E
0461
0461 ; =============== S U B R O U T I N E =======================================
0461
0461
0461 sub_461:                                                    ; 0351↑p
0461                                                             ; loc_3E2↑p
0461                         ld      de,  bg_row03+1Ah
0464                         ld      ix, Lizzie_data
0468                         ld      a, 1
046A                         jp      loc_476
046D ; ---------------------------------------------------------------------------
046D
046D loc_46D:                                                    ; 0370
046D                                                             ; loc_419
046D                         ld      de,  bg_row03+2Ch
0470                         ld      ix, Ralph_data
0474                         ld      a, 2
0476
0476 loc_476:                                                    ; 045E 046A
0476                         ld      a, (ix+1)
0479                         cp      3
047B                         jr      z, loc_486
047D                         ld      a, (ix+1)
0480                         push    de
0481                         call    display_damage
0484                         pop     de
0485                         ret
0486 ; ---------------------------------------------------------------------------
0486
0486 loc_486:                                                    ; 047B
0486                         ex      de, hl
0487                         ld      a, (ticker_countup)
048A                         and     10h
048C                         ld      de, game_over_text
048F                         ld      c, 0
0491                         jp      z, display_text_at_de       ; Generic display of text stored at de to hl with colour in c
0494                         ld      a, (ix+4Ah)
0497                         or      a
0498                         jp      z, display_text_at_de       ; Generic display of text stored at de to hl with colour in c
049B                         ld      de, aNewHi                  ; "NEW HI"
049E                         jp      display_text_at_de          ; Generic display of text stored at de to hl with colour in c
049E ; End of function sub_461
049E
049E ; ---------------------------------------------------------------------------
04A1 game_over_text:         db  6Eh, 6Fh, 70h, 71h, 72h, 20h,   0 ; 048C↑o
04A8 aNewHi:                 .ascii 'NEW HI',0                   ; 049B↑o
04AF
04AF ; =============== S U B R O U T I N E =======================================
04AF
04AF
04AF display_damage:                                             ; 0481↑p
04AF                         ld      a, (ix+3)                   ; Read player damage count (200 start)
04B2                         or      a
04B3                         jr      z, damage_known             ; If damage is zero, jump (done)
04B5                         srl     a
04B7                         srl     a                           ; Divide 4 to get a character count
04B9                         cp      60                          ; Compare with 60 (odd when max is 50)
04BB                         jr      nc, over_limit              ; If >= 60, jump (overflow/limit case)
04BD                         inc     a                           ; (damage/4) + 1 so is max $33
04BE                         cp      48                          ; Compare with 48 (check lower bound)
04C0                         jr      c, damage_known             ; If less than 48, jump (done)
04C2                         ld      a, 48                       ; Clamp to 48 if under
04C4                         jr      damage_known                ; Done, jump to return/next logic
04C6 ; ---------------------------------------------------------------------------
04C6
04C6 over_limit:                                                 ; 04BB
04C6                         xor     a                           ; Set to zero
04C7
04C7 damage_known:                                               ; 04B3 04C0 
04C7                         ld      (ix+42h), a                 ; Store zero at (ix+42h) -- this is your "damage character count"
04CA                         ld      b, 6                        ; Start with 6 (max chars for display)
04CC                         or      a                           ; Was the count at zero?
04CD                         jr      z, zero_clear_all           ; If zero, jump (nothing to display)
04CF                         cp      48                          ; Compare count to 48
04D1                         jr      nc, loc_4E4                 ; If A >= 48, jump (can't show more than 6 chars)
04D3                         dec     b                           ; Reduce char count to 5
04D4                         ld      c, 40                       ; C = 40 (will step down)
04D6
04D6 loc_4D6:                                                    ; 04E0↓j
04D6                         ld      a, (ix+42h)                 ; Load current "damage" value
04D9                         cp      c                           ; Compare against C (threshold)
04DA                         jr      nc, loc_4E4                 ; If still more damage, jump to display max chars
04DC                         ld      a, c
04DD                         sub     8                           ; Step down by 8 per loop
04DF                         ld      c, a
04E0                         djnz    loc_4D6                     ; Repeat until we've reduced B for all chars needed
04E2                         jr      loc_4E4
04E4 ; ---------------------------------------------------------------------------
04E4
04E4 loc_4E4:                                                    ; 04D1 04DA 
04E4                         ld      a, 6                        ; Start with 6 (max chars)
04E6                         sub     b                           ; Subtract number not used, result = actual chars to display
04E7                         ld      c, a                        ; Store count in C
04E8                         ld      a, b
04E9                         or      a
04EA                         jr      z, less_than_damage         ; If zero, skip (no chars to plot)
04EC                         ld      hl, damage_gfx              ; HL points to the damage character graphics
04EF
04EF plot_chr_loop:                                              ; 04F2↓j
04EF                         call    plot_character
04F2                         djnz    plot_chr_loop               ; Loop for all characters
04F4                         jr      less_than_damage
04F6 ; ---------------------------------------------------------------------------
04F6
04F6 zero_clear_all:                                             ; 04CD
04F6                         ld      (ix+3), 0                   ; Clear variables when damage is zero
04FA                         ld      (ix+1Ch), 0
04FE                         ld      (ix+42h), 0
0502                         ld      (ix+40h), 0
0506                         ld      (ix+21h), 0
050A                         ld      (ix+25h), 0
050E                         ld      c, 6                        ; Character count
0510
0510 less_than_damage:                                           ; 04EA 04F4
0510                         ld      a, c
0511                         or      a
0512                         ret     z                           ; If C (number of characters left) == 0, exit
0513                         ld      a, (ix+42h)                 ; Reload original damage value
0516                         and     7                           ; Get remainder (damage mod 8): fractional damage
0518                         ld      hl, damage_fraction         ; HL = table of partial/mini damage characters
051B                         rst     HL_plus_A                   ; Point to correct fractional graphic
051C                         call    plot_character              ; Draw one "fractional" (mini) damage marker
051F                         ld      a, c
0520                         dec     a
0521                         ret     z                           ; If only one slot was left, exit
0522                         ld      b, a                        ; For all remaining slots:
0523
0523 damage_small_loop:                                          ; 0529↓j
0523                         ld      hl, damage_fraction         ; Use the "empty" (lowest) fraction
0526                         call    plot_character              ; Fill slot with empty marker
0529                         djnz    damage_small_loop
052B                         ret
052B ; End of function display_damage
052B
052B ; ---------------------------------------------------------------------------
052C damage_gfx:             db  61h, 62h, 63h, 64h, 65h, 65h    ; 04EC↑o
052C                                                             ; Player "DAMAGE" visual graphics
0532 damage_fraction:        db  6Dh, 6Ch, 6Bh, 6Ah, 69h, 68h, 67h, 66h ; 0518↑o
0532                                                             ; damage_small_loop↑o
053A
053A ; =============== S U B R O U T I N E =======================================
053A
053A
053A plot_character:                                             ; plot_chr_loop↑p
053A                                                             ; 051C↑p 
053A                         ld      a, (hl)                     ; Get character
053B                         ld      (de), a                     ; Save to Screen RAM
053C                         inc     hl                          ; Advance source
053D                         inc     de                          ; Advance destination
053E                         ld      a, (de)                     ; Read current low bits for screen RAM
053F                         and     111100b                     ; Knock out the palette
0541                         ld      (de), a                     ; Save back to screen RAM
0542                         inc     de                          ; Advance to next character now
0543                         ret
0543 ; End of function plot_character
0543
0544
0544 ; =============== S U B R O U T I N E =======================================
0544
0544 ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
0544 ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
0544 ; HL = destination address for output (usually a screen buffer)
0544 ;
0544
0544 print_decimal:                                              ; 0318↑p 0339↑p 
0544                         ld      b, 7                        ; 7 decimal digits to print
0546                         ld      c, 0                        ; C = 0; used to track if any non-zero digit seen yet
0548                         push    de                          ; Save DE (pointer to BCD source)
0549                         pop     ix                          ; IX = DE (use IX as source pointer)
054B
054B do_all_digits:                                              ; more_than_2digits↓j
054B                         ld      a, (ix+0)                   ; Read next digit from BCD array
054E                         or      c                           ; If C == 0 and A == 0, still leading zeros
054F                         jr      z, supress_zeros            ; If both zero, print a space instead of '0' (suppress leading zeros)
0551                         ld      c, a                        ; Mark that a non-zero digit was seen (C != 0 from now on)
0552                         ld      a, (ix+0)                   ; Reload digit (unchanged)
0555                         add     a, '0'                      ; Convert to ASCII numeral
0557                         ld      (hl), a                     ; Store ASCII digit at destination
0558                         inc     hl                          ; Advance output pointer
0559                         jr      next_digit                  ; Next digit
055B ; ---------------------------------------------------------------------------
055B
055B supress_zeros:                                              ; 054F
055B                         ld      (hl), ' '                   ; Output space for leading zeros
055D                         inc     hl                          ; Advance output pointer
055E
055E next_digit:                                                 ; 0559
055E                         inc     hl                          ; Advance screen pointer 2byte / character
055F                         inc     ix                          ; Advance BCD source pointer
0561                         ld      a, b
0562                         cp      2                           ; When only 2 digits left, special handling (possibly to always print two digits)
0564                         jr      nz, more_than_2digits
0566                         ld      c, a                        ; Force C nonzero, so last 2 digits always print as numbers (never as spaces
0567
0567 more_than_2digits:                                          ; 0564
0567                         djnz    do_all_digits               ; Repeat for all 7 digits
0569                         ret
0569 ; End of function print_decimal
0569
056A
056A ; =============== S U B R O U T I N E =======================================
056A
056A ; IRQ Sound Handler ot process buffer and soundFX which are processed and shuffled
056A
056A irq_sound_handler:                                          ; 01CE↑p 021F↑p
056A                         ld      a, (global_sound_enable)    ; Check "master enable" or global sound flag
056D                         or      a                           ; If zero, sound system is disabled, return
056E                         ret     z
056F                         ld      a, (sound_timer_count)      ; Timer/counter for sound effect duration or hardware pacing
0572                         or      a
0573                         jr      nz, sound_wait              ; If nonzero, (wait loop / reinit)
0575                         ld      a, (active_sound_channels)
0578                         ld      b, a                        ; Get the number of active sound channel
0579                         or      a
057A                         ret     z                           ; If zero, nothing to do
057B                         dec     a
057C                         ld      (active_sound_channels), a  ; Decrement the number of active channel
057F                         ld      hl, soundfx_list            ; HL = pointer to sound buffer/list
0582                         ld      a, (hl)                     ; Get first (oldest) sound command
0583                         ld      (pending_soundFX), a        ; Place in "pending command" byte
0586                         ld      de, sound_buffer            ; DE = pointer to rest of buffer (buffer+1)
0589
0589 buffer_shuffle:                                             ; 058D↓j
0589                         ld      a, (de)                     ; Shift buffer up: copy DE->HL
058A                         ld      (hl), a
058B                         inc     hl
058C                         inc     de                          ; Repeat B times (B = previous channel count)
058D                         djnz    buffer_shuffle
058F                         ld      (hl), 0                     ; Terminate buffer with 0 (now empty spot)
0591                         jr      dispatch_soundFX            ; Send pending command to sound hardware
0593 ; ---------------------------------------------------------------------------
0593
0593 sound_wait:                                                 ; 0573
0593                         xor     a
0594                         ld      a, 6Ah                      ; (This could be a "reset" or "silence" code)
0596                         ld      (pending_soundFX), a
0599
0599 sound_busy_wait:                                            ; 059D↓j
0599                         ld      a, (pending_soundFX)
059C                         or      a
059D                         jr      z, sound_busy_wait          ; Wait for command to become nonzero (busy-wait)
059F                         ld      a, 1
05A1                         ld      (sound_handshake), a        ; Set handshake/flag for main CPU or next routine
05A4                         ld      hl, sound_timer_count
05A7                         dec     (hl)                        ; Decrement timer/counter
05A8                         jr      dispatch_soundFX            ; Send pending command to sound hardware
05A8 ; End of function irq_sound_handler
05A8
05AA
05AA ; =============== S U B R O U T I N E =======================================
05AA
05AA
05AA sfx_init_setting:                                           ; 0B06↓p
05AA                         ld      a, 8                        ; Sound system initialization
05AC                         ld      (pending_soundFX), a        ; Initialize pending command with 8 (likely silence/reset)
05AF
05AF dispatch_soundFX:                                           ; 0591 05A8
05AF                         ld      a, (pending_soundFX)
05B2                         or      a
05B3                         and     0Fh                         ; Isolate low nibble
05B5                         sla     a                           ; Shift left (<<1)
05B7                         or      100000b                     ; Set Bit 5 (enable/control)
05B9                         out     (OUT6_SOUND_GOOD_WRITE), a  ; Write lower nibble + control
05BB                         ld      b, 1
05BD
05BD loc_5BD:                                                    ; loc_5BD↓j
05BD                         djnz    $                           ; Short delay for chip to latch data
05BF                         or      1                           ; Strobe with Bit 0 (write pulse)
05C1                         out     (OUT6_SOUND_GOOD_WRITE), a
05C3                         ld      b, 0Ch
05C5
05C5 loc_5C5:                                                    ; loc_5C5↓j
05C5                         djnz    $                           ; Slightly longer delay
05C7                         ld      a, (pending_soundFX)
05CA                         and     0F0h                        ; Isolate high nibble
05CC                         srl     a
05CE                         srl     a
05D0                         srl     a                           ; Shift into low nibble
05D2                         or      1
05D4                         or      100000b                     ; Set Bits 0 and 5 (strobe + enable)
05D6                         out     (OUT6_SOUND_GOOD_WRITE), a  ; Write high nibble + control
05D8                         ld      b, 1
05DA
05DA loc_5DA:                                                    ; loc_5DA↓j
05DA                         djnz    $                           ; Short delay
05DC                         and     0FEh                        ; Clear Bit 0 (end strobe)
05DE                         out     (OUT6_SOUND_GOOD_WRITE), a  ; Finalize command
05E0                         ld      hl, unk_E62B
05E3                         ld      de, unk_E62C
05E6                         ld      b, 7
05E8
05E8 loc_5E8:                                                    ; 05EC↓j
05E8                         ld      a, (hl)                     ; Shift buffer contents up by one
05E9                         ld      (de), a
05EA                         dec     hl
05EB                         dec     de
05EC                         djnz    loc_5E8
05EE                         ld      a, (pending_soundFX)        ; Insert new command at buffer start
05F1                         ld      (hl), a
05F2                         ld      a, 0FFh
05F4                         ld      (pending_soundFX), a        ; Mark as processed (ready for next)
05F7                         ret
05F7 ; End of function sfx_init_setting
05F7
05F8
05F8 ; =============== S U B R O U T I N E =======================================
05F8
05F8
05F8 sub_5F8:                                                    ; 014E↑p
05F8                         xor     a
05F9                         ld      (active_sound_channels), a
05FC                         ld      hl, unk_E631
05FF                         ld      b, 4
0601
0601 loc_601:                                                    ; 060A↓j
0601                         ld      a, (hl)
0602                         or      a
0603                         jr      z, loc_641
0605                         cp      7
0607                         jr      nc, loc_641
0609                         inc     hl
060A                         djnz    loc_601
060C                         ld      hl, game_credits
060F                         ld      a, (hl)
0610                         inc     hl
0611                         cp      10
0613                         jr      nc, loc_641
0615                         ld      a, (unk_E631)
0618                         cp      (hl)
0619                         jr      c, loc_641
061B                         jr      z, loc_641
061D                         inc     hl
061E                         ld      a, (coin_count)
0621                         cp      (hl)
0622                         jr      c, loc_641
0624                         jr      z, loc_641
0626                         ld      bc, 21
0629                         ld      hl, unk_E638
062C
062C loc_62C:                                                    ; 063E↓j
062C                         ld      a, (hl)
062D                         and     0F0h
062F                         cp      0A0h
0631                         jr      nc, loc_641
0633                         ld      a, (hl)
0634                         and     0Fh
0636                         cp      0Ah
0638                         jr      nc, loc_641
063A                         inc     hl
063B                         dec     bc
063C                         ld      a, b
063D                         or      c
063E                         jr      nz, loc_62C
0640                         ret
0641 ; ---------------------------------------------------------------------------
0641
0641 loc_641:                                                    ; 0603 0607 
0641                         ld      hl, 0
0644                         ld      (unk_E66C), hl
0647                         ld      (unk_E66E), hl
0647 ; End of function sub_5F8
0647
064A
064A ; =============== S U B R O U T I N E =======================================
064A
064A
064A init_settings:                                              ; system_good↑p
064A                         ld      de, unk_E631
064D                         ld      hl, init_settings_table
0650                         ld      bc, 28                      ; 28 settings at start
0653                         ldir
0655                         xor     a
0656                         ld      bc, 31                      ; And clear all other variables to zero
0659
0659 variable_loop:                                              ; 065F↓j
0659                         xor     a
065A                         ld      (de), a
065B                         inc     de
065C                         dec     bc
065D                         ld      a, b
065E                         or      c
065F                         jr      nz, variable_loop
0661                         ret
0661 ; End of function init_settings
0661
0661 ; ---------------------------------------------------------------------------
0662 init_settings_table:    db    1,   1,   1,   1,   0,   0,   0,   0,   0,   7,   5
0662                                                             ; 064D↑o
066D                         db    8,   4,   0,   0,   0,   3,   2,   6,   8,   3,   0
0678                         db    0,   1,   2,   1,   2,   0
067E
067E ; =============== S U B R O U T I N E =======================================
067E
067E
067E sub_67E:                                                    ; 01FD↑p
067E                         ld      hl, unk_E613
0681                         in      a, (loc_0)
0683                         and     1
0685                         cp      (hl)
0686                         jr      z, loc_68B
0688                         ld      (hl), a
0689                         jr      loc_6E4
068B ; ---------------------------------------------------------------------------
068B
068B loc_68B:                                                    ; 0686
068B                         ld      hl, unk_E617
068E                         or      a
068F                         jr      nz, loc_694
0691                         ld      (hl), a
0692                         jr      loc_6E4
0694 ; ---------------------------------------------------------------------------
0694
0694 loc_694:                                                    ; 068F
0694                         cp      (hl)
0695                         jr      z, loc_6E4
0697                         ld      (hl), a
0698                         in      a, (loc_0)
069A                         and     20h ; ' '
069C                         jr      z, loc_6E4
069E                         ld      hl, (unk_E66C)
06A1                         inc     hl
06A2                         ld      (unk_E66C), hl
06A5                         call    sub_751
06A8                         ld      a, (keep_score_when_continue)
06AB                         or      a
06AC                         jr      z, loc_6B5
06AE                         ld      a, (coinB_credits)
06B1                         cp      6
06B3                         jr      z, loc_6D2
06B5
06B5 loc_6B5:                                                    ; 06AC
06B5                         ld      a, (unk_E636)
06B8                         inc     a
06B9                         ld      hl, unk_E631
06BC                         cp      (hl)
06BD                         jr      c, loc_6CD
06BF                         ld      hl, game_credits
06C2                         ld      a, 1
06C4                         ld      (sound_handshake), a
06C7                         ld      a, (unk_E633)
06CA                         add     a, (hl)
06CB                         ld      (hl), a
06CC                         xor     a
06CD
06CD loc_6CD:                                                    ; 06BD
06CD                         ld      (unk_E636), a
06D0                         jr      loc_6E4
06D2 ; ---------------------------------------------------------------------------
06D2
06D2 loc_6D2:                                                    ; 06B3
06D2                         ld      a, (unk_E637)
06D5                         inc     a
06D6                         ld      hl, unk_E631
06D9                         cp      (hl)
06DA                         jr      c, loc_6E1
06DC                         ld      hl, game_credits
06DF                         inc     (hl)
06E0                         xor     a
06E1
06E1 loc_6E1:                                                    ; 06DA
06E1                         ld      (unk_E637), a
06E4
06E4 loc_6E4:                                                    ; 0689 0692 
06E4                         ld      a, (unk_E611)
06E7                         dec     a
06E8                         jp      m, loc_6FC
06EB                         ld      (unk_E611), a
06EE                         cp      16
06F0                         ret     nz
06F1                         ld      a, (unk_E616)
06F4                         res     0, a
06F6                         out     (OUT0_COIN_FLIP), a
06F8                         ld      (unk_E616), a
06FB                         ret
06FC ; ---------------------------------------------------------------------------
06FC
06FC loc_6FC:                                                    ; 06E8
06FC                         ld      a, (unk_E60F)
06FF                         dec     a
0700                         ret     m
0701                         ld      (unk_E60F), a
0704                         ld      a, 20h ; ' '
0706                         ld      (unk_E611), a
0709                         ld      a, (unk_E616)
070C                         set     0, a
070E                         out     (OUT0_COIN_FLIP), a
0710                         ld      (unk_E616), a
0713                         ret
0713 ; End of function sub_67E
0713
0714
0714 ; =============== S U B R O U T I N E =======================================
0714
0714
0714 sub_714:                                                    ; 0200↑p
0714                         ld      hl, unk_E614
0717                         in      a, (loc_0)
0719                         and     2
071B                         cp      (hl)
071C                         jr      z, loc_720
071E                         ld      (hl), a
071F                         ret
0720 ; ---------------------------------------------------------------------------
0720
0720 loc_720:                                                    ; 071C
0720                         ld      hl, unk_E618
0723                         or      a
0724                         jr      nz, loc_728
0726                         ld      (hl), a
0727                         ret
0728 ; ---------------------------------------------------------------------------
0728
0728 loc_728:                                                    ; 0724
0728                         cp      (hl)
0729                         ret     z
072A                         ld      (hl), a
072B                         in      a, (loc_0)
072D                         and     100000b
072F                         ret     z
0730                         ld      hl, (unk_E66E)
0733                         inc     hl
0734                         ld      (unk_E66E), hl
0737                         call    sub_751
073A                         ld      a, (unk_E637)
073D                         inc     a
073E                         ld      hl, coin_count
0741                         cp      (hl)
0742                         jr      c, loc_74D
0744                         ld      hl, game_credits
0747                         ld      a, (credits_per_coin)
074A                         add     a, (hl)
074B                         ld      (hl), a
074C                         xor     a
074D
074D loc_74D:                                                    ; 0742
074D                         ld      (unk_E637), a
0750                         ret
0750 ; End of function sub_714
0750
0751
0751 ; =============== S U B R O U T I N E =======================================
0751
0751
0751 sub_751:                                                    ; 06A5↑p 0737↑p
0751                         ld      hl, unk_E60F
0754                         inc     (hl)
0755                         ld      hl, sound_timer_count
0758                         inc     (hl)
0759                         ret
0759 ; End of function sub_751
0759
075A
075A ; =============== S U B R O U T I N E =======================================
075A
075A
075A sub_75A:                                                    ; 0203↑p
075A                         ld      hl, unk_E615
075D                         in      a, (loc_0)
075F                         and     40h ; '@'
0761                         cp      (hl)
0762                         jr      z, loc_766
0764                         ld      (hl), a
0765                         ret
0766 ; ---------------------------------------------------------------------------
0766
0766 loc_766:                                                    ; 0762
0766                         ld      hl, unk_E619
0769                         or      a
076A                         jr      nz, loc_76E
076C                         ld      (hl), a
076D                         ret
076E ; ---------------------------------------------------------------------------
076E
076E loc_76E:                                                    ; 076A
076E                         cp      (hl)
076F                         ret     z
0770                         ld      (hl), a
0771                         in      a, (loc_0)
0773                         and     20h ; ' '
0775                         ret     z
0776                         ld      hl, sound_timer_count
0779                         inc     (hl)
077A                         ld      hl, game_credits
077D                         inc     (hl)
077E                         ret
077E ; End of function sub_75A
077E
077F
077F ; =============== S U B R O U T I N E =======================================
077F
077F ; --- Rampage DIP Switches: PORT 3 (in a, (3)) ---
077F ;  Bit(s)  Mask   Description
077F ;  0-1     0x03   Difficulty:
077F ;                   0 = Free Play
077F ;                   1 = Hard
077F ;                   2 = Easy
077F ;                   3 = Normal
077F ;  2       0x04   Score Option:
077F ;                   0 = Lose score when continuing
077F ;                   1 = Keep score when continuing
077F ;  3       0x08   Coin A:
077F ;                   0 = 2C/1C
077F ;                   1 = 1C/1C
077F ;  4-6     0x70   Coin B:
077F ;                   0x00 = 3C/1C
077F ;                   0x10 = 2C/1C
077F ;                   0x70 = 1C/1C
077F ;                   0x60 = 1C/2C
077F ;                   0x50 = 1C/3C
077F ;                   0x40 = 1C/4C
077F ;                   0x30 = 1C/5C
077F ;                   0x20 = 1C/6C
077F ;  7       0x80   Rack Advance (Cheat, F1):
077F ;                   0 = On
077F ;                   1 = Off
077F ;
077F
077F get_dip_switch_settings:                                    ; loc_15D↑p
077F                                                             ; D8A9↓p
077F                         in      a, (DSW1_DIP_SWITCHES)
0781                         cpl                                 ; Invert switches. Active Low
0782                         push    af
0783                         and     1
0785                         ld      (free_play), a
0788                         pop     af
0789                         push    af
078A                         and     2
078C                         ld      (easy_hard_normal), a
078F                         pop     af
0790                         push    af
0791                         and     4
0793                         xor     4
0795                         ld      (easy_game), a
0798                         pop     af
0799                         push    af
079A                         and     8
079C                         ld      (keep_score_when_continue), a
079F                         pop     af
07A0                         push    af
07A1                         and     16
07A3                         ld      (coin_A_value), a
07A6                         pop     af
07A7                         push    af
07A8                         and     32
07AA                         ld      (coin_B_value1), a
07AD                         pop     af
07AE                         push    af
07AF                         and     64
07B1                         ld      (coin_B_value2), a
07B4                         pop     af
07B5                         and     128
07B7                         ld      (advance_cheat), a
07BA                         call    sub_812
07BD                         ld      bc, 101h
07C0                         ld      a, 1
07C2                         ld      (unk_E633), a
07C5                         ld      (unk_E631), a
07C8                         ld      a, (keep_score_when_continue)
07CB                         or      a
07CC                         jr      z, loc_7D3
07CE                         ld      a, 2
07D0                         ld      (unk_E631), a
07D3
07D3 loc_7D3:                                                    ; 07CC
07D3                         ld      b, 0
07D5                         ld      a, (coin_A_value)
07D8                         or      a
07D9                         jr      z, loc_7DC
07DB                         inc     b
07DC
07DC loc_7DC:                                                    ; 07D9
07DC                         ld      a, (coin_B_value1)
07DF                         or      a
07E0                         jr      z, loc_7E4
07E2                         inc     b
07E3                         inc     b
07E4
07E4 loc_7E4:                                                    ; 07E0
07E4                         ld      a, (coin_B_value2)
07E7                         or      a
07E8                         jr      z, loc_7EE
07EA                         inc     b
07EB                         inc     b
07EC                         inc     b
07ED                         inc     b
07EE
07EE loc_7EE:                                                    ; 07E8
07EE                         ld      a, b
07EF                         ld      (coinB_credits), a
07F2                         ld      hl, coins_per_credit        ; How many coins needed for one game credit
07F5                         sla     a
07F7                         rst     HL_plus_A
07F8                         ld      a, (hl)
07F9                         ld      (coin_count), a
07FC                         inc     hl
07FD                         ld      a, (hl)
07FE                         ld      (credits_per_coin), a
0801                         ret
0801 ; End of function get_dip_switch_settings
0801
0801 ; ---------------------------------------------------------------------------
0802 coins_per_credit:       db    1,   1                        ; 07F2↑o
0804                         db    1,   2
0806                         db    1,   3
0808                         db    1,   4
080A                         db    1,   5
080C                         db    1,   6
080E                         db    2,   1
0810                         db    3,   1
0812
0812 ; =============== S U B R O U T I N E =======================================
0812
0812
0812 sub_812:                                                    ; 07BA↑p
0812                         ld      a, (free_play)
0815                         ld      b, a
0816                         ld      a, (easy_hard_normal)
0819                         add     a, b
081A                         cp      3
081C                         jr      c, loc_81F
081E                         xor     a
081F
081F loc_81F:                                                    ; 081C
081F                         ld      (game_difficulty), a
0822                         ret
0822 ; End of function sub_812
0822
0823
0823 ; =============== S U B R O U T I N E =======================================
0823
0823
0823 sound_init:                                                 ; 0160↑p
0823                         im      2
0825                         ld      hl, random_seed
0828                         call    clear_memory
082B                         ld      a, 85
082D                         ld      (random_seed), a
0830                         xor     a
0831                         ld      (active_sound_channels), a
0834                         ld      (unk_E672), a
0837                         ld      a, 1
0839                         ld      (unk_E617), a
083C                         ld      a, 2
083E                         ld      (unk_E618), a
0841                         ld      a, 40h ; '@'
0843                         ld      (unk_E619), a
0846                         ld      a, 0
0848                         ld      i, a
084A                         ld      a, 8
084C                         out     (CTC_CHANNEL0), a
084E                         ld      a, 3
0850                         out     (CTC_CHANNEL0), a
0852                         out     (CTC_CHANNEL1), a
0854                         out     (CTC_CHANNEL2), a
0856                         out     (CTC_CHANNEL3), a
0858                         ld      a, 0C7h
085A                         out     (CTC_CHANNEL3), a
085C                         ld      a, 1
085E                         out     (CTC_CHANNEL3), a
0860                         ld      a, 0A7h
0862                         out     (CTC_CHANNEL1), a
0864                         ld      a, 9Ch
0866                         out     (CTC_CHANNEL1), a
0868                         call    nullsub_1
086B                         call    nullsub_1
086E                         reti
086E ; End of function sound_init
086E
0870 ; ---------------------------------------------------------------------------
0870
0870 loc_870:                                                    ; 0975↓j
0870                         call    sub_6549
0873
0873 loc_873:                                                    ; 01AD 0A58↓j 
0873                         ld      a, 1
0875                         ld      (unused_live_status), a
0878                         in      a, (0)                      ; Read DIP Switches
087A                         cpl
087B                         and     32                          ; Are DIP settings in Service Mode?
087D                         jp      nz, service_mode_menu
0880                         call    free_game_credits           ; See if DIPs are set for free play
0883                         xor     a
0884                         ld      (byte_E679), a
0887                         ld      (byte_E601), a
088A                         ld      (byte_E602), a
088D                         ld      (byte_E60E), a
0890                         ld      (byte_E021), a
0893                         ld      (game_level), a
0896                         ld      (byte_E58C), a
0899                         call    clear_sprites_and_screen
089C                         call    setup_palette1
089F                         call    watchdog_reset
08A2                         call    clear_ram_below_players
08A5                         ld      a, (game_credits)
08A8                         or      a
08A9                         jr      nz, loc_8B9
08AB                         ld      a, 1
08AD                         ld      (sound_enable), a
08B0                         call    sub_BBF
08B3                         ld      a, (game_credits)
08B6                         or      a
08B7                         jr      z, loc_8D3
08B9
08B9 loc_8B9:                                                    ; 08A9
08B9                         call    clear_all_players_data
08BC                         xor     a
08BD                         ld      (sound_enable), a
08C0                         ld      (byte_E60E), a
08C3                         call    sub_D01
08C6                         ld      hl, unk_E670
08C9                         inc     (hl)
08CA                         call    startup_sound
08CD                         call    dateline_display_all
08D0                         call    sub_B3F
08D3
08D3 loc_8D3:                                                    ; 08B7 0AD2↓j
08D3                         call    sub_6549
08D6                         ld      a, (sound_enable)
08D9                         or      a
08DA                         jp      nz, loc_8E5
08DD                         xor     a
08DE                         ld      (rotate_action), a
08E1                         ld      hl, unk_E671
08E4                         inc     (hl)
08E5
08E5 loc_8E5:                                                    ; 08DA
08E5                         call    clear_ram_below_players
08E8                         call    clear_sprites_and_screen
08EB                         xor     a
08EC                         ld      (nvram), a
08EF                         ld      (byte_E00A), a
08F2                         call    setup_palette1
08F5                         call    setup_all_background
08F8                         call    setup_all_player_data
08FB                         call    sub_CD7D
08FE                         ld      a, 1
0900                         ld      (byte_E60E), a
0903                         ld      (ticker_countup), a
0906                         xor     a
0907                         ld      (byte_E021), a
090A                         ld      a, 3
090C                         ld      (byte_E00F), a
090F                         ld      a, (byte_E673)
0912                         inc     a
0913                         cp      3
0915                         jr      c, loc_918
0917                         xor     a
0918
0918 loc_918:                                                    ; 0915
0918                         ld      (byte_E673), a
091B                         call    free_game_credits
091E                         call    watchdog_reset
0921                         ld      a, (game_level)
0924                         and     7Fh
0926                         cp      7Fh
0928                         jr      nz, loc_951
092A                         ld      a, 0C9h
092C                         ld      (byte_E001), a
092F                         ld      de, aMegaVitaminBon         ; "MEGA-VITAMIN BONUS!!!"
0932                         ld      hl,  bg_row06+0Ah
0935                         ld      c, 20h ; ' '
0937                         call    message_print               ; Print string c=colour hl=screen, source=de
093A                         ld      c, 62                       ; Lazer effect sound!
093C                         rst     dispatch_sound
093D                         ld      iy, sprite126_y
0941                         ld      (iy+0), 0D0h                ; Y position
0945                         ld      (iy+1), 0Bh
0949                         ld      (iy+2), 71h ; 'q'           ; Bottle sprite
094D                         ld      (iy+3), 18h
0951
0951 loc_951:                                                    ; 0928 09BC↓j 
0951                         call    watchdog_reset
0954                         rst     random_number
0955                         call    sub_DA2
0958                         ld      a, (game_level)
095B                         and     7Fh
095D                         cp      7Fh
095F                         jr      nz, loc_96C
0961                         ld      a, (byte_E001)
0964                         or      a
0965                         jr      z, loc_96C
0967                         call    sub_EC8
096A                         jr      loc_97B
096C ; ---------------------------------------------------------------------------
096C
096C loc_96C:                                                    ; 095F 0965
096C                         xor     a
096D                         ld      (byte_E001), a
0970                         ld      a, (byte_E021)
0973                         cp      0FFh
0975                         jp      z, loc_870
0978                         call    sub_BDC
097B
097B loc_97B:                                                    ; 096A
097B                         ld      hl, ticker_countup
097E                         inc     (hl)
097F                         ld      a, (ticker_countup)
0982                         and     3Fh ; '?'
0984                         call    z, sub_D87
0987                         xor     a
0988                         ld      (byte_E4CA), a
098B                         ld      (byte_E51A), a
098E                         ld      (byte_E56A), a
0991                         call    sub_13AE
0994                         call    sub_1737
0997                         call    sub_1879
099A                         call    sub_1881
099D                         call    update_player_sprites
09A0                         call    sub_1721
09A3                         call    sub_CBC
09A6                         call    sub_4396
09A9                         call    sub_48BC
09AC                         call    sub_1CAD
09AF                         call    sub_BD24
09B2                         call    sub_D52A
09B5                         call    sub_B663
09B8                         ld      a, (byte_E001)
09BB                         or      a
09BC                         jr      nz, loc_951
09BE                         call    sub_4E14
09C1                         call    sub_5C00
09C4                         call    sub_38E9
09C7                         call    sub_C469
09CA                         call    sub_C894
09CD                         call    sub_A06
09D0                         call    sub_E6F
09D3                         ld      a, (sound_enable)
09D6                         or      a
09D7                         jp      nz, loc_A54
09DA                         ld      a, (byte_E029)
09DD                         or      a
09DE                         jr      z, loc_A21
09E0                         dec     a
09E1                         ld      (byte_E029), a
09E4                         jp      nz, loc_951
09E7                         ld      a, 1
09E9                         ld      (byte_E029), a
09EC                         ld      ix, George_data
09F0                         ld      b, 3
09F2                         ld      de, 50h ; 'P'
09F5
09F5 loc_9F5:                                                    ; 09FD↓j
09F5                         call    sub_A71
09F8                         jp      z, loc_951
09FB                         add     ix, de
09FD                         djnz    loc_9F5
09FF                         xor     a
0A00                         ld      (byte_E029), a
0A03                         jp      loc_A82
0A06
0A06 ; =============== S U B R O U T I N E =======================================
0A06
0A06
0A06 sub_A06:                                                    ; 09CD↑p
0A06                         ld      a, (advance_cheat)
0A09                         or      a
0A0A                         ret     z
0A0B                         ld      a, (nvram)
0A0E                         ld      b, a
0A0F                         in      a, (0)                      ; Read DIP Switches
0A11                         cpl
0A12                         and     64                          ; Seems this DIP sets the nvram to this value
0A14                         ld      (nvram), a
0A17                         ret     z
0A18                         cp      b
0A19                         ret     z
0A1A                         call    sub_AE3
0A1D                         call    sub_681B
0A20                         ret
0A20 ; End of function sub_A06
0A20
0A21 ; ---------------------------------------------------------------------------
0A21
0A21 loc_A21:                                                    ; 09DE
0A21                         ld      a, (byte_E022)
0A24                         cp      59h ; 'Y'
0A26                         jr      z, loc_A45
0A28                         ld      a, (byte_E601)
0A2B                         or      a
0A2C                         jp      z, loc_951
0A2F                         ld      iy, Building1_data
0A33                         ld      de, 18h                     ; Data for each building has a chunk size of $18 bytes
0A36
0A36 loc_A36:                                                    ; 0A43↓j
0A36                         ld      a, (iy+0)
0A39                         cp      0FFh
0A3B                         jr      z, loc_A45
0A3D                         or      a
0A3E                         jp      nz, loc_951
0A41                         add     iy, de
0A43                         jr      loc_A36
0A45 ; ---------------------------------------------------------------------------
0A45
0A45 loc_A45:                                                    ; 0A26 0A3B
0A45                         ld      a, 3Ch ; '<'
0A47                         ld      (byte_E029), a
0A4A                         ld      (byte_E00A), a
0A4D                         xor     a
0A4E                         ld      (byte_E022), a
0A51                         jp      loc_951
0A54 ; ---------------------------------------------------------------------------
0A54
0A54 loc_A54:                                                    ; 09D7
0A54                         ld      a, (game_credits)
0A57                         or      a
0A58                         jp      nz, loc_873
0A5B                         ld      a, (ticker_countup)
0A5E                         cp      3Bh ; ';'
0A60                         jp      nz, loc_951
0A63                         ld      a, (byte_E00F)
0A66                         or      a
0A67                         jp      z, loc_873
0A6A                         dec     a
0A6B                         ld      (byte_E00F), a
0A6E                         jp      loc_951
0A71
0A71 ; =============== S U B R O U T I N E =======================================
0A71
0A71
0A71 sub_A71:                                                    ; loc_9F5↑p
0A71                         ld      a, (ix+1)
0A74                         cp      2
0A76                         jr      z, loc_A7E
0A78                         cp      0
0A7A                         jr      z, loc_A7E
0A7C                         xor     a
0A7D                         ret
0A7E ; ---------------------------------------------------------------------------
0A7E
0A7E loc_A7E:                                                    ; 0A76 0A7A
0A7E                         ld      a, 1
0A80                         or      a
0A81                         ret
0A81 ; End of function sub_A71
0A81
0A82 ; ---------------------------------------------------------------------------
0A82
0A82 loc_A82:                                                    ; 0A03
0A82                         call    sub_6549
0A85                         call    watchdog_reset
0A88                         call    sound_setup
0A8B                         call    clear_ram_below_players
0A8E                         ld      ix, George_data
0A92                         call    sub_AD5
0A95                         ld      ix, Lizzie_data
0A99                         call    sub_AD5
0A9C                         ld      ix, Ralph_data
0AA0                         call    sub_AD5
0AA3                         call    sub_AE3
0AA6                         xor     a
0AA7                         ld      (byte_E60E), a
0AAA                         ld      (byte_E024), a
0AAD                         call    setup_palett3
0AB0                         ld      a, (byte_E49F)
0AB3                         cp      2
0AB5                         jr      nc, loc_AC6
0AB7                         ld      a, (byte_E4EF)
0ABA                         cp      2
0ABC                         jr      nc, loc_AC6
0ABE                         ld      a, (byte_E53F)
0AC1                         cp      2
0AC3                         jp      c, loc_B54
0AC6
0AC6 loc_AC6:                                                    ; 0AB5 0ABC 
0AC6                         call    startup_sound
0AC9                         call    dateline_display_all
0ACC                         call    sub_B3F
0ACF
0ACF loc_ACF:                                                    ; 0B77↓j
0ACF                         call    clear_sprites_and_screen
0AD2                         jp      loc_8D3
0AD5
0AD5 ; =============== S U B R O U T I N E =======================================
0AD5
0AD5
0AD5 sub_AD5:                                                    ; 0A92↑p 0A99↑p 
0AD5                         inc     (ix+7)
0AD8                         ld      a, (ix+1)
0ADB                         cp      3
0ADD                         ret     nz
0ADE                         ld      (ix+1), 0
0AE2                         ret
0AE2 ; End of function sub_AD5
0AE2
0AE3
0AE3 ; =============== S U B R O U T I N E =======================================
0AE3
0AE3
0AE3 sub_AE3:                                                    ; 0A1A↑p 0AA3↑p
0AE3                         ld      a, (game_level)
0AE6                         inc     a
0AE7                         jr      nz, loc_AF9
0AE9                         ld      a, (byte_E58C)
0AEC                         inc     a
0AED                         ld      (byte_E58C), a
0AF0                         cp      3
0AF2                         jr      c, loc_AF8
0AF4                         xor     a
0AF5                         ld      (byte_E58C), a
0AF8
0AF8 loc_AF8:                                                    ; 0AF2
0AF8                         xor     a
0AF9
0AF9 loc_AF9:                                                    ; 0AE7
0AF9                         ld      (game_level), a
0AFC                         and     7Fh
0AFE                         ret     nz
0AFF                         ld      hl, byte_E679
0B02                         inc     (hl)
0B03                         ret
0B03 ; End of function sub_AE3
0B03
0B04
0B04 ; =============== S U B R O U T I N E =======================================
0B04
0B04
0B04 sound_setup:                                                ; system_good2↑p
0B04                                                             ; 0A88↑p 
0B04                         ld      c, 8
0B06                         call    sfx_init_setting
0B09                         ld      bc, 801h                    ; B = 8 (retry attempts), C = 1 (timeout for inner poll)
0B0C                         in      a, (IN4_P3_AND_SOUND_READY) ; Read sound board READY/BUSY status (bit 7)
0B0E                         and     10000000b                   ; Mask for bit 7 only (sound board ready/busy)
0B10                         ld      d, a                        ; Save initial READY status in D
0B11
0B11 outer_poll:                                                 ; 0B29↓j
0B11                         out     (OUT7_WATCHDOG_RESET), a    ; Kick/reset external watchdog (hardware timer)
0B13
0B13 wait_polling:                                               ; 0B23↓j
0B13                         in      a, (IN4_P3_AND_SOUND_READY) ; Poll READY/BUSY
0B15                         and     10000000b                   ; Isolate D7
0B17                         cp      d                           ; Wait for status bit to change
0B18                         jr      z, wait_poll                ; If not, loop/check watchdog below
0B1A                         ld      d, a                        ; If changed, update D
0B1B                         dec     c                           ; Decrement poll timeout (C starts at 1)
0B1C                         jr      z, poll_timeout             ; If C=0, timeout, branch out
0B1E
0B1E wait_poll:                                                  ; 0B18
0B1E                         ld      a, (watchdog_flag)          ; Check software watchdog flag
0B21                         cp      1                           ; If < 1, keep waiting/polling
0B23                         jr      c, wait_polling
0B25                         xor     a                           ; If flag reaches 1, timeout: clear flag
0B26                         ld      (watchdog_flag), a          ; Now save flag we know it's happened
0B29                         djnz    outer_poll                  ; Outer loop: retry up to 8 times (B=8 at start)
0B2B                         ld      a, 0                        ; Unsure when the global sound is set to disable,
0B2B                                                             ; but the below exit has to be missing a ret before the sounds is re-enabled.
0B2B                                                             ; seems the disable sound has no purpose if a sound hardware failure!
0B2D                         ld      (global_sound_enable), a    ; Disable sound (timeout/failure)
0B30                         out     (OUT6_SOUND_GOOD_WRITE), a  ; Reset watchdog circuitry
0B32                         call    watchdog_reset
0B35                         ld      a, 100000b
0B37                         out     (OUT6_SOUND_GOOD_WRITE), a  ; Re-enable sound board/reset
0B39
0B39 poll_timeout:                                               ; 0B1C
0B39                         ld      a, 32
0B3B                         ld      (global_sound_enable), a    ; Mark sound system enabled again and good
0B3E                         ret
0B3E ; End of function sound_setup
0B3E
0B3F
0B3F ; =============== S U B R O U T I N E =======================================
0B3F
0B3F
0B3F sub_B3F:                                                    ; 08D0↑p 0ACC↑p 
0B3F                         call    watchdog_reset
0B42                         call    sub_68BB
0B45                         call    ready_players
0B48                         ld      a, (byte_E024)
0B4B                         inc     a
0B4C                         ld      (byte_E024), a
0B4F                         cp      3Ch ; '<'
0B51                         jr      c, sub_B3F
0B53                         ret
0B53 ; End of function sub_B3F
0B53
0B54 ; ---------------------------------------------------------------------------
0B54
0B54 loc_B54:                                                    ; 0AC3
0B54                         ld      c, 104
0B56                         rst     dispatch_sound
0B57                         call    dateline_setup
0B5A                         ld      a, (byte_E606)
0B5D                         or      a
0B5E                         jr      nz, loc_B7A
0B60
0B60 loc_B60:                                                    ; 0B75↓j
0B60                         call    watchdog_reset
0B63                         call    ready_players
0B66                         ld      a, (byte_E606)
0B69                         or      a
0B6A                         jr      nz, loc_B7A
0B6C                         ld      a, (byte_E024)
0B6F                         inc     a
0B70                         ld      (byte_E024), a
0B73                         cp      3Ch ; '<'
0B75                         jr      c, loc_B60
0B77                         jp      loc_ACF
0B7A ; ---------------------------------------------------------------------------
0B7A
0B7A loc_B7A:                                                    ; 0B5E 0B6A
0B7A                         ld      b, 1Eh
0B7C
0B7C loc_B7C:                                                    ; loc_BA5↓j
0B7C                         call    watchdog_reset
0B7F                         call    ready_players
0B82                         ld      a, (byte_E024)
0B85                         inc     a
0B86                         and     0Fh
0B88                         ld      (byte_E024), a
0B8B                         and     7
0B8D                         jr      nz, loc_BA5
0B8F                         ld      hl,  bg_row12+10h
0B92                         ld      a, (byte_E024)
0B95                         or      a
0B96                         jr      z, loc_B9D
0B98                         ld      de, a93                     ; "@9@3"
0B9B                         jr      loc_BA0
0B9D ; ---------------------------------------------------------------------------
0B9D
0B9D loc_B9D:                                                    ; 0B96
0B9D                         ld      de, aNewsFlash              ; "  NEWS FLASH"
0BA0
0BA0 loc_BA0:                                                    ; 0B9B
0BA0                         push    bc
0BA1                         call    message_print_white
0BA4                         pop     bc
0BA5
0BA5 loc_BA5:                                                    ; 0B8D
0BA5                         djnz    loc_B7C
0BA7                         call    clear_sprites_and_screen
0BAA                         jp      loc_AC6
0BAA ; ---------------------------------------------------------------------------
0BAD a93:                    .ascii '@9@3',0                     ; 0B98↑o
0BB2 aNewsFlash:             .ascii '  NEWS FLASH',0             ; loc_B9D↑o
0BBF
0BBF ; =============== S U B R O U T I N E =======================================
0BBF
0BBF
0BBF sub_BBF:                                                    ; 08B0↑p
0BBF                         ld      a, 1
0BC1                         ld      (unused_live_status), a
0BC4                         call    title_page
0BC7                         call    clear_sprites_and_screen
0BCA                         call    setup_palette1
0BCD                         ld      a, (game_credits)
0BD0                         or      a
0BD1                         ret     nz
0BD2                         call    advance_auto_action
0BD5                         call    clear_sprites_and_screen
0BD8                         call    setup_palette1
0BDB                         ret
0BDB ; End of function sub_BBF
0BDB
0BDC
0BDC ; =============== S U B R O U T I N E =======================================
0BDC
0BDC
0BDC sub_BDC:                                                    ; 0978↑p
0BDC                         ld      a, (byte_E021)
0BDF                         cp      0C0h
0BE1                         ret     nc
0BE2                         call    ready_players
0BE5                         ld      a, (byte_E606)
0BE8                         or      a
0BE9                         ret     z
0BEA                         call    sub_1614
0BED                         ret
0BED ; End of function sub_BDC
0BED
0BEE
0BEE ; =============== S U B R O U T I N E =======================================
0BEE
0BEE
0BEE ready_players:                                              ; 0B45↑p 0B63↑p 
0BEE                         xor     a
0BEF                         ld      (byte_E606), a
0BF2                         ld      a, (sound_enable)
0BF5                         or      a
0BF6                         ret     nz
0BF7                         ld      ix, George_data
0BFB                         ld      (ix+2), 0                   ; Master sprite code for George
0BFF                         call    Check_player1_join
0C02                         ld      ix, Lizzie_data
0C06                         ld      (ix+2), 1                   ; Master sprite code for Lizzie
0C0A                         call    Check_player2_join
0C0D                         ld      ix, Ralph_data
0C11                         ld      (ix+2), 2                   ; Master sprite code for Ralph
0C15                         call    Check_player3_join
0C18                         ret
0C18 ; End of function ready_players
0C18
0C19
0C19 ; =============== S U B R O U T I N E =======================================
0C19
0C19
0C19 Check_player1_join:                                         ; 0BFF↑p
0C19
0C19 ; FUNCTION CHUNK AT 0C9A SIZE 0000001A BYTES
0C19
0C19                         call    check_credits
0C1C                         ret     z
0C1D                         in      a, (1)                      ; Player One Input Control bits
0C1F                         cpl
0C20                         and     32                          ; Player1 Jump Button pressed?
0C22                         ret     z
0C23                         ld      (ix+1), 1
0C27                         ld      (ix+4), 2
0C2B                         call    one_credit_less
0C2E                         ld      a, (ix+13h)
0C31                         or      a
0C32                         jr      z, loc_C3C
0C34                         ld      hl,  bg_row04+0Eh
0C37                         ld      (hl), 20h ; ' '
0C39                         inc     hl
0C3A                         ld      (hl), 40h ; '@'
0C3C
0C3C loc_C3C:                                                    ; 0C32
0C3C                         ld      hl, george_score
0C3F                         jr      setup_player_score
0C3F ; End of function Check_player1_join
0C3F
0C41
0C41 ; =============== S U B R O U T I N E =======================================
0C41
0C41
0C41 Check_player2_join:                                         ; 0C0A↑p
0C41
0C41 ; FUNCTION CHUNK AT 0C9A SIZE 0000001A BYTES
0C41
0C41                         call    check_credits
0C44                         ret     z
0C45                         in      a, (2)                      ; Player Two Input Control bits
0C47                         cpl
0C48                         and     32                          ; Player Jump Button pressed?
0C4A                         ret     z
0C4B                         ld      (ix+1), 1
0C4F                         ld      (ix+4), 2
0C53                         call    one_credit_less
0C56                         ld      a, (ix+byte_12+1)
0C59                         or      a
0C5A                         jr      z, loc_C64
0C5C                         ld      hl,  bg_row04+20h
0C5F                         ld      (hl), 20h ; ' '
0C61                         inc     hl
0C62                         ld      (hl), 50h ; 'P'
0C64
0C64 loc_C64:                                                    ; 0C5A
0C64                         ld      hl, lizzie_score
0C67                         jr      setup_player_score
0C67 ; End of function Check_player2_join
0C67
0C69
0C69 ; =============== S U B R O U T I N E =======================================
0C69
0C69
0C69 Check_player3_join:                                         ; 0C15↑p
0C69
0C69 ; FUNCTION CHUNK AT 0C9A SIZE 0000001A BYTES
0C69
0C69                         call    check_credits
0C6C                         ret     z
0C6D                         in      a, (4)                      ; Player Three Input Control bits
0C6F                         cpl
0C70                         and     32                          ; Player Jump Button pressed?
0C72                         ret     z
0C73                         ld      (ix+1), 1
0C77                         ld      (ix+4), 2
0C7B                         call    one_credit_less
0C7E                         ld      a, (ix+13h)
0C81                         or      a
0C82                         jr      z, loc_C8C
0C84                         ld      hl,  bg_row04+32h
0C87                         ld      (hl), 20h ; ' '
0C89                         inc     hl
0C8A                         ld      (hl), 60h ; '`'
0C8C
0C8C loc_C8C:                                                    ; 0C82
0C8C                         ld      hl, ralf_score
0C8F                         jr      setup_player_score
0C8F ; End of function Check_player3_join
0C8F
0C91
0C91 ; =============== S U B R O U T I N E =======================================
0C91
0C91
0C91 sub_C91:                                                    ; setup_player_score↓p
0C91                         ld      a, (easy_game)
0C94                         or      a
0C95                         ret     nz
0C96                         ld      (ix+13h), a
0C99                         ret
0C99 ; End of function sub_C91
0C99
0C9A ; ---------------------------------------------------------------------------
0C9A ; START OF FUNCTION CHUNK FOR Check_player1_join
0C9A ;   ADDITIONAL PARENT FUNCTION Check_player2_join
0C9A ;   ADDITIONAL PARENT FUNCTION Check_player3_join
0C9A
0C9A setup_player_score:                                         ; 0C3F 0C67 
0C9A                         call    sub_C91
0C9D                         ld      a, (ix+13h)
0CA0                         or      a
0CA1                         jr      nz, loc_CAA
0CA3                         ld      b, 7                        ; Score 7 digits
0CA5
0CA5 score_init:                                                 ; 0CA8↓j
0CA5                         ld      (hl), 0
0CA7                         inc     hl
0CA8                         djnz    score_init
0CAA
0CAA loc_CAA:                                                    ; 0CA1
0CAA                         ld      a, 1
0CAC                         ld      (byte_E606), a
0CAF                         ld      (ix+13h), 0
0CB3                         ret
0CB3 ; END OF FUNCTION CHUNK FOR Check_player1_join
0CB4
0CB4 ; =============== S U B R O U T I N E =======================================
0CB4
0CB4
0CB4 one_credit_less:                                            ; 0C2B↑p 0C53↑p 
0CB4                         ld      a, (game_credits)
0CB7                         dec     a
0CB8                         ld      (game_credits), a
0CBB                         ret
0CBB ; End of function one_credit_less
0CBB
0CBC
0CBC ; =============== S U B R O U T I N E =======================================
0CBC
0CBC
0CBC sub_CBC:                                                    ; 09A3↑p
0CBC                         ld      a, (ticker_countup)
0CBF                         or      a
0CC0                         jr      z, loc_CCB
0CC2                         cp      96
0CC4                         ret     nz
0CC5                         ld      a, 3
0CC7
0CC7 loc_CC7:                                                    ; 0CCD↓j
0CC7                         ld      (byte_E60E), a
0CCA                         ret
0CCB ; ---------------------------------------------------------------------------
0CCB
0CCB loc_CCB:                                                    ; 0CC0
0CCB                         ld      a, 1
0CCD                         jr      loc_CC7
0CCD ; End of function sub_CBC
0CCD
0CCF
0CCF ; =============== S U B R O U T I N E =======================================
0CCF
0CCF
0CCF check_credits:                                              ; Check_player1_join↑p
0CCF                                                             ; Check_player2_join↑p 
0CCF                         ld      a, (game_credits)
0CD2                         or      a
0CD3                         ret     z
0CD4                         ld      a, (ix+1)
0CD7                         cp      3
0CD9                         jr      z, loc_CFD
0CDB                         cp      0
0CDD                         jr      z, loc_CFD
0CDF                         cp      4
0CE1                         jr      z, loc_CE5
0CE3
0CE3 loc_CE3:                                                    ; 0CEA↓j 0CEE↓j 
0CE3                         xor     a
0CE4                         ret
0CE5 ; ---------------------------------------------------------------------------
0CE5
0CE5 loc_CE5:                                                    ; 0CE1
0CE5                         ld      a, (ix+8)
0CE8                         cp      18h
0CEA                         jr      c, loc_CE3
0CEC                         cp      0E8h
0CEE                         jr      nc, loc_CE3
0CF0                         ld      a, (ix+16h)
0CF3                         cp      0Bh
0CF5                         jr      nz, loc_CE3
0CF7                         ld      a, (ix+43h)
0CFA                         or      a
0CFB                         jr      nz, loc_CE3
0CFD
0CFD loc_CFD:                                                    ; 0CD9 0CDD
0CFD                         ld      a, 1
0CFF                         or      a
0D00                         ret
0D00 ; End of function check_credits
0D00
0D01
0D01 ; =============== S U B R O U T I N E =======================================
0D01
0D01
0D01 sub_D01:                                                    ; 08C3↑p
0D01                         call    clear_ram_below_players
0D04                         call    ready_players               ; Wait for any player to start game
0D07                         ld      a, (byte_E606)
0D0A                         or      a
0D0B                         ret     nz
0D0C                         call    player_select_start
0D0F                         ld      a, (byte_E606)
0D12                         or      a
0D13                         ret     nz
0D14
0D14 loc_D14:                                                    ; 0D27↓j
0D14                         call    watchdog_reset
0D17                         call    ready_players
0D1A                         ld      a, (byte_E606)
0D1D                         or      a
0D1E                         ret     nz
0D1F                         call    sub_D29
0D22                         ld      a, (byte_E606)
0D25                         or      a
0D26                         ret     nz
0D27                         jr      loc_D14
0D27 ; End of function sub_D01
0D27
0D29
0D29 ; =============== S U B R O U T I N E =======================================
0D29
0D29
0D29 sub_D29:                                                    ; 0D1F↑p
0D29                         ld      a, (ticker_countup)
0D2C                         inc     a
0D2D                         cp      30h ; '0'
0D2F                         jr      nc, loc_D34
0D31                         ld      (ticker_countup), a
0D34
0D34 loc_D34:                                                    ; 0D2F
0D34                         ld      a, (free_play)
0D37                         or      a
0D38                         jr      z, loc_D40
0D3A                         ld      a, (easy_hard_normal)
0D3D                         or      a
0D3E                         jr      nz, loc_D48
0D40
0D40 loc_D40:                                                    ; 0D38
0D40                         ld      a, (game_credits)
0D43                         add     a, 30h ; '0'
0D45                         ld      (bg_row11+38h), a
0D48
0D48 loc_D48:                                                    ; 0D3E
0D48                         call    check_player_start
0D4B                         or      a
0D4C                         ret     z
0D4D                         call    clear_ram_below_here
0D50                         call    actions_with_credits
0D53                         call    clear_sprites_and_screen
0D56                         ld      a, (byte_E606)
0D59                         ld      (ticker_countup), a
0D5C                         or      a
0D5D                         ret     nz
0D5E                         call    setup_palette1
0D61                         call    player_select_start
0D64                         ret
0D64 ; End of function sub_D29
0D64
0D65
0D65 ; =============== S U B R O U T I N E =======================================
0D65
0D65
0D65 check_player_start:                                         ; loc_D48↑p
0D65                                                             ; AE38↓p
0D65                         ld      a, (ticker_countup)
0D68                         cp      8
0D6A                         jr      c, no_check_input           ; Check every count of 8 on ticker
0D6C                         in      a, (1)                      ; Player 1 control input
0D6E                         cpl
0D6F                         and     16                          ; Player 1 punch button?
0D71                         jr      nz, player_started
0D73                         in      a, (2)                      ; Player 2 control input
0D75                         cpl
0D76                         and     16                          ; Player 2 punch button?
0D78                         jr      nz, player_started
0D7A                         in      a, (4)                      ; Player 3 control input
0D7C                         cpl
0D7D                         and     16                          ; Player 3 punch button?
0D7F                         jr      nz, player_started
0D81
0D81 no_check_input:                                             ; 0D6A
0D81                         xor     a
0D82                         ret
0D83 ; ---------------------------------------------------------------------------
0D83
0D83 player_started:                                             ; 0D71 0D78 
0D83                         ld      a, 1
0D85                         or      a
0D86                         ret
0D86 ; End of function check_player_start
0D86
0D87
0D87 ; =============== S U B R O U T I N E =======================================
0D87
0D87
0D87 sub_D87:                                                    ; 0984↑p
0D87                         ld      ix, George_data
0D8B                         call    sub_D99
0D8E                         ld      ix, Lizzie_data
0D92                         call    sub_D99
0D95                         ld      ix, Ralph_data
0D95 ; End of function sub_D87
0D95
0D99
0D99 ; =============== S U B R O U T I N E =======================================
0D99
0D99
0D99 sub_D99:                                                    ; 0D8B↑p 0D92↑p
0D99
0D99
0D99                         ld      a, (ix+1)
0D9C                         cp      2
0D9E                         ret     nz
0D9F                         jp      loc_522A
0D9F ; End of function sub_D99
0D9F
0DA2
0DA2 ; =============== S U B R O U T I N E =======================================
0DA2
0DA2
0DA2 sub_DA2:                                                    ; 0955↑p
0DA2                         ld      c, 0
0DA4                         ld      a, (unk_E49C)
0DA7                         call    sub_E4E
0DAA                         ld      b, a
0DAB                         ld      a, (unk_E4EC)
0DAE                         call    sub_E4E
0DB1                         or      b
0DB2                         ld      b, a
0DB3                         ld      a, (unk_E53C)
0DB6                         call    sub_E4E
0DB9                         or      b
0DBA                         ld      (byte_E602), a
0DBD                         ld      a, c
0DBE                         ld      (byte_E601), a
0DC1                         or      a
0DC2                         jr      nz, loc_E19
0DC4                         ld      a, (byte_E602)
0DC7                         or      a
0DC8                         jr      z, loc_DD0
0DCA                         cp      3
0DCC                         ret     nz
0DCD                         jp      loc_DFC
0DD0 ; ---------------------------------------------------------------------------
0DD0
0DD0 loc_DD0:                                                    ; 0DC8
0DD0                         ld      a, (ticker_countup)
0DD3                         and     1
0DD5                         ret     z
0DD6                         ld      a, (byte_E021)
0DD9                         inc     a
0DDA                         ld      (byte_E021), a
0DDD                         cp      0FFh
0DDF                         ret     z
0DE0                         cp      0C0h
0DE2                         jr      nc, loc_E3F
0DE4                         cp      40h ; '@'
0DE6                         jr      c, loc_DF8
0DE8                         cp      80h
0DEA                         jr      c, loc_DF2
0DEC                         and     1
0DEE                         jr      z, loc_E2C
0DF0                         jr      loc_DFC
0DF2 ; ---------------------------------------------------------------------------
0DF2
0DF2 loc_DF2:                                                    ; 0DEA
0DF2                         and     2
0DF4                         jr      z, loc_E2C
0DF6                         jr      loc_DFC
0DF8 ; ---------------------------------------------------------------------------
0DF8
0DF8 loc_DF8:                                                    ; 0DE6
0DF8                         and     4
0DFA                         jr      z, loc_E2C
0DFC
0DFC loc_DFC:                                                    ; 0DCD 0DF0 
0DFC                         ld      a, (unk_E014)
0DFF                         or      a
0E00                         jr      nz, loc_E0A
0E02                         ld      c, 59                       ; Bullet soundFX
0E04                         rst     dispatch_sound
0E05                         ld      a, 1
0E07                         ld      (unk_E014), a
0E0A
0E0A loc_E0A:                                                    ; 0E00
0E0A                         ld      b, 88h
0E0C                         ld      c, 0BCh
0E0E                         ld      hl, byte_E57
0E11                         ld      iy, sprite101_y
0E15                         call    sprite_updater_2x2
0E18                         ret
0E19 ; ---------------------------------------------------------------------------
0E19
0E19 loc_E19:                                                    ; 0DC2
0E19                         ld      a, (sound_enable)
0E1C                         or      a
0E1D                         jp      nz, loc_E3F
0E20                         xor     a
0E21                         ld      (byte_E021), a
0E24                         ld      iy, sprite101_y
0E28                         ld      b, 4
0E2A                         rst     do_sprite_clear_loop
0E2B                         ret
0E2C ; ---------------------------------------------------------------------------
0E2C
0E2C loc_E2C:                                                    ; 0DEE 0DF4 
0E2C                         xor     a
0E2D                         ld      (unk_E014), a
0E30                         ld      b, 88h
0E32                         ld      c, 0BCh
0E34                         ld      hl, byte_E67
0E37                         ld      iy, sprite101_y
0E3B                         call    sprite_updater_2x2
0E3E                         ret
0E3F ; ---------------------------------------------------------------------------
0E3F
0E3F loc_E3F:                                                    ; 0DE2 0E1D
0E3F                         ld      b, 88h
0E41                         ld      c, 0BCh
0E43                         ld      hl, byte_E5F
0E46                         ld      iy, sprite101_y
0E4A                         call    sprite_updater_2x2
0E4D                         ret
0E4D ; End of function sub_DA2
0E4D
0E4E
0E4E ; =============== S U B R O U T I N E =======================================
0E4E
0E4E
0E4E sub_E4E:                                                    ; 0DA7↑p 0DAE↑p 
0E4E                         cp      2
0E50                         jr      z, loc_E55
0E52                         cp      5
0E54                         ret     nz
0E55
0E55 loc_E55:                                                    ; 0E50
0E55                         inc     c
0E56                         ret
0E56 ; End of function sub_E4E
0E56
0E56 ; ---------------------------------------------------------------------------
0E57 byte_E57:               db 0FEh, 0Bh,0FFh, 0Bh,0FAh, 0Bh,0FBh, 0Bh ; 0E0E↑o
0E5F byte_E5F:               db 0FAh, 0Bh,0FBh, 0Bh,0FCh, 0Bh,0FDh, 0Bh ; 0E43↑o
0E67 byte_E67:               db 0F9h, 0Bh,0F9h, 0Bh,0F9h, 0Bh,0F9h, 0Bh ; 0E34↑o
0E6F
0E6F ; =============== S U B R O U T I N E =======================================
0E6F
0E6F
0E6F sub_E6F:                                                    ; 09D0↑p
0E6F                         xor     a
0E70                         ld      (unk_E013), a
0E73                         ld      ix, George_data
0E77                         ld      de, 50h ; 'P'
0E7A                         ld      c, 0
0E7C                         ld      b, 3
0E7E
0E7E loc_E7E:                                                    ; 0E99↓j
0E7E                         ld      a, (ix+1)
0E81                         cp      2
0E83                         jr      nz, loc_E97
0E85                         ld      a, (ix+3)
0E88                         cp      1Ch
0E8A                         jr      nc, loc_E97
0E8C                         ld      c, 1
0E8E                         cp      10h
0E90                         jr      nc, loc_E97
0E92                         or      a
0E93                         jr      z, loc_E97
0E95                         jr      loc_EB4
0E97 ; ---------------------------------------------------------------------------
0E97
0E97 loc_E97:                                                    ; 0E83 0E8A 
0E97                         add     ix, de
0E99                         djnz    loc_E7E
0E9B                         ld      a, c
0E9C                         or      a
0E9D                         ret     z
0E9E                         ld      a, (ticker_countup)
0EA1                         and     3Fh ; '?'
0EA3                         cp      10h
0EA5                         ret     nz
0EA6                         ld      a, (unk_E013)
0EA9                         or      a
0EAA                         ret     nz
0EAB                         ld      c, 96
0EAD                         rst     dispatch_sound
0EAE                         ld      a, 1
0EB0                         ld      (unk_E013), a
0EB3                         ret
0EB4 ; ---------------------------------------------------------------------------
0EB4
0EB4 loc_EB4:                                                    ; 0E95
0EB4                         ld      a, (ticker_countup)
0EB7                         and     1Fh
0EB9                         ret     nz
0EBA                         ld      a, (unk_E013)
0EBD                         or      a
0EBE                         ret     nz
0EBF                         ld      c, 98
0EC1                         rst     dispatch_sound
0EC2                         ld      a, 2
0EC4                         ld      (unk_E013), a
0EC7                         ret
0EC7 ; End of function sub_E6F
0EC7
0EC8
0EC8 ; =============== S U B R O U T I N E =======================================
0EC8
0EC8
0EC8 sub_EC8:                                                    ; 0967↑p
0EC8
0EC8 ; FUNCTION CHUNK AT 0F24 SIZE 00000020 BYTES
0EC8
0EC8                         ld      a, (byte_E001)
0ECB                         dec     a
0ECC                         ld      (byte_E001), a
0ECF                         jr      z, loc_F24
0ED1                         ld      ix, George_data
0ED5                         call    sub_EFC
0ED8                         ld      ix, Lizzie_data
0EDC                         call    sub_EFC
0EDF                         ld      ix, Ralph_data
0EE3                         call    sub_EFC
0EE6                         ld      iy, sprite126_y
0EEA                         ld      a, (iy+3)
0EED                         add     a, 1
0EEF                         ld      (iy+3), a
0EF2                         ld      a, (byte_E001)
0EF5                         and     1Fh
0EF7                         ld      c, 62                       ; space ship lasers
0EF9                         ret     nz
0EFA                         rst     dispatch_sound
0EFB                         ret
0EFB ; End of function sub_EC8
0EFB
0EFC
0EFC ; =============== S U B R O U T I N E =======================================
0EFC
0EFC
0EFC sub_EFC:                                                    ; 0ED5↑p 0EDC↑p 
0EFC                         ld      a, (ix+1)
0EFF                         cp      2
0F01                         ret     nz
0F02                         ld      hl, score_25
0F05                         call    add_to_score
0F08                         ld      a, (byte_E001)
0F0B                         and     1
0F0D                         ld      b, a
0F0E                         ld      a, (ix+1Ah)
0F11                         add     a, b
0F12                         ld      (ix+0Ah), a
0F15                         ld      a, (byte_E001)
0F18                         and     3Fh ; '?'
0F1A                         sla     a
0F1C                         ld      b, a
0F1D                         ld      a, 0C8h
0F1F                         sub     b
0F20                         ld      (ix+3), a
0F23                         ret
0F23 ; End of function sub_EFC
0F23
0F24 ; ---------------------------------------------------------------------------
0F24 ; START OF FUNCTION CHUNK FOR sub_EC8
0F24
0F24 loc_F24:                                                    ; 0ECF
0F24                         ld      a, 0C8h
0F26                         ld      (unk_E49E), a
0F29                         ld      (unk_E53E), a
0F2C                         ld      (unk_E4EE), a
0F2F                         xor     a
0F30                         ld      (byte_E001), a
0F33                         ld      de, a993                    ; "@9@9@3"
0F36                         ld      hl,  bg_row06+0Ah
0F39                         ld      c, 20h ; ' '
0F3B                         call    message_print               ; Print string c=colour hl=screen, source=de
0F3E                         ld      iy, sprite126_y
0F42                         rst     clear_all_sprite
0F43                         ret
0F43 ; END OF FUNCTION CHUNK FOR sub_EC8
0F43 ; ---------------------------------------------------------------------------
0F44 aMegaVitaminBon:        .ascii 'MEGA-VITAMIN BONUS!!!',0    ; 092F↑o
0F5A a993:                   .ascii '@9@9@3',0                   ; 0F33↑o
0F61
0F61 ; =============== S U B R O U T I N E =======================================
0F61
0F61
0F61 HL_is_A_x_DE:                                               ; 8920↓p
0F61                         ld      hl, 0
0F64                         ld      b, 8
0F66
0F66 loc_F66:                                                    ; loc_F70↓j
0F66                         add     hl, hl
0F67                         rl      c
0F69                         rla
0F6A                         jr      nc, loc_F70
0F6C                         add     hl, de
0F6D                         jr      nc, loc_F70
0F6F                         inc     c
0F70
0F70 loc_F70:                                                    ; 0F6A 0F6D
0F70                         djnz    loc_F66
0F72                         ret
0F72 ; End of function HL_is_A_x_DE
0F72
0F73
0F73 ; =============== S U B R O U T I N E =======================================
0F73
0F73 ; Generic helper HL = HL + A
0F73
0F73 hl_add_helper:                                              ; HL_plus_A
0F73                         add     a, l
0F74                         ld      l, a                        ; store result back in L
0F75                         ret     nc                          ; if not carry, return (H unchanged)
0F76                         inc     h                           ; elese carry occurred, increment high byte
0F77                         ret
0F77 ; End of function hl_add_helper
0F77
0F78
0F78 ; =============== S U B R O U T I N E =======================================
0F78
0F78
0F78 clear_ram_below_players:                                    ; 08A2↑p
0F78                                                             ; loc_8E5↑p 
0F78                         ld      hl, George_data
0F7B                         jp      clear_memory
0F7B ; End of function clear_ram_below_players
0F7B
0F7E
0F7E ; =============== S U B R O U T I N E =======================================
0F7E
0F7E
0F7E clear_ram_below_here:                                       ; 0D4D↑p
0F7E                         ld      hl, menu_table_pointer
0F7E ; End of function clear_ram_below_here
0F7E
0F81
0F81 ; =============== S U B R O U T I N E =======================================
0F81
0F81
0F81 clear_memory:                                               ; 0828↑p 0F7B 
0F81                         ld      de, nvram                   ; D = high byte, E = low byte of nvram start address
0F84
0F84 clear_page:                                                 ; 0F87↓j 0F8C↓j
0F84                         dec     l                           ; Decrement L (low byte of HL, the address pointer)
0F85                         ld      (hl), 0                     ; Store zero at address HL
0F87                         jr      nz, clear_page              ; If L ≠ 0 after decrement, repeat (clears next byte in page)
0F89                         dec     h                           ; Otherwise, decrement H (high byte of HL, move to previous page)
0F8A                         ld      a, h                        ; Copy H to A
0F8B                         cp      d                           ; Compare H with D (high byte of NVRAM start address)
0F8C                         jr      nc, clear_page              ; If H ≥ D, continue clearing (not reached NVRAM start page yet)
0F8E                         ret                                 ; done clearing, return
0F8E ; End of function clear_memory
0F8E
0F8F
0F8F ; =============== S U B R O U T I N E =======================================
0F8F
0F8F
0F8F sub_F8F:                                                    ; 4F22↓p
0F8F                         rst     random_number
0F90                         and     a
0F91                         sbc     hl, de
0F93                         inc     hl
0F94                         ld      h, a
0F95                         call    divide_hl_by_l
0F98                         add     a, e
0F99                         ret
0F99 ; End of function sub_F8F
0F99
0F9A
0F9A ; =============== S U B R O U T I N E =======================================
0F9A
0F9A ; ; Divide HL by L (unsigned 8-bit division)
0F9A ; ; Input: HL = value to divide (dividend), L = value to divide by (divisor)
0F9A ; ; Output: A = division result (how many times L fits in HL)
0F9A ; ;         L or A = leftover value after dividing (what's left after dividing out the result)
0F9A
0F9A divide_hl_by_l:                                             ; 0F95↑p
0F9A                         xor     a                           ; lear A (will hold quotient)
0F9B                         ld      b, 8                        ; Set loop counter (8 bits)
0F9D
0F9D loc_F9D:                                                    ; loc_FA4↓j
0F9D                         rl      h                           ; Shift HL left 1 (HL <<= 1)
0F9F                         rla                                 ; Shift A left 1 (A <<= 1), bring in HL's MSB
0FA0                         sub     l                           ; Subtract divisor (L) from A (partial remainder)
0FA1                         jr      nc, loc_FA4                 ; If A >= 0, keep result and continue
0FA3                         add     a, l                        ;  If A < 0, restore A (add divisor back)
0FA4
0FA4 loc_FA4:                                                    ; 0FA1
0FA4                         djnz    loc_F9D                     ; Repeat 8 times (for 8 bits)
0FA6                         ret                                 ; On return: A = quotient, A leftover = remainder
0FA6 ; End of function divide_hl_by_l
0FA6
0FA7
0FA7 ; =============== S U B R O U T I N E =======================================
0FA7
0FA7
0FA7 update_random_number:                                       ; random_number
0FA7                         ld      a, (random_seed)            ; Load A with the seed at address E61A
0FAA                         rlca                                ; Rotate A left (through carry)
0FAB                         jr      nc, skip_xor                ; If no carry was produced, jump ahead (skip XOR)
0FAD                         xor     101011b
0FAF
0FAF skip_xor:                                                   ; 0FAB
0FAF                         push    bc                          ; Save BC (since we're about to use B)
0FB0                         ld      b, a                        ; Copy (possibly modified) A to B
0FB1                         ld      a, r                        ; Load A with the refresh register (Z80's internal R)
0FB3                         xor     b                           ; XOR A with B
0FB4                         pop     bc                          ; Restore BC
0FB5                         ld      (random_seed), a            ; Store the new seed value back to E61A
0FB8                         ret
0FB8 ; End of function update_random_number
0FB8
0FB9
0FB9 ; =============== S U B R O U T I N E =======================================
0FB9
0FB9
0FB9 clear_sprites:                                              ; clear_sprites_and_screen↓p
0FB9                                                             ; ADB4↓p 
0FB9                         push    ix
0FBB                         ld      ix, sprite0_y               ; first sprite entry
0FBF                         ld      de, 5                       ; 5 bytes / sprite entry
0FC2                         ld      bc, 7Fh                     ; 128 sprites
0FC5                         xor     a                           ; clear sprite value
0FC6
0FC6 clear_sprite_loop:                                          ; 0FD6↓j 0FD9↓j
0FC6                         ld      (ix+0), a
0FC9                         ld      (ix+1), a
0FCC                         ld      (ix+3), a
0FCF                         ld      (ix+2), a
0FD2                         add     ix, de                      ; next sprite
0FD4                         dec     bc                          ; do them all
0FD5                         cp      b
0FD6                         jr      nz, clear_sprite_loop
0FD8                         cp      c
0FD9                         jr      nz, clear_sprite_loop
0FDB                         pop     ix
0FDD                         ret
0FDD ; End of function clear_sprites
0FDD
0FDE
0FDE ; =============== S U B R O U T I N E =======================================
0FDE
0FDE
0FDE watchdog_reset:                                             ; 01AA↑p 089F↑p 
0FDE                         out     (OUT7_WATCHDOG_RESET), a
0FE0
0FE0 wait_shake:                                                 ; 0FE5↓j
0FE0                         ld      a, (watchdog_flag)          ; Read the value at E66A (shared counter/flag)
0FE3                         cp      1                           ; Is it 1?
0FE5                         jr      c, wait_shake               ; If less than 1, loop (wait until it becomes 1)
0FE7                         xor     a                           ; Set back to 0.
0FE8                         ld      (watchdog_flag), a          ; Reset the flag to 0
0FEB                         ret
0FEB ; End of function watchdog_reset
0FEB
0FEC
0FEC ; =============== S U B R O U T I N E =======================================
0FEC
0FEC
0FEC negate_hl:                                                  ; 322B↓p 32C2↓p 
0FEC                         ld      a, h                        ; Load the high byte of HL into A
0FED                         cpl                                 ; Complement A (bitwise NOT), i.e., A = ~H
0FEE                         ld      h, a                        ; Store result back in H
0FEF                         ld      a, l                        ; Load the low byte of HL into A
0FF0                         cpl                                 ; Complement A (bitwise NOT), i.e., A = ~L
0FF1                         ld      l, a                        ; Store result back in L
0FF2                         inc     hl                          ; HL = ~HL + 1 => HL = -HL (two's complement)
0FF3                         ret
0FF3 ; End of function negate_hl
0FF3
0FF3 ; ---------------------------------------------------------------------------
0FF4                         db  78h ; x                         ; TM (Trademark Image) Black BG
0FF5                         db  2Fh ; /
0FF6                         db  47h ; G
0FF7                         db  79h ; y                         ; TM (Trademark Image) Red BG
0FF8                         db  2Fh ; /
0FF9                         db  4Fh ; O
0FFA                         db    3
0FFB                         db 0C9h
0FFC
0FFC ; =============== S U B R O U T I N E =======================================
0FFC
0FFC
0FFC setup_palett3:                                              ; 0AAD↑p 65E5↓p 
0FFC                         ld      hl, palette_data3
0FFF                         jr      set_palette                 ; system has only 64 defines colours
0FFF ; End of function setup_palett3
0FFF
1001
1001 ; =============== S U B R O U T I N E =======================================
1001
1001
1001 setup_palett2:                                              ; D6C8↓p
1001                         ld      hl, palette_data2
1004                         jr      set_palette                 ; system has only 64 defines colours
1004 ; End of function setup_palett2
1004
1006
1006 ; =============== S U B R O U T I N E =======================================
1006
1006
1006 setup_palett4:                                              ; AE6D↓p
1006                         ld      hl, palette_data4
1009                         jr      set_palette                 ; system has only 64 defines colours
1009 ; End of function setup_palett4
1009
100B
100B ; =============== S U B R O U T I N E =======================================
100B
100B
100B setup_palette1:                                             ; 089C↑p 08F2↑p 
100B                         ld      hl, palette_data1
100E
100E set_palette:                                                ; 0FFF 1004 
100E                         ld      b, 64                       ; system has only 64 defines colours
1010                         ld      ix, PALETTE_RAM_BASE
1014                         ld      de, 2                       ; add for palette
1017
1017 palette_loop:                                               ; 1028↓j
1017                         ld      a, (hl)
1018                         inc     hl
1019                         or      a
101A                         ld      a, (hl)
101B                         jr      nz, loc_1022
101D                         ld      (ix+0), a
1020                         jr      loc_1025
1022 ; ---------------------------------------------------------------------------
1022
1022 loc_1022:                                                   ; 101B
1022                         ld      (ix+1), a
1025
1025 loc_1025:                                                   ; 1020
1025                         inc     hl
1026                         add     ix, de
1028                         djnz    palette_loop
102A                         ret
102A ; End of function setup_palette1
102A
102B
102B ; =============== S U B R O U T I N E =======================================
102B
102B
102B clear_sprites_and_screen:                                   ; 0899↑p 08E8↑p 
102B                         call    clear_sprites
102E                         ld      hl, bg_videoram
1031                         ld      bc, 3C0h
1034
1034 cls_loop2:                                                  ; 103D↓j
1034                         ld      (hl), 20h ; ' '
1036                         inc     hl
1037                         ld      (hl), 10h
1039                         inc     hl
103A                         dec     bc
103B                         ld      a, b
103C                         or      c
103D                         jr      nz, cls_loop2
103F                         ret
103F ; End of function clear_sprites_and_screen
103F
1040
1040 ; =============== S U B R O U T I N E =======================================
1040
1040
1040 add_to_score:                                               ; 0F05↑p 1B12↓p 
1040                         push    af
1041                         push    bc
1042                         push    de
1043                         call    add_score_value
1046                         pop     de
1047                         pop     bc
1048                         pop     af
1049                         ret
1049 ; End of function add_to_score
1049
104A
104A ; =============== S U B R O U T I N E =======================================
104A
104A
104A add_score_value:                                            ; 1043↑p
104A                         ld      a, (sound_enable)
104D                         or      a
104E                         ret     nz
104F                         ld      a, (ix+2)
1052                         or      a
1053                         jr      z, loc_1063
1055                         cp      1
1057                         jr      z, loc_105E
1059                         ld      de, unk_E661
105C                         jr      loc_1066
105E ; ---------------------------------------------------------------------------
105E
105E loc_105E:                                                   ; 1057
105E                         ld      de, unk_E65A
1061                         jr      loc_1066
1063 ; ---------------------------------------------------------------------------
1063
1063 loc_1063:                                                   ; 1053
1063                         ld      de, unk_E653
1066
1066 loc_1066:                                                   ; 105C 1061
1066                         ld      b, 5
1068                         ld      c, 0
106A
106A loc_106A:                                                   ; 1079↓j
106A                         ld      a, (de)
106B                         add     a, (hl)
106C                         add     a, c
106D                         ld      c, 0
106F                         cp      0Ah
1071                         jr      c, loc_1076
1073                         sub     0Ah
1075                         inc     c
1076
1076 loc_1076:                                                   ; 1071
1076                         ld      (de), a
1077                         inc     hl
1078                         dec     de
1079                         djnz    loc_106A
107B                         ex      de, hl
107C                         ld      a, c
107D                         or      a
107E                         ret     z
107F                         inc     (hl)
1080                         ld      a, (hl)
1081                         cp      0Ah
1083                         ret     c
1084                         ld      (hl), 0
1086                         dec     hl
1087                         inc     (hl)
1088                         ld      a, (hl)
1089                         cp      0Ah
108B                         ret     c
108C                         ld      (hl), 0
108E                         ret
108E ; End of function add_score_value
108E
108F
108F ; =============== S U B R O U T I N E =======================================
108F
108F
108F sub_108F:                                                   ; 6823↓p 6835↓p
108F                         or      a
1090                         jr      nz, loc_1093
1092                         inc     b
1093
1093 loc_1093:                                                   ; 1090
1093                         push    af
1094                         ld      a, b
1095                         ld      bc, 0
1098                         ld      d, 0
109A                         or      a
109B                         jr      z, loc_10B8
109D                         cp      1
109F                         jr      z, loc_10B3
10A1                         cp      2
10A3                         jr      z, loc_10AC
10A5                         ld      d, 7
10A7                         ld      bc, 806h
10AA                         jr      loc_10B8
10AC ; ---------------------------------------------------------------------------
10AC
10AC loc_10AC:                                                   ; 10A3
10AC                         ld      d, 5
10AE                         ld      bc, 201h
10B1                         jr      loc_10B8
10B3 ; ---------------------------------------------------------------------------
10B3
10B3 loc_10B3:                                                   ; 109F
10B3                         ld      d, 2
10B5                         ld      bc, 605h
10B8
10B8 loc_10B8:                                                   ; 109B 10AA 
10B8                         pop     af
10B9                         jr      loc_10BB
10BB ; ---------------------------------------------------------------------------
10BB
10BB loc_10BB:                                                   ; 10B9
10BB                         ld      e, a
10BC                         and     0Fh
10BE                         call    sub_10D2
10C1
10C1 loc_10C1:                                                   ; 10D0↓j
10C1                         ld      a, e
10C2                         and     0F0h
10C4                         ret     z
10C5                         sub     10h
10C7                         ld      e, a
10C8                         ld      a, 6
10CA                         call    sub_10D2
10CD                         call    sub_10DC
10D0                         jr      loc_10C1
10D0 ; End of function sub_108F
10D0
10D2
10D2 ; =============== S U B R O U T I N E =======================================
10D2
10D2
10D2 sub_10D2:                                                   ; 10BE↑p 10CA↑p
10D2                         add     a, b
10D3                         cp      0Ah
10D5                         jr      c, loc_10DA
10D7                         inc     c
10D8                         sub     0Ah
10DA
10DA loc_10DA:                                                   ; 10D5
10DA                         ld      b, a
10DB                         ret
10DB ; End of function sub_10D2
10DB
10DC
10DC ; =============== S U B R O U T I N E =======================================
10DC
10DC
10DC sub_10DC:                                                   ; 10CD↑p
10DC                         inc     c
10DD                         ld      a, c
10DE                         cp      0Ah
10E0                         ret     c
10E1                         sub     0Ah
10E3                         ld      c, a
10E4                         inc     d
10E5                         ret
10E5 ; End of function sub_10DC
10E5
10E6
10E6 ; =============== S U B R O U T I N E =======================================
10E6
10E6
10E6 sprite_clear_loop:                                          ; do_sprite_clear_loop
10E6                                                             ; 10E7↓j
10E6                         rst     clear_all_sprite
10E7                         djnz    sprite_clear_loop
10E9                         ret
10E9 ; End of function sprite_clear_loop
10E9
10EA
10EA ; =============== S U B R O U T I N E =======================================
10EA
10EA
10EA clear_sprite_details:                                       ; clear_all_sprite
10EA                                                             ; D5F8↓j
10EA                         ld      a, (iy+0)                   ; Check if the sprite y is 0
10ED                         or      a
10EE                         jr      z, already_zero
10F0                         ld      (iy+3), 0                   ; clear out all sprite X
10F4                         ld      (iy+0), 0                   ; clear out all sprite y
10F8                         ld      (iy+1), 0                   ; Clear sprite flags
10FC                         ld      (iy+2), 0                   ; clear sprite code
1100
1100 already_zero:                                               ; 10EE
1100                         ld      de, 4                       ; 4 bytes / sprite
1103                         add     iy, de                      ; Add sprite pointer
1105                         ret
1105 ; End of function clear_sprite_details
1105
1106
1106 ; =============== S U B R O U T I N E =======================================
1106
1106
1106 base_strip_plot:                                            ; 8980↓p
1106                         ld      de, bg_row29
1109                         jr      unpack_character_data       ; Decode compressed data from source in hl to destination in de
1109 ; End of function base_strip_plot
1109
110B
110B ; =============== S U B R O U T I N E =======================================
110B
110B ; decompressed from start top of screen
110B
110B unpack_fullscreen_data:                                     ; 896D↓p 899C↓p 
110B                         ld      de, bg_videoram
110E                         jr      unpack_character_data       ; Decode compressed data from source in hl to destination in de
110E ; End of function unpack_fullscreen_data
110E
1110
1110 ; =============== S U B R O U T I N E =======================================
1110
1110 ; decompress from two lines down from top of screen
1110
1110 unpack_screen_data_2linesdown:                              ; 8967↓p
1110                         ld      de, bg_row03
1113                         jr      unpack_character_data       ; Jump to the next instruction (not very well optimized is it)
1113 ; End of function unpack_screen_data_2linesdown
1113
1115
1115 ; =============== S U B R O U T I N E =======================================
1115
1115 ; Decode compressed data from source in hl to destination in de
1115
1115 unpack_character_data:                                      ; 1109 110E 
1115                         ld      a, (hl)
1116                         or      a                           ; Compressed data stream terminates with a 0
1117                         ret     z
1118                         inc     hl                          ; increase pointer
1119                         jp      p, repeat_data              ; if byte starts with bit 7 set
111C                         and     7Fh
111E                         ld      b, a                        ; the b is the count of xx bytes litrally source - screen
111F
111F literal_copy:                                               ; 1129↓j
111F                         ld      a, (hl)                     ; so get character code
1120                         ld      (de), a                     ; save to screen
1121                         inc     hl                          ; advance source and destination
1122                         inc     de
1123                         ld      a, (hl)                     ; get colour / flips etc.
1124                         and     3Fh ; '?'                   ; mask out any stray crud
1126                         ld      (de), a                     ; save to screen
1127                         inc     hl
1128                         inc     de                          ; ditto advance all
1129                         djnz    literal_copy                ; and so repeat this count x times
112B                         jr      unpack_character_data       ; Decode compressed data from source in hl to destination in de
112D ; ---------------------------------------------------------------------------
112D
112D repeat_data:                                                ; 1119
112D                         ld      b, a                        ; otherwise data is x times the next character and colour repeated
112E                         ld      c, (hl)                     ; character code
112F                         inc     hl                          ; advance to next
1130                         ld      a, (hl)                     ; palette and flip etc.
1131                         and     3Fh ; '?'                   ; make sure no stray data
1133                         inc     hl                          ; advance
1134                         ex      de, hl                      ; keep this position
1135
1135 duplicate_copy:                                             ; 1139↓j
1135                         ld      (hl), c                     ; first character code
1136                         inc     hl                          ; advance to next
1137                         ld      (hl), a                     ; control code
1138                         inc     hl                          ; and next character along
1139                         djnz    duplicate_copy              ; first character code
113B                         ex      de, hl
113C                         jr      unpack_character_data       ; Decode compressed data from source in hl to destination in de
113C ; End of function unpack_character_data
113C
113C ; ---------------------------------------------------------------------------
113E palette_data1:          dw  1A00h,  201h,0CC00h, 8300h, 4200h, 0A00h,0C501h,0C001h
113E                                                             ; setup_palette1↑o
113E                                                             ; DD77↓o 
114E                         dw  9200h,0DB00h,     0, 8100h,0C200h, 9401h, 6501h,0FF01h
115E                         dw      0, 1A00h, 8A00h,0CB00h, 4A00h,0DB00h, 1800h, 2401h
116E                         dw  4001h, 4900h, 9A00h, 2401h,0C200h,0DB00h, 4900h,0FF01h
117E                         dw      0, 1A00h,0CB00h, 1401h, 8200h,0D300h, 1800h,  500h
118E                         dw  4001h, 9200h,0DB00h, 6501h, 4300h,  400h, 4900h,0FF01h
119E                         dw      0, 1A00h, 1C01h, 2C01h, 5200h, 2401h, 1800h, 4301h
11AE                         dw  4001h, 9200h,0E300h,0AE01h, 8100h,0C200h, 4900h,0FF01h
11BE palette_data2:          dw      0, 1800h,0CC00h, 8300h, 4200h, 0A00h,0C501h,0FF01h
11BE                                                             ; setup_palett2↑o
11CE                         dw  9200h,0DB00h,     0, 8100h,0C200h, 9401h,0FF01h,0FF01h
11DE                         dw      0, 1800h, 8A00h,0FF01h, 4A00h,0FF01h, 1800h, 2401h
11EE                         dw  4001h, 4900h,0FF01h,     1,0C200h,0FF01h, 4900h,0FF01h
11FE                         dw      0, 1800h,0CB00h,0FF01h, 8200h,0FF01h, 1800h,0FF01h
120E                         dw  4001h, 9200h,0FF01h, 4001h, 4300h,  400h, 4900h,0FF01h
121E                         dw      0, 1800h,0FF01h,0FF01h, 5200h,0FF01h, 1800h,0FF01h
122E                         dw  4001h, 9200h,0FF01h, 8001h, 8100h,0C200h, 4900h,0FF01h
123E palette_data3:          dw      0, 2401h, 8A00h,0CB00h, 4A00h, 9200h, 2800h, 5100h
123E                                                             ; setup_palett3↑o
124E                         dw  4001h, 4900h, 9A00h, 2401h,0C200h,  301h, 4900h,0FF01h
125E                         dw  1A00h,  201h,0CC00h, 8300h, 4200h, 0A00h,0C501h,0C001h
126E                         dw  9200h,0DB00h,     0, 8100h,0C200h, 9401h, 6501h,0FF01h
127E                         dw      0,     0,0CB00h, 1401h, 8200h,0D300h, 2800h, 4501h
128E                         dw  4001h, 9200h,0DB00h, 6501h, 4300h,  400h, 4900h,0FF01h
129E                         dw      0,0AE01h, 1C01h, 2C01h, 5200h,0E400h, 2800h,     0
12AE                         dw  4001h, 9200h,0E300h,0AE01h, 8100h,0C200h, 4900h,0FF01h
12BE palette_data4:          dw      0, 1A00h, 8A00h,0CB00h, 4A00h,0DB00h, 1800h, 8401h
12BE                                                             ; setup_palett4↑o
12CE                         dw  4001h, 4900h, 9A00h, 2401h,0C200h,  301h, 4900h,0FF01h
12DE                         dw      0, 1A00h, 1C01h, 2C01h, 5200h, 2401h, 1800h, 4301h
12EE                         dw  4001h, 9200h,0E300h,0AE01h, 8100h,0C200h, 4900h,0FF01h
12FE                         dw  1800h,  201h,0CC00h, 8300h, 4200h, 0A00h,0C501h,0C001h
130E                         dw  4900h,0DB00h,     0, 8100h,0C200h, 9401h, 6501h,0FF01h
131E                         dw      0, 1A00h,0CB00h, 1401h, 8200h,0D300h, 1800h,  700h
132E                         dw  4001h, 9200h,0DB00h, 6501h, 4300h,  400h, 4900h,0FF01h
133E
133E ; =============== S U B R O U T I N E =======================================
133E
133E
133E free_game_credits:                                          ; 0880↑p 091B↑p
133E                         ld      a, (free_play)              ; We in free play?
1341                         or      a
1342                         ret     z                           ; No return if not
1343                         ld      a, (easy_hard_normal)       ; And be sure other bits is also 0
1346                         or      a
1347                         ret     z                           ; If setting is normal easy hard return
1348                         ld      a, 9                        ; Yipee free games baby! let's rock'n roll
134A                         ld      (game_credits), a
134D                         ret
134D ; End of function free_game_credits
134D
134E
134E ; =============== S U B R O U T I N E =======================================
134E
134E ; HL = [HL+a] + [HL+a+1]
134E
134E get_HL_plus_A:                                              ; 13EB↓p 20E6↓j 
134E                         rst     HL_plus_A
134F                         ld      a, (hl)                     ; Load byte at HL into A (low byte of new address)
1350                         inc     hl                          ; Move to next byte
1351                         ld      h, (hl)                     ; Load high byte of new address into H
1352                         ld      l, a                        ; Restore A (the low byte) into L
1353                         ret                                 ; Return with HL = [HL+a] + [HL+a+1] as 16-bit value
1353 ; End of function get_HL_plus_A
1353
1354
1354 ; =============== S U B R O U T I N E =======================================
1354
1354
1354 sub_1354:                                                   ; B630↓p B9C4↓p 
1354                         xor     a
1355                         ld      (byte_E025), a
1358                         ld      iy, Ralph_data
135C                         call    sub_1378
135F                         ld      a, (byte_E025)
1362                         or      a
1363                         ret     nz
1364                         ld      iy, Lizzie_data
1368                         call    sub_1378
136B                         ld      a, (byte_E025)
136E                         or      a
136F                         ret     nz
1370                         ld      iy, George_data
1374                         call    sub_1378
1377                         ret
1377 ; End of function sub_1354
1377
1378
1378 ; =============== S U B R O U T I N E =======================================
1378
1378
1378 sub_1378:                                                   ; 135C↑p 1368↑p 
1378                         ld      a, (iy+1)
137B                         cp      2
137D                         ret     nz
137E                         ld      a, (iy+21h)
1381                         cp      2
1383                         ret     c
1384                         ld      a, d
1385                         cp      0FFh
1387                         jr      z, loc_1395
1389                         ld      a, (iy+33h)
138C                         sub     d
138D                         jr      nc, loc_1391
138F                         neg
1391
1391 loc_1391:                                                   ; 138D
1391                         cp      e
1392                         ret     nc
1393                         jr      loc_139B
1395 ; ---------------------------------------------------------------------------
1395
1395 loc_1395:                                                   ; 1387
1395                         ld      a, (iy+33h)
1398                         cp      10h
139A                         ret     nc
139B
139B loc_139B:                                                   ; 1393
139B                         ld      a, (iy+32h)
139E                         sub     b
139F                         jr      nc, loc_13A3
13A1                         neg
13A3
13A3 loc_13A3:                                                   ; 139F
13A3                         cp      c
13A4                         ret     nc
13A5                         ld      a, 1
13A7                         ld      (iy+21h), a
13AA                         ld      (byte_E025), a
13AD                         ret
13AD ; End of function sub_1378
13AD
13AE
13AE ; =============== S U B R O U T I N E =======================================
13AE
13AE
13AE sub_13AE:                                                   ; 0991↑p
13AE                         ld      ix, George_data
13B2                         ld      a, (ix+1)
13B5                         call    sub_13C9
13B8                         ld      ix, Lizzie_data
13BC                         ld      a, (ix+1)
13BF                         call    sub_13C9
13C2                         ld      ix, Ralph_data
13C6                         ld      a, (ix+1)
13C6 ; End of function sub_13AE
13C6
13C9
13C9 ; =============== S U B R O U T I N E =======================================
13C9
13C9
13C9 sub_13C9:                                                   ; 13B5↑p 13BF↑p
13C9                         cp      2
13CB                         jr      z, loc_141A
13CD                         ld      a, (easy_game)
13D0                         or      a
13D1                         ret     z
13D2                         ld      a, (ix+13h)
13D5                         or      a
13D6                         ret     z
13D7                         ld      a, (ix+1)
13DA                         cp      4
13DC                         ret     z
13DD                         ld      a, (ticker_countup)
13E0                         and     1Fh
13E2                         ret     nz
13E3                         ld      a, (ix+2)
13E6                         ld      hl, off_1414
13E9                         sla     a
13EB                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
13EE                         ld      a, (ix+13h)
13F1                         dec     a
13F2                         ld      (ix+13h), a
13F5                         jr      z, loc_1401
13F7                         add     a, 30h ; '0'
13F9                         cp      3Ah ; ':'
13FB                         jr      c, loc_1403
13FD                         ld      a, 39h ; '9'
13FF                         jr      loc_1403
1401 ; ---------------------------------------------------------------------------
1401
1401 loc_1401:                                                   ; 13F5
1401                         ld      a, 20h ; ' '
1403
1403 loc_1403:                                                   ; 13FB 13FF
1403                         ld      (hl), a
1404                         inc     hl
1405                         ld      a, (ix+2)
1408                         sla     a
140A                         sla     a
140C                         sla     a
140E                         sla     a
1410                         add     a, 40h ; '@'
1412                         ld      (hl), a
1413                         ret
1413 ; ---------------------------------------------------------------------------
1414 off_1414:               dw bg_row04+0Eh                     ; 13E6↑o
1416                         dw bg_row04+20h
1418                         dw bg_row04+32h
141A ; ---------------------------------------------------------------------------
141A
141A loc_141A:                                                   ; 13CB
141A                         ld      a, (ix+36h)
141D                         sub     1
141F                         jp      p, loc_1442
1422                         ld      (ix+36h), 1Eh
1426                         ld      a, (ix+6)
1429                         add     a, 1
142B                         daa
142C                         cp      60h
142E                         jr      nz, loc_143E
1430                         ld      (ix+6), 0
1434                         ld      a, (ix+5)
1437                         add     a, 1
1439                         daa
143A                         ld      (ix+5), a
143D                         ret
143E ; ---------------------------------------------------------------------------
143E
143E loc_143E:                                                   ; 142E
143E                         ld      (ix+6), a
1441                         ret
1442 ; ---------------------------------------------------------------------------
1442
1442 loc_1442:                                                   ; 141F
1442                         ld      (ix+36h), a
1445                         ret
1445 ; End of function sub_13C9
1445
1446
1446 ; =============== S U B R O U T I N E =======================================
1446
1446
1446 sub_1446:                                                   ; 30BA↓p 34C2↓p 
1446                         inc     hl
1447                         ld      a, (hl)
1448                         dec     hl
1449                         and     30h
144B                         ret
144B ; End of function sub_1446
144B
144C ; ---------------------------------------------------------------------------
144C                         ld      de, 4
144F
144F loc_144F:                                                   ; 1465↓j
144F                         ld      a, (hl)                     ; 1st byte
1450                         inc     hl
1451                         ld      (iy+3), a                   ; x cordinate
1454                         ld      a, (hl)                     ; 2nd Byte
1455                         inc     hl
1456                         ld      (iy+0), a                   ; y cordinate
1459                         ld      a, (hl)                     ; 3rd byte
145A                         inc     hl
145B                         ld      (iy+2), a                   ; Sprite Code low bits
145E                         ld      a, (hl)                     ; 4th byte
145F                         inc     hl
1460                         ld      (iy+1), a                   ; Flags (x,y flip,palette, top bit of sprite code)
1463                         add     iy, de                      ; Next sprite
1465                         djnz    loc_144F                    ; do b loop amount
1467                         ret
1468
1468 ; =============== S U B R O U T I N E =======================================
1468
1468 ; IY to sprite base offset
1468 ; IX is player base $E49B, $E4EB and $E53B
1468
1468 super_sprite_2x2:                                           ; 2239↓p 224B↓p 
1468                         push    iy
146A                         call    sprite_2x2_cords
146D                         ld      b, 4                        ; 4 Sprites
146F                         ld      a, (ix+1Dh)                 ; Player sprite direction (0,1)
1472                         or      a
1473                         jr      z, sprite_reversed
1475                         ld      c, 3                        ; Colour palette to use for sprites and no x reverse
1477                         jr      not_reversed
1479 ; ---------------------------------------------------------------------------
1479
1479 sprite_reversed:                                            ; 1473
1479                         ld      c, 13h                      ; Sprite reversed in x and same colour palette
147B
147B not_reversed:                                               ; 1477
147B                         ld      de, 4                       ; 4 bytes / sprite entry
147E                         call    sprite_code_update
1481                         pop     iy
1483                         ret
1483 ; End of function super_sprite_2x2
1483
1484 ; ---------------------------------------------------------------------------
1484                         push    iy
1486                         call    sprite_2x3_cords            ; ; Super Sprite Layout (2x3 tiles, 4 bytes per sprite)
1486                                                             ; ; +-------------------+-------------------+
1486                                                             ; ; | (iy+0),(iy+3)     | (iy+4),(iy+7)     |  ; Box 0, Box 1
1486                                                             ; ; +-------------------+-------------------+
1486                                                             ; ; | (iy+8),(iy+0B)    | (iy+0C),(iy+0F)   |  ; Box 2, Box 3
1486                                                             ; ; +-------------------+-------------------+
1486                                                             ; ; | (iy+10),(iy+13)   | (iy+14),(iy+17)   |  ; Box 4, Box 5
1486                                                             ; ; +-------------------+-------------------+
1486                                                             ; ;  Each box = 1 sprite (Y,X,Attr,Tile)
1486                                                             ; ;  Y is bottom-to-top; X is left-to-right.
1486                                                             ;
1489                         ld      b, 6                        ; process 6 sprites
148B                         ld      a, (ix+1Eh)                 ; Player sprite direction
148E                         or      a
148F                         jr      nz, normal_direction
1491                         ld      c, 13h                      ; Reversed sprites and palette 3
1493                         jr      reversed_sprite_jump
1495 ; ---------------------------------------------------------------------------
1495
1495 normal_direction:                                           ; 148F
1495                         ld      c, 3                        ; For the player characters, we always start with palette 3 for the sprites
1497
1497 reversed_sprite_jump:                                       ; 1493
1497                         ld      de, 4                       ; Sprite add count
149A                         call    sprite_code_update
149D                         pop     iy
149F                         ret
14A0
14A0 ; =============== S U B R O U T I N E =======================================
14A0
14A0
14A0 sprite_code_update:                                         ; 147E↑p 149A↑p 
14A0                         ld      a, (hl)                     ; Get sprite code
14A1                         inc     hl                          ; Advance pointer
14A1 ; End of function sprite_code_update
14A1
14A2
14A2 ; =============== S U B R O U T I N E =======================================
14A2
14A2
14A2 player_sprite_code:                                         ; 22DA↓p 2550↓p 
14A2                         ld      (iy+2), a                   ; Save to sprite code
14A5                         ld      a, (ix+2)                   ; This is the code which says which character is being plotted
14A5                                                             ; The value 0 1 2 represent George, Lizzie Ralph
14A5                                                             ; This then puts the players sprite code $001 to a $101 or $181
14A8                         or      a
14A9                         jr      z, not_me_sprite            ; Zero means George, sprite code is base which has no extra offsets.
14AB                         set     3, c                        ; For Lizzie and Ralph we need to set the sprite code high bit
14AD                         cp      1                           ; Now check for Lizzie
14AF                         jr      z, not_me_sprite            ; If lizzie then we are all set for the code.
14B1                         ld      a, (iy+2)                   ; Get the code we just set.
14B4                         set     7, a                        ; Set top bit, because this is Ralph Sprite Set
14B6                         ld      (iy+2), a                   ; Save back to the sprite code
14B9
14B9 not_me_sprite:                                              ; 14A9 14AF
14B9                         ld      (iy+1), c                   ; Now save the sprite flag as last bit of data
14BC                         add     iy, de                      ; Move to next sprite
14BE                         djnz    sprite_code_update          ; Do all b count
14C0                         ret
14C0 ; End of function player_sprite_code
14C0
14C1
14C1 ; =============== S U B R O U T I N E =======================================
14C1
14C1 ; ; Super Sprite Layout (2x3 tiles, 4 bytes per sprite)
14C1 ; ; +-------------------+-------------------+
14C1 ; ; | (iy+0),(iy+3)     | (iy+4),(iy+7)     |  ; Box 0, Box 1
14C1 ; ; +-------------------+-------------------+
14C1 ; ; | (iy+8),(iy+0B)    | (iy+0C),(iy+0F)   |  ; Box 2, Box 3
14C1 ; ; +-------------------+-------------------+
14C1 ; ; | (iy+10),(iy+13)   | (iy+14),(iy+17)   |  ; Box 4, Box 5
14C1 ; ; +-------------------+-------------------+
14C1 ; ;  Each box = 1 sprite (Y,X,Attr,Tile)
14C1 ; ;  Y is bottom-to-top; X is left-to-right.
14C1 ;
14C1
14C1 sprite_2x3_cords:                                           ; 1486↑p
14C1                                                             ; update_2x3_box_sprites↓p
14C1                         ld      a, b                        ; Entry b=x and c=y
14C2                         ld      (iy+17h), a                 ; 6th sprite X Cord Box 5
14C5                         sub     10h                         ; x - 16
14C7                         ld      (iy+13h), a                 ; 5th sprite X Cord Box 4
14CA                         ld      a, c                        ; Get y into a
14CB                         sub     10h                         ; -16 for down
14CD                         ld      (iy+10h), a                 ; 5th sprite Y cord Box 4
14D0                         ld      (iy+14h), a                 ; 6th sprite Y cord Box 5
14D0 ; End of function sprite_2x3_cords
14D0
14D3
14D3 ; =============== S U B R O U T I N E =======================================
14D3
14D3
14D3 sprite_2x2_cords:                                           ; 146A↑p
14D3                                                             ; sprite_updater_2x2↓p
14D3                         ld      a, b                        ; get back b the x cord
14D4                         ld      (iy+7), a                   ; 2nd sprite X cord Box 1
14D7                         ld      (iy+0Fh), a                 ; 3rd sprite X cord Box 3
14DA                         sub     10h                         ; x - 16
14DC                         ld      (iy+3), a                   ; 1st sprite X cord Box 0
14DF                         ld      (iy+0Bh), a                 ; 4th sprite X cord Box 2
14E2                         ld      a, c                        ; Get back Y cord
14E3                         ld      (iy+8), a                   ; 3rd sprite Y cord Box 2
14E6                         ld      (iy+0Ch), a                 ; 4th sprite Y cord Box 3
14E9                         add     a, 10h                      ; -16 is down screen
14EB                         ld      (iy+0), a                   ; 1st sprite Y cord Box 0
14EE                         ld      (iy+4), a                   ; 2nd sprite Y cord Box 1
14F1                         ret                                 ; return
14F1 ; End of function sprite_2x2_cords
14F1
14F2
14F2 ; =============== S U B R O U T I N E =======================================
14F2
14F2
14F2 sprite_updater_2x2:                                         ; 0E15↑p 0E3B↑p 
14F2                         call    sprite_2x2_cords
14F5                         ld      b, 4                        ; Count for the sprite sprite flags and number
14F7
14F7 sprite_loop_2x2:                                            ; 1506↓j
14F7                         ld      a, (hl)                     ; Get first byte
14F8                         inc     hl                          ; Advance source
14F9                         ld      (iy+2), a                   ; Sprite number
14FC                         ld      a, (hl)                     ; Get data
14FD                         inc     hl                          ; Advance source
14FE                         ld      (iy+1), a                   ; Sprite flags etc.
1501                         ld      de, 4                       ; Next sprite 4 bytes on
1504                         add     iy, de                      ; Add to sprite index
1506                         djnz    sprite_loop_2x2
1508                         ret
1508 ; End of function sprite_updater_2x2
1508
1509
1509 ; =============== S U B R O U T I N E =======================================
1509
1509
1509 sub_1509:                                                   ; 1FCE↓p 203E↓p 
1509                         push    bc
150A                         push    de
150B                         call    get_building_number
150E                         pop     de
150F                         pop     bc
1510                         ret
1510 ; End of function sub_1509
1510
1511
1511 ; =============== S U B R O U T I N E =======================================
1511
1511
1511 get_building_number:                                        ; 150B↑p
1511                         ld      iy, Building1_data
1515                         ld      b, a
1516
1516 loc_1516:                                                   ; 1523↓j
1516                         ld      a, (iy+0)
1519                         cp      0FFh
151B                         ret     z
151C                         cp      b
151D                         ret     z
151E                         ld      de, 18h
1521                         add     iy, de
1523                         jr      loc_1516
1523 ; End of function get_building_number
1523
1525 ; ---------------------------------------------------------------------------
1525                         ld      iy, George_data
1529                         or      a
152A                         ret     z
152B                         ld      iy, Lizzie_data
152F                         cp      1
1531                         ret     z
1532                         ld      iy, Ralph_data
1536                         ret
1537
1537 ; =============== S U B R O U T I N E =======================================
1537
1537
1537 sub_1537:                                                   ; 1F64↓p
1537                         ld      iy, sprite52_y
153B                         or      a
153C                         ret     z
153D                         ld      iy, sprite54_y
1541                         cp      1
1543                         ret     z
1544                         ld      iy, sprite56_y
1548                         ret
1548 ; End of function sub_1537
1548
1549
1549 ; =============== S U B R O U T I N E =======================================
1549
1549
1549 sub_1549:                                                   ; loc_2FB9↓p
1549                                                             ; sub_2FD4↓p 
1549                         ld      a, (iy+8)
154C                         ret
154C ; End of function sub_1549
154C
154D
154D ; =============== S U B R O U T I N E =======================================
154D
154D
154D setup_all_player_data:                                      ; 08F8↑p
154D                         call    sub_5D46
1550                         ld      ix, George_data
1554                         call    clear_player_data
1557                         ld      hl, george_setup_table
155A                         call    player_setup_table
155D                         ld      ix, Lizzie_data
1561                         call    clear_player_data
1564                         ld      hl, lizzie_setup_table
1567                         call    player_setup_table
156A                         ld      ix, Ralph_data
156E                         call    clear_player_data
1571                         ld      hl, ralph_setup_table
1574                         call    player_setup_table
1577                         ret
1577 ; End of function setup_all_player_data
1577
1578
1578 ; =============== S U B R O U T I N E =======================================
1578
1578
1578 clear_player_data:                                          ; 1554↑p 1561↑p 
1578                         push    ix
157A                         pop     hl
157B                         ld      a, 8                        ; Skip first 8 bytes of players data
157D                         rst     HL_plus_A
157E                         ld      b, 48h ; 'H'                ; Each player has $50 bytes for it's data variables
1580                         jr      clear_data_loop
1580 ; End of function clear_player_data
1580
1582
1582 ; =============== S U B R O U T I N E =======================================
1582
1582
1582 clear_play_data_end:                                        ; 16CF↓p
1582                         push    ix
1584                         pop     hl
1585                         ld      a, 1Fh                      ; Here skips the first $1f bytes of player data
1587                         rst     HL_plus_A
1588                         ld      b, 31h ; '1'                ; Remainder of what's left from $50 - $1f is $31!
158A
158A clear_data_loop:                                            ; 1580 158D↓j
158A                         ld      (hl), 0
158C                         inc     hl
158D                         djnz    clear_data_loop
158F                         ret
158F ; End of function clear_play_data_end
158F
1590 ; ---------------------------------------------------------------------------
1590 ; START OF FUNCTION CHUNK FOR player_setup_table
1590
1590 loc_1590:                                                   ; 15B5↓j
1590                         ld      (ix+1), 0
1594                         ld      (ix+4), 0
1598                         ret
1598 ; END OF FUNCTION CHUNK FOR player_setup_table
1599
1599 ; =============== S U B R O U T I N E =======================================
1599
1599
1599 player_setup_table:                                         ; 155A↑p 1567↑p 
1599
1599 ; FUNCTION CHUNK AT 1590 SIZE 00000009 BYTES
1599
1599                         ld      a, (hl)
159A                         inc     hl
159B                         ld      (ix+0Ah), a
159E                         ld      (ix+1Ah), a
15A1                         ld      a, (hl)
15A2                         ld      (ix+2), a
15A5                         inc     hl
15A6                         ld      a, (sound_enable)
15A9                         or      a
15AA                         jr      nz, loc_15B7
15AC                         ld      a, (ix+1)
15AF                         cp      1
15B1                         jr      z, loc_15B7
15B3                         cp      2
15B5                         jr      nz, loc_1590
15B7
15B7 loc_15B7:                                                   ; 15AA 15B1
15B7                         ld      (ix+4), 1
15B7 ; End of function player_setup_table
15B7
15BB
15BB ; =============== S U B R O U T I N E =======================================
15BB
15BB
15BB sub_15BB:                                                   ; 16DA↓p
15BB                         ld      a, (hl)
15BC                         inc     hl
15BD                         ld      (ix+8), a
15C0                         ld      a, (hl)
15C1                         ld      (ix+16h), a
15C4                         inc     hl
15C5                         ld      a, (hl)
15C6                         ld      (ix+17h), a
15C9                         inc     hl
15CA                         ld      a, (hl)
15CB                         ld      (ix+19h), a
15CE                         inc     hl
15CF                         ld      a, (hl)
15D0                         ld      (ix+1Dh), a                 ; Player sprite direction (0,1)
15D3                         inc     hl
15D4                         ld      a, (ix+1)
15D7                         cp      2
15D9                         jr      z, loc_15F0
15DB                         ld      a, (hl)
15DC                         ld      (ix+3), a
15DF                         ld      (ix+7), 1
15E3                         ld      (ix+1), 2
15E7                         ld      (ix+5), 0
15EB                         ld      (ix+6), 0
15EF                         ret
15F0 ; ---------------------------------------------------------------------------
15F0
15F0 loc_15F0:                                                   ; 15D9
15F0                         ld      a, (ix+3)
15F3                         cp      4
15F5                         ret     nc
15F6                         ld      a, 4
15F8                         ld      (ix+3), a
15FB                         ret
15FB ; End of function sub_15BB
15FB
15FB ; ---------------------------------------------------------------------------
15FC george_setup_table:     db  17h,   0, 38h,   1,   0,   4,   1,0C8h ; 1557↑o
1604 lizzie_setup_table:     db  19h,   1, 80h,   1,   0,   4,   1,0C8h ; 1564↑o
160C ralph_setup_table:      db  1Ah,   2,0C8h,   1,   0,   4,   1,0C8h ; 1571↑o
1614
1614 ; =============== S U B R O U T I N E =======================================
1614
1614
1614 sub_1614:                                                   ; 0BEA↑p
1614                         ld      ix, George_data
1618                         ld      hl, byte_169A
161B                         ld      a, (ix+1)
161E                         cp      1
1620                         jr      nz, loc_162E
1622                         call    sub_16CE
1625                         jr      z, loc_162E
1627                         ld      iy, sprite52_y
162B                         call    sub_1661
162E
162E loc_162E:                                                   ; 1620 1625
162E                         ld      ix, Lizzie_data
1632                         ld      hl, byte_16A0
1635                         ld      a, (ix+1)
1638                         cp      1
163A                         jr      nz, loc_1648
163C                         call    sub_16CE
163F                         jr      z, loc_1648
1641                         ld      iy, sprite54_y
1645                         call    sub_1661
1648
1648 loc_1648:                                                   ; 163A 163F
1648                         ld      ix, Ralph_data
164C                         ld      hl, byte_16A6
164F                         ld      a, (ix+1)
1652                         cp      1
1654                         ret     nz
1655                         call    sub_16CE
1658                         ret     z
1659                         ld      iy, sprite56_y
165D                         call    sub_1661
1660                         ret
1660 ; End of function sub_1614
1660
1661
1661 ; =============== S U B R O U T I N E =======================================
1661
1661
1661 sub_1661:                                                   ; 162B↑p 1645↑p 
1661                         ld      (ix+0Ah), 0ACh
1665                         ld      (ix+3Ch), 1
1669                         ld      (iy+0), 0F0h
166D                         ld      (iy+74h), 0F0h
1671                         ld      (iy+78h), 0E0h
1675                         ld      (iy+3), 8
1679                         ld      (iy+77h), 18h
167D                         ld      (iy+7Bh), 10h
1681                         ld      (iy+1), 13h
1685                         ld      (iy+75h), 13h
1689                         ld      (iy+79h), 13h
168D                         ld      (iy+2), 0BBh
1691                         ld      (iy+76h), 0BAh
1695                         ld      (iy+7Ah), 0BCh
1699                         ret
1699 ; End of function sub_1661
1699
1699 ; ---------------------------------------------------------------------------
169A byte_169A:              db  14h, 0Dh,   0,   2,   0,0C8h    ; 1618↑o
16A0 byte_16A0:              db  14h, 0Dh,   0,   2,   0,0C8h    ; 1632↑o
16A6 byte_16A6:              db  14h, 0Dh,   0,   2,   0,0C8h    ; 164C↑o
16AC ; ---------------------------------------------------------------------------
16AC ; START OF FUNCTION CHUNK FOR sub_16CE
16AC
16AC loc_16AC:                                                   ; 16D8↓j
16AC                         ld      (ix+16h), 1
16B0                         ld      (ix+3), 0C8h
16B4                         ld      (ix+5), 0
16B8                         ld      (ix+6), 0
16BC                         ld      (ix+7), 1
16C0                         ld      (ix+1), 50h ; 'P'
16C4                         ld      (ix+0Ah), 1Ah
16C8                         ld      (ix+4), 2
16CC                         xor     a
16CD                         ret
16CD ; END OF FUNCTION CHUNK FOR sub_16CE
16CE
16CE ; =============== S U B R O U T I N E =======================================
16CE
16CE
16CE sub_16CE:                                                   ; 1622↑p 163C↑p 
16CE
16CE ; FUNCTION CHUNK AT 16AC SIZE 00000022 BYTES
16CE
16CE                         push    hl
16CF                         call    clear_play_data_end
16D2                         pop     hl
16D3                         ld      a, (ix+16h)
16D6                         cp      0Bh
16D8                         jr      z, loc_16AC
16DA                         call    sub_15BB
16DD                         ld      (ix+1), 5
16E1                         ld      (ix+7), 1
16E5                         ld      (ix+1Fh), 2Dh ; '-'
16E9                         ld      (ix+4), 2
16ED                         ld      c, 17
16EF                         rst     dispatch_sound
16F0                         ld      a, 1
16F2                         or      a
16F3                         ret
16F3 ; End of function sub_16CE
16F3
16F4
16F4 ; =============== S U B R O U T I N E =======================================
16F4
16F4
16F4 clear_all_players_data:                                     ; loc_8B9↑p
16F4                         ld      ix, George_data
16F8                         call    reset_player_data
16FB                         ld      (ix+2), 0
16FF                         ld      ix, Lizzie_data
1703                         call    reset_player_data
1706                         ld      (ix+2), 1
170A                         ld      ix, Ralph_data
170E                         call    reset_player_data
1711                         ld      (ix+2), 2
1715                         ret
1715 ; End of function clear_all_players_data
1715
1716
1716 ; =============== S U B R O U T I N E =======================================
1716
1716
1716 reset_player_data:                                          ; 16F8↑p 1703↑p 
1716                         push    ix
1718                         pop     hl
1719                         ld      b, 80                       ; 80 bytes / player data set
171B
171B reset_loop:                                                 ; 171E↓j
171B                         ld      (hl), 0                     ; Clear with a big fat zero
171D                         inc     hl                          ; Advance pointer
171E                         djnz    reset_loop                  ; Super Loopy we love you
1720                         ret
1720 ; End of function reset_player_data
1720
1721
1721 ; =============== S U B R O U T I N E =======================================
1721
1721
1721 sub_1721:                                                   ; 09A0↑p
1721                         ld      ix, George_data
1725                         call    sub_1C37
1728                         ld      ix, Lizzie_data
172C                         call    sub_1C37
172F                         ld      ix, Ralph_data
1733                         call    sub_1C37
1736                         ret
1736 ; End of function sub_1721
1736
1737
1737 ; =============== S U B R O U T I N E =======================================
1737
1737
1737 sub_1737:                                                   ; 0994↑p
1737                         ld      ix, George_data
173B                         call    sub_173F
173E                         ret
173E ; End of function sub_1737
173E
173F
173F ; =============== S U B R O U T I N E =======================================
173F
173F
173F sub_173F:                                                   ; 173B↑p 187D↓p 
173F
173F ; FUNCTION CHUNK AT 185D SIZE 0000001C BYTES
173F ; FUNCTION CHUNK AT 1888 SIZE 0000007F BYTES
173F ; FUNCTION CHUNK AT 1943 SIZE 00000117 BYTES
173F ; FUNCTION CHUNK AT 1AF6 SIZE 00000009 BYTES
173F
173F                         xor     a
1740                         ld      (temp_counter), a
1743                         call    sub_1AFF
1746                         ld      a, (ix+1)
1749                         cp      2
174B                         jr      nz, loc_1787
174D                         ld      a, (ix+37h)
1750                         or      a
1751                         jr      z, loc_176B
1753                         ld      a, (ix+2Bh)
1756                         cp      0Ah
1758                         jr      nc, loc_176B
175A                         ld      a, (ix+3)
175D                         sub     2
175F                         cp      0DCh
1761                         jr      c, loc_1764
1763                         xor     a
1764
1764 loc_1764:                                                   ; 1761
1764                         ld      (ix+3), a
1767                         ld      (ix+37h), 0
176B
176B loc_176B:                                                   ; 1751 1758
176B                         ld      a, (ix+3)
176E                         or      a
176F                         jp      z, loc_1888
1772                         cp      0F5h
1774                         jr      c, loc_177D
1776                         ld      (ix+3), 0
177A                         jp      loc_1888
177D ; ---------------------------------------------------------------------------
177D
177D loc_177D:                                                   ; 1774
177D                         call    sub_2028
1780                         call    sub_1FC9
1783                         call    sub_2AA5
1786                         ret
1787 ; ---------------------------------------------------------------------------
1787
1787 loc_1787:                                                   ; 174B
1787                         cp      50h ; 'P'
1789                         jp      z, loc_1943
178C                         cp      5
178E                         jp      z, loc_17AF
1791                         cp      4
1793                         jp      z, loc_195F
1796                         cp      7
1798                         jp      z, loc_18F2
179B                         cp      3
179D                         ret     nz
179E                         ld      a, (ix+1Fh)
17A1                         dec     a
17A2                         ld      (ix+1Fh), a
17A5                         ret     nz
17A6                         ld      (ix+1), 0
17AA                         ld      (ix+16h), 1
17AE                         ret
17AF ; ---------------------------------------------------------------------------
17AF
17AF loc_17AF:                                                   ; 178E
17AF                         call    sub_17C1
17B2                         call    sub_17D6
17B5                         ld      a, (ix+16h)
17B8                         cp      0Dh
17BA                         jp      nz, loc_185D
17BD                         call    sub_1838
17C0                         ret
17C0 ; End of function sub_173F
17C0
17C1
17C1 ; =============== S U B R O U T I N E =======================================
17C1
17C1
17C1 sub_17C1:                                                   ; loc_17AF↑p
17C1                         ld      iy, sprite52_y
17C5                         ld      a, (ix+2)
17C8                         or      a
17C9                         ret     z
17CA                         ld      iy, sprite54_y
17CE                         cp      1
17D0                         ret     z
17D1                         ld      iy, sprite56_y
17D5                         ret
17D5 ; End of function sub_17C1
17D5
17D6
17D6 ; =============== S U B R O U T I N E =======================================
17D6
17D6
17D6 sub_17D6:                                                   ; 17B2↑p
17D6                         ld      a, (ix+3Ch)
17D9                         or      a
17DA                         ret     z
17DB                         ld      b, 1
17DD                         ld      a, (ix+16h)
17E0                         cp      0Dh
17E2                         jr      z, loc_17E5
17E4                         inc     b
17E5
17E5 loc_17E5:                                                   ; 17E2
17E5                         ld      a, (iy+3)
17E8                         inc     a
17E9                         cp      0FDh
17EB                         jr      nc, loc_1827
17ED                         ld      (iy+3), a
17F0                         add     a, 10h
17F2                         ld      (iy+77h), a
17F5                         sub     8
17F7                         ld      (iy+7Bh), a
17FA                         ld      a, b
17FB                         cp      1
17FD                         jr      z, loc_1813
17FF                         ld      a, (iy+0)
1802                         add     a, 1
1804                         cp      0Eh
1806                         jr      c, loc_1827
1808                         ld      (iy+0), a
180B                         ld      (iy+74h), a
180E                         sub     10h
1810                         ld      (iy+78h), a
1813
1813 loc_1813:                                                   ; 17FD
1813                         ld      a, (iy+0)
1816                         cp      3
1818                         jr      nc, loc_1822
181A                         ld      (iy+2), 0
181E                         ld      (iy+6), 0
1822
1822 loc_1822:                                                   ; 1818
1822                         ld      (iy+7Ah), 0BCh
1826                         ret
1827 ; ---------------------------------------------------------------------------
1827
1827 loc_1827:                                                   ; 17EB 1806
1827                         rst     clear_all_sprite
1828                         ld      de, 70h ; 'p'
182B                         add     iy, de
182D                         ld      b, 2
182F                         rst     do_sprite_clear_loop
1830                         ld      (ix+3Ch), 0
1834                         ld      c, 2
1836                         rst     dispatch_sound
1837                         ret
1837 ; End of function sub_17D6
1837
1838
1838 ; =============== S U B R O U T I N E =======================================
1838
1838
1838 sub_1838:                                                   ; 17BD↑p
1838                         ld      hl, byte_185A
183B                         ld      a, (ix+2)
183E                         rst     HL_plus_A
183F                         ld      b, (hl)
1840                         ld      a, (ix+8)
1843                         add     a, 1
1845                         ld      (ix+8), a
1848                         cp      b
1849                         ret     c
184A                         ld      (ix+0Dh), 0
184E                         ld      (ix+0Ch), 0
1852                         ld      c, 55
1854                         rst     dispatch_sound
1855                         ld      (ix+16h), 8
1859                         ret
1859 ; End of function sub_1838
1859
1859 ; ---------------------------------------------------------------------------
185A byte_185A:              db  38h, 80h,0C8h                   ; sub_1838↑o
185D ; ---------------------------------------------------------------------------
185D ; START OF FUNCTION CHUNK FOR sub_173F
185D
185D loc_185D:                                                   ; 17BA
185D                         ld      (ix+25h), 1
1861                         ld      (ix+1Fh), 0
1865                         ld      de, 0FD00h
1868                         call    sub_1C4D
186B                         call    sub_3579
186E                         ld      a, (ix+16h)
1871                         cp      1
1873                         ret     nz
1874                         ld      (ix+1), 2
1878                         ret
1878 ; END OF FUNCTION CHUNK FOR sub_173F
1879
1879 ; =============== S U B R O U T I N E =======================================
1879
1879
1879 sub_1879:                                                   ; 0997↑p
1879                         ld      ix, Lizzie_data
187D                         call    sub_173F
1880                         ret
1880 ; End of function sub_1879
1880
1881
1881 ; =============== S U B R O U T I N E =======================================
1881
1881
1881 sub_1881:                                                   ; 099A↑p
1881                         ld      ix, Ralph_data
1885                         jp      sub_173F
1885 ; End of function sub_1881
1885
1888 ; ---------------------------------------------------------------------------
1888 ; START OF FUNCTION CHUNK FOR sub_173F
1888
1888 loc_1888:                                                   ; 176F 177A
1888                         ld      a, (ix+4Eh)
188B                         or      a
188C                         jr      z, loc_1892
188E                         xor     a
188F                         ld      (unk_E00C), a
1892
1892 loc_1892:                                                   ; 188C
1892                         ld      (ix+13h), 6
1896                         ld      (ix+4), 3
189A                         ld      a, (ix+0Ah)
189D                         cp      1Eh
189F                         jr      c, loc_18C2
18A1                         ld      (ix+1), 4
18A5                         ld      (ix+16h), 5
18A9                         ld      (ix+0Ch), 0
18AD                         ld      (ix+0Dh), 0
18B1                         ld      (ix+0Eh), 0FEh
18B5                         ld      (ix+0Fh), 0
18B9                         ld      (ix+1Fh), 0Ah
18BD                         ld      (ix+20h), 1
18C1                         ret
18C2 ; ---------------------------------------------------------------------------
18C2
18C2 loc_18C2:                                                   ; 189F
18C2                         ld      (ix+1), 4
18C6                         ld      (ix+16h), 0Ch
18CA                         ld      (ix+0Ch), 0
18CE                         ld      (ix+0Dh), 0
18D2                         ld      (ix+0Fh), 0
18D6                         ld      (ix+0Eh), 0
18DA                         ld      (ix+1Fh), 1Eh
18DE                         ld      (ix+20h), 0
18E2                         ld      (ix+0Ah), 1Ah
18E6                         call    sub_2162
18E9                         ld      a, (ix+43h)
18EC                         ld      c, 102
18EE                         or      a
18EF                         ret     z
18F0                         rst     dispatch_sound
18F1                         ret
18F2 ; ---------------------------------------------------------------------------
18F2
18F2 loc_18F2:                                                   ; 1798
18F2                         ld      a, (ix+1Fh)
18F5                         dec     a
18F6                         ld      (ix+1Fh), a
18F9                         ret     nz
18FA                         ld      (ix+1), 3
18FE                         ld      (ix+16h), 1
1902                         ld      (ix+1Fh), 0C8h
1906                         ret
1906 ; END OF FUNCTION CHUNK FOR sub_173F
1907
1907 ; =============== S U B R O U T I N E =======================================
1907
1907
1907 sub_1907:                                                   ; 196B↓p
1907                         ld      de, 7
190A                         ld      hl, george_score
190D                         ld      iy, unk_E638
1911                         ld      a, (ix+2)
1914                         or      a
1915                         jr      z, loc_191D
1917                         ld      b, a
1918
1918 loc_1918:                                                   ; 191B↓j
1918                         add     iy, de
191A                         add     hl, de
191B                         djnz    loc_1918
191D
191D loc_191D:                                                   ; 1915
191D                         ld      b, 7
191F                         ld      (ix+4Ah), 0
1923                         push    hl
1924                         push    iy
1926
1926 loc_1926:                                                   ; 1931↓j
1926                         ld      a, (hl)
1927                         cp      (iy+0)
192A                         jr      c, loc_193F
192C                         jr      nz, loc_1933
192E                         inc     hl
192F                         inc     iy
1931                         djnz    loc_1926
1933
1933 loc_1933:                                                   ; 192C
1933                         ld      (ix+4Ah), 1
1937                         pop     de
1938                         pop     hl
1939                         ld      bc, 7
193C                         ldir
193E                         ret
193F ; ---------------------------------------------------------------------------
193F
193F loc_193F:                                                   ; 192A
193F                         pop     hl
1940                         pop     iy
1942                         ret
1942 ; End of function sub_1907
1942
1943 ; ---------------------------------------------------------------------------
1943 ; START OF FUNCTION CHUNK FOR sub_173F
1943
1943 loc_1943:                                                   ; 1789
1943                         ld      a, (ix+1Fh)
1946                         inc     a
1947                         cp      5Ah ; 'Z'
1949                         ld      (ix+1Fh), a
194C                         jr      c, loc_1958
194E                         ret     c
194F                         ld      (ix+1), 2
1953                         ld      (ix+16h), 1
1957                         ret
1958 ; ---------------------------------------------------------------------------
1958
1958 loc_1958:                                                   ; 194C
1958                         cp      0Ah
195A                         ret     nz
195B                         ld      c, 92
195D                         rst     dispatch_sound
195E                         ret
195F ; ---------------------------------------------------------------------------
195F
195F loc_195F:                                                   ; 1793
195F                         ld      a, (ix+49h)
1962                         or      a
1963                         jr      nz, loc_1970
1965                         ld      (ix+49h), 1
1969                         push    iy
196B                         call    sub_1907
196E                         pop     iy
1970
1970 loc_1970:                                                   ; 1963
1970                         ld      a, (ix+16h)
1973                         cp      5
1975                         jp      z, loc_1A16
1978                         ld      a, (ix+43h)
197B                         or      a
197C                         jr      z, loc_198C
197E                         call    sub_2121
1981                         ld      a, (ix+43h)
1984                         or      a
1985                         ld      c, 102
1987                         jr      nz, loc_1998
1989                         rst     dispatch_sound
198A                         jr      loc_1998
198C ; ---------------------------------------------------------------------------
198C
198C loc_198C:                                                   ; 197C
198C                         call    sub_2162
198F                         ld      a, (ix+43h)
1992                         or      a
1993                         jr      z, loc_1998
1995                         ld      c, 102
1997                         rst     dispatch_sound
1998
1998 loc_1998:                                                   ; 1987 198A 
1998                         ld      a, (ix+16h)
199B                         cp      0Ch
199D                         jr      z, loc_1A09
199F                         cp      9
19A1                         jp      z, loc_1A37
19A4                         ld      a, (ix+43h)
19A7                         or      a
19A8                         jr      nz, loc_19DC
19AA                         call    sub_1A5A
19AD                         ld      a, (ix+1)
19B0                         cp      3
19B2                         ret     z
19B3                         cp      7
19B5                         ret     z
19B6                         ld      a, (ix+1Fh)
19B9                         inc     a
19BA                         and     7
19BC                         ld      (ix+1Fh), a
19BF                         ret     nz
19C0                         ld      a, (ix+8)
19C3                         cp      80h
19C5                         jr      c, loc_19FF
19C7                         add     a, 4
19C9                         ld      (ix+8), a
19CC                         cp      8
19CE                         ret     nc
19CF
19CF loc_19CF:                                                   ; 19F4↓j 19FD↓j 
19CF                         ld      (ix+1), 3
19D3                         ld      (ix+1Fh), 0FFh
19D7                         ld      (ix+16h), 1
19DB                         ret
19DC ; ---------------------------------------------------------------------------
19DC
19DC loc_19DC:                                                   ; 19A8
19DC                         ld      a, (ix+1Fh)
19DF                         inc     a
19E0                         and     3
19E2                         ld      (ix+1Fh), a
19E5                         ret     nz
19E6                         ld      a, (ix+8)
19E9                         cp      80h
19EB                         jr      c, loc_19F6
19ED                         inc     a
19EE                         ld      (ix+8), a
19F1                         cp      8
19F3                         ret     nc
19F4                         jr      loc_19CF
19F6 ; ---------------------------------------------------------------------------
19F6
19F6 loc_19F6:                                                   ; 19EB
19F6                         dec     a
19F7                         ld      (ix+8), a
19FA                         cp      0F8h
19FC                         ret     c
19FD                         jr      loc_19CF
19FF ; ---------------------------------------------------------------------------
19FF
19FF loc_19FF:                                                   ; 19C5
19FF                         sub     4
1A01                         ld      (ix+8), a
1A04                         cp      0F8h
1A06                         ret     c
1A07                         jr      loc_19CF
1A09 ; ---------------------------------------------------------------------------
1A09
1A09 loc_1A09:                                                   ; 199D
1A09                         ld      a, (ix+1Fh)
1A0C                         cp      1
1A0E                         jp      z, loc_1AF6
1A11                         dec     a
1A12                         ld      (ix+1Fh), a
1A15                         ret
1A16 ; ---------------------------------------------------------------------------
1A16
1A16 loc_1A16:                                                   ; 1975
1A16                         ld      (ix+1Fh), 3
1A1A                         call    sub_3726
1A1D                         call    sub_1C47
1A20                         ld      a, (ix+16h)
1A23                         cp      0Ch
1A25                         ret     nz
1A26                         call    sub_2162
1A29                         ld      a, (ix+46h)
1A2C                         cp      0A4h
1A2E                         ret     nz
1A2F                         ld      (ix+46h), 8Fh
1A33                         ld      c, 102
1A35                         rst     dispatch_sound
1A36                         ret
1A37 ; ---------------------------------------------------------------------------
1A37
1A37 loc_1A37:                                                   ; 19A1
1A37                         ld      a, (ix+1Fh)
1A3A                         cp      1
1A3C                         jr      z, loc_1A51
1A3E                         dec     a
1A3F                         ld      (ix+1Fh), a
1A42                         cp      80h
1A44                         jr      z, loc_1A4D
1A46                         cp      32h ; '2'
1A48                         ret     nz
1A49                         ld      c, 93
1A4B                         rst     dispatch_sound
1A4C                         ret
1A4D ; ---------------------------------------------------------------------------
1A4D
1A4D loc_1A4D:                                                   ; 1A44
1A4D                         ld      c, 92
1A4F                         rst     dispatch_sound
1A50                         ret
1A51 ; ---------------------------------------------------------------------------
1A51
1A51 loc_1A51:                                                   ; 1A3C
1A51                         ld      (ix+16h), 0Bh
1A55                         ld      (ix+1Fh), 0
1A59                         ret
1A59 ; END OF FUNCTION CHUNK FOR sub_173F
1A5A
1A5A ; =============== S U B R O U T I N E =======================================
1A5A
1A5A
1A5A sub_1A5A:                                                   ; 19AA↑p
1A5A                         ld      a, (ix+2)
1A5D                         or      a
1A5E                         jr      z, loc_1A96
1A60                         cp      1
1A62                         jr      z, loc_1A7D
1A64                         ld      iy, George_data
1A68                         call    sub_1AAF
1A6B                         ld      a, (ix+1)
1A6E                         cp      4
1A70                         ret     nz
1A71                         ld      (ix+0Ah), 1Ah
1A75                         ld      iy, Lizzie_data
1A79                         call    sub_1AAF
1A7C                         ret
1A7D ; ---------------------------------------------------------------------------
1A7D
1A7D loc_1A7D:                                                   ; 1A62
1A7D                         ld      iy, George_data
1A81                         call    sub_1AAF
1A84                         ld      a, (ix+1)
1A87                         cp      4
1A89                         ret     nz
1A8A                         ld      (ix+0Ah), 1Ah
1A8E                         ld      iy, Ralph_data
1A92                         call    sub_1AAF
1A95                         ret
1A96 ; ---------------------------------------------------------------------------
1A96
1A96 loc_1A96:                                                   ; 1A5E
1A96                         ld      iy, Lizzie_data
1A9A                         call    sub_1AAF
1A9D                         ld      a, (ix+1)
1AA0                         cp      4
1AA2                         ret     nz
1AA3                         ld      (ix+0Ah), 1Ah
1AA7                         ld      iy, Ralph_data
1AAB                         call    sub_1AAF
1AAE                         ret
1AAE ; End of function sub_1A5A
1AAE
1AAF
1AAF ; =============== S U B R O U T I N E =======================================
1AAF
1AAF
1AAF sub_1AAF:                                                   ; 1A68↑p 1A79↑p 
1AAF                         ld      a, (iy+1)
1AB2                         cp      2
1AB4                         ret     nz
1AB5                         ld      a, (iy+21h)
1AB8                         cp      5
1ABA                         ret     z
1ABB                         cp      2
1ABD                         ret     c
1ABE                         ld      a, (iy+33h)
1AC1                         cp      22h ; '"'
1AC3                         ret     nc
1AC4                         ld      a, (iy+32h)
1AC7                         sub     (ix+8)
1ACA                         jr      nc, loc_1ACE
1ACC                         neg
1ACE
1ACE loc_1ACE:                                                   ; 1ACA
1ACE                         cp      9
1AD0                         ret     nc
1AD1                         ld      (iy+21h), 1
1AD5                         ld      (ix+1), 7
1AD9                         ld      (ix+1Fh), 3Ch ; '<'
1ADD                         ld      (ix+13h), 0Ah
1AE1                         ld      c, 59
1AE3                         rst     dispatch_sound
1AE4                         ld      (iy+2Bh), 51h ; 'Q'
1AE8                         ld      (iy+1Bh), 3Ch ; '<'
1AEC                         call    sub_53A9
1AEF                         ld      hl, score_1000
1AF2                         call    score_add_saveREGs
1AF5                         ret
1AF5 ; End of function sub_1AAF
1AF5
1AF6 ; ---------------------------------------------------------------------------
1AF6 ; START OF FUNCTION CHUNK FOR sub_173F
1AF6
1AF6 loc_1AF6:                                                   ; 1A0E
1AF6                         ld      (ix+16h), 9
1AFA                         ld      (ix+1Fh), 84h
1AFE                         ret
1AFE ; END OF FUNCTION CHUNK FOR sub_173F
1AFF
1AFF ; =============== S U B R O U T I N E =======================================
1AFF
1AFF
1AFF sub_1AFF:                                                   ; 1743↑p
1AFF
1AFF ; FUNCTION CHUNK AT 1BF3 SIZE 00000044 BYTES
1AFF
1AFF                         ld      a, (sound_enable)
1B02                         or      a
1B03                         jp      nz, loc_1BF3
1B06                         ld      a, (ix+4Eh)
1B09                         or      a
1B0A                         jr      z, loc_1B15
1B0C                         cp      0FFh
1B0E                         ret     z
1B0F                         ld      hl, score_15
1B12                         call    add_to_score
1B15
1B15 loc_1B15:                                                   ; 1B0A
1B15                         call    player_movements
1B18                         ld      b, a
1B19                         ld      a, (ix+43h)
1B1C                         or      a
1B1D                         jr      nz, loc_1B30
1B1F                         ld      a, (ix+21h)
1B22                         or      a
1B23                         jr      z, loc_1B30
1B25                         ld      a, b
1B26                         and     10h
1B28                         ret     nz
1B29                         ld      a, (ix+14h)
1B2C                         and     0Fh
1B2E                         jr      loc_1B31
1B30 ; ---------------------------------------------------------------------------
1B30
1B30 loc_1B30:                                                   ; 1B1D 1B23
1B30                         ld      a, b
1B31
1B31 loc_1B31:                                                   ; 1B2E 1C1D↓j 
1B31                         ld      (ix+14h), a
1B34                         and     0Fh
1B36                         cp      3
1B38                         jr      c, loc_1B4B
1B3A                         cp      4
1B3C                         jr      z, loc_1B45
1B3E                         cp      8
1B40                         jr      z, loc_1B49
1B42                         xor     a
1B43                         jr      loc_1B4B
1B45 ; ---------------------------------------------------------------------------
1B45
1B45 loc_1B45:                                                   ; 1B3C
1B45                         ld      a, 3
1B47                         jr      loc_1B4B
1B49 ; ---------------------------------------------------------------------------
1B49
1B49 loc_1B49:                                                   ; 1B40
1B49                         ld      a, 4
1B4B
1B4B loc_1B4B:                                                   ; 1B38 1B43 
1B4B                         ld      (ix+15h), a
1B4E                         ret
1B4E ; End of function sub_1AFF
1B4E
1B4F
1B4F ; =============== S U B R O U T I N E =======================================
1B4F
1B4F ; Dispatches to movement handling routine based on player index:
1B4F ;    0 = George  --> get_george_moves
1B4F ;    1 = Lizzie  --> get_lizzie_moves
1B4F ;    2 = Ralph   --> (fall through to next code block)
1B4F ;
1B4F
1B4F player_movements:                                           ; loc_1B15↑p
1B4F                         ld      a, (ix+2)                   ; Get the current player index
1B52                         or      a                           ; Check if player is 0 (George)
1B53                         jr      z, get_george_moves         ; If player 0, branch to George's movement handler
1B55                         dec     a                           ; Decrement A: 1 becomes 0, 2 becomes 1
1B56                         jr      z, get_lizzie_moves         ; If player 1, branch to Lizzie's movement handler
1B56                                                             ; If not 0 or 1, must be player 2 (Ralph)
1B58                         in      a, (4)                      ; Player 3 Ralph Control Bits (Port 3, after inversion: 1=pressed)
1B58                                                             ;  Bit 0: P3_UP
1B58                                                             ;  Bit 1: P3_RIGHT
1B58                                                             ;  Bit 2: P3_DOWN
1B58                                                             ;  Bit 3: P3_LEFT
1B58                                                             ;  Bit 4: P3_BUTTON1 (Punch)
1B58                                                             ;  Bit 5: P3_BUTTON2 (Jump)
1B58                                                             ;  Bit 6: Unused
1B58                                                             ;  Bit 7: Sound_Status
1B5A                         cpl                                 ; Active Low, So invert
1B5B                         ld      b, a                        ; Copy into b
1B5C                         and     0Fh                         ; Get just direction control
1B5E                         jr      z, uni_direction1
1B60                         cp      1                           ; P3_UP only
1B62                         jr      z, uni_direction1
1B64                         cp      2                           ; P3_RIGHT only
1B66                         jr      z, uni_direction1
1B68                         cp      4                           ; P3_DOWN only
1B6A                         jr      z, uni_direction1
1B6C                         cp      8                           ; P3_LEFT only
1B6E                         jr      z, uni_direction1
1B70                         cp      3                           ; P3_UP + P3_RIGHT (diagonal up-right)
1B72                         jr      z, right_diag1
1B74                         cp      6                           ; P3_RIGHT + P3_DOWN (diagonal down-right)
1B76                         jr      z, diag1_left
1B78                         cp      0Ch                         ; P3_DOWN + P3_LEFT (diagonal down-left)
1B7A                         jr      z, left_diag1               ; P3_UP + P3_LEFT (diagonal up-left)
1B7C                         cp      9
1B7E                         jr      z, diag2_right
1B80
1B80 no_direction:                                               ; 1BF0↓j
1B80                         ld      a, (ix+14h)
1B83
1B83 set_direction_exit:                                         ; 1B8B↓j 1B8F↓j 
1B83                         ld      c, a
1B84                         ld      a, b
1B85                         and     0F0h
1B87                         or      c
1B88                         ret
1B89 ; ---------------------------------------------------------------------------
1B89
1B89 diag2_right:                                                ; 1B7E 1BDE↓j
1B89                         ld      a, 1
1B8B                         jr      set_direction_exit
1B8D ; ---------------------------------------------------------------------------
1B8D
1B8D right_diag1:                                                ; 1B72 1BB5↓j 
1B8D                         ld      a, 2
1B8F                         jr      set_direction_exit
1B91 ; ---------------------------------------------------------------------------
1B91
1B91 diag1_left:                                                 ; 1B76 1BE8↓j
1B91                         ld      a, 4
1B93                         jr      set_direction_exit
1B95 ; ---------------------------------------------------------------------------
1B95
1B95 left_diag1:                                                 ; 1B7A 1BBD↓j 
1B95                         ld      a, 8
1B97                         jr      set_direction_exit
1B99 ; ---------------------------------------------------------------------------
1B99
1B99 uni_direction1:                                             ; 1B5E 1B62 
1B99                         ld      a, b                        ; Routine exit: return value in B
1B9A                         ret                                 ; Return full input value (previously stored)
1B9B ; ---------------------------------------------------------------------------
1B9B
1B9B get_lizzie_moves:                                           ; 1B56
1B9B                         in      a, (2)                      ;  Player 2 Lizzie Control Bits (Port 2, after inversion: 1=pressed)
1B9B                                                             ;  Bit 0: P2_UP
1B9B                                                             ;  Bit 1: P2_RIGHT
1B9B                                                             ;  Bit 2: P2_DOWN
1B9B                                                             ;  Bit 3: P2_LEFT
1B9B                                                             ;  Bit 4: P2_BUTTON1 (Punch)
1B9B                                                             ;  Bit 5: P2_BUTTON2 (Jump)
1B9B                                                             ;  Bits 6-7: Unused
1B9D                         cpl                                 ; Active Low, So invert
1B9E                         ld      b, a                        ; Copy into b
1B9F                         and     0Fh                         ; Player One Input Control bits
1BA1                         jr      z, uni_direction1           ; None pressed: return
1BA3                         cp      1                           ; P2_UP only
1BA5                         jr      z, uni_direction1           ; If UP only, return
1BA7                         cp      2                           ; P2_RIGHT only
1BA9                         jr      z, uni_direction1           ; If RIGHT only, return
1BAB                         cp      4                           ; P2_DOWN only
1BAD                         jr      z, uni_direction1           ; If DOWN only, return
1BAF                         cp      8                           ; P2_LEFT only
1BB1                         jr      z, uni_direction1           ; If LEFT only, return
1BB3                         cp      3                           ; P2_UP + P2_RIGHT (diagonal up-right)
1BB5                         jr      z, right_diag1              ; Special handler: UP + RIGHT
1BB7                         cp      6                           ; P2_RIGHT + P2_DOWN (diagonal down-right)
1BB9                         jr      z, right_diag1              ; Special handler: RIGHT + DOWN
1BBB                         cp      0Ch                         ; P2_DOWN + P2_LEFT (diagonal down-left)
1BBD                         jr      z, left_diag1               ; Special handler: DOWN + LEFT
1BBF                         cp      9                           ; P2_UP + P2_LEFT (diagonal up-left)
1BC1                         jr      z, left_diag1               ; Special handler: UP + LEFT
1BC3                         ret                                 ; Otherwise, return (other combos not handled)
1BC4 ; ---------------------------------------------------------------------------
1BC4
1BC4 get_george_moves:                                           ; 1B53
1BC4                         in      a, (1)                      ; Player 1 George Control Bits (Port 2, after inversion: 1=pressed)
1BC4                                                             ;  Bit 0: P1_UP
1BC4                                                             ;  Bit 1: P1_RIGHT
1BC4                                                             ;  Bit 2: P1_DOWN
1BC4                                                             ;  Bit 3: P1_LEFT
1BC4                                                             ;  Bit 4: P1_BUTTON1 (Punch)
1BC4                                                             ;  Bit 5: P1_BUTTON2 (Jump)
1BC4                                                             ;  Bits 6-7: Unused
1BC6                         cpl                                 ; Active Low, So invert
1BC7                         ld      b, a                        ; Copy into b
1BC8                         and     0Fh                         ; Player One Input Control bits
1BCA                         jr      z, uni_direction1
1BCC                         cp      1                           ; P1_UP only
1BCE                         jr      z, uni_direction1
1BD0                         cp      2                           ; P1_RIGHT only
1BD2                         jr      z, uni_direction1
1BD4                         cp      4                           ; P1_DOWN only
1BD6                         jr      z, uni_direction1
1BD8                         cp      8                           ; P1_LEFT only
1BDA                         jr      z, uni_direction1
1BDC                         cp      3                           ; P1_UP + P1_RIGHT (diagonal up-right)
1BDE                         jp      z, diag2_right
1BE1                         cp      6                           ; P1_RIGHT + P1_DOWN (diagonal down-right)
1BE3                         jp      z, right_diag1
1BE6                         cp      0Ch                         ; P1_DOWN + P1_LEFT (diagonal down-left)
1BE8                         jp      z, diag1_left
1BEB                         cp      9                           ; P1_UP + P1_LEFT (diagonal up-left)
1BED                         jp      z, left_diag1
1BF0                         jp      no_direction
1BF0 ; End of function player_movements
1BF0
1BF3 ; ---------------------------------------------------------------------------
1BF3 ; START OF FUNCTION CHUNK FOR sub_1AFF
1BF3
1BF3 loc_1BF3:                                                   ; 1B03
1BF3                         ld      a, (ix+2)                   ; Get the current player index
1BF6                         or      a
1BF7                         jr      z, george_porgy             ; Zero is George
1BF9                         cp      1
1BFB                         jr      z, dizzy_lizzie
1BFD                         ld      hl, 0AD3Ch
1C00                         jr      ralph_mouth
1C02 ; ---------------------------------------------------------------------------
1C02
1C02 dizzy_lizzie:                                               ; 1BFB
1C02                         ld      hl, 0AD06h
1C05                         jr      ralph_mouth
1C07 ; ---------------------------------------------------------------------------
1C07
1C07 george_porgy:                                               ; 1BF7
1C07                         ld      hl, 0ACCAh
1C0A
1C0A ralph_mouth:                                                ; 1C00 1C05
1C0A                         ld      a, (ix+3Dh)
1C0D                         or      a
1C0E                         jr      nz, loc_1C1A
1C10                         ld      a, (ix+4Bh)
1C13                         or      a
1C14                         jr      z, loc_1C20
1C16                         dec     a
1C17                         ld      (ix+4Bh), a
1C1A
1C1A loc_1C1A:                                                   ; 1C0E
1C1A                         ld      a, (ix+4Dh)
1C1D                         jp      loc_1B31
1C20 ; ---------------------------------------------------------------------------
1C20
1C20 loc_1C20:                                                   ; 1C14
1C20                         ld      a, (ix+4Ch)
1C23                         add     a, 2
1C25                         ld      (ix+4Ch), a
1C28                         sub     2
1C2A                         rst     HL_plus_A
1C2B                         ld      a, (hl)
1C2C                         ld      (ix+4Bh), a
1C2F                         inc     hl
1C30                         ld      a, (hl)
1C31                         ld      (ix+4Dh), a
1C34                         jp      loc_1B31
1C34 ; END OF FUNCTION CHUNK FOR sub_1AFF
1C37
1C37 ; =============== S U B R O U T I N E =======================================
1C37
1C37
1C37 sub_1C37:                                                   ; 1725↑p 172C↑p 
1C37                         ld      a, (ix+1)
1C3A                         cp      2
1C3C                         ret     nz
1C3D                         ld      a, (ix+40h)
1C40                         or      a
1C41                         ret     nz
1C42                         ld      a, (ix+2Fh)
1C45                         or      a
1C46                         ret     nz
1C46 ; End of function sub_1C37
1C46
1C47
1C47 ; =============== S U B R O U T I N E =======================================
1C47
1C47
1C47 sub_1C47:                                                   ; 1A1D↑p
1C47                                                             ; sub_1C7D↓p
1C47                         ld      d, (ix+0Eh)
1C4A                         ld      e, (ix+0Fh)
1C4A ; End of function sub_1C47
1C4A
1C4D
1C4D ; =============== S U B R O U T I N E =======================================
1C4D
1C4D
1C4D sub_1C4D:                                                   ; 1868↑p
1C4D                         ld      h, (ix+0Ah)
1C50                         ld      l, (ix+0Bh)
1C53                         add     hl, de
1C54                         ld      (ix+0Ah), h
1C57                         ld      (ix+0Bh), l
1C5A                         ld      b, (ix+0Ch)
1C5D                         ld      c, (ix+0Dh)
1C60                         call    sub_1C64
1C63                         ret
1C63 ; End of function sub_1C4D
1C63
1C64
1C64 ; =============== S U B R O U T I N E =======================================
1C64
1C64
1C64 sub_1C64:                                                   ; 1C60↑p
1C64                         ld      d, 1
1C66                         ld      h, (ix+8)
1C69                         ld      l, (ix+9)
1C6C                         add     hl, bc
1C6D                         ld      a, h
1C6E                         cp      14h
1C70                         ret     c
1C71                         cp      0F3h
1C73                         ret     nc
1C74                         ld      d, 0
1C76
1C76 loc_1C76:                                                   ; 1CAB↓j
1C76                         ld      (ix+8), h
1C79                         ld      (ix+9), l
1C7C                         ret
1C7C ; End of function sub_1C64
1C7C
1C7D
1C7D ; =============== S U B R O U T I N E =======================================
1C7D
1C7D
1C7D sub_1C7D:                                                   ; 2B7F↓p
1C7D                         call    sub_1C47
1C80                         ld      a, d
1C81                         or      a
1C82                         ret     z
1C83                         call    sub_1CA4
1C86                         ld      (ix+41h), 3
1C8A                         ld      h, (ix+0Ch)
1C8D                         ld      l, (ix+0Dh)
1C90                         ld      a, h
1C91                         or      l
1C92                         ret     nz
1C93                         ld      a, (ix+8)
1C96                         cp      5
1C98                         jr      c, loc_1C9F
1C9A                         ld      (ix+0Ch), 1
1C9E                         ret
1C9F ; ---------------------------------------------------------------------------
1C9F
1C9F loc_1C9F:                                                   ; 1C98
1C9F                         ld      (ix+0Ch), 0FFh
1CA3                         ret
1CA3 ; End of function sub_1C7D
1CA3
1CA4
1CA4 ; =============== S U B R O U T I N E =======================================
1CA4
1CA4
1CA4 sub_1CA4:                                                   ; 1C83↑p
1CA4                         ld      h, (ix+8)
1CA7                         ld      l, (ix+9)
1CAA                         add     hl, bc
1CAB                         jr      loc_1C76
1CAB ; End of function sub_1CA4
1CAB
1CAD
1CAD ; =============== S U B R O U T I N E =======================================
1CAD
1CAD
1CAD sub_1CAD:                                                   ; 09AC↑p
1CAD                         ld      ix, George_data
1CB1                         ld      iy, sprite52_y
1CB5                         call    sub_1CCF
1CB8                         ld      ix, Lizzie_data
1CBC                         ld      iy, sprite54_y
1CC0                         call    sub_1CCF
1CC3                         ld      ix, Ralph_data
1CC7                         ld      iy, sprite56_y
1CCB                         call    sub_1CCF
1CCE                         ret
1CCE ; End of function sub_1CAD
1CCE
1CCF
1CCF ; =============== S U B R O U T I N E =======================================
1CCF
1CCF
1CCF sub_1CCF:                                                   ; 1CB5↑p 1CC0↑p 
1CCF
1CCF ; FUNCTION CHUNK AT 1E42 SIZE 00000043 BYTES
1CCF ; FUNCTION CHUNK AT 1ECC SIZE 00000021 BYTES
1CCF ; FUNCTION CHUNK AT 1F50 SIZE 00000007 BYTES
1CCF
1CCF                         ld      a, (ix+1)
1CD2                         cp      5
1CD4                         ret     z
1CD5                         ld      a, (ix+46h)
1CD8                         or      a
1CD9                         jp      nz, loc_1ECC
1CDC                         ld      a, (ix+1)
1CDF                         cp      2
1CE1                         jp      nz, loc_1EB1
1CE4                         ld      a, (ix+3Dh)
1CE7                         or      a
1CE8                         jp      nz, loc_1DD6
1CEB                         ld      a, (ix+2Bh)
1CEE                         cp      52h ; 'R'
1CF0                         jr      c, loc_1D05
1CF2                         ld      a, (ix+47h)
1CF5                         cp      40h ; '@'
1CF7                         jr      z, loc_1D5D
1CF9                         ld      a, (ix+2Bh)
1CFC                         cp      0D8h
1CFE                         jr      z, loc_1D14
1D00                         jr      nc, loc_1D05
1D02                         jp      loc_1DB0
1D05 ; ---------------------------------------------------------------------------
1D05
1D05 loc_1D05:                                                   ; 1CF0 1D00 
1D05                         ld      a, (ix+27h)
1D08                         or      a
1D09                         jp      z, loc_1EB1
1D0C                         cp      1
1D0E                         jp      z, loc_1E7D
1D11                         jp      loc_1E42
1D14 ; ---------------------------------------------------------------------------
1D14
1D14 loc_1D14:                                                   ; 1CFE
1D14                         ld      c, 84
1D16                         rst     dispatch_sound
1D17                         ld      (ix+27h), 0
1D1B                         ld      (ix+29h), 0
1D1F                         ld      a, (ix+0Ah)
1D22                         add     a, 22
1D24                         ld      (iy+0), a
1D27                         ld      b, (ix+8)
1D2A                         ld      a, (ix+1Dh)                 ; Player sprite direction (0,1)
1D2D                         or      a
1D2E                         jr      z, loc_1D3C
1D30                         ld      a, b
1D31                         sub     22
1D33                         ld      (iy+3), a
1D36                         ld      (iy+1), 3
1D3A                         jr      loc_1D46
1D3C ; ---------------------------------------------------------------------------
1D3C
1D3C loc_1D3C:                                                   ; 1D2E
1D3C                         ld      a, b
1D3D                         add     a, 6
1D3F                         ld      (iy+3), a
1D42                         ld      (iy+1), 13h
1D46
1D46 loc_1D46:                                                   ; 1D3A
1D46                         ld      a, (ix+47h)
1D49                         cp      40h ; '@'
1D4B                         jr      nz, loc_1D53
1D4D                         ld      (iy+2), 8Dh
1D51                         jr      loc_1D57
1D53 ; ---------------------------------------------------------------------------
1D53
1D53 loc_1D53:                                                   ; 1D4B
1D53                         ld      (iy+2), 0F5h
1D57
1D57 loc_1D57:                                                   ; 1D51
1D57                         ld      de, 74h ; 't'
1D5A                         jp      loc_1EB5
1D5D ; ---------------------------------------------------------------------------
1D5D
1D5D loc_1D5D:                                                   ; 1CF7
1D5D                         ld      a, (ix+2Bh)
1D60                         cp      0F0h
1D62                         jp      nc, loc_1D05
1D65                         cp      0EFh
1D67                         ld      c, 53h
1D69                         call    z, do_sound
1D6C                         ld      (ix+27h), 0
1D70                         ld      (ix+29h), 0
1D74                         ld      a, (ix+0Ah)
1D77                         add     a, 22
1D79                         ld      (iy+0), a
1D7C                         ld      b, (ix+8)
1D7F                         ld      a, (ix+1Dh)                 ; Player sprite direction (0,1)
1D82                         or      a
1D83                         jr      z, loc_1D91
1D85                         ld      a, b
1D86                         sub     22
1D88                         ld      (iy+3), a
1D8B                         ld      (iy+1), 3
1D8F                         jr      loc_1D9B
1D91 ; ---------------------------------------------------------------------------
1D91
1D91 loc_1D91:                                                   ; 1D83
1D91                         ld      a, b
1D92                         add     a, 6
1D94                         ld      (iy+3), a
1D97                         ld      (iy+1), 13h
1D9B
1D9B loc_1D9B:                                                   ; 1D8F
1D9B                         ld      a, (ticker_countup)
1D9E                         and     2
1DA0                         ld      (iy+2), 0F6h
1DA4                         jr      z, loc_1DAA
1DA6                         ld      (iy+2), 0FFh
1DAA
1DAA loc_1DAA:                                                   ; 1DA4
1DAA                         ld      de, 74h ; 't'
1DAD                         jp      loc_1EB5
1DB0 ; ---------------------------------------------------------------------------
1DB0
1DB0 loc_1DB0:                                                   ; 1D02
1DB0                         ld      (ix+27h), 0
1DB4                         ld      (ix+29h), 0
1DB8                         ld      a, (iy+0)
1DBB                         dec     a
1DBC                         ld      (iy+0), a
1DBF                         ld      b, 1
1DC1                         ld      a, (ix+1Dh)                 ; Player sprite direction (0,1)
1DC4                         or      a
1DC5                         jr      z, loc_1DC9
1DC7                         ld      b, 0FFh
1DC9
1DC9 loc_1DC9:                                                   ; 1DC5
1DC9                         ld      a, (iy+3)
1DCC                         add     a, b
1DCD                         ld      (iy+3), a
1DD0                         ld      de, 74h ; 't'
1DD3                         jp      loc_1EB5
1DD6 ; ---------------------------------------------------------------------------
1DD6
1DD6 loc_1DD6:                                                   ; 1CE8
1DD6                         ld      (ix+27h), 0
1DDA                         ld      (ix+29h), 0
1DDE                         ld      (ix+2Bh), 0
1DE2                         rst     clear_all_sprite
1DE3                         ld      de, 70h ; 'p'
1DE6                         add     iy, de
1DE8                         ld      a, (ix+3Dh)
1DEB                         cp      34h ; '4'
1DED                         jr      z, loc_1E0D
1DEF                         ld      a, (ix+33h)
1DF2                         add     a, 8
1DF4                         ld      (iy+0), a
1DF7                         ld      a, (ix+32h)
1DFA                         sub     8
1DFC                         ld      (iy+3), a
1DFF
1DFF loc_1DFF:                                                   ; 1E1D↓j
1DFF                         ld      (iy+2), 0A1h
1E03                         call    sub_1E1F
1E06                         ld      de, 4
1E09                         add     iy, de
1E0B                         rst     clear_all_sprite
1E0C                         ret
1E0D ; ---------------------------------------------------------------------------
1E0D
1E0D loc_1E0D:                                                   ; 1DED
1E0D                         ld      a, (ix+4Fh)
1E10                         add     a, 8
1E12                         ld      (iy+0), a
1E15                         ld      a, (ix+39h)
1E18                         sub     8
1E1A                         ld      (iy+3), a
1E1D                         jr      loc_1DFF
1E1D ; End of function sub_1CCF
1E1D
1E1F
1E1F ; =============== S U B R O U T I N E =======================================
1E1F
1E1F
1E1F sub_1E1F:                                                   ; 1E03↑p
1E1F                         ld      a, (ix+3Eh)
1E22                         and     3
1E24                         jr      z, loc_1E3D
1E26                         cp      1
1E28                         jr      z, loc_1E38
1E2A                         cp      1
1E2C                         jr      z, loc_1E33
1E2E                         ld      (iy+1), 23h ; '#'
1E32                         ret
1E33 ; ---------------------------------------------------------------------------
1E33
1E33 loc_1E33:                                                   ; 1E2C
1E33                         ld      (iy+1), 33h ; '3'
1E37                         ret
1E38 ; ---------------------------------------------------------------------------
1E38
1E38 loc_1E38:                                                   ; 1E28
1E38                         ld      (iy+1), 13h
1E3C                         ret
1E3D ; ---------------------------------------------------------------------------
1E3D
1E3D loc_1E3D:                                                   ; 1E24
1E3D                         ld      (iy+1), 3
1E41                         ret
1E41 ; End of function sub_1E1F
1E41
1E42 ; ---------------------------------------------------------------------------
1E42 ; START OF FUNCTION CHUNK FOR sub_1CCF
1E42
1E42 loc_1E42:                                                   ; 1D11
1E42                         call    sub_1E85
1E45                         ld      de, 74h ; 't'
1E48                         add     iy, de
1E4A                         ld      a, (ix+29h)
1E4D                         or      a
1E4E                         jr      z, loc_1EA9
1E50                         ld      a, (ix+29h)
1E53                         ld      hl, unk_1FC2
1E56                         dec     a
1E57                         rst     HL_plus_A
1E58                         ld      a, (hl)
1E59                         ld      (iy+2), a
1E5C                         ld      (iy+6), a
1E5F                         ld      a, (iy+0)
1E62                         dec     a
1E63                         ld      (iy+0), a
1E66                         ld      (iy+4), a
1E69                         ld      a, (ix+28h)
1E6C                         or      a
1E6D                         ret     nz
1E6E                         ld      a, (iy+3)
1E71                         dec     a
1E72                         ld      (iy+3), a
1E75                         ld      a, (iy+7)
1E78                         inc     a
1E79                         ld      (iy+7), a
1E7C                         ret
1E7D ; ---------------------------------------------------------------------------
1E7D
1E7D loc_1E7D:                                                   ; 1D0E
1E7D                         call    sub_1E85
1E80                         ld      de, 74h ; 't'
1E83                         jr      loc_1EB5
1E83 ; END OF FUNCTION CHUNK FOR sub_1CCF
1E85
1E85 ; =============== S U B R O U T I N E =======================================
1E85
1E85
1E85 sub_1E85:                                                   ; loc_1E42↑p
1E85                                                             ; loc_1E7D↑p
1E85                         ld      a, (ix+28h)
1E88                         inc     a
1E89                         cp      5
1E8B                         jr      c, loc_1E8E
1E8D                         xor     a
1E8E
1E8E loc_1E8E:                                                   ; 1E8B
1E8E                         ld      (ix+28h), a
1E91                         or      a
1E92                         ret     nz
1E93                         ld      a, (ix+29h)
1E96                         dec     a
1E97                         ld      (ix+29h), a
1E9A                         cp      5
1E9C                         jr      c, loc_1EBB
1E9E                         ld      hl, byte_1FBF
1EA1                         sub     5
1EA3                         rst     HL_plus_A
1EA4                         ld      a, (hl)
1EA5                         ld      (iy+2), a
1EA8                         ret
1EA9 ; ---------------------------------------------------------------------------
1EA9
1EA9 loc_1EA9:                                                   ; 1E4E
1EA9                         ld      b, 2
1EAB                         rst     do_sprite_clear_loop
1EAC                         ld      (ix+27h), 0
1EB0                         ret
1EB1 ; ---------------------------------------------------------------------------
1EB1
1EB1 loc_1EB1:                                                   ; 1CE1 1D09 
1EB1                         rst     clear_all_sprite
1EB2                         ld      de, 70h ; 'p'
1EB5
1EB5 loc_1EB5:                                                   ; 1D5A 1DAD 
1EB5                         add     iy, de
1EB7                         ld      b, 2
1EB9                         rst     do_sprite_clear_loop
1EBA                         ret
1EBB ; ---------------------------------------------------------------------------
1EBB
1EBB loc_1EBB:                                                   ; 1E9C
1EBB                         ld      a, (ix+27h)
1EBE                         cp      1
1EC0                         jr      nz, loc_1EC6
1EC2                         ld      (ix+27h), 0
1EC6
1EC6 loc_1EC6:                                                   ; 1EC0
1EC6                         push    iy
1EC8                         rst     clear_all_sprite
1EC9                         pop     iy
1ECB                         ret
1ECB ; End of function sub_1E85
1ECB
1ECC ; ---------------------------------------------------------------------------
1ECC ; START OF FUNCTION CHUNK FOR sub_1CCF
1ECC
1ECC loc_1ECC:                                                   ; 1CD9
1ECC                         ld      (ix+3Dh), 0
1ED0                         ld      (ix+2Bh), 0
1ED4                         ld      (ix+27h), 0
1ED8                         dec     a
1ED9                         ld      (ix+46h), a
1EDC                         and     1Fh
1EDE                         jp      z, loc_1F50
1EE1                         call    sub_1EED
1EE4                         ld      a, (ix+46h)
1EE7                         and     7Fh
1EE9                         ld      (ix+46h), a
1EEC                         ret
1EEC ; END OF FUNCTION CHUNK FOR sub_1CCF
1EED
1EED ; =============== S U B R O U T I N E =======================================
1EED
1EED
1EED sub_1EED:                                                   ; 1EE1↑p
1EED                         ld      c, a
1EEE                         ld      a, (ix+46h)
1EF1                         bit     6, a
1EF3                         jp      nz, loc_1EFC
1EF6                         bit     5, a
1EF8                         jr      nz, loc_1F32
1EFA                         jr      loc_1EB1
1EFC ; ---------------------------------------------------------------------------
1EFC
1EFC loc_1EFC:                                                   ; 1EF3
1EFC                         bit     7, a
1EFE                         jr      z, loc_1F25
1F00                         ld      b, 0F2h
1F02                         ld      a, (ix+1Dh)                 ; Player sprite direction (0,1)
1F05                         or      a
1F06                         jr      nz, loc_1F0A
1F08                         ld      b, 0Eh
1F0A
1F0A loc_1F0A:                                                   ; 1F06
1F0A                         ld      a, (ix+8)
1F0D                         sub     8
1F0F                         sub     b
1F10                         ld      (iy+3), a
1F13                         ld      a, 19h
1F15                         ld      (iy+0), a
1F18                         ld      (iy+2), 0C8h
1F1C                         ld      (iy+1), 1
1F20                         ld      de, 74h ; 't'
1F23                         jr      loc_1EB5
1F25 ; ---------------------------------------------------------------------------
1F25
1F25 loc_1F25:                                                   ; 1EFE
1F25                         ld      a, c
1F26                         cp      5
1F28                         ret     nz
1F29                         ld      (iy+1), 3
1F2D                         ld      (iy+2), 0CAh
1F31                         ret
1F32 ; ---------------------------------------------------------------------------
1F32
1F32 loc_1F32:                                                   ; 1EF8
1F32                         bit     7, a
1F34                         ret     z
1F35                         ld      a, (ix+8)
1F38                         sub     8
1F3A                         ld      (iy+3), a
1F3D                         ld      a, 19h
1F3F                         ld      (iy+0), a
1F42                         ld      (iy+1), 1
1F46                         ld      (iy+2), 0C8h
1F4A                         ld      de, 74h ; 't'
1F4D                         jp      loc_1EB5
1F4D ; End of function sub_1EED
1F4D
1F50 ; ---------------------------------------------------------------------------
1F50 ; START OF FUNCTION CHUNK FOR sub_1CCF
1F50
1F50 loc_1F50:                                                   ; 1EDE
1F50                         ld      (ix+46h), 0
1F54                         jp      loc_1EB1
1F54 ; END OF FUNCTION CHUNK FOR sub_1CCF
1F57
1F57 ; =============== S U B R O U T I N E =======================================
1F57
1F57
1F57 sub_1F57:                                                   ; 44DA↓p
1F57                         push    iy
1F59                         ld      (ix+28h), 0
1F5D                         ld      (ix+29h), 7
1F61                         ld      a, (ix+2)
1F64                         call    sub_1537
1F67                         inc     hl
1F68                         ld      a, (hl)
1F69                         and     30h ; '0'
1F6B                         srl     a
1F6D                         srl     a
1F6F                         srl     a
1F71                         srl     a
1F73                         set     3, a
1F75                         ld      (iy+1), 0Bh
1F79                         ld      (iy+75h), a
1F7C                         add     a, 10h
1F7E                         ld      (iy+79h), a
1F81                         ld      (iy+2), 73h ; 's'
1F85                         ld      (iy+3), b
1F88                         ld      (iy+0), c
1F8B                         ld      a, (unk_E032)
1F8E                         or      a
1F8F                         jr      z, loc_1F98
1F91                         ld      (ix+27h), 1
1F95
1F95 loc_1F95:                                                   ; 1FBD↓j
1F95                         pop     iy
1F97                         ret
1F98 ; ---------------------------------------------------------------------------
1F98
1F98 loc_1F98:                                                   ; 1F8F
1F98                         ld      (ix+27h), 2
1F9C                         ld      de, 74h ; 't'
1F9F                         add     iy, de
1FA1                         ld      (iy+2), 70h ; 'p'
1FA5                         ld      (iy+6), 70h ; 'p'
1FA9                         ld      a, b
1FAA                         sub     8
1FAC                         ld      (iy+3), a
1FAF                         add     a, 10h
1FB1                         ld      (iy+7), a
1FB4                         ld      a, c
1FB5                         sub     4
1FB7                         ld      (iy+0), a
1FBA                         ld      (iy+4), a
1FBD                         jr      loc_1F95
1FBD ; End of function sub_1F57
1FBD
1FBD ; ---------------------------------------------------------------------------
1FBF byte_1FBF:              db  75h, 74h, 73h                   ; 1E9E↑o
1FC2 unk_1FC2:               db  7Eh ; ~                         ; 1E53↑o
1FC3                         db  7Eh ; ~
1FC4                         db  7Eh ; ~
1FC5                         db  7Dh ; }
1FC6                         db  7Dh ; }
1FC7                         db  7Ch ; |
1FC8                         db  7Bh ; {
1FC9
1FC9 ; =============== S U B R O U T I N E =======================================
1FC9
1FC9
1FC9 sub_1FC9:                                                   ; 1780↑p
1FC9
1FC9 ; FUNCTION CHUNK AT 51BD SIZE 0000000A BYTES
1FC9
1FC9                         ld      a, (ix+17h)
1FCC                         or      a
1FCD                         ret     z
1FCE                         call    sub_1509
1FD1                         ld      a, (iy+10h)
1FD4                         ld      (ix+48h), a
1FD7                         ld      a, (ix+16h)
1FDA                         cp      2
1FDC                         jr      z, loc_1FF6
1FDE                         cp      3
1FE0                         ret     nz
1FE1                         ld      a, (iy+0Dh)
1FE4                         cp      1
1FE6                         jr      z, loc_2009
1FE8                         cp      0
1FEA                         ret     z
1FEB                         ld      a, (iy+8)
1FEE                         add     a, 10h
1FF0                         cp      (ix+0Ah)
1FF3                         ret     nc
1FF4                         jr      loc_2009
1FF6 ; ---------------------------------------------------------------------------
1FF6
1FF6 loc_1FF6:                                                   ; 1FDC
1FF6                         ld      a, (iy+0Dh)
1FF9                         cp      1
1FFB                         jr      z, loc_2009
1FFD                         cp      0
1FFF                         ret     z
2000                         ld      a, (iy+8)
2003                         sub     10h
2005                         cp      (ix+0Ah)
2008                         ret     nc
2009
2009 loc_2009:                                                   ; 1FE6 1FF4 
2009                         ld      (ix+16h), 5
200D                         ld      (ix+1Fh), 1Eh
2011                         ld      (ix+20h), 1
2015                         ld      (ix+0Ch), 0
2019                         ld      (ix+0Dh), 0
201D                         ld      (ix+0Eh), 0
2021                         ld      (ix+0Fh), 0
2025                         jp      loc_51BD
2025 ; End of function sub_1FC9
2025
2028
2028 ; =============== S U B R O U T I N E =======================================
2028
2028
2028 sub_2028:                                                   ; loc_177D↑p
2028                         ld      a, (ix+17h)
202B                         or      a
202C                         jr      z, loc_204E
202E                         ld      a, (ix+16h)
2031                         cp      5
2033                         jr      z, loc_204E
2035                         ld      a, (ix+25h)
2038                         or      a
2039                         jr      nz, loc_204E
203B                         ld      a, (ix+17h)
203E                         call    sub_1509
2041                         ld      a, (iy+4)
2044                         srl     a
2046                         srl     a
2048                         srl     a
204A                         srl     a
204C                         jr      loc_2050
204E ; ---------------------------------------------------------------------------
204E
204E loc_204E:                                                   ; 202C 2033 
204E                         ld      a, 3
2050
2050 loc_2050:                                                   ; 204C
2050                         ld      (ix+18h), a
2053                         ret
2053 ; End of function sub_2028
2053
2054
2054 ; =============== S U B R O U T I N E =======================================
2054
2054
2054 update_player_sprites:                                      ; 099D↑p
2054                         ld      ix, Ralph_data              ; Here comes the adjust the base sprite pointers for players,
2054                                                             ; so this would adjust sprite priorities for each player
2054                                                             ; if at bottom walking or they are climbing a building.
2058                         ld      l, 0                        ; l is marked as the priority value
205A                         ld      a, (unk_E4B3)
205D                         inc     a
205E                         and     3
2060                         ld      b, a
2061                         ld      a, (George_Y)
2064                         ld      c, a                        ; Put into C
2065                         ld      a, (Lizzie_Action)
2068                         inc     a
2069                         and     3
206B                         ld      d, a                        ; Lizzie Action + 1 AND %11.
206C                         ld      a, (Lizzie_Y)
206F                         ld      e, a                        ; Put into E
2070                         ld      a, (ix+18h)                 ; A check if on ground or building (3) or (1)
2073                         inc     a
2074                         and     3
2076                         ld      h, a
2077                         cp      b
2078                         jr      c, loc_208D
207A                         jr      nz, loc_208E
207C                         ld      a, (ix+16h)                 ; Get Ralph current status
207F                         cp      2                           ; 2 means player is climbing building
2081                         jr      z, loc_2087
2083                         cp      3                           ; Check walking on top of building
2085                         jr      nz, loc_208E
2087
2087 loc_2087:                                                   ; 2081
2087                         ld      a, c
2088                         cp      (ix+0Ah)                    ; Ralph Y Cordinate
208B                         jr      c, loc_208E
208D
208D loc_208D:                                                   ; 2078
208D                         inc     l
208E
208E loc_208E:                                                   ; 207A 2085 
208E                         ld      a, h
208F                         cp      d
2090                         jr      c, loc_20A5
2092                         jr      nz, loc_20A7
2094                         ld      a, (ix+16h)                 ; Get Ralph Action byte
2097                         cp      2                           ; Climbing
2099                         jr      z, loc_209F
209B                         cp      3                           ; Walking on building
209D                         jr      nz, loc_20A7
209F
209F loc_209F:                                                   ; 2099
209F                         ld      a, e
20A0                         cp      (ix+0Ah)                    ; Ralph Y Cordinate
20A3                         jr      c, loc_20A7
20A5
20A5 loc_20A5:                                                   ; 2090
20A5                         inc     l
20A6                         inc     l
20A7
20A7 loc_20A7:                                                   ; 2092 209D 
20A7                         ld      a, d
20A8                         cp      b
20A9                         jr      c, do_base_caculation
20AB                         jr      nz, not_climbing
20AD                         ld      a, (George_Action)
20B0                         cp      2                           ; Climbing?
20B2                         jr      z, is_climbing
20B4                         cp      3                           ; Walking on Building?
20B6                         jr      nz, not_climbing
20B8
20B8 is_climbing:                                                ; 20B2
20B8                         ld      a, c
20B9                         cp      e
20BA                         jr      nc, do_base_caculation
20BC
20BC not_climbing:                                               ; 20AB 20B6
20BC                         inc     l
20BD                         inc     l
20BE
20BE do_base_caculation:                                         ; 20A9 20BA
20BE                         call    calc_sprite_base
20C1                         call    sprite_base_toIY            ; Get base for George
20C4                         push    hl
20C5                         call    update_player_sprite_pointers
20C8                         pop     hl
20C9                         ld      ix, Lizzie_data
20CD                         call    sprite_base_toIY            ; Get base for Lizzie
20D0                         push    hl
20D1                         call    update_player_sprite_pointers
20D4                         pop     hl
20D5                         ld      ix, George_data
20D9                         call    sprite_base_toIY            ; Get base for Ralph
20DC                         call    update_player_sprite_pointers
20DF                         ret
20DF ; End of function update_player_sprites
20DF
20E0
20E0 ; =============== S U B R O U T I N E =======================================
20E0
20E0
20E0 calc_sprite_base:                                           ; do_base_caculation↑p
20E0                         ld      a, l                        ; Now L is the master offset value
20E1                         sla     a                           ; * 2 as it's a word table pointer
20E3                         ld      hl, player_sprite_base
20E6                         jp      get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
20E6 ; End of function calc_sprite_base
20E6
20E9
20E9 ; =============== S U B R O U T I N E =======================================
20E9
20E9
20E9 sprite_base_toIY:                                           ; 20C1↑p 20CD↑p 
20E9                         ld      e, (hl)                     ; Get sprite base low
20EA                         inc     hl                          ; Advance index
20EB                         ld      d, (hl)                     ; Get sprite base index high
20EC                         inc     hl                          ; advance index
20ED                         push    de                          ; put de > iy
20EE                         pop     iy
20F0                         ret
20F0 ; End of function sprite_base_toIY
20F0
20F0 ; ---------------------------------------------------------------------------
20F1 player_sprite_base:     dw off_211B                         ; 20E3↑o
20F1                                                             ; Base arrangment has 0 - 5 entries
20F1                                                             ; Each entry arranges George,Lizzie,Ralph
20F3                         dw off_2103
20F5                         dw off_210F
20F7                         dw off_20FD
20F9                         dw off_2109
20FB                         dw off_2115
20FD off_20FD:               dw sprite73_y                       ; 20F7↑o
20FF                         dw sprite65_y
2101                         dw sprite57_y
2103 off_2103:               dw sprite65_y                       ; 20F3↑o
2105                         dw sprite73_y
2107                         dw sprite57_y
2109 off_2109:               dw sprite65_y                       ; 20F9↑o
210B                         dw sprite57_y
210D                         dw sprite73_y
210F off_210F:               dw sprite57_y                       ; 20F5↑o
2111                         dw sprite65_y
2113                         dw sprite73_y
2115 off_2115:               dw sprite73_y                       ; 20FB↑o
2117                         dw sprite57_y
2119                         dw sprite65_y
211B off_211B:               dw sprite57_y                       ; player_sprite_base↑o
211D                         dw sprite73_y
211F                         dw sprite65_y
2121
2121 ; =============== S U B R O U T I N E =======================================
2121
2121
2121 sub_2121:                                                   ; 197E↑p
2121                         ld      iy, unk_E355
2125                         ld      de, 6
2128                         ld      a, (ix+43h)
212B                         cp      1
212D                         jr      z, loc_2131
212F                         add     iy, de
2131
2131 loc_2131:                                                   ; 212D
2131                         ld      b, (ix+8)
2134                         ld      a, (iy+1)
2137                         add     a, 4
2139                         cp      b
213A                         jr      nc, loc_2145
213C                         ld      a, (iy+2)
213F                         sub     4
2141                         cp      b
2142                         jr      c, loc_214C
2144                         ret
2145 ; ---------------------------------------------------------------------------
2145
2145 loc_2145:                                                   ; 213A
2145                         ld      a, (ix+8)
2148                         sub     0Bh
214A                         jr      loc_2151
214C ; ---------------------------------------------------------------------------
214C
214C loc_214C:                                                   ; 2142
214C                         ld      a, (ix+8)
214F                         add     a, 0Bh
2151
2151 loc_2151:                                                   ; 214A
2151                         ld      (ix+8), a
2154                         ld      a, 19h
2156                         ld      (ix+0Ah), a
2159                         ld      (ix+43h), 0
215D                         ld      (ix+46h), 0C6h
2161                         ret
2161 ; End of function sub_2121
2161
2162
2162 ; =============== S U B R O U T I N E =======================================
2162
2162
2162 sub_2162:                                                   ; 18E6↑p
2162                                                             ; loc_198C↑p 
2162                         ld      a, (base_strip_number)      ; Get level base type
2165                         cp      8                           ; If base_strip_number ≥ 8
2167                         jr      nc, loc_217C                ; This means the water pier type base.
2169                         ld      a, (base_strip_number)      ; Duplicate same code as above? WHAT!
216C                         cp      4                           ; If base strip_number < 4 then exit
216E                         ret     c
216F                         ld      iy, object_action_table     ; maste table offset action type
2173                         ld      a, (iy+0)
2176                         cp      1                           ; if object_action == 1 exit
2178                         ret     z
2179                         cp      2                           ; if object_action == 2 exit
217B                         ret     z
217C
217C loc_217C:                                                   ; 2167
217C                         push    iy
217E                         ld      iy, unk_E355
2182                         call    sub_2197
2185                         ld      a, (ix+16h)
2188                         cp      0Eh
218A                         jr      z, loc_2194
218C                         ld      de, 6
218F                         add     iy, de
2191                         call    sub_2197
2194
2194 loc_2194:                                                   ; 218A
2194                         pop     iy
2196                         ret
2196 ; End of function sub_2162
2196
2197
2197 ; =============== S U B R O U T I N E =======================================
2197
2197
2197 sub_2197:                                                   ; 2182↑p 2191↑p
2197                         ld      a, (iy+1)
219A                         or      a
219B                         ret     z
219C                         ld      a, (ix+8)
219F                         add     a, 2
21A1                         sub     (iy+1)
21A4                         ret     c
21A5                         cp      8
21A7                         jr      c, loc_21C8
21A9                         ld      a, (ix+8)
21AC                         sub     2
21AE                         sub     (iy+2)
21B1                         ret     nc
21B2                         add     a, 8
21B4                         jr      c, loc_21C1
21B6
21B6 loc_21B6:                                                   ; 21D0↓j
21B6                         ld      a, (iy+0)
21B9                         ld      (ix+43h), a
21BC                         ld      (ix+46h), 0A4h
21C0                         ret
21C1 ; ---------------------------------------------------------------------------
21C1
21C1 loc_21C1:                                                   ; 21B4
21C1                         ld      a, (iy+2)
21C4                         sub     9
21C6                         jr      loc_21CD
21C8 ; ---------------------------------------------------------------------------
21C8
21C8 loc_21C8:                                                   ; 21A7
21C8                         ld      a, (iy+1)
21CB                         add     a, 9
21CD
21CD loc_21CD:                                                   ; 21C6
21CD                         ld      (ix+8), a
21D0                         jr      loc_21B6
21D0 ; End of function sub_2197
21D0
21D2
21D2 ; =============== S U B R O U T I N E =======================================
21D2
21D2
21D2 update_player_sprite_pointers:                              ; 20C5↑p 20D1↑p 
21D2                         push    iy                          ; Save our base pointer index
21D4                         call    update_player_sprite        ; Do one player sprite data set
21D7                         pop     iy                          ; Get back out base pointer
21D9                         ret
21D9 ; End of function update_player_sprite_pointers
21D9
21DA
21DA ; =============== S U B R O U T I N E =======================================
21DA
21DA
21DA update_player_sprite:                                       ; 21D4↑p
21DA
21DA ; FUNCTION CHUNK AT 225C SIZE 00000043 BYTES
21DA ; FUNCTION CHUNK AT 22B0 SIZE 00000327 BYTES
21DA ; FUNCTION CHUNK AT 2667 SIZE 00000074 BYTES
21DA ; FUNCTION CHUNK AT 26EB SIZE 00000024 BYTES
21DA ; FUNCTION CHUNK AT 272F SIZE 0000000A BYTES
21DA ; FUNCTION CHUNK AT 2762 SIZE 00000007 BYTES
21DA ; FUNCTION CHUNK AT 2854 SIZE 00000073 BYTES
21DA
21DA                         ld      a, (ix+40h)                 ; Player jumping?
21DD                         or      a
21DE                         jp      nz, player_jumping          ; If zero then get out of here.
21E1                         ld      a, (ix+1)                   ; Current control action
21E4                         cp      50h ; 'P'
21E6                         jp      z, loc_246C
21E9                         cp      0
21EB                         jp      z, clear_player_sprites
21EE                         cp      3
21F0                         jp      z, clear_player_sprites
21F3                         cp      4
21F5                         jp      z, loc_249D
21F8                         cp      7
21FA                         jp      z, loc_244B
21FD                         cp      5
21FF                         jp      z, loc_26EB
2202                         ld      a, (game_level)
2205                         and     7Fh
2207                         cp      7Fh
2209                         jr      nz, loc_2212
220B                         ld      a, (byte_E001)              ; Compare player for many conditions
220B                                                             ; Falls all way throught for normal display
220E                         or      a
220F                         jp      nz, loc_2866
2212
2212 loc_2212:                                                   ; 2209
2212                         ld      a, (ix+2Bh)
2215                         or      a
2216                         jp      nz, loc_2667
2219                         ld      a, (ix+1Bh)
221C                         or      a
221D                         jp      nz, loc_2854
2220
2220 loc_2220:                                                   ; 2859↓j
2220                         ld      a, (ix+16h)
2223                         cp      0Eh
2225                         jp      z, loc_22B0
2228                         ld      a, (ix+25h)
222B                         or      a
222C                         jp      nz, loc_23A2
222F                         ld      a, (ix+20h)
2232                         or      a
2233                         jp      nz, loc_2260
2236                         call    sprite_body_legs
2239                         call    super_sprite_2x2            ; This plots a 2x2 body and legs of player(s)
223C                         ld      de, 10h                     ; Advance sprite pointer on 4 sprites 4x4=16;-)
223F                         add     iy, de                      ; iy as we know is sprite base index
2241
2241 loc_2241:                                                   ; 229C↓j
2241                         ld      a, (ix+21h)                 ; Check if player is punching
2241                                                             ; requires different offsets
2244                         or      a
2245                         jp      nz, player_punching_sprites
2248                         call    sprite_head_arms            ; Setup frames and cordinates for head and arms
224B                         call    super_sprite_2x2            ; The plots a 2x2 for top of player
224E                         ret
224E ; End of function update_player_sprite
224E
224F
224F ; =============== S U B R O U T I N E =======================================
224F
224F
224F sub_224F:                                                   ; loc_2260↓p
224F                                                             ; loc_2667↓p
224F                         ld      a, (ix+4Eh)
2252                         or      a
2253                         ret     z
2254                         xor     a
2255                         ld      (unk_E00C), a
2258                         ld      (ix+4Eh), a
225B                         ret
225B ; End of function sub_224F
225B
225C ; ---------------------------------------------------------------------------
225C ; START OF FUNCTION CHUNK FOR update_player_sprite
225C
225C clear_player_sprites:                                       ; 21EB 21F0
225C                         ld      b, 8
225E                         rst     do_sprite_clear_loop
225F                         ret
2260 ; ---------------------------------------------------------------------------
2260
2260 loc_2260:                                                   ; 2233
2260                         call    sub_224F
2263                         ld      a, (ix+16h)
2266                         cp      5                           ; Fall off Building
2268                         jp      z, player_faling
226B                         cp      0Ch                         ; Ouch! you falling on the floor
226D                         jp      z, player_fell_on_floor
2270                         ld      a, (ix+20h)
2273                         bit     7, a
2275                         jr      nz, climbing_slipping_feet
2277                         ld      hl, about_to_fall
227A                         xor     a
227B                         call    setup_sprite_X_Y
227E                         call    super_sprite_2x2
2281                         ld      de, 10h                     ; Index to next 4 sprites
2284                         add     iy, de                      ; Add to index
2286                         xor     a                           ; Clear animation frame offset
2287                         ld      hl, yikes_falling
228A                         call    setup_sprite_X_Y
228D                         call    super_sprite_2x2
2290                         ret
2291 ; ---------------------------------------------------------------------------
2291
2291 climbing_slipping_feet:                                     ; 2275
2291                         call    sprite_body_legs
2294                         call    super_sprite_2x2
2297                         ld      de, 10h                     ; Move on 4 sprites
229A                         add     iy, de                      ; iy sprite base pointer
229C                         jp      loc_2241
229C ; END OF FUNCTION CHUNK FOR update_player_sprite
229F ; ---------------------------------------------------------------------------
229F                         ld      hl, yikes_unused            ; Unused code frames, where offset would of adjusted the body and torso when falling
22A2                         ld      a, (ix+1Dh)                 ; Player sprite direction (0,1)
22A5                         xor     1
22A7                         ld      d, a
22A8                         xor     a
22A9                         call    loc_2621                    ; Direction * 2
22AC                         call    super_sprite_2x2
22AF                         ret
22B0 ; ---------------------------------------------------------------------------
22B0 ; START OF FUNCTION CHUNK FOR update_player_sprite
22B0
22B0 loc_22B0:                                                   ; 2225
22B0                         ld      a, (ix+46h)
22B3                         or      a
22B4                         jr      nz, loc_22E1
22B6                         ld      a, (ix+8)
22B9                         sub     8
22BB                         ld      (iy+3), a
22BE                         ld      a, 19h
22C0                         ld      (iy+0), a
22C3                         call    sub_2848
22C6                         ld      de, 4
22C9                         ld      a, (ticker_countup)         ; Get ticker for animation
22CC                         and     0Fh                         ; 0 - 15
22CE                         bit     3, a                        ; ever half second I guess
22D0                         jr      z, player_in_water          ; Swap between both hand sprites
22D2                         ld      a, 66h ; 'f'                ; The hand fist in water sprite1
22D4                         jr      water_sprite
22D6 ; ---------------------------------------------------------------------------
22D6
22D6 player_in_water:                                            ; 22D0
22D6                         ld      a, 4Dh ; 'M'                ; The hand fist in water sprite2
22D8
22D8 water_sprite:                                               ; 22D4
22D8                         ld      b, 1                        ; Only 1 sprite to show
22DA                         call    player_sprite_code
22DD                         ld      b, 7                        ; Wipe all 7 other sprites for player
22DF                         rst     do_sprite_clear_loop
22E0                         ret
22E1 ; ---------------------------------------------------------------------------
22E1
22E1 loc_22E1:                                                   ; 22B4
22E1                         ld      a, (ix+46h)
22E4                         cp      0Eh
22E6                         jp      c, loc_232C
22E9                         ld      a, (ix+15h)
22EC                         or      a
22ED                         jr      nz, loc_22FD
22EF                         ld      a, (ix+3)
22F2                         cp      18h
22F4                         jr      nc, loc_22FC
22F6                         ld      hl, grimmace_table
22F9                         xor     a
22FA                         jr      loc_2300
22FC ; ---------------------------------------------------------------------------
22FC
22FC loc_22FC:                                                   ; 22F4
22FC                         xor     a
22FD
22FD loc_22FD:                                                   ; 22ED
22FD                         ld      hl, player_head_look_table
2300
2300 loc_2300:                                                   ; 22FA
2300                         call    setup_sprite_X_Y
2303                         ld      a, (ix+8)
2306                         ld      (iy+7), a
2309                         sub     10h
230B                         ld      (iy+3), a
230E                         ld      a, (ix+46h)
2311                         and     0Fh
2313                         sla     a
2315                         ld      b, a
2316                         ld      a, 4
2318                         add     a, b
2319                         ld      (iy+0), a
231C                         ld      (iy+4), a
231F                         call    sub_2848
2322                         ld      de, 4
2325                         ld      b, 2
2327                         call    sprite_code_update
232A                         jr      loc_232F
232C ; ---------------------------------------------------------------------------
232C
232C loc_232C:                                                   ; 22E6
232C                         ld      b, 2
232E                         rst     do_sprite_clear_loop
232F
232F loc_232F:                                                   ; 232A
232F                         ld      a, (ix+8)
2332                         ld      (iy+7), a
2335                         sub     10h
2337                         ld      (iy+3), a
233A                         ld      a, 19h
233C                         ld      (iy+0), a
233F                         ld      (iy+4), a
2342                         ld      a, (ix+46h)
2345                         cp      4
2347                         jr      c, splash_down_sprite
2349                         cp      8
234B                         jr      c, double_splash
234D                         cp      0Ch
234F                         jr      c, loc_235B
2351                         ld      a, 0C5h
2353                         ld      b, 0C6h
2355                         ld      c, 1
2357                         ld      d, 1
2359                         jr      loc_238D
235B ; ---------------------------------------------------------------------------
235B
235B loc_235B:                                                   ; 234F
235B                         ld      a, 0C6h
235D                         ld      b, 0C5h
235F                         ld      c, 11h
2361                         ld      d, 11h
2363                         jr      loc_238D
2365 ; ---------------------------------------------------------------------------
2365
2365 double_splash:                                              ; 234B
2365                         ld      a, 0C7h
2367                         ld      b, 0C7h
2369                         ld      c, 1                        ; Two splashes one reversed the other not
236B                         ld      d, 11h
236D                         jr      loc_238D
236F ; ---------------------------------------------------------------------------
236F
236F splash_down_sprite:                                         ; 2347
236F                         ld      a, (ix+8)                   ; X Cord
2372                         sub     8                           ; -8
2374                         ld      (iy+3), a                   ; Save to sprite X
2377                         ld      a, 19h                      ; Y at fixed position
2379                         ld      (iy+0), a                   ; Save to sprite Y
237C                         ld      (iy+2), 0C8h                ; Splash of Water
2380                         ld      (iy+1), 1                   ; Palette for water
2384                         ld      de, 4                       ; move to next sprite
2387                         add     iy, de                      ; advance the pointer
2389                         ld      b, 5                        ; Clear next 5 sprites
238B                         rst     do_sprite_clear_loop
238C                         ret
238D ; ---------------------------------------------------------------------------
238D
238D loc_238D:                                                   ; 2359 2363 
238D                         ld      (iy+2), a                   ; First sprite code
2390                         ld      (iy+6), b                   ; 2nd sprite code
2393                         ld      (iy+1), c                   ; First palette blue water
2396                         ld      (iy+5), d                   ; 1st palette but reversed sprite
2399                         ld      de, 8                       ; Advance 2 sprites on
239C                         add     iy, de                      ; Advance pointer
239E                         ld      b, 4                        ; Clear next 4 sprites
23A0                         rst     do_sprite_clear_loop
23A1                         ret
23A2 ; ---------------------------------------------------------------------------
23A2
23A2 loc_23A2:                                                   ; 222C 26F0↓j
23A2                         ld      hl, jumping_frames
23A5                         xor     a
23A6                         call    setup_sprite_X_Y
23A9                         call    super_sprite_2x2
23AC                         ld      de, 10h
23AF                         add     iy, de
23B1                         ld      a, (ix+21h)
23B4                         or      a
23B5                         jp      nz, player_punching_sprites
23B8                         ld      a, (ix+4Eh)
23BB                         or      a
23BC                         jp      nz, loc_2762
23BF                         ld      a, (ix+15h)
23C2                         or      a
23C3                         jr      nz, loc_23D3
23C5                         ld      a, (ix+3)
23C8                         cp      18h
23CA                         jr      nc, loc_23D2
23CC                         ld      hl, grimmace_table
23CF                         xor     a
23D0                         jr      loc_23D6
23D2 ; ---------------------------------------------------------------------------
23D2
23D2 loc_23D2:                                                   ; 23CA
23D2                         xor     a
23D3
23D3 loc_23D3:                                                   ; 23C3
23D3                         ld      hl, player_head_look_table
23D6
23D6 loc_23D6:                                                   ; 23D0
23D6                         call    setup_sprite_X_Y
23D9                         call    super_sprite_2x2
23DC                         ret
23DD ; ---------------------------------------------------------------------------
23DD
23DD player_jumping:                                             ; 21DE
23DD                         ld      hl, jumping_frames
23E0                         xor     a
23E1                         call    setup_sprite_X_Y
23E4                         call    super_sprite_2x2
23E7                         ld      de, 10h
23EA                         add     iy, de
23EC                         xor     a
23ED                         ld      hl, cover_eyes
23F0                         call    setup_sprite_X_Y
23F3                         call    super_sprite_2x2
23F6                         ret
23F7 ; ---------------------------------------------------------------------------
23F7
23F7 player_faling:                                              ; 2268 24A2↓j
23F7                         ld      hl, jumping_frames
23FA                         xor     a
23FB                         call    setup_sprite_X_Y
23FE                         call    super_sprite_2x2
2401                         ld      de, 10h
2404                         add     iy, de
2406                         ld      a, (ix+20h)
2409                         cp      59h ; 'Y'
240B                         jr      z, loc_2418
240D                         ld      a, (ix+1Fh)
2410                         cp      0Ah
2412                         jr      c, loc_2422
2414                         ld      a, 1
2416                         jr      loc_2423
2418 ; ---------------------------------------------------------------------------
2418
2418 loc_2418:                                                   ; 240B
2418                         ld      a, (ix+1Fh)
241B                         or      a
241C                         jr      nz, loc_2422
241E                         ld      (ix+20h), 1
2422
2422 loc_2422:                                                   ; 2412 241C
2422                         xor     a
2423
2423 loc_2423:                                                   ; 2416
2423                         ld      hl, cover_eyes
2426                         call    setup_sprite_X_Y
2429                         call    super_sprite_2x2
242C                         ret
242D ; ---------------------------------------------------------------------------
242D
242D player_fell_on_floor:                                       ; 226D
242D                         ld      hl, player_fell_on_floor
2430                         ld      a, (ix+1Fh)
2433                         cp      10h
2435                         jr      nc, loc_243A
2437                         xor     a
2438                         jr      loc_243C
243A ; ---------------------------------------------------------------------------
243A
243A loc_243A:                                                   ; 2435
243A                         ld      a, 1
243C
243C loc_243C:                                                   ; 2438
243C                         call    setup_sprite_X_Y
243F                         call    super_sprite_2x2
2442                         ld      de, 10h
2445                         add     iy, de
2447                         ld      b, 4
2449                         rst     do_sprite_clear_loop
244A                         ret
244B ; ---------------------------------------------------------------------------
244B
244B loc_244B:                                                   ; 21FA
244B                         ld      a, (ix+8)                   ; X cordinate
244E                         sub     8                           ; -8
2450                         ld      (iy+3), a                   ; now is first sprite x
2453                         ld      a, (ix+0Ah)                 ; Y cordinate
2456                         add     a, 8                        ; +8 which is up screen
2458                         ld      (iy+0), a                   ; first sprite y
245B                         ld      (iy+1), 3
245F                         ld      (iy+2), 0FEh                ; 1000 Points (sprite)
2463                         ld      de, 4
2466                         add     iy, de
2468                         ld      b, 7                        ; Clear last 7 sprites
246A                         rst     do_sprite_clear_loop
246B                         ret
246C ; ---------------------------------------------------------------------------
246C
246C loc_246C:                                                   ; 21E6
246C                         ld      a, (ix+1Fh)
246F                         cp      1Eh
2471                         jr      c, loc_2488
2473                         cp      28h ; '('
2475                         jr      c, loc_2490
2477                         cp      3Ch ; '<'
2479                         jr      c, loc_247D
247B                         jr      loc_2485
247D ; ---------------------------------------------------------------------------
247D
247D loc_247D:                                                   ; 2479
247D                         and     2
247F                         jp      z, loc_25C2
2482                         jp      loc_25BB
2485 ; ---------------------------------------------------------------------------
2485
2485 loc_2485:                                                   ; 247B
2485                         jp      loc_25C2
2488 ; ---------------------------------------------------------------------------
2488
2488 loc_2488:                                                   ; 2471
2488                         and     2
248A                         jp      z, loc_25BB
248D                         jp      loc_25B4
2490 ; ---------------------------------------------------------------------------
2490
2490 loc_2490:                                                   ; 2475
2490                         jp      loc_25BB
2493 ; ---------------------------------------------------------------------------
2493
2493 loc_2493:                                                   ; 24AA↓j
2493                         ld      a, (ix+43h)
2496                         or      a
2497                         jp      nz, loc_2534
249A                         jp      loc_25C2
249D ; ---------------------------------------------------------------------------
249D
249D loc_249D:                                                   ; 21F5
249D                         ld      a, (ix+16h)
24A0                         cp      5
24A2                         jp      z, player_faling
24A5                         ld      a, (ix+16h)
24A8                         cp      0Ch
24AA                         jr      z, loc_2493
24AC                         ld      a, (ix+16h)
24AF                         cp      0Bh
24B1                         jp      z, loc_2599
24B4                         ld      a, (ix+43h)
24B7                         or      a
24B8                         jr      nz, loc_2506
24BA                         ld      a, (ix+1Fh)
24BD                         cp      3Ch ; '<'
24BF                         jp      c, loc_24CA
24C2                         and     2
24C4                         jp      z, loc_25C2
24C7                         jp      loc_25BB
24CA ; ---------------------------------------------------------------------------
24CA
24CA loc_24CA:                                                   ; 24BF
24CA                         cp      32h ; '2'
24CC                         jp      nc, loc_25BB
24CF                         cp      14h
24D1                         jp      c, loc_24DC
24D4                         and     2
24D6                         jp      z, loc_25BB
24D9                         jp      loc_25B4
24DC ; ---------------------------------------------------------------------------
24DC
24DC loc_24DC:                                                   ; 24D1
24DC                         cp      0Ah
24DE                         jp      nc, loc_25B4
24E1                         ld      a, (ix+43h)
24E4                         or      a
24E5                         jp      nz, loc_256B
24E8                         ld      a, (ix+1Fh)
24EB                         cp      3
24ED                         jp      nc, loc_25AD
24F0                         ld      a, (ix+8)
24F3                         cp      80h
24F5                         jp      c, loc_24FF
24F8                         ld      (ix+1Dh), 0                 ; Player sprite direction (0,1)
24FC                         jp      loc_25AD
24FF ; ---------------------------------------------------------------------------
24FF
24FF loc_24FF:                                                   ; 24F5
24FF                         ld      (ix+1Dh), 1
2503                         jp      loc_25AD
2506 ; ---------------------------------------------------------------------------
2506
2506 loc_2506:                                                   ; 24B8
2506                         ld      a, (ix+1Fh)
2509                         cp      3Ch ; '<'
250B                         jp      c, loc_2516
250E                         and     2
2510                         jp      z, loc_2538
2513                         jp      loc_2534
2516 ; ---------------------------------------------------------------------------
2516
2516 loc_2516:                                                   ; 250B
2516                         cp      32h ; '2'
2518                         jp      nc, loc_2534
251B                         cp      14h
251D                         jp      c, loc_2528
2520                         and     2
2522                         jp      z, loc_2534
2525                         jp      loc_2530
2528 ; ---------------------------------------------------------------------------
2528
2528 loc_2528:                                                   ; 251D
2528                         cp      0Ah
252A                         jp      nc, loc_2530
252D                         jp      loc_256B
2530 ; ---------------------------------------------------------------------------
2530
2530 loc_2530:                                                   ; 2525 252A
2530                         ld      b, 0C9h
2532                         jr      loc_253A
2534 ; ---------------------------------------------------------------------------
2534
2534 loc_2534:                                                   ; 2497 2513 
2534                         ld      b, 4Eh ; 'N'
2536                         jr      loc_253A
2538 ; ---------------------------------------------------------------------------
2538
2538 loc_2538:                                                   ; 2510
2538                         ld      b, 4Dh ; 'M'
253A
253A loc_253A:                                                   ; 2532 2536
253A                         ld      a, (ix+8)
253D                         sub     8
253F                         ld      (iy+3), a
2542                         ld      a, 19h
2544                         ld      (iy+0), a
2547                         call    sub_2848
254A                         ld      de, 0
254D                         ld      a, b
254E                         ld      b, 1
2550                         call    player_sprite_code
2553                         ld      a, (iy+2)
2556                         cp      0C9h
2558                         jr      nz, loc_2562
255A                         ld      a, (iy+1)
255D                         and     13h
255F                         ld      (iy+1), a
2562
2562 loc_2562:                                                   ; 2558 2597↓j
2562                         ld      de, 4
2565                         add     iy, de
2567                         ld      b, 7
2569                         rst     do_sprite_clear_loop
256A                         ret
256B ; ---------------------------------------------------------------------------
256B
256B loc_256B:                                                   ; 24E5 252D 
256B                         ld      a, (ix+8)
256E                         cp      80h
2570                         jr      c, loc_2578
2572                         ld      (ix+1Dh), 0
2576                         jr      loc_257C
2578 ; ---------------------------------------------------------------------------
2578
2578 loc_2578:                                                   ; 2570
2578                         ld      (ix+1Dh), 1
257C
257C loc_257C:                                                   ; 2576
257C                         ld      a, (ix+8)
257F                         sub     8
2581                         ld      (iy+3), a
2584                         ld      a, 19h
2586                         ld      (iy+0), a
2589                         ld      de, 0
258C                         ld      b, 1
258E                         ld      a, 0CAh
2590                         call    player_sprite_code
2593                         ld      (iy+1), 3
2597                         jr      loc_2562
2599 ; ---------------------------------------------------------------------------
2599
2599 loc_2599:                                                   ; 24B1
2599                         ld      a, (ix+43h)
259C                         or      a
259D                         jr      nz, loc_256B
259F                         ld      a, (ix+1Fh)
25A2                         bit     2, a
25A4                         jr      z, loc_25AD
25A6                         ld      a, 45h ; 'E'
25A8                         ld      hl, tiny_human_longstride
25AB                         jr      loc_25C7
25AD ; ---------------------------------------------------------------------------
25AD
25AD loc_25AD:                                                   ; 24ED 24FC 
25AD                         ld      a, 44h ; 'D'
25AF                         ld      hl, tiny_human_walkingoff
25B2                         jr      loc_25C7
25B4 ; ---------------------------------------------------------------------------
25B4
25B4 loc_25B4:                                                   ; 248D 24D9 
25B4                         ld      a, 43h ; 'C'
25B6                         ld      hl, tiny_human_sitting
25B9                         jr      loc_25C7
25BB ; ---------------------------------------------------------------------------
25BB
25BB loc_25BB:                                                   ; 2482 248A 
25BB                         ld      a, 42h ; 'B'
25BD                         ld      hl, turn_back_to_human
25C0                         jr      loc_25C7
25C2 ; ---------------------------------------------------------------------------
25C2
25C2 loc_25C2:                                                   ; 247F
25C2                                                             ; loc_2485 
25C2                         ld      a, 41h ; 'A'
25C4                         ld      hl, player_fell_on_floor
25C7
25C7 loc_25C7:                                                   ; 25AB 25B2 
25C7                         xor     a
25C8                         call    setup_sprite_X_Y
25CB                         call    super_sprite_2x2
25CE                         ld      de, 10h
25D1                         add     iy, de
25D3                         ld      b, 4
25D5                         rst     do_sprite_clear_loop
25D6                         ret
25D6 ; END OF FUNCTION CHUNK FOR update_player_sprite
25D6 ; ---------------------------------------------------------------------------
25D7 player_fell_on_floor:   dw die1_right                       ; player_fell_on_floor↑o
25D7                                                             ; 25C4↑o
25D9                         dw die1_left
25DB                         dw die2_right
25DD                         dw die2_left
25DF turn_back_to_human:     dw half_man_right                   ; 25BD↑o
25E1                         dw half_mane_left
25E3                         dw half_man_right
25E5                         dw half_mane_left
25E7 tiny_human_sitting:     dw sitting_man_left                 ; 25B6↑o
25E9                         dw sitting_man_right
25EB                         dw sitting_man_left
25ED                         dw sitting_man_right
25EF tiny_human_walkingoff:  dw naked_man1_left                  ; 25AF↑o
25F1                         dw naked_man1_right
25F3                         dw naked_man1_left
25F5                         dw naked_man1_right
25F7 tiny_human_longstride:  dw naked_walk_left                  ; 25A8↑o
25F9                         dw naked_walk_right
25FB                         dw naked_walk_left
25FD                         dw naked_walk_right
25FF
25FF ; =============== S U B R O U T I N E =======================================
25FF
25FF
25FF sprite_body_legs:                                           ; 2236↑p
25FF                                                             ; climbing_slipping_feet↑p 
25FF                         ld      a, (ix+16h)                 ; Player Control status
2602                         cp      2
2604                         jr      z, player_climbing
2606                         cp      3
2608                         jr      z, player_walking
260A                         cp      1
260C                         jr      z, player_walking
260E                         ret
260F ; ---------------------------------------------------------------------------
260F
260F player_climbing:                                            ; 2604
260F                         ld      hl, climbing_frames
2612                         jr      do_animation
2614 ; ---------------------------------------------------------------------------
2614
2614 player_walking:                                             ; 2608 260C
2614                         ld      hl, walking_frames
2617
2617 do_animation:                                               ; 2612
2617                         ld      a, (ix+10h)                 ; Animation frame
2617 ; End of function sprite_body_legs
2617
261A
261A ; =============== S U B R O U T I N E =======================================
261A
261A
261A setup_sprite_X_Y:                                           ; 227B↑p 228A↑p 
261A                         sla     a                           ; A passes as the animation offset
261C                         sla     a                           ; Value * 4
261E                         ld      d, (ix+1Dh)                 ; Direction for player
261E                                                             ; 0 facing right (needs sprites flipped)
261E                                                             ; 1 facing left (default sprite definitions)
2621
2621 loc_2621:                                                   ; 22A9↑p
2621                         sla     d                           ; Direction * 2
2623                         add     a, d                        ; So animation * 4 + direction * 2
2624                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
2627                         ld      a, (hl)                     ; Read table add value
2628                         add     a, (ix+8)                   ; Add to x cordinate
262B                         ld      b, a                        ; Save to b register
262C                         inc     hl                          ; Next table value
262D                         ld      a, (hl)                     ; Read table add value
262E                         add     a, (ix+0Ah)                 ; Add to y cordinate (or subtract!)
2631                         ld      c, a                        ; Save to c
2632                         inc     hl                          ; advance pointer
2633                         ret
2633 ; End of function setup_sprite_X_Y
2633
2634 ; ---------------------------------------------------------------------------
2634                         ld      b, (ix+8)
2637                         ld      c, (ix+0Ah)
263A                         ret
263A ; ---------------------------------------------------------------------------
263B walking_frames:         dw walk_frame0right                 ; player_walking↑o
263B                                                             ; Animation (0) Direction 0
263D                         dw walk_frame0                      ; Animation (0) Direction 1
263F                         dw walk_frame1right                 ; Animation (1) Direction 0
2641                         dw walk_frame1                      ; Animation (1) Direction 1
2643                         dw walk_frame2right                 ; Animation (2) Direction 0
2645                         dw walk_frame2                      ; Animation (2) Direction 1
2647 climbing_frames:        dw climb_frame0right                ; player_climbing↑o
2647                                                             ; Animation (0) Direction 0
2649                         dw climb_frame0                     ; Animation (0) Direction 1
264B                         dw climb_frame1right                ; Animation (1) Direction 0
264D                         dw climb_frame1                     ; Animation (1) Direction 1
264F about_to_fall:          dw fall_frames_right                ; 2277↑o
264F                                                             ; loc_28AD↓o
2651                         dw fall_frames
2653 yikes_falling:          dw yikes_frame_right                ; 2287↑o
2655                         dw yikes_frame
2657 yikes_unused:           dw unused_right                     ; 229F↑o
2657                                                             ; This had the yikes falling but adjusted position
2659                         dw unused_left                      ; This had the yikes falling but adjusted position
265B jumping_frames:         dw jump_right                       ; loc_23A2↑o
265B                                                             ; player_jumping↑o 
265B                                                             ; Jump facing right
265D                         dw jump_left                        ; Jump Facing left
265F cover_eyes:             dw cover_eyes_right                 ; 23ED↑o
265F                                                             ; loc_2423↑o
2661                         dw cover_eyes_left
2663                         dw yikes_frame_right
2665                         dw yikes_frame
2667 ; ---------------------------------------------------------------------------
2667 ; START OF FUNCTION CHUNK FOR update_player_sprite
2667
2667 loc_2667:                                                   ; 2216
2667                         call    sub_224F
266A                         ld      a, (ix+25h)
266D                         or      a
266E                         jp      z, loc_267A
2671                         ld      hl, jumping_frames
2674                         xor     a
2675                         call    setup_sprite_X_Y
2678                         jr      loc_267D
267A ; ---------------------------------------------------------------------------
267A
267A loc_267A:                                                   ; 266E
267A                         call    sprite_body_legs
267D
267D loc_267D:                                                   ; 2678
267D                         call    super_sprite_2x2
2680                         ld      de, 10h
2683                         add     iy, de
2685                         ld      a, (ix+2Bh)
2688                         cp      0F0h
268A                         jr      nc, loc_26D0
268C                         cp      56h ; 'V'
268E                         jr      nc, loc_269A
2690                         cp      42h ; 'B'
2692                         jr      nc, loc_26D0
2694                         bit     3, a
2696                         jr      nz, loc_26B4
2698                         jr      loc_26B0
269A ; ---------------------------------------------------------------------------
269A
269A loc_269A:                                                   ; 268E
269A                         ld      a, (ix+47h)
269D                         cp      40h ; '@'
269F                         jr      z, loc_26AC
26A1                         ld      a, (ix+2Bh)
26A4                         cp      0E8h
26A6                         jr      nc, loc_26AC
26A8                         cp      0DEh
26AA                         jr      nc, loc_26D0
26AC
26AC loc_26AC:                                                   ; 269F 26A6
26AC                         ld      a, 3
26AE                         jr      loc_26D1
26B0 ; ---------------------------------------------------------------------------
26B0
26B0 loc_26B0:                                                   ; 2698
26B0                         ld      a, 2
26B2                         jr      loc_26D1
26B4 ; ---------------------------------------------------------------------------
26B4
26B4 loc_26B4:                                                   ; 2696
26B4                         and     7
26B6                         jr      nz, loc_26CC
26B8                         ld      a, (ix+2)
26BB                         ld      c, 32h ; '2'
26BD                         or      a
26BE                         jr      z, loc_26C8
26C0                         ld      c, 31h ; '1'
26C2                         cp      1
26C4                         jr      z, loc_26C8
26C6                         ld      c, 33h ; '3'
26C8
26C8 loc_26C8:                                                   ; 26BE 26C4
26C8                         push    bc
26C9                         rst     dispatch_sound
26CA                         pop     bc
26CB                         rst     dispatch_sound
26CC
26CC loc_26CC:                                                   ; 26B6
26CC                         ld      a, 1
26CE                         jr      loc_26D1
26D0 ; ---------------------------------------------------------------------------
26D0
26D0 loc_26D0:                                                   ; 268A 2692 
26D0                         xor     a
26D1
26D1 loc_26D1:                                                   ; 26AE 26B2 
26D1                         ld      hl, eat_something_frames
26D4                         call    setup_sprite_X_Y
26D7                         call    super_sprite_2x2
26DA                         ret
26DA ; END OF FUNCTION CHUNK FOR update_player_sprite
26DA ; ---------------------------------------------------------------------------
26DB eat_something_frames:   dw face_eat_right                   ; loc_26D1↑o
26DB                                                             ; 0 - 3 frames of animation with reversed data tables interwoven
26DD                         dw face_eat_left
26DF                         dw face_chew1_right
26E1                         dw face_chew1_left
26E3                         dw face_chew2_right
26E5                         dw face_chew2_left
26E7                         dw face_choke_right
26E9                         dw face_choke_left
26EB ; ---------------------------------------------------------------------------
26EB ; START OF FUNCTION CHUNK FOR update_player_sprite
26EB
26EB loc_26EB:                                                   ; 21FF
26EB                         ld      a, (ix+16h)                 ; Get player action
26EE                         cp      0Dh                         ; riding along the hot air baloon
26F0                         jp      nz, loc_23A2
26F3                         ld      hl, jumping_frames          ; players feet is just same as jumping
26F6                         xor     a                           ; And set animation frame as none
26F7                         call    setup_sprite_X_Y
26FA                         call    super_sprite_2x2
26FD                         ld      de, 10h
2700                         add     iy, de
2702                         ld      hl, player_punchup_table
2705                         xor     a
2706                         call    setup_sprite_X_Y
2709                         call    super_sprite_2x2
270C                         jp      loc_27D7
270C ; END OF FUNCTION CHUNK FOR update_player_sprite
270F
270F ; =============== S U B R O U T I N E =======================================
270F
270F
270F sprite_head_arms:                                           ; 2248↑p
270F                         ld      a, (ix+4Eh)
2712                         or      a
2713                         jr      nz, sub_2739
2715                         ld      a, (ix+15h)                 ; Player looking direction
2718                         or      a
2719                         jr      nz, loc_2729
271B                         ld      a, (ix+3)
271E                         cp      18h
2720                         jr      nc, loc_2728
2722                         ld      hl, grimmace_table
2725                         xor     a
2726                         jr      loc_272C
2728 ; ---------------------------------------------------------------------------
2728
2728 loc_2728:                                                   ; 2720
2728                         xor     a
2729
2729 loc_2729:                                                   ; 2719
2729                         ld      hl, player_head_look_table
272C
272C loc_272C:                                                   ; 2726
272C                         jp      setup_sprite_X_Y
272C ; End of function sprite_head_arms
272C
272F ; ---------------------------------------------------------------------------
272F ; START OF FUNCTION CHUNK FOR update_player_sprite
272F
272F player_punching_sprites:                                    ; 2245 23B5
272F                         call    sub_2769
2732                         call    super_sprite_2x2
2735                         call    sub_2782
2738                         ret
2738 ; END OF FUNCTION CHUNK FOR update_player_sprite
2739
2739 ; =============== S U B R O U T I N E =======================================
2739
2739
2739 sub_2739:                                                   ; 2713
2739                                                             ; loc_2762↓p
2739                         ld      a, (ix+4Eh)
273C                         cp      0FFh
273E                         jr      nz, loc_275B
2740                         ld      a, (ticker_countup)
2743                         and     0Fh
2745                         cp      8
2747                         ld      c, 3Ch ; '<'
2749                         call    z, do_sound
274C                         ld      a, (ticker_countup)
274F                         and     0Ch
2751                         cp      0Ch
2753                         jr      z, loc_275B
2755                         srl     a
2757                         srl     a
2759                         jr      loc_275C
275B ; ---------------------------------------------------------------------------
275B
275B loc_275B:                                                   ; 273E 2753
275B                         xor     a
275C
275C loc_275C:                                                   ; 2759
275C                         ld      hl, grab_person_table
275F                         jp      setup_sprite_X_Y
275F ; End of function sub_2739
275F
2762 ; ---------------------------------------------------------------------------
2762 ; START OF FUNCTION CHUNK FOR update_player_sprite
2762
2762 loc_2762:                                                   ; 23BC
2762                         call    sub_2739
2765                         call    super_sprite_2x2
2768                         ret
2768 ; END OF FUNCTION CHUNK FOR update_player_sprite
2769
2769 ; =============== S U B R O U T I N E =======================================
2769
2769
2769 sub_2769:                                                   ; player_punching_sprites↑p
2769                         ld      a, (ix+15h)
276C                         or      a
276D                         jr      nz, loc_277B
276F                         ld      a, (ix+1Dh)
2772                         or      a
2773                         jr      nz, loc_2779
2775                         ld      a, 2
2777                         jr      loc_277B
2779 ; ---------------------------------------------------------------------------
2779
2779 loc_2779:                                                   ; 2773
2779                         ld      a, 4
277B
277B loc_277B:                                                   ; 276D 2777
277B                         dec     a
277C                         ld      hl, player_punch_table
277F                         jp      setup_sprite_X_Y
277F ; End of function sub_2769
277F
2782
2782 ; =============== S U B R O U T I N E =======================================
2782
2782
2782 sub_2782:                                                   ; 2735↑p
2782                         ld      a, (ix+15h)
2785                         or      a
2786                         ret     z
2787                         cp      2
2789                         jr      z, loc_27AC
278B                         cp      4
278D                         jr      z, loc_2798
278F                         cp      1
2791                         jr      z, loc_27C0
2793                         cp      3
2795                         jr      z, loc_27E8
2797                         ret
2798 ; ---------------------------------------------------------------------------
2798
2798 loc_2798:                                                   ; 278D
2798                         ld      a, (ix+1Dh)
279B                         or      a
279C                         ret     nz
279D                         ld      a, (iy+0)
27A0                         ld      (iy+0Ch), a
27A3                         ld      a, (iy+3)
27A6                         sub     10h
27A8                         ld      (iy+0Fh), a
27AB                         ret
27AC ; ---------------------------------------------------------------------------
27AC
27AC loc_27AC:                                                   ; 2789
27AC                         ld      a, (ix+1Dh)
27AF                         or      a
27B0                         ret     z
27B1                         ld      a, (iy+0)
27B4                         ld      (iy+8), a
27B7                         ld      a, (iy+7)
27BA                         add     a, 10h
27BC                         ld      (iy+0Bh), a
27BF                         ret
27C0 ; ---------------------------------------------------------------------------
27C0
27C0 loc_27C0:                                                   ; 2791
27C0                         ld      a, (ix+1Dh)
27C3                         or      a
27C4                         jr      z, loc_27D7
27C6                         ld      a, (iy+0Ch)
27C9                         add     a, 20h ; ' '
27CB                         ld      (iy+0Ch), a
27CE                         ld      a, (iy+0Fh)
27D1                         sub     8
27D3                         ld      (iy+0Fh), a
27D6                         ret
27D7 ; ---------------------------------------------------------------------------
27D7
27D7 loc_27D7:                                                   ; 270C 27C4
27D7                         ld      a, (iy+8)
27DA                         add     a, 20h ; ' '
27DC                         ld      (iy+8), a
27DF                         ld      a, (iy+0Bh)
27E2                         add     a, 8
27E4                         ld      (iy+0Bh), a
27E7                         ret
27E8 ; ---------------------------------------------------------------------------
27E8
27E8 loc_27E8:                                                   ; 2795
27E8                         ld      a, (ix+1Dh)
27EB                         or      a
27EC                         jr      z, loc_27FF
27EE                         ld      a, (iy+0Ch)
27F1                         sub     10h
27F3                         ld      (iy+8), a
27F6                         ld      a, (iy+0Fh)
27F9                         sub     8
27FB                         ld      (iy+0Bh), a
27FE                         ret
27FF ; ---------------------------------------------------------------------------
27FF
27FF loc_27FF:                                                   ; 27EC
27FF                         ld      a, (iy+8)
2802                         sub     10h
2804                         ld      (iy+0Ch), a
2807                         ld      a, (iy+0Bh)
280A                         add     a, 8
280C                         ld      (iy+0Fh), a
280F                         ret
280F ; End of function sub_2782
280F
280F ; ---------------------------------------------------------------------------
2810 grimmace_table:         dw face_grimmace_right              ; 22F6↑o 23CC↑o 
2812                         dw face_grimmace_left
2814 grab_person_table:      dw face_grab_girl_right             ; loc_275C↑o
2816                         dw face_grab_girl
2818                         dw face_slapped1_right
281A                         dw face_slapped1_left
281C                         dw face_slapped2_right
281E                         dw face_slapped2_left
2820 player_head_look_table: dw face_look_right                  ; loc_22FD↑o
2820                                                             ; loc_23D3↑o 
2822                         dw face_look_left
2824                         dw face_look_up_right
2826                         dw face_look_up_left
2828                         dw face_walk_right
282A                         dw face_look_behind_left
282C                         dw face_look_down_right
282E                         dw face_look_down_left
2830                         dw face_look_behind_right
2832                         dw face_walk_left
2834 player_punch_table:     dw face_punch_up_right              ; 277C↑o
2836                         dw face_punch_up_left
2838                         dw face_punch_right
283A                         dw face_extented_punch_right
283C                         dw face_punch_down_right
283E                         dw face_punch_down_left
2840                         dw face_extented_punch_left
2842                         dw face_punch_left
2844 player_punchup_table:   dw face_punch_up_right              ; 2702↑o
2846                         dw face_punch_up_left
2848
2848 ; =============== S U B R O U T I N E =======================================
2848
2848
2848 sub_2848:                                                   ; 22C3↑p 231F↑p 
2848                         ld      a, (ix+1Dh)
284B                         or      a
284C                         jr      nz, loc_2851
284E                         ld      c, 13h
2850                         ret
2851 ; ---------------------------------------------------------------------------
2851
2851 loc_2851:                                                   ; 284C
2851                         ld      c, 3
2853                         ret
2853 ; End of function sub_2848
2853
2854 ; ---------------------------------------------------------------------------
2854 ; START OF FUNCTION CHUNK FOR update_player_sprite
2854
2854 loc_2854:                                                   ; 221D
2854                         ld      a, (ix+1Bh)
2857                         cp      2Dh ; '-'
2859                         jp      nc, loc_2220
285C                         cp      28h ; '('
285E                         jp      nc, loc_28AD
2861                         cp      5
2863                         jp      c, loc_28AD
2866
2866 loc_2866:                                                   ; 220F
2866                         ld      b, 2
2868                         rst     do_sprite_clear_loop
2869                         ld      bc, 0
286C                         ld      a, (ix+2)
286F                         or      a
2870                         jr      z, loc_287A
2872                         ld      b, 8
2874                         cp      1
2876                         jr      z, loc_287A
2878                         ld      c, 80h
287A
287A loc_287A:                                                   ; 2870 2876
287A                         ld      a, (ix+8)
287D                         ld      (iy+7), a
2880                         sub     10h
2882                         ld      (iy+3), a
2885                         ld      a, (ix+0Ah)
2888                         add     a, 20h ; ' '
288A                         ld      (iy+0), a
288D                         ld      (iy+4), a
2890                         ld      a, 3
2892                         add     a, b
2893                         ld      (iy+1), a
2896                         add     a, 10h
2898                         ld      (iy+5), a
289B                         ld      a, 49h ; 'I'
289D                         add     a, c
289E                         ld      (iy+2), a
28A1                         ld      (iy+6), a
28A4                         ld      de, 8
28A7                         add     iy, de
28A9                         call    sub_28C7
28AC                         ret
28AD ; ---------------------------------------------------------------------------
28AD
28AD loc_28AD:                                                   ; 285E 2863
28AD                         ld      hl, about_to_fall
28B0                         xor     a
28B1                         call    setup_sprite_X_Y
28B4                         call    super_sprite_2x2
28B7                         ld      de, 10h                     ; 4 sprites on
28BA                         add     iy, de                      ; Add to sprite base
28BC                         xor     a
28BD                         ld      hl, player_head_look_table
28C0                         call    setup_sprite_X_Y
28C3                         call    super_sprite_2x2
28C6                         ret
28C6 ; END OF FUNCTION CHUNK FOR update_player_sprite
28C7
28C7 ; =============== S U B R O U T I N E =======================================
28C7
28C7
28C7 sub_28C7:                                                   ; 28A9↑p
28C7                         ld      a, (ix+8)
28CA                         ld      (iy+7), a
28CD                         ld      (iy+0Fh), a
28D0                         sub     10h
28D2                         ld      (iy+3), a
28D5                         ld      (iy+0Bh), a
28D8                         ld      a, (ix+0Ah)
28DB                         ld      (iy+8), a
28DE                         ld      (iy+0Ch), a
28E1                         add     a, 10h
28E3                         ld      (iy+0), a
28E6                         ld      (iy+4), a
28E9                         ld      a, 6Fh ; 'o'
28EB                         add     a, c
28EC                         ld      (iy+2), a
28EF                         ld      (iy+6), a
28F2                         ld      a, 70h ; 'p'
28F4                         add     a, c
28F5                         ld      (iy+0Ah), a
28F8                         ld      (iy+0Eh), a
28FB                         ld      a, 3
28FD                         add     a, b
28FE                         ld      (iy+1), a
2901                         ld      (iy+9), a
2904                         add     a, 10h
2906                         ld      (iy+5), a
2909                         ld      (iy+0Dh), a
290C                         ret                                 ; Animation sprite table.
290C ; End of function sub_28C7                                  ; Bytes are Y add, X add, then sprites
290C
290C ; ---------------------------------------------------------------------------
290D face_look_left:         db    0, 10h,   1,   2,   3,   4    ; 2822↑o
2913 face_look_right:        db    0, 10h,   2,   1,   4,   3    ; player_head_look_table↑o
2919 face_grimmace_left:     db    0, 10h, 55h,   2, 5Eh,   4    ; 2812↑o
291F face_grimmace_right:    db    0, 10h,   2, 55h,   4, 5Eh    ; grimmace_table↑o
2925 face_walk_left:         db    0, 10h,   5,   6,   7,   8    ; 2832↑o
292B face_look_behind_right: db    0, 10h, 16h, 15h, 18h, 17h    ; 2830↑o
2931 face_look_behind_left:  db    0, 10h, 15h, 16h, 17h, 18h    ; 282A↑o
2937 face_walk_right:        db    0, 10h,   6,   5,   8,   7    ; 2828↑o
293D face_look_up_left:      db    0, 10h, 1Dh, 1Eh, 1Fh, 20h    ; 2826↑o
2943 face_look_up_right:     db    0, 10h, 1Eh, 1Dh, 20h, 1Fh    ; 2824↑o
2949 face_look_down_left:    db    0, 10h, 0Dh, 0Eh, 0Fh, 10h    ; 282E↑o
294F face_look_down_right:   db    0, 10h, 0Eh, 0Dh, 10h, 0Fh    ; 282C↑o
2955 face_punch_left:        db 0F8h, 1Ch,   9, 0Ah, 0Bh, 0Ch    ; 2842↑o
295B face_extented_punch_left:db    0, 10h, 1Ah, 19h, 1Bh, 1Ch   ; 2840↑o
2961 face_punch_right:       db    8, 1Ch, 0Ah,   9, 0Ch, 0Bh    ; 2838↑o
2967 face_extented_punch_right:db    0, 10h, 19h, 1Ah, 1Ch, 1Bh  ; 283A↑o
296D face_punch_up_left:     db    0, 10h, 21h, 22h, 23h, 24h    ; 2836↑o 2846↑o
2973 face_punch_up_right:    db    0, 10h, 22h, 21h, 24h, 23h    ; player_punch_table↑o
2973                                                             ; player_punchup_table↑o
2979 face_punch_down_right:  db    8, 10h, 12h, 11h, 13h, 14h    ; 283C↑o
297F face_punch_down_left:   db 0F8h, 10h, 11h, 12h, 14h, 13h    ; 283E↑o
2985 face_eat_left:          db    0, 10h, 56h, 57h, 58h, 59h    ; 26DD↑o
298B face_eat_right:         db    0, 10h, 57h, 56h, 59h, 58h    ; eat_something_frames↑o
2991 face_choke_left:        db    0, 10h, 4Ah,   6, 4Bh, 4Ch    ; 26E9↑o
2997 face_choke_right:       db    0, 10h,   6, 4Ah, 4Ch, 4Bh    ; 26E7↑o
299D face_chew1_left:        db    0, 10h, 5Ah,   2, 5Bh,   4    ; 26E1↑o
29A3 face_chew1_right:       db    0, 10h,   2, 5Ah,   4, 5Bh    ; 26DF↑o
29A9 face_chew2_left:        db    0, 10h, 5Ch,   2, 5Dh,   4    ; 26E5↑o
29AF face_chew2_right:       db    0, 10h,   2, 5Ch,   4, 5Dh    ; 26E3↑o
29B5 climb_frame0:           db    0,   0, 2Dh, 2Eh, 2Fh, 30h    ; 2649↑o
29BB climb_frame0right:      db    0,   0, 2Eh, 2Dh, 30h, 2Fh    ; climbing_frames↑o
29C1 climb_frame1:           db    0,   0, 31h, 32h, 33h, 34h    ; 264D↑o
29C7 climb_frame1right:      db    0,   0, 32h, 31h, 34h, 33h    ; 264B↑o
29CD walk_frame0:            db    0,   0, 35h, 36h, 37h, 38h    ; 263D↑o
29D3 walk_frame0right:       db    0,   0, 36h, 35h, 38h, 37h    ; walking_frames↑o
29D9 walk_frame1:            db    0,   0, 39h, 3Ah, 3Bh, 3Ch    ; 2641↑o
29DF walk_frame1right:       db    0,   0, 3Ah, 39h, 3Ch, 3Bh    ; 263F↑o
29E5 walk_frame2:            db    0,   0, 3Dh, 3Eh, 3Fh, 40h    ; 2645↑o
29EB walk_frame2right:       db    0,   0, 3Eh, 3Dh, 40h, 3Fh    ; 2643↑o
29F1 face_grab_girl:         db    0, 10h, 5Ah,   2, 6Bh,   4    ; 2816↑o
29F7 face_grab_girl_right:   db    0, 10h,   2, 5Ah,   4, 6Bh    ; grab_person_table↑o
29FD face_slapped1_left:     db    0, 10h, 6Eh,   2, 6Ch,   4    ; 281A↑o
2A03 face_slapped1_right:    db    0, 10h,   2, 6Eh,   4, 6Ch    ; 2818↑o
2A09 face_slapped2_left:     db    0, 10h, 6Eh,   2, 6Dh,   4    ; 281E↑o
2A0F face_slapped2_right:    db    0, 10h,   2, 6Eh,   4, 6Dh    ; 281C↑o
2A15                         db    8,   0,0CAh,   0,   0,   0
2A1B                         db    8,   0,0CAh,   0,   0,   0
2A21 yikes_frame:            db    0, 10h, 25h, 26h, 27h, 28h    ; 2655↑o 2665↑o
2A27 yikes_frame_right:      db    0, 10h, 26h, 25h, 28h, 27h    ; yikes_falling↑o
2A27                                                             ; 2663↑o
2A2D unused_right:           db    1, 0Eh, 25h, 26h, 27h, 28h    ; yikes_unused↑o
2A33 unused_left:            db 0FFh, 0Eh, 26h, 25h, 28h, 27h    ; 2659↑o
2A39 cover_eyes_left:        db    0, 10h, 29h, 2Ah, 2Bh, 2Ch    ; 2661↑o
2A3F cover_eyes_right:       db    0, 10h, 2Ah, 29h, 2Ch, 2Bh    ; cover_eyes↑o
2A45 fall_frames:            db    0,   0, 41h, 42h, 43h, 44h    ; 2651↑o
2A4B fall_frames_right:      db    0,   0, 42h, 41h, 44h, 43h    ; about_to_fall↑o
2A51 jump_left:              db    0,   0, 45h, 46h, 47h, 48h    ; 265D↑o
2A57 jump_right:             db    0,   0, 46h, 45h, 48h, 47h    ; jumping_frames↑o
2A5D die1_left:              db    0,   0, 4Fh, 50h, 51h, 52h    ; 25D9↑o
2A63 die1_right:             db    0,   0, 50h, 4Fh, 52h, 51h    ; player_fell_on_floor↑o
2A69 die2_left:              db    0,   0, 53h, 50h, 54h, 52h    ; 25DD↑o
2A6F die2_right:             db    0,   0, 50h, 53h, 52h, 54h    ; 25DB↑o
2A75 half_man_right:         db    0,   0, 60h, 5Fh, 62h, 61h    ; turn_back_to_human↑o
2A75                                                             ; 25E3↑o
2A7B half_mane_left:         db    0,   0, 5Fh, 60h, 61h, 62h    ; 25E1↑o 25E5↑o
2A81 sitting_man_left:       db    8,0F0h, 63h,   0,   0,   0    ; tiny_human_sitting↑o
2A81                                                             ; 25EB↑o
2A87 sitting_man_right:      db    8,0F0h, 63h,   0,   0,   0    ; 25E9↑o 25ED↑o
2A8D naked_man1_left:        db    8,0F0h, 64h,   0,   0,   0    ; tiny_human_walkingoff↑o
2A8D                                                             ; 25F3↑o
2A93 naked_man1_right:       db    8,0F0h, 64h,   0,   0,   0    ; 25F1↑o 25F5↑o
2A99 naked_walk_left:        db    8,0F0h, 65h,   0,   0,   0    ; tiny_human_longstride↑o
2A99                                                             ; 25FB↑o
2A9F naked_walk_right:       db    8,0F0h, 65h,   0,   0,   0    ; 25F9↑o 25FD↑o
2AA5
2AA5 ; =============== S U B R O U T I N E =======================================
2AA5
2AA5
2AA5 sub_2AA5:                                                   ; 1783↑p
2AA5
2AA5 ; FUNCTION CHUNK AT 3832 SIZE 00000019 BYTES
2AA5
2AA5                         ld      (ix+2Dh), 0
2AA9                         call    byte_2AB9
2AAC                         ld      a, (ix+2Dh)
2AAF                         or      a
2AB0                         jp      z, loc_3837
2AB3                         cp      0FFh
2AB5                         jp      z, loc_3832
2AB8                         ret
2AB8 ; End of function sub_2AA5
2AB8
2AB8 ; ---------------------------------------------------------------------------
2AB9 byte_2AB9:              db 0DDh, 7Eh, 3Dh,0B7h,0C2h, 44h, 2Dh,0DDh, 7Eh, 2Bh,0B7h
2AB9                                                             ; 2AA9↑p
2AC4                         db  28h, 10h, 3Dh,0DDh
2AC8 byte_2AC8:              db  77h, 2Bh,0FEh,0CDh, 20h,   8,0DDh, 36h, 2Bh,   0,0DDh
2AC8                                                             ; 685F↓o
2AD3                         db  36h, 47h,   0
2AD6 ; ---------------------------------------------------------------------------
2AD6                         ld      a, (ix+1Bh)
2AD9                         or      a
2ADA                         jp      nz, loc_2B22
2ADD
2ADD loc_2ADD:                                                   ; 2B4F↓j
2ADD                         ld      a, (ix+16h)
2AE0                         cp      0Eh
2AE2                         jp      z, loc_2C34
2AE5                         call    sub_2CB8
2AE8                         ld      a, (ix+40h)
2AEB                         or      a
2AEC                         jp      nz, loc_2B68
2AEF                         ld      a, (ix+21h)
2AF2                         or      a
2AF3                         call    nz, sub_32F7
2AF6                         ld      a, (ix+25h)
2AF9                         or      a
2AFA                         jp      nz, loc_3437
2AFD                         ld      a, (ix+21h)
2B00                         or      a
2B01                         ret     nz
2B02                         ld      a, (ix+16h)
2B05                         cp      5
2B07                         jp      z, loc_36DD
2B0A                         ld      a, (ix+16h)
2B0D                         cp      1
2B0F                         jp      z, loc_2DBF
2B12                         cp      2
2B14                         jp      z, loc_2FE3
2B17                         cp      3
2B19                         jp      z, loc_2E7C
2B1C                         cp      0Ch
2B1E                         jp      z, loc_3788
2B21                         ret
2B22 ; ---------------------------------------------------------------------------
2B22
2B22 loc_2B22:                                                   ; 2ADA
2B22                         ld      (ix+2Dh), 0
2B26                         ld      a, (ix+1Bh)
2B29                         dec     a
2B2A                         ld      (ix+1Bh), a
2B2D                         cp      2Dh ; '-'
2B2F                         jr      nc, loc_2B4A
2B31                         ld      (ix+2Bh), 0
2B35                         cp      2Ch ; ','
2B37                         jr      nz, loc_2B4A
2B39                         ld      a, (ix+2)
2B3C                         or      a
2B3D                         ld      c, 36
2B3F                         jr      z, loc_2B49
2B41                         cp      1
2B43                         ld      c, 39
2B45                         jr      z, loc_2B49
2B47                         ld      c, 37
2B49
2B49 loc_2B49:                                                   ; 2B3F 2B45
2B49                         rst     dispatch_sound
2B4A
2B4A loc_2B4A:                                                   ; 2B2F 2B37
2B4A                         ld      a, (ix+16h)
2B4D                         cp      1
2B4F                         jp      nz, loc_2ADD
2B52                         ld      a, (ix+1Bh)
2B55                         or      a
2B56                         ret     nz
2B57                         ld      (ix+1Bh), 0
2B5B                         ld      (ix+14h), 0
2B5F                         ld      (ix+15h), 0
2B63                         ld      (ix+21h), 0
2B67                         ret
2B68 ; ---------------------------------------------------------------------------
2B68
2B68 loc_2B68:                                                   ; 2AEC
2B68                         ld      a, (ix+21h)
2B6B                         or      a
2B6C                         call    nz, sub_2C18
2B6F                         ld      a, (ix+41h)
2B72                         or      a
2B73                         jr      z, loc_2B8C
2B75                         dec     a
2B76                         ld      (ix+41h), a
2B79                         jr      z, loc_2B8C
2B7B                         ld      (ix+2Dh), 1
2B7F                         call    sub_1C7D
2B82                         ld      c, 8
2B84                         ld      a, (ix+16h)
2B87                         cp      3
2B89                         jr      z, loc_2BA2
2B8B                         ret
2B8C ; ---------------------------------------------------------------------------
2B8C
2B8C loc_2B8C:                                                   ; 2B73 2B79
2B8C                         ld      (ix+40h), 0
2B90                         ld      c, 2
2B92                         ld      a, (ix+16h)
2B95                         cp      2
2B97                         jr      z, loc_2BF3
2B99                         cp      4
2B9B                         jr      z, loc_2BF3
2B9D                         cp      3
2B9F                         jr      z, loc_2BA2
2BA1                         ret
2BA2 ; ---------------------------------------------------------------------------
2BA2
2BA2 loc_2BA2:                                                   ; 2B89 2B9F
2BA2                         push    bc
2BA3                         ld      c, (ix+17h)
2BA6                         ld      d, 3
2BA8                         ld      a, (ix+8)
2BAB                         sub     2
2BAD                         ld      e, a
2BAE                         call    sub_53E6
2BB1                         ld      a, (ix+17h)
2BB4                         call    sub_1509
2BB7                         pop     bc
2BB8                         ld      a, (byte_E025)
2BBB                         or      a
2BBC                         jr      nz, loc_2BD9
2BBE                         ld      b, (ix+8)
2BC1                         ld      a, (iy+6)
2BC4                         sub     c
2BC5                         cp      b
2BC6                         jr      nc, loc_2BD9
2BC8                         ld      a, (iy+7)
2BCB                         add     a, c
2BCC                         cp      b
2BCD                         jr      c, loc_2BD9
2BCF                         ret
2BD0 ; ---------------------------------------------------------------------------
2BD0                         ld      (ix+2Dh), 0
2BD4                         ld      (ix+40h), 0
2BD8                         ret
2BD9 ; ---------------------------------------------------------------------------
2BD9
2BD9 loc_2BD9:                                                   ; 2BBC 2BC6 
2BD9                         ld      (ix+20h), 1
2BDD                         ld      (ix+2Bh), 0
2BE1                         ld      (ix+40h), 0
2BE5                         call    sub_36B8
2BE8                         ld      a, (ix+3Bh)
2BEB                         sra     a
2BED                         and     0Fh
2BEF                         ld      (ix+3Bh), a
2BF2                         ret
2BF3 ; ---------------------------------------------------------------------------
2BF3
2BF3 loc_2BF3:                                                   ; 2B97 2B9B
2BF3                         ld      (ix+2Dh), 1
2BF7                         ld      (ix+0Ch), 0
2BFB                         ld      (ix+0Dh), 0
2BFF                         ld      (ix+0Eh), 0FEh
2C03                         ld      (ix+0Fh), 0
2C07                         ld      (ix+16h), 4
2C0B                         ld      (ix+20h), 0
2C0F                         ld      (ix+1Fh), 0
2C13                         ld      (ix+25h), 2
2C17                         ret
2C18
2C18 ; =============== S U B R O U T I N E =======================================
2C18
2C18
2C18 sub_2C18:                                                   ; 2B6C↑p
2C18                         ld      a, (ix+21h)
2C1B                         cp      2
2C1D                         jr      c, loc_2C2F
2C1F                         ld      (ix+3Fh), 0
2C23                         call    sub_732F
2C26                         ld      a, (ix+3Fh)
2C29                         or      a
2C2A                         jr      nz, loc_2C2F
2C2C                         call    sub_5118
2C2F
2C2F loc_2C2F:                                                   ; 2C1D 2C2A
2C2F                         ld      (ix+21h), 0
2C33                         ret
2C33 ; End of function sub_2C18
2C33
2C34 ; ---------------------------------------------------------------------------
2C34
2C34 loc_2C34:                                                   ; 2AE2
2C34                         ld      (ix+2Bh), 0
2C38                         push    iy
2C3A                         ld      iy, unk_E355
2C3E                         ld      a, (ix+1Ah)
2C41                         ld      (ix+0Ah), a
2C44                         ld      a, (ix+15h)
2C47                         cp      4
2C49                         jp      z, loc_2E49
2C4C                         cp      2
2C4E                         jp      z, loc_2E51
2C51                         cp      1
2C53                         jr      nz, loc_2C5F
2C55                         ld      a, (ix+1Dh)
2C58                         or      a
2C59                         jp      z, loc_2E51
2C5C                         jp      loc_2E49
2C5F ; ---------------------------------------------------------------------------
2C5F
2C5F loc_2C5F:                                                   ; 2C53 2E61↓j
2C5F                         call    sub_2C73
2C62                         pop     iy
2C64                         ld      a, (ix+16h)
2C67                         cp      0Eh
2C69                         ret     nz
2C6A                         ld      a, (ticker_countup)
2C6D                         and     0Fh
2C6F                         jp      z, loc_52D9
2C72                         ret
2C73
2C73 ; =============== S U B R O U T I N E =======================================
2C73
2C73
2C73 sub_2C73:                                                   ; loc_2C5F↑p
2C73                         ld      de, 6
2C76                         ld      a, (ix+43h)
2C79                         cp      1
2C7B                         jr      z, loc_2C7F
2C7D                         add     iy, de
2C7F
2C7F loc_2C7F:                                                   ; 2C7B
2C7F                         ld      b, (ix+8)
2C82                         ld      a, (iy+1)
2C85                         add     a, 4
2C87                         cp      b
2C88                         jr      nc, loc_2C93
2C8A                         ld      a, (iy+2)
2C8D                         sub     4
2C8F                         cp      b
2C90                         jr      c, loc_2C9A
2C92                         ret
2C93 ; ---------------------------------------------------------------------------
2C93
2C93 loc_2C93:                                                   ; 2C88
2C93                         ld      a, (ix+8)
2C96                         sub     0Bh
2C98                         jr      loc_2C9F
2C9A ; ---------------------------------------------------------------------------
2C9A
2C9A loc_2C9A:                                                   ; 2C90
2C9A                         ld      a, (ix+8)
2C9D                         add     a, 0Bh
2C9F
2C9F loc_2C9F:                                                   ; 2C98
2C9F                         ld      (ix+8), a
2CA2                         ld      a, (ix+1Ah)
2CA5                         ld      (ix+0Ah), a
2CA8                         ld      (ix+43h), 0
2CAC                         ld      (ix+46h), 0CFh
2CB0                         ld      (ix+16h), 1
2CB4                         ld      c, 100
2CB6                         rst     dispatch_sound
2CB7                         ret
2CB7 ; End of function sub_2C73
2CB7
2CB8
2CB8 ; =============== S U B R O U T I N E =======================================
2CB8
2CB8
2CB8 sub_2CB8:                                                   ; 2AE5↑p
2CB8                         ld      a, (base_strip_number)
2CBB                         cp      4
2CBD                         ret     c
2CBE                         cp      8
2CC0                         jr      nc, loc_2CCF
2CC2                         ld      iy, object_action_table
2CC6                         ld      a, (iy+0)
2CC9                         cp      1
2CCB                         ret     z
2CCC                         cp      2
2CCE                         ret     z
2CCF
2CCF loc_2CCF:                                                   ; 2CC0
2CCF                         ld      a, (ix+40h)
2CD2                         or      a
2CD3                         ret     nz
2CD4                         ld      a, (ix+25h)
2CD7                         or      a
2CD8                         ret     nz
2CD9                         ld      a, (ix+16h)
2CDC                         cp      1
2CDE                         jr      z, loc_2CE3
2CE0                         cp      0Ch
2CE2                         ret     nz
2CE3
2CE3 loc_2CE3:                                                   ; 2CDE
2CE3                         push    iy
2CE5                         ld      iy, unk_E355
2CE9                         call    sub_2CFE
2CEC                         ld      a, (ix+16h)
2CEF                         cp      0Eh
2CF1                         jr      z, loc_2CFB
2CF3                         ld      de, 6
2CF6                         add     iy, de
2CF8                         call    sub_2CFE
2CFB
2CFB loc_2CFB:                                                   ; 2CF1
2CFB                         pop     iy
2CFD                         ret
2CFD ; End of function sub_2CB8
2CFD
2CFE
2CFE ; =============== S U B R O U T I N E =======================================
2CFE
2CFE
2CFE sub_2CFE:                                                   ; 2CE9↑p 2CF8↑p
2CFE                         ld      a, (iy+1)
2D01                         or      a
2D02                         ret     z
2D03                         ld      a, (ix+8)
2D06                         add     a, 2
2D08                         sub     (iy+1)
2D0B                         ret     c
2D0C                         cp      8
2D0E                         jr      c, loc_2D3A
2D10                         ld      a, (ix+8)
2D13                         sub     2
2D15                         sub     (iy+2)
2D18                         ret     nc
2D19                         add     a, 8
2D1B                         jr      c, loc_2D33
2D1D
2D1D loc_2D1D:                                                   ; 2D42↓j
2D1D                         ld      (ix+16h), 0Eh
2D21                         ld      (ix+2Bh), 0
2D25                         ld      a, (iy+0)
2D28                         ld      (ix+43h), a
2D2B                         ld      (ix+46h), 8Fh
2D2F                         ld      c, 4Dh ; 'M'
2D31                         rst     dispatch_sound
2D32                         ret
2D33 ; ---------------------------------------------------------------------------
2D33
2D33 loc_2D33:                                                   ; 2D1B
2D33                         ld      a, (iy+2)
2D36                         sub     9
2D38                         jr      loc_2D3F
2D3A ; ---------------------------------------------------------------------------
2D3A
2D3A loc_2D3A:                                                   ; 2D0E
2D3A                         ld      a, (iy+1)
2D3D                         add     a, 9
2D3F
2D3F loc_2D3F:                                                   ; 2D38
2D3F                         ld      (ix+8), a
2D42                         jr      loc_2D1D
2D42 ; End of function sub_2CFE
2D42
2D44 ; ---------------------------------------------------------------------------
2D44                         ld      a, (ix+3Eh)
2D47                         or      a
2D48                         jr      z, loc_2D75
2D4A                         dec     a
2D4B                         jr      z, loc_2D72
2D4D                         ld      (ix+3Eh), a
2D50                         ld      a, (ix+3Dh)
2D53                         cp      34h ; '4'
2D55                         jr      z, loc_2D5B
2D57                         ld      (ix+21h), 1
2D5B
2D5B loc_2D5B:                                                   ; 2D55
2D5B                         ld      (ix+2Bh), 0
2D5F                         ld      b, 1
2D61                         ld      a, (ticker_countup)
2D64                         and     1
2D66                         jr      nz, loc_2D6A
2D68                         ld      b, 0FFh
2D6A
2D6A loc_2D6A:                                                   ; 2D66
2D6A                         ld      a, (ix+0Ah)
2D6D                         add     a, b
2D6E                         ld      (ix+0Ah), a
2D71                         ret
2D72 ; ---------------------------------------------------------------------------
2D72
2D72 loc_2D72:                                                   ; 2D4B
2D72                         call    sub_52FE
2D75
2D75 loc_2D75:                                                   ; 2D48
2D75                         ld      (ix+21h), 0
2D79                         ld      (ix+3Dh), 0
2D7D                         ld      (ix+3Eh), 0
2D81                         ld      (ix+25h), 0
2D85                         ld      a, (ix+16h)
2D88                         cp      2
2D8A                         ret     z
2D8B                         cp      3
2D8D                         ret     z
2D8E                         cp      1
2D90                         jr      nz, loc_2D98
2D92                         ld      a, (ix+0Ah)
2D95                         cp      1Eh
2D97                         ret     c
2D98
2D98 loc_2D98:                                                   ; 2D90
2D98                         ld      (ix+2Ch), 0
2D9C                         ld      (ix+16h), 5
2DA0                         ld      (ix+0Eh), 0
2DA4                         ld      (ix+0Fh), 0
2DA8                         ld      (ix+0Ch), 0
2DAC                         ld      (ix+0Dh), 0
2DB0                         ld      (ix+20h), 1
2DB4                         ld      (ix+2Bh), 0
2DB8                         ld      (ix+1Fh), 5
2DBC                         jp      sub_36B8
2DBF ; ---------------------------------------------------------------------------
2DBF
2DBF loc_2DBF:                                                   ; 2B0F
2DBF                         ld      (ix+45h), 0
2DC3                         ld      a, (byte_E001)
2DC6                         or      a
2DC7                         ret     nz
2DC8                         ld      a, (ix+1Ah)
2DCB                         ld      (ix+0Ah), a
2DCE                         call    sub_32D6
2DD1                         jr      nz, loc_2DE5
2DD3                         ld      a, (ix+15h)
2DD6                         cp      4
2DD8                         jp      z, loc_2E64
2DDB                         cp      2
2DDD                         jp      z, loc_2E6C
2DE0                         cp      1
2DE2                         ret     nz
2DE3                         jr      loc_2DFA
2DE5 ; ---------------------------------------------------------------------------
2DE5
2DE5 loc_2DE5:                                                   ; 2DD1
2DE5                         ld      a, (ix+15h)
2DE8                         cp      4
2DEA                         jp      z, loc_2DF5
2DED                         cp      2
2DEF                         ret     nz
2DF0                         ld      (ix+1Dh), 0
2DF4                         ret
2DF5 ; ---------------------------------------------------------------------------
2DF5
2DF5 loc_2DF5:                                                   ; 2DEA
2DF5                         ld      (ix+1Dh), 1
2DF9                         ret
2DFA ; ---------------------------------------------------------------------------
2DFA
2DFA loc_2DFA:                                                   ; 2DE3
2DFA                         ld      c, 0
2DFC                         call    sub_3185
2DFF                         or      a
2E00                         ret     nz
2E01                         ld      a, (iy+0Dh)
2E04                         cp      0
2E06                         jr      z, loc_2E0B
2E08                         cp      3
2E0A                         ret     nz
2E0B
2E0B loc_2E0B:                                                   ; 2E06
2E0B                         ld      a, (iy+3)
2E0E                         cp      4
2E10                         jr      c, locret_2E48
2E12                         push    de
2E13                         ld      d, 2
2E15                         ld      e, 1Bh
2E17                         ld      a, (iy+0)
2E1A                         ld      c, a
2E1B                         call    sub_53E6
2E1E                         pop     de
2E1F                         ld      a, (byte_E025)
2E22                         or      a
2E23                         ret     nz
2E24                         ld      a, d
2E25                         ld      (ix+1Dh), a
2E28                         ld      (ix+1Eh), a
2E2B                         call    sub_36A6
2E2E                         ld      (ix+8), a
2E31                         ld      a, (iy+0)
2E34                         ld      (ix+17h), a
2E37                         ld      (ix+0Ah), 1Bh
2E3B                         ld      (ix+16h), 2
2E3F                         ld      (ix+20h), 0
2E43                         ld      (ix+1Fh), 0
2E47                         ret
2E48 ; ---------------------------------------------------------------------------
2E48
2E48 locret_2E48:                                                ; 2E10
2E48                         ret
2E49 ; ---------------------------------------------------------------------------
2E49
2E49 loc_2E49:                                                   ; 2C49 2C5C
2E49                         ld      (ix+1Dh), 1
2E4D                         ld      b, 0FFh
2E4F                         jr      loc_2E57
2E51 ; ---------------------------------------------------------------------------
2E51
2E51 loc_2E51:                                                   ; 2C4E 2C59
2E51                         ld      (ix+1Dh), 0
2E55                         ld      b, 0
2E57
2E57 loc_2E57:                                                   ; 2E4F
2E57                         ld      (ix+20h), 0
2E5B                         ld      hl, byte_3877
2E5E                         call    sub_37AA
2E61                         jp      loc_2C5F
2E64 ; ---------------------------------------------------------------------------
2E64
2E64 loc_2E64:                                                   ; 2DD8
2E64                         ld      (ix+1Dh), 1
2E68
2E68 loc_2E68:                                                   ; 2F51↓j
2E68                         ld      b, 0FFh
2E6A                         jr      loc_2E72
2E6C ; ---------------------------------------------------------------------------
2E6C
2E6C loc_2E6C:                                                   ; 2DDD
2E6C                         ld      (ix+1Dh), 0
2E70
2E70 loc_2E70:                                                   ; 2F92↓j
2E70                         ld      b, 0
2E72
2E72 loc_2E72:                                                   ; 2E6A
2E72                         ld      (ix+20h), 0
2E76                         ld      hl, byte_3871
2E79                         jp      sub_37AA
2E7C ; ---------------------------------------------------------------------------
2E7C
2E7C loc_2E7C:                                                   ; 2B19
2E7C                         ld      a, (ix+17h)
2E7F                         call    sub_1509
2E82                         ld      a, (iy+8)
2E85                         add     a, 10h
2E87                         ld      (ix+0Ah), a
2E8A                         ld      (ix+45h), 0
2E8E                         ld      a, (ix+20h)
2E91                         or      a
2E92                         jr      z, loc_2EA5
2E94                         dec     a
2E95                         jp      z, sub_36B8
2E98                         ld      (ix+20h), a
2E9B                         ld      (ix+2Bh), 0
2E9F                         call    sub_32ED
2EA2                         ret     nz
2EA3                         jr      loc_2EA9
2EA5 ; ---------------------------------------------------------------------------
2EA5
2EA5 loc_2EA5:                                                   ; 2E92
2EA5                         call    sub_32D6
2EA8                         ret     nz
2EA9
2EA9 loc_2EA9:                                                   ; 2EA3
2EA9                         ld      a, (ix+15h)
2EAC                         cp      4
2EAE                         jp      z, loc_2F26
2EB1                         cp      2
2EB3                         jp      z, loc_2F65
2EB6                         ld      a, (ix+23h)
2EB9                         or      a
2EBA                         ret     nz
2EBB                         ld      a, (ix+15h)
2EBE                         cp      3
2EC0                         jp      z, loc_2F05
2EC3                         cp      1
2EC5                         ret     nz
2EC6                         ld      c, 1
2EC8                         call    sub_3185
2ECB                         or      a
2ECC                         ret     nz
2ECD                         ld      a, (iy+0Dh)
2ED0                         cp      0
2ED2                         ret     nz
2ED3                         push    de
2ED4                         ld      d, 2
2ED6                         ld      e, (ix+0Ah)
2ED9                         ld      a, (iy+0)
2EDC                         ld      c, a
2EDD                         call    sub_53E6
2EE0                         pop     de
2EE1                         ld      a, (byte_E025)
2EE4                         or      a
2EE5                         ret     nz
2EE6                         ld      (ix+1Dh), d
2EE9                         ld      (ix+1Eh), d
2EEC                         call    sub_36A6
2EEF                         ld      (ix+8), a
2EF2                         ld      a, (iy+0)
2EF5                         ld      (ix+17h), a
2EF8                         ld      (ix+16h), 2
2EFC                         ld      (ix+20h), 0
2F00                         ld      (ix+1Fh), 0
2F04                         ret
2F05 ; ---------------------------------------------------------------------------
2F05
2F05 loc_2F05:                                                   ; 2EC0
2F05                         ld      (ix+20h), 0
2F09                         ld      a, (ix+17h)
2F0C                         call    sub_1509
2F0F                         ld      a, (ix+8)
2F12                         ld      b, a
2F13                         ld      a, (iy+6)
2F16                         add     a, 4
2F18                         cp      b
2F19                         jp      nc, loc_2F97
2F1C                         ld      a, (iy+7)
2F1F                         sub     1
2F21                         cp      b
2F22                         jp      c, loc_2FA9
2F25                         ret
2F26 ; ---------------------------------------------------------------------------
2F26
2F26 loc_2F26:                                                   ; 2EAE
2F26                         ld      (ix+23h), 0
2F2A                         ld      (ix+1Dh), 1
2F2E                         ld      (ix+1Eh), 1
2F32                         ld      c, (ix+17h)
2F35                         ld      d, 3
2F37                         ld      a, (ix+8)
2F3A                         sub     2
2F3C                         ld      e, a
2F3D                         call    sub_53E6
2F40                         ld      a, (byte_E025)
2F43                         or      a
2F44                         ret     nz
2F45                         ld      a, (ix+17h)
2F48                         call    sub_1509
2F4B                         ld      a, (iy+6)
2F4E                         cp      (ix+8)
2F51                         jp      c, loc_2E68
2F54
2F54 loc_2F54:                                                   ; 2F95↓j
2F54                         ld      a, (ix+20h)
2F57                         or      a
2F58                         ret     nz
2F59                         ld      (ix+2Bh), 0
2F5D                         ld      (ix+20h), 14h
2F61                         ld      c, 35
2F63                         rst     dispatch_sound
2F64                         ret
2F65 ; ---------------------------------------------------------------------------
2F65
2F65 loc_2F65:                                                   ; 2EB3
2F65                         ld      (ix+23h), 0
2F69                         ld      (ix+1Dh), 0
2F6D                         ld      (ix+1Eh), 0
2F71                         ld      c, (ix+17h)
2F74                         ld      d, 3
2F76                         ld      a, (ix+8)
2F79                         add     a, 2
2F7B                         ld      e, a
2F7C                         call    sub_53E6
2F7F                         ld      a, (byte_E025)
2F82                         or      a
2F83                         ret     nz
2F84                         ld      a, (ix+17h)
2F87                         call    sub_1509
2F8A                         ld      a, (iy+7)
2F8D                         add     a, 3
2F8F                         cp      (ix+8)
2F92                         jp      nc, loc_2E70
2F95                         jr      loc_2F54
2F97 ; ---------------------------------------------------------------------------
2F97
2F97 loc_2F97:                                                   ; 2F19
2F97                         call    sub_2FD4
2F9A                         ld      a, (byte_E025)
2F9D                         or      a
2F9E                         ret     nz
2F9F                         ld      (ix+1Eh), 0
2FA3                         ld      (ix+1Dh), 0
2FA7                         jr      loc_2FB9
2FA9 ; ---------------------------------------------------------------------------
2FA9
2FA9 loc_2FA9:                                                   ; 2F22
2FA9                         call    sub_2FD4
2FAC                         ld      a, (byte_E025)
2FAF                         or      a
2FB0                         ret     nz
2FB1                         ld      (ix+1Eh), 1
2FB5                         ld      (ix+1Dh), 1
2FB9
2FB9 loc_2FB9:                                                   ; 2FA7
2FB9                         call    sub_1549
2FBC                         sub     14h
2FBE                         ld      (ix+0Ah), a
2FC1                         call    sub_36A6
2FC4                         ld      (ix+8), a
2FC7                         ld      (ix+16h), 2
2FCB                         ld      (ix+20h), 0
2FCF                         ld      (ix+1Fh), 0
2FD3                         ret
2FD4
2FD4 ; =============== S U B R O U T I N E =======================================
2FD4
2FD4
2FD4 sub_2FD4:                                                   ; loc_2F97↑p
2FD4                                                             ; loc_2FA9↑p
2FD4                         call    sub_1549
2FD7                         sub     14h
2FD9                         ld      e, a
2FDA                         ld      d, 2
2FDC                         ld      a, (ix+17h)
2FDF                         ld      c, a
2FE0                         jp      sub_53E6
2FE0 ; End of function sub_2FD4
2FE0
2FE3 ; ---------------------------------------------------------------------------
2FE3
2FE3 loc_2FE3:                                                   ; 2B14
2FE3                         ld      (ix+45h), 0
2FE7                         ld      a, (ix+1Fh)
2FEA                         or      a
2FEB                         jr      z, loc_2FF2
2FED                         dec     a
2FEE                         ld      (ix+1Fh), a
2FF1                         ret
2FF2 ; ---------------------------------------------------------------------------
2FF2
2FF2 loc_2FF2:                                                   ; 2FEB
2FF2                         call    sub_309C
2FF5                         ld      a, (ix+20h)
2FF8                         or      a
2FF9                         jr      nz, loc_3001
2FFB                         call    sub_32D6
2FFE                         ret     nz
2FFF                         jr      loc_300B
3001 ; ---------------------------------------------------------------------------
3001
3001 loc_3001:                                                   ; 2FF9
3001                         call    sub_3150
3004                         call    sub_3150
3007                         call    sub_32D6
300A                         ret     nz
300B
300B loc_300B:                                                   ; 2FFF
300B                         ld      a, (ix+15h)
300E                         cp      1
3010                         jp      z, loc_30EE
3013                         cp      3
3015                         jr      z, loc_3022
3017                         ld      a, (ix+20h)
301A                         or      a
301B                         ret     z
301C                         ld      (ix+2Bh), 0
3020                         jr      loc_3022
3022 ; ---------------------------------------------------------------------------
3022
3022 loc_3022:                                                   ; 3015 3020
3022                         ld      a, (ix+0Ah)
3025                         sub     2
3027                         ld      e, a
3028                         ld      d, 2
302A                         ld      c, (ix+17h)
302D                         call    sub_53E6
3030                         ld      a, (byte_E025)
3033                         or      a
3034                         jp      nz, loc_30D0
3037                         ld      a, (ix+0Ah)
303A                         cp      1Bh
303C                         jp      c, loc_30DD
303F                         ld      a, (ix+0Ah)
3042                         and     0F8h
3044                         bit     2, a
3046                         jr      z, loc_304A
3048                         add     a, 4
304A
304A loc_304A:                                                   ; 3046
304A                         cp      31h ; '1'
304C                         jp      c, loc_33D7
304F                         ld      a, (ix+17h)
3052                         call    sub_1509
3055                         call    sub_3215
3058                         ld      a, (hl)
3059                         and     30h ; '0'
305B                         cp      (iy+4)
305E                         jp      z, loc_33D7
3061                         cp      30h ; '0'
3063                         jp      z, loc_33D7
3066                         call    sub_324F
3069                         ld      c, (iy+0)
306C                         ld      d, 3
306E                         ld      e, (ix+8)
3071                         call    sub_53E6
3074                         ld      a, (byte_E025)
3077                         or      a
3078                         jp      nz, loc_30D8
307B                         ld      a, (iy+3)
307E                         cp      3
3080                         ret     c
3081                         ld      a, (iy+8)
3084                         add     a, 10h
3086                         ld      (ix+0Ah), a
3089                         ld      (ix+16h), 3
308D                         ld      (ix+20h), 0
3091                         ld      (ix+23h), 0
3095                         ld      a, (iy+0)
3098                         ld      (ix+17h), a
309B                         ret
309C
309C ; =============== S U B R O U T I N E =======================================
309C
309C
309C sub_309C:                                                   ; loc_2FF2↑p
309C                         ld      a, (ix+17h)
309F                         call    sub_1509
30A2                         ld      a, (ix+1Dh)
30A5                         or      a
30A6                         jr      z, loc_30AF
30A8                         ld      a, (iy+7)
30AB                         sub     8
30AD                         jr      loc_30B2
30AF ; ---------------------------------------------------------------------------
30AF
30AF loc_30AF:                                                   ; 30A6
30AF                         ld      a, (iy+6)
30B2
30B2 loc_30B2:                                                   ; 30AD
30B2                         ld      b, a
30B3                         ld      a, (ix+0Ah)
30B6                         ld      c, a
30B7                         call    sub_4504
30BA                         call    sub_1446
30BD                         cp      30h ; '0'
30BF                         jr      nz, loc_30CB
30C1                         ld      a, (ix+20h)
30C4                         inc     a
30C5                         set     7, a
30C7                         ld      (ix+20h), a
30CA                         ret
30CB ; ---------------------------------------------------------------------------
30CB
30CB loc_30CB:                                                   ; 30BF
30CB                         ld      (ix+20h), 0
30CF                         ret
30CF ; End of function sub_309C
30CF
30D0 ; ---------------------------------------------------------------------------
30D0
30D0 loc_30D0:                                                   ; 3034 3100↓j
30D0                         ld      (ix+0Eh), 0
30D4                         ld      (ix+0Fh), 0
30D8
30D8 loc_30D8:                                                   ; 3078 3135↓j
30D8                         ld      (ix+2Dh), 0FFh
30DC                         ret
30DD ; ---------------------------------------------------------------------------
30DD
30DD loc_30DD:                                                   ; 303C
30DD                         ld      (ix+0Ah), 1Bh
30E1                         ld      (ix+16h), 1
30E5                         ld      (ix+20h), 0
30E9                         ld      (ix+17h), 0
30ED                         ret
30EE ; ---------------------------------------------------------------------------
30EE
30EE loc_30EE:                                                   ; 3010
30EE                         ld      a, (ix+0Ah)
30F1                         add     a, 2
30F3                         ld      e, a
30F4                         ld      d, 2
30F6                         ld      c, (ix+17h)
30F9                         call    sub_53E6
30FC                         ld      a, (byte_E025)
30FF                         or      a
3100                         jp      nz, loc_30D0
3103                         ld      a, (ix+17h)
3106                         call    sub_1509
3109                         call    sub_1549
310C                         sub     15h
310E                         cp      (ix+0Ah)
3111                         jp      nc, loc_33D0
3114                         ld      b, (ix+8)
3117                         ld      a, (ix+1Dh)
311A                         or      a
311B                         jr      z, loc_3122
311D                         ld      a, b
311E                         sub     0Ah
3120                         jr      loc_3125
3122 ; ---------------------------------------------------------------------------
3122
3122 loc_3122:                                                   ; 311B
3122                         ld      a, b
3123                         add     a, 0Eh
3125
3125 loc_3125:                                                   ; 3120
3125                         ld      d, a
3126                         push    de
3127                         ld      c, (iy+0)
312A                         ld      e, d
312B                         ld      d, 3
312D                         call    sub_53E6
3130                         pop     de
3131                         ld      a, (byte_E025)
3134                         or      a
3135                         jp      nz, loc_30D8
3138                         ld      (ix+8), d
313B                         ld      a, (iy+8)
313E                         add     a, 10h
3140                         ld      (ix+0Ah), a
3143                         ld      (ix+16h), 3
3147                         ld      (ix+20h), 0
314B                         ld      (ix+23h), 1
314F                         ret
3150
3150 ; =============== S U B R O U T I N E =======================================
3150
3150
3150 sub_3150:                                                   ; loc_3001↑p
3150                                                             ; 3004↑p 
3150                         ld      a, (ix+11h)
3153                         inc     a
3154                         and     0Fh
3156                         ld      (ix+11h), a
3159                         cp      6
315B                         ret     c
315C                         ld      (ix+11h), 1
3160                         ld      b, 2
3162                         ld      a, (ix+16h)
3165                         cp      2
3167                         jr      z, loc_316A
3169                         inc     b
316A
316A loc_316A:                                                   ; 3167
316A                         ld      a, (ix+10h)
316D                         inc     a
316E                         ld      (ix+10h), a
3171                         cp      b
3172                         ret     c
3173                         ld      (ix+10h), 0
3177                         ld      (ix+11h), 1
317B                         ret
317B ; End of function sub_3150
317B
317C
317C ; =============== S U B R O U T I N E =======================================
317C
317C
317C sub_317C:                                                   ; loc_3837↓p
317C                         ld      (ix+10h), 0
3180                         ld      (ix+11h), 0
3184                         ret
3184 ; End of function sub_317C
3184
3185
3185 ; =============== S U B R O U T I N E =======================================
3185
3185
3185 sub_3185:                                                   ; 2DFC↑p 2EC8↑p
3185                         ld      e, 6
3187                         ld      a, c
3188                         or      a
3189                         jr      nz, loc_318D
318B                         ld      e, 7
318D
318D loc_318D:                                                   ; 3189
318D                         ld      a, (ix+8)
3190                         ld      b, a
3191                         ld      a, (ix+1Dh)
3194                         or      a
3195                         jr      z, loc_319B
3197                         ld      a, 0FAh
3199                         jr      loc_319D
319B ; ---------------------------------------------------------------------------
319B
319B loc_319B:                                                   ; 3195
319B                         ld      a, 3
319D
319D loc_319D:                                                   ; 3199
319D                         add     a, b
319E                         ld      b, a
319F                         ld      iy, Building1_data
31A3
31A3 loc_31A3:                                                   ; 31D9↓j
31A3                         ld      d, 0FFh
31A5                         ld      a, (iy+0)
31A8                         cp      0FFh
31AA                         ret     z
31AB                         or      a
31AC                         jr      z, loc_31D2
31AE                         ld      a, (iy+6)
31B1                         ld      d, 0
31B3                         sub     b
31B4                         jr      nc, loc_31B8
31B6                         neg
31B8
31B8 loc_31B8:                                                   ; 31B4
31B8                         cp      e
31B9                         jr      nc, loc_31C0
31BB                         call    sub_31DB
31BE                         or      a
31BF                         ret     z
31C0
31C0 loc_31C0:                                                   ; 31B9
31C0                         ld      d, 1
31C2                         ld      a, (iy+7)
31C5                         sub     b
31C6                         jr      nc, loc_31CA
31C8                         neg
31CA
31CA loc_31CA:                                                   ; 31C6
31CA                         cp      e
31CB                         jr      nc, loc_31D2
31CD                         call    sub_31DB
31D0                         or      a
31D1                         ret     z
31D2
31D2 loc_31D2:                                                   ; 31AC 31CB
31D2                         push    de
31D3                         ld      de, 18h
31D6                         add     iy, de
31D8                         pop     de
31D9                         jr      loc_31A3
31D9 ; End of function sub_3185
31D9
31DB
31DB ; =============== S U B R O U T I N E =======================================
31DB
31DB
31DB sub_31DB:                                                   ; 31BB↑p 31CD↑p
31DB                         push    de
31DC                         call    sub_31E1
31DF                         pop     de
31E0                         ret
31E0 ; End of function sub_31DB
31E0
31E1
31E1 ; =============== S U B R O U T I N E =======================================
31E1
31E1
31E1 sub_31E1:                                                   ; 31DC↑p
31E1                         ld      a, c
31E2                         or      a
31E3                         jr      nz, loc_3209
31E5                         ld      a, (iy+4)
31E8                         or      a
31E9                         ret     z
31EA                         ld      hl, bg_row26
31ED                         call    sub_3238
31F0
31F0 loc_31F0:                                                   ; 3202↓j
31F0                         ld      a, (hl)
31F1                         and     30h ; '0'
31F3                         cp      (iy+4)
31F6                         jr      z, loc_3204
31F8                         cp      30h ; '0'
31FA                         jr      nz, loc_3206
31FC                         push    de
31FD                         ld      de, 0FFC0h
3200                         add     hl, de
3201                         pop     de
3202                         jr      loc_31F0
3204 ; ---------------------------------------------------------------------------
3204
3204 loc_3204:                                                   ; 31F6
3204                         xor     a
3205                         ret
3206 ; ---------------------------------------------------------------------------
3206
3206 loc_3206:                                                   ; 31FA 3211↓j
3206                         ld      a, 1
3208                         ret
3209 ; ---------------------------------------------------------------------------
3209
3209 loc_3209:                                                   ; 31E3
3209                         push    bc
320A                         call    sub_327E
320D                         pop     bc
320E                         ld      a, d
320F                         cp      0FFh
3211                         jr      z, loc_3206
3213                         xor     a
3214                         ret
3214 ; End of function sub_31E1
3214
3215
3215 ; =============== S U B R O U T I N E =======================================
3215
3215
3215 sub_3215:                                                   ; 3055↑p
3215                         ld      a, (ix+0Ah)
3218                         sub     20h ; ' '
321A                         srl     a
321C                         srl     a
321E                         srl     a
3220                         ld      h, 0
3222                         ld      l, a
3223                         ld      b, 6
3225
3225 loc_3225:                                                   ; 3229↓j
3225                         sla     l
3227                         rl      h
3229                         djnz    loc_3225
322B                         call    negate_hl
322E                         ld      bc, bg_row28
3231                         add     hl, bc
3232                         ld      d, (ix+1Dh)
3235                         jp      sub_3238
3235 ; End of function sub_3215
3235
3238
3238 ; =============== S U B R O U T I N E =======================================
3238
3238
3238 sub_3238:                                                   ; 31ED↑p 3235 
3238                         ld      a, d
3239                         or      a
323A                         jr      z, loc_3242
323C                         ld      a, (iy+2)
323F                         dec     a
3240                         sla     a
3242
3242 loc_3242:                                                   ; 323A
3242                         ld      d, a
3243                         ld      a, (iy+5)
3246                         add     a, d
3247                         inc     a
3248                         rst     HL_plus_A
3249                         ld      a, d
324A                         or      a
324B                         ret     z
324C                         ld      d, 1
324E                         ret
324E ; End of function sub_3238
324E
324F
324F ; =============== S U B R O U T I N E =======================================
324F
324F
324F sub_324F:                                                   ; 3066↑p
324F                         ld      iy, Building1_data
3253                         ld      a, (hl)
3254                         and     30h ; '0'
3256                         ld      b, a
3257                         ld      c, (ix+8)
325A
325A loc_325A:                                                   ; 327C↓j
325A                         ld      a, (iy+0)
325D                         cp      0FFh
325F                         ret     z
3260                         or      a
3261                         jr      z, loc_3277
3263                         ld      a, (iy+4)
3266                         cp      b
3267                         jr      nz, loc_3277
3269                         ld      a, c
326A                         add     a, 8
326C                         cp      (iy+6)
326F                         jr      c, loc_3277
3271                         sub     10h
3273                         cp      (iy+7)
3276                         ret     c
3277
3277 loc_3277:                                                   ; 3261 3267 
3277                         ld      de, 18h
327A                         add     iy, de
327C                         jr      loc_325A
327C ; End of function sub_324F
327C
327E
327E ; =============== S U B R O U T I N E =======================================
327E
327E
327E sub_327E:                                                   ; 320A↑p
327E                         ld      b, (ix+18h)
3281                         ld      a, (iy+8)
3284                         sub     (ix+0Ah)
3287                         jr      c, loc_32A9
3289                         ld      a, (iy+4)
328C                         cp      b
328D                         jr      z, loc_32A9
328F                         jr      c, loc_32A9
3291                         ld      a, (iy+6)
3294                         sub     (ix+8)
3297                         jr      nc, loc_329B
3299                         neg
329B
329B loc_329B:                                                   ; 3297
329B                         cp      10h
329D                         jr      c, loc_32A4
329F                         ld      d, 1
32A1                         jr      loc_32AC
32A3 ; ---------------------------------------------------------------------------
32A3                         ret
32A4 ; ---------------------------------------------------------------------------
32A4
32A4 loc_32A4:                                                   ; 329D
32A4                         ld      d, 0
32A6                         jr      loc_32AC
32A8 ; ---------------------------------------------------------------------------
32A8                         ret
32A9 ; ---------------------------------------------------------------------------
32A9
32A9 loc_32A9:                                                   ; 3287 328D 
32A9                         ld      d, 0FFh
32AB                         ret
32AC ; ---------------------------------------------------------------------------
32AC
32AC loc_32AC:                                                   ; 32A1 32A6
32AC                         ld      a, (ix+0Ah)
32AF                         sub     20h ; ' '
32B1                         srl     a
32B3                         srl     a
32B5                         srl     a
32B7                         ld      h, 0
32B9                         ld      l, a
32BA                         ld      b, 6
32BC
32BC loc_32BC:                                                   ; 32C0↓j
32BC                         sla     l
32BE                         rl      h
32C0                         djnz    loc_32BC
32C2                         call    negate_hl
32C5                         ld      bc, bg_row28
32C8                         add     hl, bc
32C9                         call    sub_3238
32CC                         ld      a, (hl)
32CD                         and     30h ; '0'
32CF                         dec     hl
32D0                         cp      (iy+4)
32D3                         jr      nz, loc_32A9
32D5                         ret
32D5 ; End of function sub_327E
32D5
32D6
32D6 ; =============== S U B R O U T I N E =======================================
32D6
32D6
32D6 sub_32D6:                                                   ; 2DCE↑p
32D6                                                             ; loc_2EA5↑p 
32D6                         ld      a, (ix+2Bh)
32D9                         or      a
32DA                         jr      z, loc_32EA
32DC                         cp      52h ; 'R'
32DE                         jr      c, loc_32E6
32E0                         cp      0E1h
32E2                         jr      nc, sub_32ED
32E4                         jr      loc_32EA
32E6 ; ---------------------------------------------------------------------------
32E6
32E6 loc_32E6:                                                   ; 32DE
32E6                         cp      42h ; 'B'
32E8                         jr      nc, sub_32ED
32EA
32EA loc_32EA:                                                   ; 32DA 32E4
32EA                         call    sub_335D
32EA ; End of function sub_32D6
32EA
32ED
32ED ; =============== S U B R O U T I N E =======================================
32ED
32ED
32ED sub_32ED:                                                   ; 2E9F↑p 32E2 
32ED                         call    sub_3398
32F0                         ld      a, (ix+25h)
32F3                         or      a
32F4                         ret
32F4 ; End of function sub_32ED
32F4
32F5 ; ---------------------------------------------------------------------------
32F5                         xor     a
32F6                         ret
32F7
32F7 ; =============== S U B R O U T I N E =======================================
32F7
32F7
32F7 sub_32F7:                                                   ; 2AF3↑p
32F7                         call    sub_335D
32FA                         ld      a, (ix+21h)
32FD                         or      a
32FE                         ret     z
32FF                         cp      1
3301                         ret     z
3302                         dec     a
3303                         ld      (ix+21h), a
3306                         cp      2
3308                         jr      nz, loc_3326
330A                         ld      (ix+3Fh), 0
330E                         call    sub_732F
3311                         ld      a, (ix+3Fh)
3314                         or      a
3315                         ret     nz
3316                         call    sub_5118
3319                         ld      a, (ix+16h)
331C                         cp      2
331E                         ret     nz
331F                         ld      a, (ix+26h)
3322                         ld      (ix+22h), a
3325                         ret
3326 ; ---------------------------------------------------------------------------
3326
3326 loc_3326:                                                   ; 3308
3326                         ld      (ix+45h), 0
332A                         ret
332A ; End of function sub_32F7
332A
332B
332B ; =============== S U B R O U T I N E =======================================
332B
332B
332B sub_332B:                                                   ; 337E↓p
332B                         ld      a, (ix+15h)
332E                         or      a
332F                         jr      z, loc_3358
3331                         cp      4
3333                         jr      z, loc_3352
3335                         cp      2
3337                         jr      z, loc_3347
3339                         cp      1
333B                         jr      z, loc_3342
333D                         ld      (ix+26h), 4
3341                         ret
3342 ; ---------------------------------------------------------------------------
3342
3342 loc_3342:                                                   ; 333B
3342                         ld      (ix+26h), 3
3346                         ret
3347 ; ---------------------------------------------------------------------------
3347
3347 loc_3347:                                                   ; 3337
3347                         ld      a, (ix+1Dh)
334A                         or      a
334B                         jr      z, loc_3358
334D
334D loc_334D:                                                   ; 3356↓j
334D                         ld      (ix+26h), 2
3351                         ret
3352 ; ---------------------------------------------------------------------------
3352
3352 loc_3352:                                                   ; 3333
3352                         ld      a, (ix+1Dh)
3355                         or      a
3356                         jr      z, loc_334D
3358
3358 loc_3358:                                                   ; 332F 334B
3358                         ld      (ix+26h), 1
335C                         ret
335C ; End of function sub_332B
335C
335D
335D ; =============== S U B R O U T I N E =======================================
335D
335D
335D sub_335D:                                                   ; loc_32EA↑p
335D                                                             ; sub_32F7↑p 
335D
335D ; FUNCTION CHUNK AT 72E1 SIZE 00000008 BYTES
335D
335D                         ld      a, (ix+14h)
3360                         and     10h
3362                         jr      z, loc_3384
3364                         ld      a, (ix+21h)
3367                         or      a
3368                         ret     nz
3369                         ld      a, (ix+4Eh)
336C                         or      a
336D                         jr      z, loc_3376
336F                         xor     a
3370                         ld      (ix+4Eh), a
3373                         ld      (unk_E00C), a
3376
3376 loc_3376:                                                   ; 336D
3376                         ld      (ix+2Bh), 0
337A                         ld      (ix+21h), 5
337E                         call    sub_332B
3381                         jp      loc_72E1
3384 ; ---------------------------------------------------------------------------
3384
3384 loc_3384:                                                   ; 3362
3384                         ld      a, (ix+21h)
3387                         cp      2
3389                         ret     nc
338A                         ld      (ix+21h), 0
338E                         ld      a, (ix+35h)
3391                         or      a
3392                         ret     z
3393                         ld      (ix+35h), 0
3397                         ret
3397 ; End of function sub_335D
3397
3398
3398 ; =============== S U B R O U T I N E =======================================
3398
3398
3398 sub_3398:                                                   ; sub_32ED↑p
3398
3398 ; FUNCTION CHUNK AT 37C2 SIZE 00000018 BYTES
3398
3398                         ld      a, (ix+14h)
339B                         and     20h ; ' '
339D                         jr      z, loc_33A7
339F                         ld      a, (ix+25h)
33A2                         or      a
33A3                         ret     nz
33A4                         jp      loc_33AC
33A7 ; ---------------------------------------------------------------------------
33A7
33A7 loc_33A7:                                                   ; 339D
33A7                         ld      (ix+25h), 0
33AB                         ret
33AC ; ---------------------------------------------------------------------------
33AC
33AC loc_33AC:                                                   ; 33A4
33AC                         ld      a, (ix+16h)
33AF                         cp      1
33B1                         jr      z, sub_3423
33B3                         cp      3
33B5                         jr      z, sub_3423
33B7                         cp      2
33B9                         ret     nz
33BA                         ld      a, (ix+1Dh)
33BD                         or      a
33BE                         jr      z, loc_33FB
33C0                         ld      a, (ix+15h)
33C3                         cp      2
33C5                         jr      nz, loc_33F6
33C7                         call    sub_386C
33CA                         ld      (ix+1Dh), 0
33CE                         jr      loc_340E
33D0 ; ---------------------------------------------------------------------------
33D0
33D0 loc_33D0:                                                   ; 3111
33D0                         ld      b, 0
33D2                         ld      hl, byte_388F
33D5                         jr      loc_33E9
33D7 ; ---------------------------------------------------------------------------
33D7
33D7 loc_33D7:                                                   ; 304C 305E 
33D7                         ld      b, 0FFh
33D9                         ld      hl, byte_387D
33DC                         ld      a, (ix+15h)
33DF                         cp      3
33E1                         jr      z, loc_33E9
33E3                         ld      hl, byte_3889
33E6                         jp      loc_37C2
33E9 ; ---------------------------------------------------------------------------
33E9
33E9 loc_33E9:                                                   ; 33D5 33E1
33E9                         ld      a, (ix+20h)
33EC                         or      a
33ED                         jp      z, loc_37C2
33F0                         ld      a, 6
33F2                         rst     HL_plus_A
33F3                         jp      loc_37C2
33F6 ; ---------------------------------------------------------------------------
33F6
33F6 loc_33F6:                                                   ; 33C5
33F6                         call    sub_384B
33F9                         jr      loc_340E
33FB ; ---------------------------------------------------------------------------
33FB
33FB loc_33FB:                                                   ; 33BE
33FB                         ld      a, (ix+15h)
33FE                         cp      4
3400                         jr      nz, loc_340B
3402                         call    sub_386C
3405                         ld      (ix+1Dh), 1
3409                         jr      loc_340E
340B ; ---------------------------------------------------------------------------
340B
340B loc_340B:                                                   ; 3400
340B                         call    sub_384B
340E
340E loc_340E:                                                   ; 33CE 33F9 
340E                         ld      (ix+2Dh), 1
3412                         ld      (ix+16h), 4
3416                         ld      (ix+20h), 0
341A                         ld      (ix+1Fh), 19h
341E                         ld      (ix+25h), 3
3422                         ret
3422 ; End of function sub_3398
3422
3423
3423 ; =============== S U B R O U T I N E =======================================
3423
3423
3423 sub_3423:                                                   ; 33B1 33B5 
3423                         call    sub_3810
3426                         ld      (ix+16h), 4
342A                         ld      (ix+20h), 0
342E                         ld      (ix+1Fh), 1Eh
3432                         ld      (ix+25h), 2
3436                         ret
3436 ; End of function sub_3423
3436
3437 ; ---------------------------------------------------------------------------
3437
3437 loc_3437:                                                   ; 2AFA
3437                         ld      (ix+20h), 0
343B                         call    sub_347A
343E                         ld      a, (ix+16h)
3441                         cp      2
3443                         ret     z
3444                         call    sub_335D
3447                         ld      (ix+2Dh), 1
344B                         ld      a, (ix+1Fh)
344E                         or      a
344F                         jp      z, sub_3579
3452                         dec     a
3453                         ld      (ix+1Fh), a
3456                         call    sub_53DA
3459                         ld      a, (ix+1Fh)
345C                         or      a
345D                         jp      z, loc_35B3
3460                         cp      0Fh
3462                         jr      z, loc_346A
3464                         jp      nc, sub_3568
3467                         jp      loc_3521
346A ; ---------------------------------------------------------------------------
346A
346A loc_346A:                                                   ; 3462
346A                         ld      h, (ix+0Eh)
346D                         ld      l, (ix+0Fh)
3470                         call    negate_hl
3473                         ld      (ix+0Eh), h
3476                         ld      (ix+0Fh), l
3479                         ret
347A
347A ; =============== S U B R O U T I N E =======================================
347A
347A
347A sub_347A:                                                   ; 343B↑p
347A                         ld      a, (ix+15h)
347D                         cp      1
347F                         ret     nz
3480                         ld      c, (ix+1Dh)
3483                         ld      iy, Building1_data
3487
3487 loc_3487:                                                   ; 351D↓j
3487                         ld      a, (iy+0)
348A                         cp      0FFh
348C                         ret     z
348D                         or      a
348E                         jp      z, loc_3518                 ; Next building
3491                         cp      (ix+17h)
3494                         jp      z, loc_3518                 ; Next building
3497                         ld      b, 0
3499                         ld      a, c
349A                         or      a
349B                         jr      z, loc_34A6
349D                         ld      a, (iy+7)
34A0                         ld      b, 0F0h
34A2                         add     a, 8
34A4                         jr      loc_34A9
34A6 ; ---------------------------------------------------------------------------
34A6
34A6 loc_34A6:                                                   ; 349B
34A6                         ld      a, (iy+6)
34A9
34A9 loc_34A9:                                                   ; 34A4
34A9                         sub     (ix+8)
34AC                         jr      nc, loc_34B0
34AE                         neg
34B0
34B0 loc_34B0:                                                   ; 34AC
34B0                         cp      2
34B2                         jr      nc, loc_3518                ; Next building
34B4                         ld      a, (ix+8)
34B7                         add     a, b
34B8                         ld      b, a
34B9                         ld      a, (ix+0Ah)
34BC                         add     a, 8
34BE                         ld      c, a
34BF                         call    sub_4504
34C2                         call    sub_1446
34C5                         cp      (iy+4)
34C8                         ret     nz
34C9                         ld      a, (iy+0Dh)
34CC                         cp      0
34CE                         ret     nz
34CF                         ld      a, (ix+0Ah)
34D2                         ld      d, a
34D3                         ld      a, (iy+8)
34D6                         sub     10h
34D8                         cp      (ix+0Ah)
34DB                         jr      nc, loc_34DE
34DD                         ld      d, a
34DE
34DE loc_34DE:                                                   ; 34DB
34DE                         push    de
34DF                         ld      e, d
34E0                         ld      d, 2
34E2                         ld      a, (iy+0)
34E5                         ld      c, a
34E6                         call    sub_53E6
34E9                         pop     de
34EA                         ld      a, (byte_E025)
34ED                         or      a
34EE                         ret     nz
34EF                         ld      (ix+0Ah), d
34F2                         ld      a, (ix+1Dh)
34F5                         ld      (ix+1Eh), a
34F8                         call    sub_36A6
34FB                         ld      (ix+8), a
34FE                         ld      a, (iy+0)
3501                         ld      (ix+17h), a
3504                         ld      (ix+16h), 2
3508                         ld      c, 91
350A                         rst     dispatch_sound
350B                         ld      (ix+20h), 0
350F                         ld      (ix+25h), 0
3513                         ld      (ix+1Fh), 6
3517                         ret
3518 ; ---------------------------------------------------------------------------
3518
3518 loc_3518:                                                   ; 348E 3494 
3518                         ld      de, 18h                     ; Next building
351B                         add     iy, de
351D                         jp      loc_3487
351D ; End of function sub_347A
351D
3520 ; ---------------------------------------------------------------------------
3520                         ret
3521 ; ---------------------------------------------------------------------------
3521
3521 loc_3521:                                                   ; 3467
3521                         call    sub_3568
3524                         ld      a, (ix+17h)
3527                         or      a
3528                         ret     z
3529                         ld      iy, Building1_data
352D
352D loc_352D:                                                   ; 3566↓j
352D                         ld      a, (iy+0)
3530                         cp      0FFh
3532                         ret     z
3533                         or      a
3534                         jr      z, loc_3561
3536                         cp      (ix+17h)
3539                         jr      z, loc_3561
353B                         ld      a, (ix+0Ah)
353E                         sub     10h
3540                         sub     (iy+8)
3543                         jr      nc, loc_354D
3545                         neg
3547                         cp      5
3549                         jr      nc, loc_3561
354B                         jr      loc_3551
354D ; ---------------------------------------------------------------------------
354D
354D loc_354D:                                                   ; 3543
354D                         cp      2
354F                         jr      nc, loc_3561
3551
3551 loc_3551:                                                   ; 354B
3551                         ld      a, (ix+8)
3554                         cp      (iy+6)
3557                         jr      c, loc_3561
3559                         sub     4
355B                         cp      (iy+7)
355E                         jp      c, loc_3622
3561
3561 loc_3561:                                                   ; 3534 3539 
3561                         ld      de, 18h
3564                         add     iy, de
3566                         jr      loc_352D
3568
3568 ; =============== S U B R O U T I N E =======================================
3568
3568
3568 sub_3568:                                                   ; 3464
3568                                                             ; loc_3521↑p 
3568                         ld      bc, 0FFE8h
356B                         ld      h, (ix+0Eh)
356E                         ld      l, (ix+0Fh)
3571                         add     hl, bc
3572                         ld      (ix+0Eh), h
3575                         ld      (ix+0Fh), l
3578                         ret
3578 ; End of function sub_3568
3578
3579
3579 ; =============== S U B R O U T I N E =======================================
3579
3579
3579 sub_3579:                                                   ; 186B↑p 344F
3579
3579 ; FUNCTION CHUNK AT 35E0 SIZE 000000C6 BYTES
3579 ; FUNCTION CHUNK AT 4813 SIZE 0000000F BYTES
3579 ; FUNCTION CHUNK AT 53DE SIZE 00000004 BYTES
3579
3579                         call    sub_35A7
357C                         ld      a, (ix+0Ah)
357F                         cp      32h ; '2'
3581                         jp      nc, loc_35E0
3584                         cp      1Bh
3586                         jp      nc, loc_53DE
3589                         ld      (ix+0Ah), 1Bh
358D                         ld      (ix+16h), 1
3591                         ld      (ix+17h), 0
3595                         ld      (ix+20h), 0
3599                         ld      (ix+1Fh), 0
359D                         ld      (ix+25h), 0
35A1                         ld      c, 56
35A3                         rst     dispatch_sound
35A4                         jp      loc_375B
35A4 ; End of function sub_3579
35A4
35A7
35A7 ; =============== S U B R O U T I N E =======================================
35A7
35A7
35A7 sub_35A7:                                                   ; sub_3579↑p
35A7                         ld      a, (ix+0Eh)
35AA                         or      (ix+0Fh)
35AD                         ret     nz
35AE                         ld      (ix+0Eh), 0FFh
35B2                         ret
35B2 ; End of function sub_35A7
35B2
35B3 ; ---------------------------------------------------------------------------
35B3
35B3 loc_35B3:                                                   ; 345D
35B3                         ld      a, (ix+25h)
35B6                         cp      3
35B8                         ret     z
35B9                         ld      a, (ix+17h)
35BC                         or      a
35BD                         ret     z
35BE                         call    sub_1509
35C1                         ld      a, (ix+0Ah)
35C4                         sub     10h
35C6                         sub     (iy+8)
35C9                         jr      nc, loc_35CD
35CB                         neg
35CD
35CD loc_35CD:                                                   ; 35C9
35CD                         cp      4
35CF                         ret     nc
35D0                         ld      a, (ix+8)
35D3                         cp      (iy+6)
35D6                         ret     c
35D7                         sub     4
35D9                         cp      (iy+7)
35DC                         ret     nc
35DD                         jp      loc_3622
35E0 ; ---------------------------------------------------------------------------
35E0 ; START OF FUNCTION CHUNK FOR sub_3579
35E0
35E0 loc_35E0:                                                   ; 3581
35E0                         call    sub_3568
35E3                         ld      a, (ix+17h)
35E6                         or      a
35E7                         ret     z
35E8                         ld      iy, Building1_data
35EC
35EC loc_35EC:                                                   ; 3620↓j
35EC                         ld      a, (iy+0)
35EF                         cp      0FFh
35F1                         ret     z
35F2                         or      a
35F3                         jp      z, loc_361B
35F6                         ld      a, (ix+0Ah)
35F9                         sub     10h
35FB                         sub     (iy+8)
35FE                         jr      nc, loc_3608
3600                         neg
3602                         cp      5
3604                         jr      nc, loc_361B
3606                         jr      loc_360C
3608 ; ---------------------------------------------------------------------------
3608
3608 loc_3608:                                                   ; 35FE
3608                         cp      2
360A                         jr      nc, loc_361B
360C
360C loc_360C:                                                   ; 3606
360C                         ld      a, (ix+8)
360F                         cp      (iy+6)
3612                         jr      c, loc_361B
3614                         sub     4
3616                         cp      (iy+7)
3619                         jr      c, loc_3622
361B
361B loc_361B:                                                   ; 35F3 3604 
361B                         ld      de, 18h
361E                         add     iy, de
3620                         jr      loc_35EC
3622 ; ---------------------------------------------------------------------------
3622
3622 loc_3622:                                                   ; 355E 35DD 
3622                         ld      c, (iy+0)
3625                         ld      d, 3
3627                         ld      e, (ix+8)
362A                         call    sub_53E6
362D                         ld      a, (byte_E025)
3630                         or      a
3631                         ret     nz
3632                         ld      a, (iy+0Dh)
3635                         cp      1
3637                         ret     z
3638                         ld      a, (iy+3)
363B                         cp      3
363D                         ret     c
363E                         ld      (ix+20h), 0
3642                         ld      (ix+1Fh), 0
3646                         ld      (ix+25h), 0
364A                         ld      (ix+16h), 3
364E                         ld      (ix+2Dh), 0
3652                         ld      c, 56
3654                         rst     dispatch_sound
3655                         ld      a, (iy+8)
3658                         add     a, 10h
365A                         ld      (ix+0Ah), a
365D                         ld      a, (iy+0)
3660                         ld      (ix+17h), a
3663                         ld      a, (iy+9)
3666                         or      a
3667                         ret     nz
3668                         ld      a, (iy+3)
366B                         cp      9
366D                         jr      nc, loc_3673
366F                         ld      b, 3
3671                         jr      loc_3675
3673 ; ---------------------------------------------------------------------------
3673
3673 loc_3673:                                                   ; 366D
3673                         ld      b, 4
3675
3675 loc_3675:                                                   ; 3671
3675                         ld      a, (iy+0Ch)
3678                         bit     7, a
367A                         jp      nz, loc_4813
367D                         cp      b
367E                         ret     nc
367F                         ld      a, (iy+0Ch)
3682                         dec     a
3683                         ld      (iy+0Ch), a
3686                         jr      z, loc_369D
3688                         bit     7, a
368A                         jr      nz, loc_369D
368C                         ld      a, (iy+3)
368F                         dec     a
3690                         ld      (iy+0Ah), a
3693                         ld      (iy+9), 3Ch ; '<'
3697                         ld      hl, score_250
369A                         jp      add_to_score
369D ; ---------------------------------------------------------------------------
369D
369D loc_369D:                                                   ; 3686 368A
369D                         ld      hl, score_2500
36A0                         call    add_to_score
36A3                         jp      loc_4813
36A3 ; END OF FUNCTION CHUNK FOR sub_3579
36A6
36A6 ; =============== S U B R O U T I N E =======================================
36A6
36A6
36A6 sub_36A6:                                                   ; 2E2B↑p 2EEC↑p 
36A6                         ld      a, (ix+1Eh)
36A9                         or      a
36AA                         jr      z, loc_36B2
36AC                         ld      a, (iy+7)
36AF                         add     a, 0Bh
36B1                         ret
36B2 ; ---------------------------------------------------------------------------
36B2
36B2 loc_36B2:                                                   ; 36AA
36B2                         ld      a, (iy+6)
36B5                         sub     6
36B7                         ret
36B7 ; End of function sub_36A6
36B7
36B8
36B8 ; =============== S U B R O U T I N E =======================================
36B8
36B8
36B8 sub_36B8:                                                   ; 2BE5↑p 2DBC 
36B8
36B8 ; FUNCTION CHUNK AT 51BD SIZE 0000000A BYTES
36B8
36B8                         ld      (ix+2Ch), 0
36BC                         ld      (ix+2Dh), 1
36C0                         call    sub_36CE
36C3                         ld      (ix+16h), 5
36C7                         ld      (ix+1Fh), 14h
36CB                         jp      loc_51BD
36CB ; End of function sub_36B8
36CB
36CE
36CE ; =============== S U B R O U T I N E =======================================
36CE
36CE
36CE sub_36CE:                                                   ; 36C0↑p
36CE                         ld      b, 0
36D0
36D0 loc_36D0:                                                   ; 36DB↓j
36D0                         ld      hl, byte_389B
36D3                         call    sub_3804
36D6                         jp      loc_37C5
36D6 ; End of function sub_36CE
36D6
36D9 ; ---------------------------------------------------------------------------
36D9
36D9 loc_36D9:                                                   ; 3705↓j
36D9                         ld      b, 0FFh
36DB                         jr      loc_36D0
36DD ; ---------------------------------------------------------------------------
36DD
36DD loc_36DD:                                                   ; 2B07
36DD                         ld      (ix+2Dh), 1
36E1                         ld      (ix+2Bh), 0
36E5                         ld      a, (ix+0Ah)
36E8                         cp      19h
36EA                         jr      c, sub_3737
36EC                         ld      a, (ix+1Fh)
36EF                         or      a
36F0                         jr      z, sub_3726
36F2                         dec     a
36F3                         ld      (ix+1Fh), a
36F6                         ld      a, (ix+2Ch)
36F9                         or      a
36FA                         jr      nz, loc_3710
36FC                         ld      a, (ix+1Fh)
36FF                         or      a
3700                         jr      z, loc_3708
3702                         cp      0Ah
3704                         ret     nz
3705                         jp      loc_36D9
3708 ; ---------------------------------------------------------------------------
3708
3708 loc_3708:                                                   ; 3700
3708                         ld      b, 0FFh
370A                         ld      hl, byte_38A1
370D                         jp      loc_37C2
3710 ; ---------------------------------------------------------------------------
3710
3710 loc_3710:                                                   ; 36FA
3710                         ld      bc, 0FFE8h
3713                         jr      loc_3718
3715
3715 ; =============== S U B R O U T I N E =======================================
3715
3715
3715 sub_3715:                                                   ; 372A↓p
3715                         ld      bc, 0FF40h
3718
3718 loc_3718:                                                   ; 3713
3718                         ld      h, (ix+0Eh)
371B                         ld      l, (ix+0Fh)
371E                         add     hl, bc
371F                         ld      (ix+0Eh), h
3722                         ld      (ix+0Fh), l
3725                         ret
3725 ; End of function sub_3715
3725
3726
3726 ; =============== S U B R O U T I N E =======================================
3726
3726
3726 sub_3726:                                                   ; 1A1A↑p 36F0
3726                         ld      a, (ix+2Ch)
3729                         or      a
372A                         call    nz, sub_3715
372D                         ld      a, (ix+0Ah)
3730                         cp      32h ; '2'
3732                         ret     nc
3733                         cp      1Bh
3735                         jr      nc, loc_3758
3735 ; End of function sub_3726
3735
3737
3737 ; =============== S U B R O U T I N E =======================================
3737
3737
3737 sub_3737:                                                   ; 36EA 5539↓p 
3737
3737 ; FUNCTION CHUNK AT 53E2 SIZE 00000004 BYTES
3737
3737                         ld      (ix+0Ah), 19h
373B                         ld      (ix+16h), 0Ch
373F                         ld      (ix+17h), 0
3743                         ld      (ix+20h), 0FFh
3747                         ld      (ix+1Fh), 28h ; '('
374B                         ld      (ix+2Dh), 0
374F                         call    sub_52CE
3752                         ld      c, 56
3754                         rst     dispatch_sound
3755                         jp      loc_375B
3758 ; ---------------------------------------------------------------------------
3758
3758 loc_3758:                                                   ; 3735
3758                         jp      loc_53E2
375B ; ---------------------------------------------------------------------------
375B
375B loc_375B:                                                   ; 35A4 3755
375B                         ld      a, (base_strip_number)
375E                         cp      4
3760                         jr      z, loc_3765
3762                         cp      6
3764                         ret     nz
3765
3765 loc_3765:                                                   ; 3760
3765                         ld      iy, object_action_table
3769                         ld      a, (iy+3)
376C                         or      a
376D                         ret     z
376E                         ld      a, (iy+0)
3771                         cp      1
3773                         ret     nz
3774                         ld      a, (ix+8)
3777                         sub     (iy+2)
377A                         sub     5
377C                         ret     c
377D                         sub     1Eh
377F                         ret     nc
3780                         ld      c, 56
3782                         rst     dispatch_sound
3783                         ld      (iy+3), 0
3787                         ret
3787 ; End of function sub_3737
3787
3788 ; ---------------------------------------------------------------------------
3788
3788 loc_3788:                                                   ; 2B1E
3788                         ld      (ix+2Bh), 0
378C                         ld      a, (ix+1Fh)
378F                         or      a
3790                         jr      z, loc_379D
3792                         dec     a
3793                         ld      (ix+1Fh), a
3796                         cp      10h
3798                         ret     nz
3799                         ld      c, 38
379B                         rst     dispatch_sound
379C                         ret
379D ; ---------------------------------------------------------------------------
379D
379D loc_379D:                                                   ; 3790
379D                         ld      (ix+16h), 1
37A1                         ld      (ix+17h), 0
37A5                         ld      (ix+20h), 0
37A9                         ret
37AA
37AA ; =============== S U B R O U T I N E =======================================
37AA
37AA
37AA sub_37AA:                                                   ; 2E5E↑p 2E79
37AA                         call    sub_37FE
37AD                         ld      (ix+2Dh), 1
37B1                         ld      (ix+0Ch), h
37B4                         ld      (ix+0Dh), l
37B7                         ld      (ix+0Eh), 0
37BB                         ld      (ix+0Fh), 0
37BF                         jp      sub_3150
37BF ; End of function sub_37AA
37BF
37C2 ; ---------------------------------------------------------------------------
37C2 ; START OF FUNCTION CHUNK FOR sub_3398
37C2
37C2 loc_37C2:                                                   ; 33E6 33ED 
37C2                         call    sub_37FE
37C5
37C5 loc_37C5:                                                   ; 36D6
37C5                         ld      (ix+2Dh), 1
37C9                         ld      (ix+0Eh), h
37CC                         ld      (ix+0Fh), l
37CF                         ld      (ix+0Ch), 0
37D3                         ld      (ix+0Dh), 0
37D7                         jp      sub_3150
37D7 ; END OF FUNCTION CHUNK FOR sub_3398
37DA ; ---------------------------------------------------------------------------
37DA ; START OF FUNCTION CHUNK FOR sub_3810
37DA
37DA loc_37DA:                                                   ; 382F↓j
37DA                         ld      a, (ix+2)
37DD                         sla     a
37DF                         sla     a
37E1                         rst     HL_plus_A
37E2                         nop
37E3                         ld      b, (ix+1Dh)
37E6                         call    sub_3804
37E9                         ld      (ix+0Ch), h
37EC                         ld      (ix+0Dh), l
37EF                         inc     de
37F0                         ld      b, 0
37F2                         call    sub_3805
37F5                         ld      (ix+0Eh), h
37F8                         ld      (ix+0Fh), l
37FB                         jp      sub_3150
37FB ; END OF FUNCTION CHUNK FOR sub_3810
37FE
37FE ; =============== S U B R O U T I N E =======================================
37FE
37FE
37FE sub_37FE:                                                   ; sub_37AA↑p
37FE                                                             ; loc_37C2↑p
37FE                         ld      a, (ix+2)
3801                         sla     a
3803                         rst     HL_plus_A
3803 ; End of function sub_37FE
3803
3804
3804 ; =============== S U B R O U T I N E =======================================
3804
3804
3804 sub_3804:                                                   ; 36D3↑p 37E6↑p
3804                         ex      de, hl
3804 ; End of function sub_3804
3804
3805
3805 ; =============== S U B R O U T I N E =======================================
3805
3805
3805 sub_3805:                                                   ; 37F2↑p 3854↓p 
3805                         ld      a, (de)
3806                         ld      h, a
3807                         inc     de
3808                         ld      a, (de)
3809                         ld      l, a
380A                         ld      a, b
380B                         or      a
380C                         ret     z
380D                         jp      negate_hl
380D ; End of function sub_3805
380D
3810
3810 ; =============== S U B R O U T I N E =======================================
3810
3810
3810 sub_3810:                                                   ; sub_3423↑p
3810
3810 ; FUNCTION CHUNK AT 37DA SIZE 00000024 BYTES
3810
3810                         ld      (ix+2Dh), 1
3814                         ld      a, (ix+20h)
3817                         cp      0Fh
3819                         jp      nc, loc_3824
381C                         or      a
381D                         jp      z, loc_3824
3820                         ld      a, 3
3822                         jr      z, loc_3827
3824
3824 loc_3824:                                                   ; 3819 381D
3824                         ld      a, (ix+15h)
3827
3827 loc_3827:                                                   ; 3822
3827                         sla     a
3829                         ld      hl, off_38DF
382C                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
382F                         jp      loc_37DA
382F ; End of function sub_3810
382F
3832 ; ---------------------------------------------------------------------------
3832 ; START OF FUNCTION CHUNK FOR sub_2AA5
3832
3832 loc_3832:                                                   ; 2AB5
3832                         call    sub_3150
3835                         jr      loc_383A
3837 ; ---------------------------------------------------------------------------
3837
3837 loc_3837:                                                   ; 2AB0
3837                         call    sub_317C
383A
383A loc_383A:                                                   ; 3835
383A                         ld      (ix+0Ch), 0
383E                         ld      (ix+0Dh), 0
3842                         ld      (ix+0Eh), 0
3846                         ld      (ix+0Fh), 0
384A                         ret
384A ; END OF FUNCTION CHUNK FOR sub_2AA5
384B
384B ; =============== S U B R O U T I N E =======================================
384B
384B
384B sub_384B:                                                   ; loc_33F6↑p
384B                                                             ; loc_340B↑p
384B                         ld      de, byte_38D7
384E
384E loc_384E:                                                   ; 386F↓j
384E                         ld      a, (ix+1Dh)
3851                         xor     1
3853                         ld      b, a
3854                         call    sub_3805
3857                         ld      (ix+0Ch), h
385A                         ld      (ix+0Dh), l
385D                         inc     de
385E                         ld      b, 0
3860                         call    sub_3805
3863                         ld      (ix+0Eh), h
3866                         ld      (ix+0Fh), l
3869                         jp      sub_3150
3869 ; End of function sub_384B
3869
386C
386C ; =============== S U B R O U T I N E =======================================
386C
386C
386C sub_386C:                                                   ; 33C7↑p 3402↑p
386C                         ld      de, byte_38DB
386F                         jr      loc_384E
386F ; End of function sub_386C
386F
386F ; ---------------------------------------------------------------------------
3871 byte_3871:              db    1, 10h,   1, 60h,   1,   0    ; 2E76↑o
3877 byte_3877:              db    0, 38h,   0, 88h,   0, 38h    ; 2E5B↑o
387D byte_387D:              db    1, 20h,   1, 20h,   1, 60h,   1, 60h,   1, 60h,   1
387D                                                             ; 33D9↑o
3888                         db  60h
3889 byte_3889:              db    0, 30h,   0, 30h,   0, 30h    ; 33E3↑o
388F byte_388F:              db    1, 80h,   1, 20h,   1, 20h,   0, 60h,   0, 60h,   0
388F                                                             ; 33D2↑o
389A                         db  60h
389B byte_389B:              db    0, 80h,   0, 80h,   0, 80h    ; loc_36D0↑o
38A1 byte_38A1:              db    3,   0,   3,   0,   3,   0    ; 370A↑o
38A7 byte_38A7:              db    0,0E0h,   1, 80h,   0,0B0h,   1, 40h,   0,0B0h,   1
38A7                                                             ; off_38DF↓o
38B2                         db  40h
38B3 byte_38B3:              db    0,0C0h,   2,0A0h,   0,0A0h,   2, 60h,   0,0A0h,   2
38B3                                                             ; 38E1↓o
38BE                         db  60h
38BF byte_38BF:              db    1,0C0h,   2,   0,   1, 70h,   1,0C0h,   1, 70h,   1
38BF                                                             ; 38E3↓o 38E7↓o
38CA                         db 0C0h
38CB byte_38CB:              db    0, 90h,   1,   0,   0, 70h,   0,0C0h,   0, 70h,   0
38CB                                                             ; 38E5↓o
38D6                         db 0C0h
38D7 byte_38D7:              db    0, 40h,   1,   0              ; sub_384B↑o
38DB byte_38DB:              db    0,0C0h,   1, 40h              ; sub_386C↑o
38DF off_38DF:               dw byte_38A7                        ; 3829↑o
38E1                         dw byte_38B3
38E3                         dw byte_38BF
38E5                         dw byte_38CB
38E7                         dw byte_38BF
38E9
38E9 ; =============== S U B R O U T I N E =======================================
38E9
38E9
38E9 sub_38E9:                                                   ; 09C4↑p
38E9                         ld      b, 12h
38EB                         ld      ix, unk_E1CF
38EF
38EF loc_38EF:                                                   ; 38F9↓j
38EF                         push    bc
38F0                         call    sub_38FC
38F3                         pop     bc
38F4                         ld      de, 14h
38F7                         add     ix, de
38F9                         djnz    loc_38EF
38FB                         ret
38FB ; End of function sub_38E9
38FB
38FC
38FC ; =============== S U B R O U T I N E =======================================
38FC
38FC
38FC sub_38FC:                                                   ; 38F0↑p
38FC
38FC ; FUNCTION CHUNK AT 3C11 SIZE 00000021 BYTES
38FC
38FC                         ld      a, (ix+0)
38FF                         or      a
3900                         ret     z
3901                         cp      59h ; 'Y'
3903                         jp      z, loc_39B5
3906                         cp      69h ; 'i'
3908                         jp      z, loc_39B5
390B                         ld      a, (ix+1)
390E                         cp      2
3910                         jp      z, loc_3993
3913                         cp      0Ch
3915                         jr      z, loc_3993
3917                         cp      5Ch ; '\'
3919                         jr      z, loc_3993
391B                         cp      0Dh
391D                         jr      z, loc_3993
391F                         cp      8
3921                         jr      z, loc_3993
3923                         cp      3
3925                         jr      z, loc_3941
3927                         cp      21h ; '!'
3929                         jr      z, loc_3953
392B                         cp      1Bh
392D                         jr      z, loc_3988
392F                         cp      4
3931                         jr      z, loc_3965
3933                         ld      a, (ix+0Dh)
3936                         inc     a
3937                         ld      (ix+0Dh), a
393A                         cp      4Bh ; 'K'
393C                         jp      nc, loc_39C5
393F                         jr      loc_3993
3941 ; ---------------------------------------------------------------------------
3941
3941 loc_3941:                                                   ; 3925
3941                         ld      a, (ix+0Dh)
3944                         inc     a
3945                         ld      (ix+0Dh), a
3948                         cp      3Bh ; ';'
394A                         jr      nc, loc_3974
394C                         call    sub_3E0A
394F                         call    sub_3ADF
3952                         ret
3953 ; ---------------------------------------------------------------------------
3953
3953 loc_3953:                                                   ; 3929
3953                         ld      a, (ix+0Dh)
3956                         inc     a
3957                         ld      (ix+0Dh), a
395A                         cp      0Ch
395C                         jr      nc, loc_3974
395E                         call    sub_3E0A
3961                         call    sub_3ADF
3964                         ret
3965 ; ---------------------------------------------------------------------------
3965
3965 loc_3965:                                                   ; 3931
3965                         ld      a, (ix+0Dh)
3968                         inc     a
3969                         ld      (ix+0Dh), a
396C                         cp      13h
396E                         jr      nc, loc_3974
3970                         call    sub_3BBC
3973                         ret
3974 ; ---------------------------------------------------------------------------
3974
3974 loc_3974:                                                   ; 394A 395C 
3974                         ld      (ix+0), 0
3978                         ld      (ix+4), 0
397C                         ld      (ix+6), 0
3980                         ld      a, (ix+0Ch)
3983                         call    sub_3C32
3986                         rst     clear_all_sprite
3987                         ret
3988 ; ---------------------------------------------------------------------------
3988
3988 loc_3988:                                                   ; 392D
3988                         ld      a, (ix+0Dh)
398B                         inc     a
398C                         ld      (ix+0Dh), a
398F                         cp      1Eh
3991                         jr      nc, loc_3974
3993
3993 loc_3993:                                                   ; 3910 3915 
3993                         call    sub_3C41
3996                         call    sub_3E0A
3999                         ld      a, (ix+0)
399C                         or      a
399D                         ret     z
399E                         ld      a, (ix+1)
39A1                         cp      0Dh
39A3                         jp      nz, sub_39CE
39A6                         call    sub_3C41
39A9                         call    sub_3E0A
39AC                         ld      a, (ix+0)
39AF                         or      a
39B0                         ret     z
39B1                         call    sub_39CE
39B4                         ret
39B5 ; ---------------------------------------------------------------------------
39B5
39B5 loc_39B5:                                                   ; 3903 3908
39B5                         call    sub_39CE
39B8                         ld      a, (ix+0Dh)
39BB                         and     0Fh
39BD                         dec     a
39BE                         ld      (ix+0Dh), a
39C1                         ret     nz
39C2                         jp      loc_3C11
39C5 ; ---------------------------------------------------------------------------
39C5
39C5 loc_39C5:                                                   ; 393C
39C5                         ld      (ix+0), 69h ; 'i'
39C9                         ld      (ix+0Dh), 9
39CD                         ret
39CD ; End of function sub_38FC
39CD
39CE
39CE ; =============== S U B R O U T I N E =======================================
39CE
39CE
39CE sub_39CE:                                                   ; 39A3 39B1↑p 
39CE                         call    sub_3BF6
39D1                         ld      a, (ix+1)
39D4                         cp      2
39D6                         jr      z, loc_3A08
39D8                         cp      0Ch
39DA                         jr      z, loc_3A27
39DC                         cp      5Ch ; '\'
39DE                         jr      z, loc_3A46
39E0                         cp      0Dh
39E2                         jp      z, loc_3AB3
39E5                         cp      1Bh
39E7                         jp      z, loc_3A84
39EA                         cp      8
39EC                         jr      z, loc_3A65
39EE                         ld      a, (ix+0)
39F1                         cp      59h ; 'Y'
39F3                         jr      z, loc_3A03
39F5                         cp      69h ; 'i'
39F7                         jr      z, loc_39FE
39F9                         ld      (iy+2), 7Ch ; '|'
39FD                         ret
39FE ; ---------------------------------------------------------------------------
39FE
39FE loc_39FE:                                                   ; 39F7
39FE                         ld      (iy+2), 88h
3A02                         ret
3A03 ; ---------------------------------------------------------------------------
3A03
3A03 loc_3A03:                                                   ; 39F3
3A03                         ld      (iy+2), 7Dh ; '}'
3A07                         ret
3A08 ; ---------------------------------------------------------------------------
3A08
3A08 loc_3A08:                                                   ; 39D6
3A08                         ld      a, (ix+0)
3A0B                         cp      59h ; 'Y'
3A0D                         jr      z, loc_3A18
3A0F                         cp      69h ; 'i'
3A11                         jr      z, loc_3A18
3A13                         ld      (iy+2), 81h
3A17                         ret
3A18 ; ---------------------------------------------------------------------------
3A18
3A18 loc_3A18:                                                   ; 3A0D 3A11
3A18                         ld      (iy+2), 85h
3A1C                         ld      a, (ix+0Dh)
3A1F                         cp      7
3A21                         ret     nc
3A22                         ld      (iy+2), 86h
3A26                         ret
3A27 ; ---------------------------------------------------------------------------
3A27
3A27 loc_3A27:                                                   ; 39DA
3A27                         ld      a, (ix+0)
3A2A                         cp      59h ; 'Y'
3A2C                         jr      z, loc_3A37
3A2E                         cp      69h ; 'i'
3A30                         jr      z, loc_3A37
3A32                         ld      (iy+2), 0E2h
3A36                         ret
3A37 ; ---------------------------------------------------------------------------
3A37
3A37 loc_3A37:                                                   ; 3A2C 3A30
3A37                         ld      (iy+2), 0E2h
3A3B                         ld      a, (ix+0Dh)
3A3E                         cp      9
3A40                         ret     nc
3A41                         ld      (iy+2), 0E3h
3A45                         ret
3A46 ; ---------------------------------------------------------------------------
3A46
3A46 loc_3A46:                                                   ; 39DE
3A46                         ld      a, (ix+0)
3A49                         cp      59h ; 'Y'
3A4B                         jr      z, loc_3A56
3A4D                         cp      69h ; 'i'
3A4F                         jr      z, loc_3A56
3A51                         ld      (iy+2), 0D0h
3A55                         ret
3A56 ; ---------------------------------------------------------------------------
3A56
3A56 loc_3A56:                                                   ; 3A4B 3A4F
3A56                         ld      (iy+2), 0D0h
3A5A                         ld      a, (ix+0Dh)
3A5D                         cp      9
3A5F                         ret     nc
3A60                         ld      (iy+2), 0D1h
3A64                         ret
3A65 ; ---------------------------------------------------------------------------
3A65
3A65 loc_3A65:                                                   ; 39EC
3A65                         ld      a, (ix+0)
3A68                         cp      59h ; 'Y'
3A6A                         jr      z, loc_3A75
3A6C                         cp      69h ; 'i'
3A6E                         jr      z, loc_3A75
3A70                         ld      (iy+2), 0F4h
3A74                         ret
3A75 ; ---------------------------------------------------------------------------
3A75
3A75 loc_3A75:                                                   ; 3A6A 3A6E
3A75                         ld      (iy+2), 85h
3A79                         ld      a, (ix+0Dh)
3A7C                         cp      7
3A7E                         ret     nc
3A7F                         ld      (iy+2), 86h
3A83                         ret
3A84 ; ---------------------------------------------------------------------------
3A84
3A84 loc_3A84:                                                   ; 39E7
3A84                         ld      a, (ix+0Ch)
3A87                         call    sub_3C32
3A8A                         ld      a, (ix+6)
3A8D                         add     a, 0Ch
3A8F                         ld      (iy+0), a
3A92                         ld      (iy+2), 0E1h
3A96                         ld      a, (ix+10h)
3A99                         or      a
3A9A                         ld      a, (ix+4)
3A9D                         jr      nz, loc_3AA9
3A9F                         sub     0Ch
3AA1                         ld      (iy+3), a
3AA4                         ld      (iy+1), 3
3AA8                         ret
3AA9 ; ---------------------------------------------------------------------------
3AA9
3AA9 loc_3AA9:                                                   ; 3A9D
3AA9                         sub     4
3AAB                         ld      (iy+3), a
3AAE                         ld      (iy+1), 13h
3AB2                         ret
3AB3 ; ---------------------------------------------------------------------------
3AB3
3AB3 loc_3AB3:                                                   ; 39E2
3AB3                         ld      a, (ix+0)
3AB6                         cp      59h ; 'Y'
3AB8                         jr      z, loc_3AD0
3ABA                         cp      69h ; 'i'
3ABC                         jr      z, loc_3AD0
3ABE                         ld      (iy+2), 0F3h
3AC2                         ld      (iy+1), 3
3AC6                         ld      a, (ix+10h)
3AC9                         or      a
3ACA                         ret     nz
3ACB                         ld      (iy+1), 13h
3ACF                         ret
3AD0 ; ---------------------------------------------------------------------------
3AD0
3AD0 loc_3AD0:                                                   ; 3AB8 3ABC
3AD0                         ld      (iy+2), 85h
3AD4                         ld      a, (ix+0Dh)
3AD7                         cp      7
3AD9                         ret     nc
3ADA                         ld      (iy+2), 86h
3ADE                         ret
3ADE ; End of function sub_39CE
3ADE
3ADF
3ADF ; =============== S U B R O U T I N E =======================================
3ADF
3ADF
3ADF sub_3ADF:                                                   ; 394F↑p 3961↑p
3ADF                         ld      a, (ix+0Ch)
3AE2                         call    sub_3C32
3AE5                         call    sub_3AFB
3AE8                         push    iy
3AEA                         ld      a, (ix+12h)
3AED                         call    sub_51AB
3AF0                         ld      a, (iy+0)
3AF3                         pop     iy
3AF5                         cp      3
3AF7                         ret     z
3AF8                         jp      loc_3974
3AF8 ; End of function sub_3ADF
3AF8
3AFB
3AFB ; =============== S U B R O U T I N E =======================================
3AFB
3AFB
3AFB sub_3AFB:                                                   ; 3AE5↑p
3AFB                         ld      b, 0FFh
3AFD                         ld      a, (ix+10h)
3B00                         or      a
3B01                         jr      z, loc_3B0B
3B03                         ld      (iy+1), 10h
3B07                         ld      b, 0F0h
3B09                         jr      loc_3B0F
3B0B ; ---------------------------------------------------------------------------
3B0B
3B0B loc_3B0B:                                                   ; 3B01
3B0B                         ld      (iy+1), 0
3B0F
3B0F loc_3B0F:                                                   ; 3B09
3B0F                         ld      a, (ix+4)
3B12                         add     a, b
3B13                         ld      (iy+3), a
3B16                         ld      a, (ix+6)
3B19                         add     a, 0Ah
3B1B                         ld      (iy+0), a
3B1E                         ld      a, (ix+1)
3B21                         cp      21h ; '!'
3B23                         jr      z, loc_3B36
3B25                         ld      a, (ix+0Dh)
3B28                         and     1
3B2A                         jr      z, loc_3B31
3B2C                         ld      (iy+2), 0A6h
3B30                         ret
3B31 ; ---------------------------------------------------------------------------
3B31
3B31 loc_3B31:                                                   ; 3B2A
3B31                         ld      (iy+2), 0A7h
3B35                         ret
3B36 ; ---------------------------------------------------------------------------
3B36
3B36 loc_3B36:                                                   ; 3B23
3B36                         ld      (iy+2), 0A4h
3B3A                         ret
3B3A ; End of function sub_3AFB
3B3A
3B3B ; ---------------------------------------------------------------------------
3B3B ; START OF FUNCTION CHUNK FOR sub_3CF6
3B3B
3B3B loc_3B3B:                                                   ; 3D08↓j
3B3B                         ld      c, 1Ah
3B3D                         jr      loc_3B41
3B3F ; ---------------------------------------------------------------------------
3B3F
3B3F loc_3B3F:                                                   ; 3D03↓j
3B3F                         ld      c, 0Ch
3B41
3B41 loc_3B41:                                                   ; 3B3D
3B41                         ld      a, (ix+0Dh)
3B44                         cp      3
3B46                         ret     c
3B47                         ld      a, (iy+25h)
3B4A                         or      a
3B4B                         ret     nz
3B4C                         ld      a, (iy+16h)
3B4F                         cp      2
3B51                         jr      z, loc_3B5A
3B53                         cp      3
3B55                         ret     nz
3B56                         ld      b, 7
3B58                         jr      loc_3B63
3B5A ; ---------------------------------------------------------------------------
3B5A
3B5A loc_3B5A:                                                   ; 3B51
3B5A                         ld      b, 17h
3B5C                         ld      a, (iy+48h)
3B5F                         cp      (ix+13h)
3B62                         ret     nz
3B63
3B63 loc_3B63:                                                   ; 3B58
3B63                         ld      a, (ix+4)
3B66                         sub     (iy+8)
3B69                         jr      nc, loc_3B6D
3B6B                         neg
3B6D
3B6D loc_3B6D:                                                   ; 3B69
3B6D                         cp      b
3B6E                         ret     nc
3B6F                         ld      a, (ix+6)
3B72                         sub     c
3B73                         sub     (iy+0Ah)
3B76                         jr      nc, loc_3B7A
3B78                         neg
3B7A
3B7A loc_3B7A:                                                   ; 3B76
3B7A                         cp      0Ch
3B7C                         ret     nc
3B7C ; END OF FUNCTION CHUNK FOR sub_3CF6
3B7D
3B7D ; =============== S U B R O U T I N E =======================================
3B7D
3B7D
3B7D sub_3B7D:                                                   ; 3D7B↓j 3D80↓j 
3B7D                         ld      a, 1
3B7F                         ld      (byte_E025), a
3B82                         ld      (iy+2Ch), 0
3B86                         ld      (iy+25h), 0
3B8A                         ld      (iy+16h), 5
3B8E                         ld      (iy+1Fh), 20h ; ' '
3B92                         ld      hl, 40h ; '@'
3B95                         ld      a, (ix+1)
3B98                         cp      3
3B9A                         jr      z, loc_3B9F
3B9C                         ld      hl, 0
3B9F
3B9F loc_3B9F:                                                   ; 3B9A
3B9F                         ld      a, (ix+10h)
3BA2                         or      a
3BA3                         call    z, negate_hl
3BA6                         ld      (iy+0Ch), h
3BA9                         ld      (iy+0Dh), l
3BAC                         ld      (iy+0Eh), 0
3BB0                         ld      (iy+0Fh), 0
3BB4                         ld      (iy+20h), 59h ; 'Y'
3BB8                         call    sub_51D9
3BBB                         ret
3BBB ; End of function sub_3B7D
3BBB
3BBC
3BBC ; =============== S U B R O U T I N E =======================================
3BBC
3BBC
3BBC sub_3BBC:                                                   ; 3970↑p
3BBC                         ld      a, (ix+0Ch)
3BBF                         call    sub_3C32
3BC2                         ld      a, (ix+10h)
3BC5                         or      a
3BC6                         ld      (iy+1), 3
3BCA                         jr      z, loc_3BD0
3BCC                         ld      (iy+1), 33h ; '3'
3BD0
3BD0 loc_3BD0:                                                   ; 3BCA
3BD0                         ld      a, (ix+4)
3BD3                         ld      (iy+3), a
3BD6                         ld      a, (ix+6)
3BD9                         ld      (iy+0), a
3BDC                         ld      a, (ix+0Dh)
3BDF                         cp      9
3BE1                         jr      c, loc_3BF1
3BE3                         cp      0Eh
3BE5                         jr      c, loc_3BEC
3BE7                         ld      (iy+2), 0F9h
3BEB                         ret
3BEC ; ---------------------------------------------------------------------------
3BEC
3BEC loc_3BEC:                                                   ; 3BE5
3BEC                         ld      (iy+2), 0F8h
3BF0                         ret
3BF1 ; ---------------------------------------------------------------------------
3BF1
3BF1 loc_3BF1:                                                   ; 3BE1
3BF1                         ld      (iy+2), 0F7h
3BF5                         ret
3BF5 ; End of function sub_3BBC
3BF5
3BF6
3BF6 ; =============== S U B R O U T I N E =======================================
3BF6
3BF6
3BF6 sub_3BF6:                                                   ; sub_39CE↑p
3BF6                         ld      a, (ix+0Ch)
3BF9                         call    sub_3C32
3BFC                         ld      a, (ix+4)
3BFF                         sub     8
3C01                         ld      (iy+3), a
3C04                         ld      a, (ix+6)
3C07                         add     a, 8
3C09                         ld      (iy+0), a
3C0C                         ld      (iy+1), 3
3C10                         ret
3C10 ; End of function sub_3BF6
3C10
3C11 ; ---------------------------------------------------------------------------
3C11 ; START OF FUNCTION CHUNK FOR sub_38FC
3C11 ;   ADDITIONAL PARENT FUNCTION sub_3C41
3C11
3C11 loc_3C11:                                                   ; 39C2 3C78↓j 
3C11                         ld      (ix+0), 0
3C15                         ld      (ix+4), 0
3C19                         ld      (ix+6), 0
3C1D                         ld      a, (ix+0Ch)
3C20                         call    sub_3C32
3C23                         rst     clear_all_sprite
3C24                         ld      a, (ix+12h)
3C27                         cp      0FFh
3C29                         ret     z
3C2A                         call    sub_519C
3C2D                         ld      (iy+0Dh), 0
3C31                         ret
3C31 ; END OF FUNCTION CHUNK FOR sub_38FC
3C32
3C32 ; =============== S U B R O U T I N E =======================================
3C32
3C32
3C32 sub_3C32:                                                   ; 3983↑p 3A87↑p 
3C32                         ld      iy, sprite87_y
3C36                         ld      b, a
3C37                         or      a
3C38                         ret     z
3C39                         ld      de, 4
3C3C
3C3C loc_3C3C:                                                   ; 3C3E↓j
3C3C                         add     iy, de
3C3E                         djnz    loc_3C3C
3C40                         ret
3C40 ; End of function sub_3C32
3C40
3C41
3C41 ; =============== S U B R O U T I N E =======================================
3C41
3C41
3C41 sub_3C41:                                                   ; loc_3993↑p
3C41                                                             ; 39A6↑p
3C41
3C41 ; FUNCTION CHUNK AT 3C11 SIZE 00000021 BYTES
3C41
3C41                         ld      a, (ix+0)
3C44                         cp      59h ; 'Y'
3C46                         ret     z
3C47                         cp      69h ; 'i'
3C49                         ret     z
3C4A                         ld      a, (ix+1)
3C4D                         cp      2
3C4F                         call    z, sub_3CC0
3C52                         ld      a, (ix+1)
3C55                         cp      0Ch
3C57                         call    z, sub_3CD5
3C5A                         ld      a, (ix+1)
3C5D                         cp      5Ch ; '\'
3C5F                         call    z, sub_3CD5
3C62                         ld      h, (ix+4)
3C65                         ld      l, (ix+5)
3C68                         ld      b, (ix+8)
3C6B                         ld      c, (ix+9)
3C6E                         add     hl, bc
3C6F                         ld      (ix+4), h
3C72                         ld      (ix+5), l
3C75                         ld      a, h
3C76                         cp      2
3C78                         jr      c, loc_3C11
3C7A                         cp      0FEh
3C7C                         jr      nc, loc_3C11
3C7E                         ld      h, (ix+6)
3C81                         ld      l, (ix+7)
3C84                         ld      b, (ix+0Ah)
3C87                         ld      c, (ix+0Bh)
3C8A                         add     hl, bc
3C8B                         ld      (ix+6), h
3C8E                         ld      (ix+7), l
3C91                         ld      a, h
3C92                         cp      0Ch
3C94                         jr      c, loc_3C9B
3C96                         cp      0FEh
3C98                         jr      nc, loc_3C9B
3C9A                         ret
3C9B ; ---------------------------------------------------------------------------
3C9B
3C9B loc_3C9B:                                                   ; 3C94 3C98
3C9B                         ld      (ix+0), 69h ; 'i'
3C9F                         ld      (ix+0Dh), 0Ah
3CA3                         ld      a, (ix+1)
3CA6                         ld      c, 107
3CA8                         cp      0Ch
3CAA                         jp      z, do_sound
3CAD                         cp      5Ch ; '\'
3CAF                         jp      z, do_sound
3CB2                         cp      8
3CB4                         ld      c, 78
3CB6                         jp      z, do_sound
3CB9                         ld      c, 79
3CBB                         cp      2
3CBD                         ret     nz
3CBE                         rst     dispatch_sound
3CBF                         ret
3CBF ; End of function sub_3C41
3CBF
3CC0
3CC0 ; =============== S U B R O U T I N E =======================================
3CC0
3CC0
3CC0 sub_3CC0:                                                   ; 3C4F↑p
3CC0                         ld      h, (ix+0Ah)
3CC3                         ld      l, (ix+0Bh)
3CC6                         ld      a, h
3CC7                         cp      0FCh
3CC9                         ret     z
3CCA                         ld      bc, 0FFE0h
3CCD                         add     hl, bc
3CCE                         ld      (ix+0Ah), h
3CD1                         ld      (ix+0Bh), l
3CD4                         ret
3CD4 ; End of function sub_3CC0
3CD4
3CD5
3CD5 ; =============== S U B R O U T I N E =======================================
3CD5
3CD5
3CD5 sub_3CD5:                                                   ; 3C57↑p 3C5F↑p
3CD5                         ld      h, (ix+0Ah)
3CD8                         ld      l, (ix+0Bh)
3CDB                         ld      a, h
3CDC                         cp      0FCh
3CDE                         ret     z
3CDF                         ld      bc, 0FFE0h
3CE2                         add     hl, bc
3CE3                         ld      (ix+0Ah), h
3CE6                         ld      (ix+0Bh), l
3CE9                         ret
3CE9 ; End of function sub_3CD5
3CE9
3CE9 ; ---------------------------------------------------------------------------
3CEA byte_3CEA:              db    4,   3, 0Dh,   3              ; off_420C↓o
3CEE word_3CEE:              dw 0FE04h                           ; 420E↓o
3CF0                         dw 0FE0Dh
3CF2 word_3CF2:              dw 0F904h                           ; 4210↓o
3CF4                         dw 0F90Dh
3CF6
3CF6 ; =============== S U B R O U T I N E =======================================
3CF6
3CF6
3CF6 sub_3CF6:                                                   ; 3E18↓p 3E25↓p 
3CF6
3CF6 ; FUNCTION CHUNK AT 3B3B SIZE 00000042 BYTES
3CF6
3CF6                         xor     a
3CF7                         ld      (byte_E025), a
3CFA                         call    sub_75E1
3CFD                         ret     z
3CFE                         ld      a, (ix+1)
3D01                         cp      3
3D03                         jp      z, loc_3B3F
3D06                         cp      21h ; '!'
3D08                         jp      z, loc_3B3B
3D0B                         ld      a, (iy+8)
3D0E                         add     a, 0
3D10                         ld      b, a
3D11                         ld      a, (iy+0Ah)
3D14                         add     a, 0Ch
3D16                         ld      c, a
3D17                         ld      a, (ix+4)
3D1A                         sub     b
3D1B                         ld      b, a
3D1C                         jr      nc, loc_3D20
3D1E                         neg
3D20
3D20 loc_3D20:                                                   ; 3D1C
3D20                         cp      11h
3D22                         ret     nc
3D23                         ld      a, 10h
3D25                         add     a, b
3D26                         ld      b, a
3D27                         ld      a, (ix+6)
3D2A                         sub     c
3D2B                         ld      c, a
3D2C                         jr      nc, loc_3D30
3D2E                         neg
3D30
3D30 loc_3D30:                                                   ; 3D2C
3D30                         cp      14h
3D32                         ret     nc
3D33                         ld      a, 13h
3D35                         add     a, c
3D36                         ld      c, a
3D37                         ld      a, 26h ; '&'
3D39                         sub     c
3D3A                         cp      2
3D3C                         ret     c
3D3D                         ld      hl, byte_74B2
3D40                         and     0FEh
3D42                         ld      c, a
3D43                         ld      a, (iy+16h)
3D46                         cp      2
3D48                         jr      z, loc_3D4C
3D4A                         jr      loc_3D57
3D4C ; ---------------------------------------------------------------------------
3D4C
3D4C loc_3D4C:                                                   ; 3D48
3D4C                         ld      a, c
3D4D                         cp      1Ah
3D4F                         jr      c, loc_3D58
3D51                         ld      hl, byte_7506
3D54                         xor     a
3D55                         jr      loc_3D58
3D57 ; ---------------------------------------------------------------------------
3D57
3D57 loc_3D57:                                                   ; 3D4A
3D57                         ld      a, c
3D58
3D58 loc_3D58:                                                   ; 3D4F 3D55
3D58                         nop
3D59                         sla     a
3D5B                         rst     HL_plus_A
3D5C                         ld      a, (iy+1Dh)
3D5F                         or      a
3D60                         jr      z, loc_3D94
3D62                         bit     4, b
3D64                         jr      z, loc_3D68
3D66                         inc     hl
3D67                         inc     hl
3D68
3D68 loc_3D68:                                                   ; 3D64
3D68                         bit     3, b
3D6A                         jr      z, loc_3D6D
3D6C                         inc     hl
3D6D
3D6D loc_3D6D:                                                   ; 3D6A
3D6D                         ld      a, b
3D6E                         and     7
3D70                         ld      b, (hl)
3D71                         call    sub_7515
3D74                         jr      z, locret_3DAE
3D76
3D76 loc_3D76:                                                   ; 3DAC↓j
3D76                         ld      a, (ix+1)
3D79                         cp      3
3D7B                         jp      z, sub_3B7D
3D7E                         cp      21h ; '!'
3D80                         jp      z, sub_3B7D
3D83                         ld      (ix+0), 59h ; 'Y'
3D87                         ld      (ix+0Dh), 0Ah
3D8B                         ld      a, 1
3D8D                         ld      (byte_E025), a
3D90                         call    sub_3DAF
3D93                         ret
3D94 ; ---------------------------------------------------------------------------
3D94
3D94 loc_3D94:                                                   ; 3D60
3D94                         ld      a, b
3D95                         add     a, 0FFh
3D97                         ld      b, a
3D98                         bit     4, b
3D9A                         jr      nz, loc_3D9E
3D9C                         inc     hl
3D9D                         inc     hl
3D9E
3D9E loc_3D9E:                                                   ; 3D9A
3D9E                         bit     3, b
3DA0                         jr      nz, loc_3DA3
3DA2                         inc     hl
3DA3
3DA3 loc_3DA3:                                                   ; 3DA0
3DA3                         ld      a, b
3DA4                         and     7
3DA6                         ld      b, (hl)
3DA7                         call    sub_7532
3DAA                         jr      z, locret_3DAE
3DAC                         jr      loc_3D76
3DAE ; ---------------------------------------------------------------------------
3DAE
3DAE locret_3DAE:                                                ; 3D74 3DAA
3DAE                         ret
3DAE ; End of function sub_3CF6
3DAE
3DAF
3DAF ; =============== S U B R O U T I N E =======================================
3DAF
3DAF
3DAF sub_3DAF:                                                   ; 3D90↑p
3DAF
3DAF ; FUNCTION CHUNK AT 4231 SIZE 0000003F BYTES
3DAF ; FUNCTION CHUNK AT 4291 SIZE 00000005 BYTES
3DAF
3DAF                         ld      a, (ix+1)
3DB2                         cp      8
3DB4                         jr      z, loc_3DE0
3DB6                         cp      0Dh
3DB8                         jp      z, loc_4231
3DBB                         cp      2
3DBD                         jr      z, loc_3DD2
3DBF                         cp      0Ch
3DC1                         jr      z, loc_3DD9
3DC3                         cp      5Ch ; '\'
3DC5                         jr      z, loc_3DD9
3DC7                         cp      1Bh
3DC9                         jr      z, loc_3DE7
3DCB                         ld      c, 81
3DCD                         rst     dispatch_sound
3DCE                         call    sub_52F9
3DD1                         ret
3DD2 ; ---------------------------------------------------------------------------
3DD2
3DD2 loc_3DD2:                                                   ; 3DBD
3DD2                         ld      c, 79
3DD4                         rst     dispatch_sound
3DD5                         call    sub_52ED
3DD8                         ret
3DD9 ; ---------------------------------------------------------------------------
3DD9
3DD9 loc_3DD9:                                                   ; 3DC1 3DC5
3DD9                         ld      c, 107
3DDB                         rst     dispatch_sound
3DDC                         call    sub_52ED
3DDF                         ret
3DE0 ; ---------------------------------------------------------------------------
3DE0
3DE0 loc_3DE0:                                                   ; 3DB4
3DE0                         ld      c, 78
3DE2                         rst     dispatch_sound
3DE3                         call    sub_3B7D
3DE6                         ret
3DE7 ; ---------------------------------------------------------------------------
3DE7
3DE7 loc_3DE7:                                                   ; 3DC9
3DE7                         ld      (ix+0Dh), 5
3DEB                         ld      (iy+2Bh), 0
3DEF                         ld      (iy+3Eh), 28h ; '('
3DF3                         ld      (iy+3Dh), 34h ; '4'
3DF7                         ld      a, (ix+4)
3DFA                         ld      (iy+39h), a
3DFD                         ld      a, (ix+6)
3E00                         ld      (iy+4Fh), a
3E03                         call    sub_5397
3E06                         ld      c, 62
3E08                         rst     dispatch_sound
3E09                         ret
3E09 ; End of function sub_3DAF
3E09
3E0A
3E0A ; =============== S U B R O U T I N E =======================================
3E0A
3E0A
3E0A sub_3E0A:                                                   ; 394C↑p 395E↑p 
3E0A
3E0A ; FUNCTION CHUNK AT 4813 SIZE 0000000F BYTES
3E0A
3E0A                         ld      a, (ix+1)
3E0D                         cp      8
3E0F                         jp      z, loc_3E38
3E12
3E12 loc_3E12:                                                   ; 3E4A↓j 3E58↓j 
3E12                         push    iy
3E14                         ld      iy, George_data
3E18                         call    sub_3CF6
3E1B                         ld      a, (byte_E025)
3E1E                         or      a
3E1F                         jr      nz, loc_3E35
3E21                         ld      iy, Lizzie_data
3E25                         call    sub_3CF6
3E28                         ld      a, (byte_E025)
3E2B                         or      a
3E2C                         jr      nz, loc_3E35
3E2E                         ld      iy, Ralph_data
3E32                         call    sub_3CF6
3E35
3E35 loc_3E35:                                                   ; 3E1F 3E2C
3E35                         pop     iy
3E37                         ret
3E38 ; ---------------------------------------------------------------------------
3E38
3E38 loc_3E38:                                                   ; 3E0F
3E38                         ld      a, (ix+4)
3E3B                         sub     8
3E3D                         ld      b, a
3E3E                         ld      c, (ix+6)
3E41                         call    sub_4504
3E44                         call    sub_1446
3E47                         ld      c, a
3E48                         cp      30h ; '0'
3E4A                         jp      z, loc_3E12
3E4D                         call    sub_44BC
3E50                         and     0F8h
3E52                         cp      0A0h
3E54                         jr      z, loc_3E5B
3E56                         cp      0C8h
3E58                         jp      nz, loc_3E12
3E5B
3E5B loc_3E5B:                                                   ; 3E54
3E5B                         push    hl
3E5C                         call    sub_3EB7
3E5F                         pop     hl
3E60                         cp      0FFh
3E62                         jp      z, loc_3E12
3E65                         call    sub_44BC
3E68                         and     0F8h
3E6A                         cp      0A0h
3E6C                         ld      b, 7Eh ; '~'
3E6E                         jr      z, loc_3E72
3E70                         ld      b, 0A8h
3E72
3E72 loc_3E72:                                                   ; 3E6E
3E72                         rst     random_number
3E73                         and     1
3E75                         add     a, b
3E76                         ld      (hl), a
3E77                         ld      (ix+0), 59h ; 'Y'
3E7B                         ld      (ix+0Dh), 0Ah
3E7F                         ld      a, 1
3E81                         ld      (byte_E025), a
3E84                         ld      a, (iy+0Dh)
3E87                         cp      0
3E89                         jp      nz, loc_3E12
3E8C                         ld      c, 78
3E8E                         rst     dispatch_sound
3E8F                         ld      a, (iy+0Ch)
3E92                         bit     7, a
3E94                         jp      nz, loc_4813
3E97                         sub     2
3E99                         ld      (iy+0Ch), a
3E9C                         ld      a, (iy+0Ch)
3E9F                         or      a
3EA0                         jp      z, loc_4813
3EA3                         bit     7, a
3EA5                         jp      nz, loc_4813
3EA8                         cp      4
3EAA                         ret     nc
3EAB                         ld      a, (iy+3)
3EAE                         dec     a
3EAF                         ld      (iy+0Ah), a
3EB2                         ld      (iy+9), 3Ch ; '<'
3EB6                         ret
3EB6 ; End of function sub_3E0A
3EB6
3EB7
3EB7 ; =============== S U B R O U T I N E =======================================
3EB7
3EB7
3EB7 sub_3EB7:                                                   ; 3E5C↑p
3EB7                         ld      a, (ix+4)
3EBA                         ld      b, a
3EBB                         ld      iy, Building1_data
3EBF
3EBF loc_3EBF:                                                   ; 3EE0↓j
3EBF                         ld      a, (iy+0)
3EC2                         cp      0FFh
3EC4                         ret     z
3EC5                         ld      a, (iy+4)
3EC8                         cp      c
3EC9                         jr      nz, loc_3EDB
3ECB                         ld      a, (iy+6)
3ECE                         cp      b
3ECF                         jr      z, loc_3ED9
3ED1                         jr      nc, loc_3EDB
3ED3                         ld      a, (iy+7)
3ED6                         cp      b
3ED7                         jr      c, loc_3EDB
3ED9
3ED9 loc_3ED9:                                                   ; 3ECF
3ED9                         xor     a
3EDA                         ret
3EDB ; ---------------------------------------------------------------------------
3EDB
3EDB loc_3EDB:                                                   ; 3EC9 3ED1 
3EDB                         ld      de, 18h                     ; Next building
3EDE                         add     iy, de
3EE0                         jr      loc_3EBF
3EE0 ; End of function sub_3EB7
3EE0
3EE2 ; ---------------------------------------------------------------------------
3EE2                         ret
3EE3
3EE3 ; =============== S U B R O U T I N E =======================================
3EE3
3EE3
3EE3 sub_3EE3:                                                   ; 59DB↓p
3EE3                         call    sub_4212
3EE6                         or      a
3EE7                         ret     nz
3EE8                         ld      hl, word_4200
3EEB                         ld      a, (ix+10h)
3EEE                         sla     a
3EF0                         sla     a
3EF2                         rst     HL_plus_A
3EF3                         ld      d, (hl)
3EF4                         inc     hl
3EF5                         ld      e, (hl)
3EF6                         inc     hl
3EF7                         ld      a, (hl)
3EF8                         ld      (iy+0Ah), a
3EFB                         inc     hl
3EFC                         ld      a, (hl)
3EFD                         ld      (iy+0Bh), a
3F00                         ex      de, hl
3F01                         call    sub_50DD
3F04                         bit     4, a
3F06                         call    z, negate_hl
3F09                         ld      (iy+8), h
3F0C                         ld      (iy+9), l
3F0F                         ld      hl, off_420C
3F12                         ld      a, (ix+10h)
3F15                         sla     a
3F17                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
3F1A                         call    sub_50DD
3F1D                         bit     4, a
3F1F                         jr      z, loc_3F23
3F21                         inc     hl
3F22                         inc     hl
3F23
3F23 loc_3F23:                                                   ; 3F1F
3F23                         ld      b, (hl)
3F24                         inc     hl
3F25                         ld      c, (hl)
3F26                         ld      a, (ix+2)
3F29                         add     a, b
3F2A                         ld      (iy+4), a
3F2D                         ld      a, (ix+3)
3F30                         add     a, c
3F31                         ld      (iy+6), a
3F34                         ld      (iy+0Dh), 0
3F38                         ld      a, (ix+6)
3F3B                         ld      (iy+12h), a
3F3E                         ld      (iy+0), 1
3F42                         ld      (ix+0Dh), 1
3F46                         ld      (iy+1), 1
3F4A                         ld      c, 59
3F4C                         rst     dispatch_sound
3F4D                         ld      a, (ix+11h)
3F50                         and     1
3F52                         ret     z
3F53                         call    sub_5B81
3F56                         ret
3F56 ; End of function sub_3EE3
3F56
3F57 ; ---------------------------------------------------------------------------
3F57 ; START OF FUNCTION CHUNK FOR sub_CCB7
3F57
3F57 loc_3F57:                                                   ; D302↓j
3F57                         call    sub_4212
3F5A                         or      a
3F5B                         ret     nz
3F5C                         ld      (iy+0Ah), 0FEh
3F60                         ld      (iy+0Bh), 0
3F64                         ld      (iy+8), 0
3F68                         ld      (iy+9), 0
3F6C                         ld      bc, 0FEF8h
3F6F                         ld      a, (ix+10h)
3F72                         or      a
3F73                         jr      z, loc_3F78
3F75                         ld      bc,  aLizzie+2              ; "IZZIE"
3F78
3F78 loc_3F78:                                                   ; 3F73
3F78                         ld      a, (ix+4)
3F7B                         add     a, b
3F7C                         ld      (iy+4), a
3F7F                         ld      a, (ix+6)
3F82                         add     a, c
3F83                         ld      (iy+6), a
3F86                         ld      (iy+0Dh), 0
3F8A                         ld      (iy+12h), 0FFh
3F8E                         ld      (iy+0), 1
3F92                         ld      (ix+0Dh), 1
3F96                         ld      (iy+1), 1
3F9A                         ld      c, 59
3F9C                         rst     dispatch_sound
3F9D                         ret
3F9D ; END OF FUNCTION CHUNK FOR sub_CCB7
3F9E ; ---------------------------------------------------------------------------
3F9E ; START OF FUNCTION CHUNK FOR sub_C088
3F9E
3F9E loc_3F9E:                                                   ; C09F↓j C0AA↓j 
3F9E                         call    sub_4212
3FA1                         or      a
3FA2                         ret     nz
3FA3                         ld      (iy+0Ah), 0FDh
3FA7                         ld      (iy+0Bh), 80h
3FAB                         ld      hl, 300h
3FAE                         ld      a, (ix+10h)
3FB1                         or      a
3FB2                         call    nz, negate_hl
3FB5                         ld      (iy+8), h
3FB8                         ld      (iy+9), l
3FBB                         ld      b, 0F6h
3FBD                         ld      a, (ix+10h)
3FC0                         or      a
3FC1                         jr      nz, loc_3FC5
3FC3                         ld      b, 0Ah
3FC5
3FC5 loc_3FC5:                                                   ; 3FC1
3FC5                         ld      a, (ix+4)
3FC8                         add     a, b
3FC9                         ld      (iy+4), a
3FCC                         ld      a, (ix+6)
3FCF                         sub     8
3FD1                         ld      (iy+6), a
3FD4                         ld      (iy+0Dh), 3Ch ; '<'
3FD8                         ld      (iy+0), 1
3FDC                         ld      (iy+12h), 0FFh
3FE0                         ld      (iy+1), 1
3FE4                         ld      c, 59
3FE6                         rst     dispatch_sound
3FE7                         ret
3FE7 ; END OF FUNCTION CHUNK FOR sub_C088
3FE8
3FE8 ; =============== S U B R O U T I N E =======================================
3FE8
3FE8
3FE8 sub_3FE8:                                                   ; sub_C050↓p
3FE8                         call    sub_4212
3FEB                         or      a
3FEC                         ret     nz
3FED                         ld      (iy+0Ah), 0FEh
3FF1                         ld      (iy+0Bh), 0
3FF5                         ld      (iy+8), 0
3FF9                         ld      (iy+9), 0
3FFD                         ld      a, (ix+4)
4000                         add     a, 0
4002                         ld      (iy+4), a
4005                         ld      a, (ix+6)
4008                         sub     8
400A                         ld      (iy+6), a
400D                         ld      (iy+0Dh), 0
4011                         ld      (iy+0), 1
4015                         ld      (iy+12h), 0FFh
4019                         ld      (iy+1), 8
401D                         ld      c, 55
401F                         rst     dispatch_sound
4020                         ret
4020 ; End of function sub_3FE8
4020
4021
4021 ; =============== S U B R O U T I N E =======================================
4021
4021
4021 sub_4021:                                                   ; C526↓p C582↓p
4021                         call    sub_4212
4024                         or      a
4025                         ret     nz
4026                         ld      (iy+0Ah), 0
402A                         ld      (iy+0Bh), 0C0h
402E                         ld      hl, 14Ch
4031                         ld      a, (ix+5)
4034                         or      a
4035                         call    nz, negate_hl
4038                         ld      (iy+8), h
403B                         ld      (iy+9), l
403E                         ld      b, 0F0h
4040                         ld      a, (ix+5)
4043                         ld      (iy+10h), a
4046                         or      a
4047                         jr      nz, loc_404B
4049                         ld      b, 10h
404B
404B loc_404B:                                                   ; 4047
404B                         ld      a, (ix+2)
404E                         add     a, b
404F                         ld      (iy+4), a
4052                         ld      (iy+0Eh), a
4055                         ld      (iy+6), 16h
4059                         ld      (iy+0Dh), 0
405D                         ld      (iy+0), 1
4061                         ld      (iy+12h), 0FFh
4065                         ld      (iy+1), 0Dh
4069                         ld      c, 55
406B                         rst     dispatch_sound
406C                         ret
406C ; End of function sub_4021
406C
406D
406D ; =============== S U B R O U T I N E =======================================
406D
406D
406D sub_406D:                                                   ; CDFD↓p CE18↓p 
406D                         call    sub_4212
4070                         or      a
4071                         ret     nz
4072                         ld      (iy+0Ah), 0FDh
4076                         ld      (iy+0Bh), 0
407A                         ld      hl, 180h
407D                         ld      a, (ix+0Ch)
4080                         or      a
4081                         call    nz, negate_hl
4084                         ld      (iy+8), h
4087                         ld      (iy+9), l
408A                         ld      b, 6
408C                         ld      a, (ix+0Ch)
408F                         or      a
4090                         jr      z, loc_4094
4092                         ld      b, 0FAh
4094
4094 loc_4094:                                                   ; 4090
4094                         ld      a, (ix+4)
4097                         add     a, b
4098                         ld      (iy+4), a
409B                         ld      a, (ix+0Ch)
409E                         ld      (iy+10h), a
40A1                         ld      (iy+0Eh), a
40A4                         ld      (iy+6), 0C0h
40A8                         ld      (iy+0), 1
40AC                         ld      (iy+12h), 0FFh
40B0                         ld      (iy+1), 1Bh
40B4                         ld      c, 78
40B6                         rst     dispatch_sound
40B7                         rst     random_number
40B8                         and     7
40BA                         ld      (iy+0Dh), a
40BD                         ret
40BD ; End of function sub_406D
40BD
40BE
40BE ; =============== S U B R O U T I N E =======================================
40BE
40BE
40BE sub_40BE:                                                   ; 5A78↓p
40BE                         call    sub_4212
40C1                         or      a
40C2                         ret     nz
40C3                         call    sub_4175
40C6                         ld      bc,  aRalph+5               ; "H "
40C9                         call    sub_50DD
40CC                         bit     4, a
40CE                         jr      nz, loc_40D3
40D0                         ld      bc, 0C03h
40D3
40D3 loc_40D3:                                                   ; 40CE
40D3                         ld      a, (ix+2)
40D6                         add     a, b
40D7                         ld      (iy+4), a
40DA                         ld      a, (ix+3)
40DD                         add     a, c
40DE                         ld      (iy+6), a
40E1                         ld      (iy+0Dh), 0
40E5                         ld      a, (ix+6)
40E8                         ld      (iy+12h), a
40EB                         ld      (iy+0), 1
40EF                         ld      (iy+1), 2
40F3                         ld      (ix+0Dh), 1
40F7                         call    sub_5B81
40FA                         ret
40FA ; End of function sub_40BE
40FA
40FB
40FB ; =============== S U B R O U T I N E =======================================
40FB
40FB
40FB sub_40FB:                                                   ; 6158↓p
40FB                         push    bc
40FC                         call    sub_4212
40FF                         pop     bc
4100                         or      a
4101                         ret     nz
4102                         ld      hl, 1C0h
4105                         ld      a, (ix+8)
4108                         cp      b
4109                         call    nc, negate_hl
410C                         ld      (iy+8), h
410F                         ld      (iy+9), l
4112                         ld      (iy+0Ah), 0
4116                         ld      (iy+0Bh), 0
411A                         ld      a, b
411B                         add     a, 8
411D                         ld      (iy+4), a
4120                         ld      (iy+6), c
4123                         ld      (iy+0Dh), 0
4127                         ld      (iy+12h), 0
412B                         ld      (iy+0), 1
412F                         ld      (iy+1), 0Ch
4133                         ld      (ix+0Dh), 1
4137                         ret
4137 ; End of function sub_40FB
4137
4138
4138 ; =============== S U B R O U T I N E =======================================
4138
4138
4138 sub_4138:                                                   ; 616A↓p
4138                         push    bc
4139                         call    sub_4212
413C                         pop     bc
413D                         or      a
413E                         ret     nz
413F                         ld      hl, 80h
4142                         ld      a, (ix+8)
4145                         cp      b
4146                         call    nc, negate_hl
4149                         ld      (iy+8), h
414C                         ld      (iy+9), l
414F                         ld      (iy+0Ah), 0
4153                         ld      (iy+0Bh), 0
4157                         ld      a, b
4158                         add     a, 8
415A                         ld      (iy+4), a
415D                         ld      (iy+6), c
4160                         ld      (iy+0Dh), 0
4164                         ld      (iy+12h), 0
4168                         ld      (iy+0), 1
416C                         ld      (iy+1), 5Ch ; '\'
4170                         ld      (ix+0Dh), 1
4174                         ret
4174 ; End of function sub_4138
4174
4175
4175 ; =============== S U B R O U T I N E =======================================
4175
4175
4175 sub_4175:                                                   ; 40C3↑p
4175                         ld      b, 0
4177                         ld      a, (ix+2)
417A                         sub     (ix+0Eh)
417D                         jr      nc, loc_4183
417F                         neg
4181                         ld      b, 1
4183
4183 loc_4183:                                                   ; 417D
4183                         cp      98h
4185                         jr      c, loc_4189
4187                         ld      a, 98h
4189
4189 loc_4189:                                                   ; 4185
4189                         ld      l, a
418A                         ld      h, 0
418C                         sla     l
418E                         rl      h
4190                         sla     l
4192                         rl      h
4194                         ld      de, 20h ; ' '
4197                         add     hl, de
4198                         ld      a, h
4199                         or      a
419A                         jr      z, loc_41B2
419C                         ld      de, 20h ; ' '
419F                         add     hl, de
41A0                         ld      d, 0
41A2                         ld      a, (ix+3)
41A5                         sub     48h ; 'H'
41A7                         neg
41A9                         ld      e, a
41AA                         bit     7, a
41AC                         jr      z, loc_41B0
41AE                         ld      d, 0FFh
41B0
41B0 loc_41B0:                                                   ; 41AC
41B0                         add     hl, de
41B1                         add     hl, de
41B2
41B2 loc_41B2:                                                   ; 419A
41B2                         ld      a, b
41B3                         or      a
41B4                         call    z, negate_hl
41B7                         ld      (iy+8), h
41BA                         ld      (iy+9), l
41BD                         ld      a, (ix+3)
41C0                         sub     (ix+0Fh)
41C3                         jr      c, loc_41D8
41C5                         ld      hl, 300h
41C8                         cp      40h ; '@'
41CA                         jr      c, loc_41F9
41CC                         ld      hl, 280h
41CF                         cp      70h ; 'p'
41D1                         jr      c, loc_41F9
41D3                         ld      hl, 240h
41D6                         jr      loc_41F9
41D8 ; ---------------------------------------------------------------------------
41D8
41D8 loc_41D8:                                                   ; 41C3
41D8                         neg
41DA                         cp      20h ; ' '
41DC                         ld      hl, 440h
41DF                         jr      c, loc_41F9
41E1                         cp      40h ; '@'
41E3                         ld      hl, 4C0h
41E6                         jr      c, loc_41F9
41E8                         cp      60h ; '`'
41EA                         ld      hl, 500h
41ED                         jr      c, loc_41F9
41EF                         cp      80h
41F1                         ld      hl, 540h
41F4                         jr      c, loc_41F9
41F6                         ld      hl, 5C0h
41F9
41F9 loc_41F9:                                                   ; 41CA 41D1 
41F9                         ld      (iy+0Ah), h
41FC                         ld      (iy+0Bh), l
41FF                         ret
41FF ; End of function sub_4175
41FF
41FF ; ---------------------------------------------------------------------------
4200 word_4200:              dw 8001h                            ; 3EE8↑o
4202                         dw 8001h
4204                         db    2
4205                         db  20h
4206                         db    0
4207                         db    0
4208                         dw 8001h
420A                         dw 80FEh
420C off_420C:               dw byte_3CEA                        ; 3F0F↑o
420E                         dw word_3CEE
4210                         dw word_3CF2
4212
4212 ; =============== S U B R O U T I N E =======================================
4212
4212
4212 sub_4212:                                                   ; sub_3EE3↑p
4212                                                             ; loc_3F57↑p 
4212                         ld      b, 11h
4214                         ld      de, 14h
4217                         ld      iy, unk_E1CF
421B
421B loc_421B:                                                   ; 4223↓j
421B                         ld      a, (iy+0)
421E                         or      a
421F                         jr      z, loc_4229
4221                         add     iy, de
4223                         djnz    loc_421B
4225                         ld      a, 1
4227                         or      a
4228                         ret
4229 ; ---------------------------------------------------------------------------
4229
4229 loc_4229:                                                   ; 421F
4229                         ld      a, 12h
422B                         sub     b
422C                         ld      (iy+0Ch), a
422F                         xor     a
4230                         ret
4230 ; End of function sub_4212
4230
4231 ; ---------------------------------------------------------------------------
4231 ; START OF FUNCTION CHUNK FOR sub_3DAF
4231
4231 loc_4231:                                                   ; 3DB8
4231                         ld      c, 64
4233                         rst     dispatch_sound
4234                         call    sub_52E3
4237                         ld      (iy+40h), 1
423B                         ld      (iy+2Bh), 0
423F                         ld      (iy+41h), 0Ch
4243                         ld      hl, 100h
4246                         ld      a, (iy+25h)
4249                         or      a
424A                         jr      nz, loc_4261
424C                         ld      a, (iy+16h)
424F                         cp      1
4251                         jr      z, sub_4270
4253                         cp      2
4255                         jr      z, loc_4291
4257                         ld      hl, 100h
425A                         cp      3
425C                         jr      z, sub_4270
425E                         ld      hl, 140h
4261
4261 loc_4261:                                                   ; 424A
4261                         ld      h, (iy+0Ch)
4264                         ld      l, (iy+0Dh)
4267                         bit     7, h
4269                         call    nz, negate_hl
426C                         call    sub_4270
426F                         ret
426F ; END OF FUNCTION CHUNK FOR sub_3DAF
4270
4270 ; =============== S U B R O U T I N E =======================================
4270
4270
4270 sub_4270:                                                   ; 4251 425C 
4270                         ld      a, h
4271                         or      a
4272                         jr      nz, loc_4277
4274                         ld      hl, 100h
4277
4277 loc_4277:                                                   ; 4272
4277                         ld      a, (iy+8)
427A                         cp      (ix+0Eh)
427D                         jr      nc, loc_4282
427F                         call    negate_hl
4282
4282 loc_4282:                                                   ; 427D 4294↓j
4282                         ld      (iy+0Ch), h
4285                         ld      (iy+0Dh), l
4288                         ld      (iy+0Eh), 0
428C                         ld      (iy+0Fh), 0
4290                         ret
4290 ; End of function sub_4270
4290
4291 ; ---------------------------------------------------------------------------
4291 ; START OF FUNCTION CHUNK FOR sub_3DAF
4291
4291 loc_4291:                                                   ; 4255
4291                         ld      hl, 0
4294                         jr      loc_4282
4294 ; END OF FUNCTION CHUNK FOR sub_3DAF
4294 ; ---------------------------------------------------------------------------
4296 byte_4296:              db 0ACh,0ACh,   0,   0,   0,   0,   0,   0,   0,   0,   0
4296                                                             ; 44C5↓o
42A1                         db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
42AC                         db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
42B7                         db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
42C2                         db    0,   0, 88h, 90h, 90h, 90h, 88h,0A0h, 88h, 98h, 98h
42CD                         db  98h, 88h, 83h, 8Fh, 8Fh, 8Fh, 8Fh, 8Dh, 8Dh, 8Dh, 8Dh
42D8                         db  8Eh, 8Eh, 8Eh, 8Eh,0A8h, 91h, 91h, 99h, 99h, 89h, 89h
42E3                         db  89h, 89h, 97h, 97h, 97h, 97h, 95h, 95h, 95h, 95h, 96h
42EE                         db  96h, 96h, 96h, 9Fh, 9Fh, 9Fh, 9Fh,0B0h, 9Dh, 9Dh, 9Dh
42F9                         db    0,   0,   0,   0,   0, 9Dh, 9Eh, 9Eh, 9Eh, 9Eh,0A0h
4304                         db 0A0h,0A0h,0A0h, 88h,0A4h,0A4h,0CCh,0CCh,   0,   0,   0
430F                         db    0,   0,   0,   0,   0,0A4h,0A4h,   0,   0,   0,   0
431A                         db    0,   0,   0,   0,0C0h,   0,   0,   0,   0,   0,   0
4325                         db    0,   0,   0,0A8h,0A8h,0A8h,   0,0B8h,0B8h,0B0h,0B0h
4330                         db 0B0h,0C0h,0B0h,0B0h,0B0h,0B0h,0B0h,0A8h,0A8h,0A8h,0A8h
433B                         db 0C8h,0C8h,0C8h,0CCh,0CCh,0A8h,0A8h,0A8h,0A8h,0B4h,0B4h
4346                         db 0B4h,0B4h,0B4h,0B4h,0B4h,0B4h,0B4h,0B4h,0B4h,0B4h,0B1h
4351                         db 0B1h,0B1h,0B1h,0B9h,0B9h,0C1h,0C1h,0BCh,0BCh,0C4h,0C4h
435C                         db 0BCh,0BCh,0C4h,0C4h,0BCh,0BCh,0C4h,0C4h,0B2h,0B2h, 8Ah
4367                         db  8Ah, 8Bh, 8Bh, 8Bh,0B0h,0B0h,0B0h,   0,   0,   0,   0
4372                         db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
437D                         db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
4388                         db    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
4393                         db    0,   0,   0
4396
4396 ; =============== S U B R O U T I N E =======================================
4396
4396
4396 sub_4396:                                                   ; 09A6↑p
4396                         ld      ix, George_data
439A                         call    sub_43AC
439D                         ld      ix, Lizzie_data
43A1                         call    sub_43AC
43A4                         ld      ix, Ralph_data
43A8                         call    sub_43AC
43AB                         ret
43AB ; End of function sub_4396
43AB
43AC
43AC ; =============== S U B R O U T I N E =======================================
43AC
43AC
43AC sub_43AC:                                                   ; 439A↑p 43A1↑p 
43AC                         ld      a, (ix+1)
43AF                         cp      2
43B1                         ret     nz
43B2                         ld      a, (ix+0Ah)
43B5                         sub     10h
43B7                         srl     a
43B9                         srl     a
43BB                         srl     a
43BD                         ld      (ix+24h), a
43C0                         ld      a, (ix+22h)
43C3                         or      a
43C4                         ret     z
43C5                         call    sub_43CD
43C8                         ld      (ix+22h), 0
43CC                         ret
43CC ; End of function sub_43AC
43CC
43CD
43CD ; =============== S U B R O U T I N E =======================================
43CD
43CD
43CD sub_43CD:                                                   ; 43C5↑p
43CD
43CD ; FUNCTION CHUNK AT 4450 SIZE 00000024 BYTES
43CD ; FUNCTION CHUNK AT 602B SIZE 0000000E BYTES
43CD
43CD                         cp      2
43CF                         jr      z, loc_43EB
43D1                         cp      3
43D3                         jr      z, loc_43EB
43D5                         cp      4
43D7                         jr      nz, loc_43DF
43D9                         ld      a, (ix+24h)
43DC                         cp      2
43DE                         ret     c
43DF
43DF loc_43DF:                                                   ; 43D7
43DF                         ld      a, (ix+17h)
43E2                         call    sub_1509
43E5                         call    sub_43F5
43E8                         jp      loc_4450
43EB ; ---------------------------------------------------------------------------
43EB
43EB loc_43EB:                                                   ; 43CF 43D3
43EB                         call    sub_43F5
43EE                         call    sub_4423
43F1                         ret     nz
43F2                         jp      loc_4450
43F2 ; End of function sub_43CD
43F2
43F5
43F5 ; =============== S U B R O U T I N E =======================================
43F5
43F5
43F5 sub_43F5:                                                   ; 43E5↑p
43F5                                                             ; loc_43EB↑p
43F5                         ld      a, (ix+32h)
43F8                         sub     4
43FA                         ld      b, a
43FB                         ld      a, (ix+33h)
43FE                         add     a, 4
4400                         ld      c, a
4401                         call    sub_4504
4404                         call    sub_1446
4407                         ld      c, a
4408                         ret
4408 ; End of function sub_43F5
4408
4409
4409 ; =============== S U B R O U T I N E =======================================
4409
4409
4409 sub_4409:                                                   ; loc_4A00↓p
4409                         add     a, 2
440B                         sla     a
440D                         sla     a
440F                         sla     a
4411                         ret
4411 ; End of function sub_4409
4411
4412
4412 ; =============== S U B R O U T I N E =======================================
4412
4412
4412 sub_4412:                                                   ; 49D4↓p 4AA7↓p
4412                         ld      iy, sprite5_y
4416                         or      a
4417                         ret     z
4418                         dec     a
4419                         ret     z
441A                         ld      b, a
441B                         ld      de, 0Ch
441E
441E loc_441E:                                                   ; 4420↓j
441E                         add     iy, de
4420                         djnz    loc_441E
4422                         ret
4422 ; End of function sub_4412
4422
4423
4423 ; =============== S U B R O U T I N E =======================================
4423
4423
4423 sub_4423:                                                   ; 43EE↑p
4423                         ld      a, (ix+32h)
4426                         sub     4
4428                         ld      b, a
4429                         ld      iy, Building1_data
442D
442D loc_442D:                                                   ; 444E↓j
442D                         ld      a, (iy+0)
4430                         cp      0FFh
4432                         ret     z
4433                         ld      a, (iy+4)
4436                         cp      c
4437                         jr      nz, loc_4449
4439                         ld      a, (iy+6)
443C                         cp      b
443D                         jr      z, loc_4447
443F                         jr      nc, loc_4449
4441                         ld      a, (iy+7)
4444                         cp      b
4445                         jr      c, loc_4449
4447
4447 loc_4447:                                                   ; 443D
4447                         xor     a
4448                         ret
4449 ; ---------------------------------------------------------------------------
4449
4449 loc_4449:                                                   ; 4437 443F 
4449                         ld      de, 18h
444C                         add     iy, de
444E                         jr      loc_442D
444E ; End of function sub_4423
444E
4450 ; ---------------------------------------------------------------------------
4450 ; START OF FUNCTION CHUNK FOR sub_43CD
4450
4450 loc_4450:                                                   ; 43E8 43F2
4450                         ld      a, c
4451                         cp      30h ; '0'
4453                         jp      z, loc_602B
4456                         call    sub_44BC
4459                         ld      (unk_E031), a
445C                         call    sub_4538
445F                         ld      a, (unk_E032)
4462                         cp      0FFh
4464                         ret     z
4465                         push    hl
4466                         dec     hl
4467                         dec     hl
4468                         push    iy
446A                         call    sub_4474
446D                         pop     iy
446F                         pop     hl
4470                         call    sub_47DC
4473                         ret
4473 ; END OF FUNCTION CHUNK FOR sub_43CD
4474
4474 ; =============== S U B R O U T I N E =======================================
4474
4474
4474 sub_4474:                                                   ; 446A↑p
4474
4474 ; FUNCTION CHUNK AT 460A SIZE 00000052 BYTES
4474 ; FUNCTION CHUNK AT 4669 SIZE 00000011 BYTES
4474
4474                         ld      a, (unk_E032)
4477                         or      a
4478                         jp      nz, loc_460A
447B                         push    hl
447C                         call    sub_44A5
447F                         pop     hl
4480                         push    hl
4481                         ld      de, 0FFC0h                  ; Subtract $40 using -negative
4484                         add     hl, de
4485                         call    sub_4496
4488                         pop     hl
4489                         ld      de, 64
448C                         add     hl, de
448D                         ld      a, 3
448F                         ld      (unk_E01C), a
4492                         call    sub_449B
4495                         ret
4495 ; End of function sub_4474
4495
4496
4496 ; =============== S U B R O U T I N E =======================================
4496
4496
4496 sub_4496:                                                   ; 4485↑p
4496                         ld      a, 1
4498                         ld      (unk_E01C), a
4498 ; End of function sub_4496
4498
449B
449B ; =============== S U B R O U T I N E =======================================
449B
449B
449B sub_449B:                                                   ; 4492↑p
449B                         call    sub_4764
449E                         call    sub_467A
44A1                         call    sub_4764
44A4                         ret
44A4 ; End of function sub_449B
44A4
44A5
44A5 ; =============== S U B R O U T I N E =======================================
44A5
44A5
44A5 sub_44A5:                                                   ; 447C↑p
44A5                         ld      a, 4
44A7                         ld      (unk_E01C), a
44AA                         call    sub_467A
44AD                         call    sub_44CF
44B0                         call    sub_465C
44B3                         ld      a, 2
44B5                         ld      (unk_E01C), a
44B8                         call    sub_467A
44BB                         ret
44BB ; End of function sub_44A5
44BB
44BC
44BC ; =============== S U B R O U T I N E =======================================
44BC
44BC
44BC sub_44BC:                                                   ; 3E4D↑p 3E65↑p 
44BC                         push    hl
44BD                         inc     hl
44BE                         ld      a, (hl)
44BF                         dec     hl
44C0                         and     3
44C2                         jr      z, loc_44CC
44C4                         ld      a, (hl)
44C5                         ld      hl, byte_4296
44C8                         rst     HL_plus_A
44C9                         ld      a, (hl)
44CA                         pop     hl
44CB                         ret
44CC ; ---------------------------------------------------------------------------
44CC
44CC loc_44CC:                                                   ; 44C2
44CC                         xor     a
44CD                         pop     hl
44CE                         ret
44CE ; End of function sub_44BC
44CE
44CF
44CF ; =============== S U B R O U T I N E =======================================
44CF
44CF
44CF sub_44CF:                                                   ; 44AD↑p 460C↓p
44CF                         push    hl
44D0                         push    bc
44D1                         call    sub_44E0
44D4                         ld      a, c
44D5                         add     a, 4
44D7                         ld      c, a
44D8                         ld      a, b
44D9                         ld      b, a
44DA                         call    sub_1F57
44DD                         pop     bc
44DE                         pop     hl
44DF                         ret
44DF ; End of function sub_44CF
44DF
44E0
44E0 ; =============== S U B R O U T I N E =======================================
44E0
44E0
44E0 sub_44E0:                                                   ; 44D1↑p 483B↓p 
44E0                         push    hl
44E1                         push    de
44E2                         ld      a, l
44E3                         and     3Fh ; '?'
44E5                         sla     a
44E7                         sla     a
44E9                         ld      b, a
44EA                         push    bc
44EB                         ld      a, l
44EC                         and     0C0h
44EE                         ld      l, a
44EF                         call    negate_hl
44F2                         ld      de, bg_row31
44F5                         add     hl, de
44F6                         ld      b, 3
44F8
44F8 loc_44F8:                                                   ; 44FC↓j
44F8                         srl     h
44FA                         rr      l
44FC                         djnz    loc_44F8
44FE                         pop     bc
44FF                         ld      a, l
4500                         ld      c, a
4501                         pop     de
4502                         pop     hl
4503                         ret
4503 ; End of function sub_44E0
4503
4504
4504 ; =============== S U B R O U T I N E =======================================
4504
4504
4504 sub_4504:                                                   ; 30B7↑p 34BF↑p 
4504                         push    bc
4505                         push    de
4506                         ld      a, b
4507                         bit     2, a
4509                         jr      z, loc_450D
450B                         add     a, 8
450D
450D loc_450D:                                                   ; 4509
450D                         and     0F8h
450F                         srl     a
4511                         srl     a
4513                         ld      b, a
4514                         ld      a, c
4515                         bit     2, a
4517                         jr      z, loc_451B
4519                         add     a, 8
451B
451B loc_451B:                                                   ; 4517
451B                         and     0F8h
451D                         ld      h, 0
451F                         ld      l, a
4520                         sla     l
4522                         rl      h
4524                         sla     l
4526                         rl      h
4528                         sla     l
452A                         rl      h
452C                         call    negate_hl
452F                         ld      de, bg_row31
4532                         add     hl, de
4533                         ld      a, b
4534                         rst     HL_plus_A
4535                         pop     de
4536                         pop     bc
4537                         ret
4537 ; End of function sub_4504
4537
4538
4538 ; =============== S U B R O U T I N E =======================================
4538
4538
4538 sub_4538:                                                   ; 445C↑p
4538                         ld      a, (unk_E031)
453B                         and     0F8h
453D                         cp      0A8h
453F                         jp      z, loc_457D
4542                         cp      0A0h
4544                         jr      z, loc_454A
4546                         cp      0C8h
4548                         jr      nz, loc_4558
454A
454A loc_454A:                                                   ; 4544
454A                         ld      a, (unk_E031)
454D                         and     7
454F                         cp      0
4551                         jr      nz, loc_457D
4553                         ld      a, 59h ; 'Y'
4555                         jp      loc_45D7
4558 ; ---------------------------------------------------------------------------
4558
4558 loc_4558:                                                   ; 4548
4558                         ld      a, (ix+2)
455B                         cp      2
455D                         jp      z, loc_45B0
4560                         ld      a, (unk_E031)
4563                         and     0F8h
4565                         cp      90h
4567                         jr      z, loc_45B0
4569                         cp      0B8h
456B                         jr      z, loc_45B0
456D                         cp      98h
456F                         jr      z, loc_459E
4571                         cp      0C0h
4573                         jr      z, loc_459E
4575                         cp      88h
4577                         jr      z, loc_4581
4579                         cp      0B0h
457B                         jr      z, loc_4581
457D
457D loc_457D:                                                   ; 453F 4551
457D                         ld      a, 0FFh
457F                         jr      loc_45D7
4581 ; ---------------------------------------------------------------------------
4581
4581 loc_4581:                                                   ; 4577 457B
4581                         ld      a, (unk_E031)
4584                         and     7
4586                         cp      1
4588                         jr      z, loc_4595
458A                         cp      0
458C                         jr      nz, loc_45B0
458E                         rst     random_number
458F                         and     1
4591                         jr      z, loc_45AC
4593                         jr      loc_459A
4595 ; ---------------------------------------------------------------------------
4595
4595 loc_4595:                                                   ; 4588
4595                         rst     random_number
4596                         and     1
4598                         jr      z, loc_45B0
459A
459A loc_459A:                                                   ; 4593
459A                         ld      a, 2
459C                         jr      loc_45D7
459E ; ---------------------------------------------------------------------------
459E
459E loc_459E:                                                   ; 456F 4573
459E                         ld      a, (unk_E031)
45A1                         and     7
45A3                         cp      0
45A5                         jr      nz, loc_45B0
45A7                         rst     random_number
45A8                         and     3
45AA                         jr      z, loc_45B0
45AC
45AC loc_45AC:                                                   ; 4591
45AC                         ld      a, 1
45AE                         jr      loc_45D7
45B0 ; ---------------------------------------------------------------------------
45B0
45B0 loc_45B0:                                                   ; 455D 4567 
45B0                         ld      a, (ix+22h)
45B3                         cp      4
45B5                         jr      nz, loc_45CF
45B7                         ld      a, (byte_E601)
45BA                         cp      1
45BC                         jr      z, loc_45CF
45BE                         ld      a, (ix+38h)
45C1                         inc     a
45C2                         ld      (ix+38h), a
45C5                         cp      3
45C7                         jr      c, loc_45CF
45C9                         xor     a
45CA                         ld      (ix+38h), a
45CD                         jr      loc_45D7
45CF ; ---------------------------------------------------------------------------
45CF
45CF loc_45CF:                                                   ; 45B5 45BC 
45CF                         ld      a, (iy+0Ch)
45D2                         dec     a
45D3                         ld      (iy+0Ch), a
45D6                         xor     a
45D7
45D7 loc_45D7:                                                   ; 4555 457F 
45D7                         ld      (unk_E032), a
45DA                         cp      0FFh
45DC                         ret     z
45DD                         push    bc
45DE                         push    hl
45DF                         call    sub_45E5
45E2                         pop     hl
45E3                         pop     bc
45E4                         ret
45E4 ; End of function sub_4538
45E4
45E5
45E5 ; =============== S U B R O U T I N E =======================================
45E5
45E5
45E5 sub_45E5:                                                   ; 45DF↑p
45E5                         or      a
45E6                         jr      z, loc_45F6
45E8                         cp      1
45EA                         jr      nz, loc_4600
45EC                         ld      hl, score_25
45EF                         call    add_to_score
45F2                         ld      c, 60
45F4                         rst     dispatch_sound
45F5                         ret
45F6 ; ---------------------------------------------------------------------------
45F6
45F6 loc_45F6:                                                   ; 45E6
45F6                         ld      hl, score_225
45F9                         call    add_to_score
45FC                         ld      c, 42
45FE                         rst     dispatch_sound
45FF                         ret
4600 ; ---------------------------------------------------------------------------
4600
4600 loc_4600:                                                   ; 45EA
4600                         ld      hl, score_75
4603                         call    add_to_score
4606                         ld      c, 64
4608                         rst     dispatch_sound
4609                         ret
4609 ; End of function sub_45E5
4609
460A ; ---------------------------------------------------------------------------
460A ; START OF FUNCTION CHUNK FOR sub_4474
460A
460A loc_460A:                                                   ; 4478
460A                         inc     hl
460B                         inc     hl
460C                         call    sub_44CF
460F                         ld      a, (unk_E031)
4612                         and     0F8h
4614                         ld      b, a
4615                         cp      0A0h
4617                         jp      z, loc_4669
461A                         cp      0C8h
461C                         jp      z, loc_466D
461F                         push    hl
4620                         cp      98h
4622                         ld      hl, byte_4E0A
4625                         jp      z, loc_47C5
4628                         cp      0C0h
462A                         ld      hl, tran_spr_bottom
462D                         jp      z, loc_47C5
4630                         ld      a, (unk_E032)
4633                         cp      2
4635                         jr      z, loc_4648
4637                         ld      a, b
4638                         cp      88h
463A                         ld      hl, byte_4E04
463D                         jp      z, loc_47C0
4640                         cp      0B0h
4642                         ld      hl, byte_4E10
4645                         jp      z, loc_47C0
4648
4648 loc_4648:                                                   ; 4635
4648                         pop     hl
4649                         ld      a, b
464A                         cp      88h
464C                         jr      z, loc_4652
464E                         ld      b, 0CEh
4650                         jr      loc_4654
4652 ; ---------------------------------------------------------------------------
4652
4652 loc_4652:                                                   ; 464C
4652                         ld      b, 0D0h
4654
4654 loc_4654:                                                   ; 4650
4654                         rst     random_number
4655                         and     1
4657                         add     a, b
4658                         ld      (hl), a
4659                         jp      loc_4674
4659 ; END OF FUNCTION CHUNK FOR sub_4474
465C
465C ; =============== S U B R O U T I N E =======================================
465C
465C
465C sub_465C:                                                   ; 44B0↑p
465C                         call    sub_6039
465F                         ld      (hl), 84h
4661                         inc     hl
4662                         ld      a, 1
4664                         or      30h ; '0'
4666
4666 loc_4666:                                                   ; 4678↓j 4761↓j
4666                         ld      (hl), a
4667                         inc     hl
4668                         ret
4668 ; End of function sub_465C
4668
4669 ; ---------------------------------------------------------------------------
4669 ; START OF FUNCTION CHUNK FOR sub_4474
4669
4669 loc_4669:                                                   ; 4617
4669                         ld      b, 7Eh ; '~'
466B                         jr      loc_466F
466D ; ---------------------------------------------------------------------------
466D
466D loc_466D:                                                   ; 461C
466D                         ld      b, 0A8h
466F
466F loc_466F:                                                   ; 466B
466F                         rst     random_number
4670                         and     1
4672                         add     a, b
4673                         ld      (hl), a
4674
4674 loc_4674:                                                   ; 4659
4674                         inc     hl
4675                         ld      a, 1
4677                         or      c
4678                         jr      loc_4666
4678 ; END OF FUNCTION CHUNK FOR sub_4474
467A
467A ; =============== S U B R O U T I N E =======================================
467A
467A
467A sub_467A:                                                   ; 449E↑p 44AA↑p 
467A                         call    sub_1446
467D                         cp      c
467E                         jp      nz, loc_47D9
4681                         call    sub_44BC
4684                         or      a
4685                         jp      z, loc_47D9
4688                         ld      b, a
4689                         and     7
468B                         cp      3
468D                         jp      z, loc_47D9
4690                         and     4
4692                         jp      nz, loc_473F
4695                         push    hl
4696                         ld      a, b
4697                         and     0F8h
4699                         cp      0A0h
469B                         jp      z, loc_4728
469E                         cp      0C8h
46A0                         jp      z, loc_472D
46A3                         cp      88h
46A5                         ld      hl, off_46D1
46A8                         jr      z, loc_46F5
46AA                         cp      0B0h
46AC                         ld      hl, off_46D7
46AF                         jr      z, loc_46F5
46B1                         cp      98h
46B3                         ld      hl, off_46DD
46B6                         jr      z, loc_46F5
46B8                         cp      0C0h
46BA                         ld      hl, off_46E3
46BD                         jr      z, loc_46F9
46BF                         cp      90h
46C1                         ld      hl, off_46E9
46C4                         jr      z, loc_46F5
46C6                         cp      0B8h
46C8                         ld      hl, off_46EF
46CB                         jr      z, loc_46F9
46CD                         pop     hl
46CE                         jp      loc_47D9
46CE ; ---------------------------------------------------------------------------
46D1 off_46D1:               dw byte_4DCC                        ; 46A5↑o
46D3                         dw byte_4DD0
46D5                         dw byte_4DC8
46D7 off_46D7:               dw byte_4DF0                        ; 46AC↑o
46D9                         dw byte_4DF4
46DB                         dw byte_4DEC
46DD off_46DD:               dw byte_4DD8                        ; 46B3↑o
46DF                         dw byte_4DDC
46E1                         dw byte_4DD4
46E3 off_46E3:               dw byte_4DFA                        ; 46BA↑o
46E5                         dw byte_4DFC
46E7                         dw byte_4DF8
46E9 off_46E9:               dw byte_4DE4                        ; 46C1↑o
46EB                         dw byte_4DE8
46ED                         dw byte_4DE0
46EF off_46EF:               dw byte_4E00                        ; 46C8↑o
46F1                         dw byte_4E02
46F3                         dw byte_4DFE
46F5 ; ---------------------------------------------------------------------------
46F5
46F5 loc_46F5:                                                   ; 46A8 46AF 
46F5                         ld      b, 3
46F7                         jr      loc_46FF
46F9 ; ---------------------------------------------------------------------------
46F9
46F9 loc_46F9:                                                   ; 46BD 46CB
46F9                         ld      b, 1
46FB                         jr      loc_46FF
46FB ; ---------------------------------------------------------------------------
46FD                         db    6
46FE                         db    0
46FF ; ---------------------------------------------------------------------------
46FF
46FF loc_46FF:                                                   ; 46F7 46FB
46FF                         ld      a, (unk_E01C)
4702                         cp      1
4704                         jr      z, loc_470E
4706                         inc     hl
4707                         inc     hl
4708                         cp      3
470A                         jr      z, loc_470E
470C                         inc     hl
470D                         inc     hl
470E
470E loc_470E:                                                   ; 4704 470A
470E                         ld      a, (hl)
470F                         inc     hl
4710                         ld      h, (hl)
4711                         ld      l, a
4712
4712 loc_4712:                                                   ; 4739↓j
4712                         rst     random_number
4713                         and     b
4714                         rst     HL_plus_A
4715                         ld      b, (hl)
4716                         pop     hl
4717                         ld      (hl), b
4718                         inc     hl
4719                         ld      a, (unk_E01C)
471C                         cp      2
471E                         ld      a, 1
4720                         jr      nz, loc_4724
4722                         ld      a, 5
4724
4724 loc_4724:                                                   ; 4720
4724                         or      c
4725                         ld      (hl), a
4726                         inc     hl
4727                         ret
4728 ; ---------------------------------------------------------------------------
4728
4728 loc_4728:                                                   ; 469B
4728                         ld      hl, byte_4DC4
472B                         jr      loc_4730
472D ; ---------------------------------------------------------------------------
472D
472D loc_472D:                                                   ; 46A0
472D                         ld      hl, byte_4DC6
4730
4730 loc_4730:                                                   ; 472B
4730                         ld      a, (unk_E01C)
4733                         cp      1
4735                         jr      nz, loc_473B
4737                         ld      b, 1
4739                         jr      loc_4712
473B ; ---------------------------------------------------------------------------
473B
473B loc_473B:                                                   ; 4735
473B                         pop     hl
473C                         jp      loc_47D9
473F ; ---------------------------------------------------------------------------
473F
473F loc_473F:                                                   ; 4692
473F                         ld      a, b
4740                         and     0F8h
4742                         cp      0A0h
4744                         jp      z, loc_47D9
4747                         cp      0C8h
4749                         jp      z, loc_47D9
474C                         cp      0A8h
474E                         jp      z, loc_47D9
4751                         ld      b, 0D2h
4753                         rst     random_number
4754                         and     3
4756                         cp      3
4758                         jr      nz, loc_475B
475A                         xor     a
475B
475B loc_475B:                                                   ; 4758
475B                         add     a, b
475C                         ld      (hl), a
475D                         inc     hl
475E                         ld      a, 1
4760                         or      c
4761                         jp      loc_4666
4761 ; End of function sub_467A
4761
4764
4764 ; =============== S U B R O U T I N E =======================================
4764
4764
4764 sub_4764:                                                   ; sub_449B↑p
4764                                                             ; 44A1↑p 
4764                         call    sub_1446
4767                         cp      c
4768                         jp      nz, loc_47D9
476B                         call    sub_44BC
476E                         or      a
476F                         jr      z, loc_47D9
4771                         ld      b, a
4772                         and     7
4774                         cp      0
4776                         jp      nz, loc_47D9
4779                         rst     random_number
477A                         and     7
477C                         jp      z, loc_47D9
477F                         ld      a, b
4780                         and     0F8h
4782                         cp      0A8h
4784                         jp      z, loc_47D9
4787                         cp      0A0h
4789                         jp      z, loc_47D9
478C                         cp      0C8h
478E                         jp      z, loc_47D9
4791                         push    hl
4792                         cp      88h
4794                         ld      hl, byte_4E04
4797                         jr      z, loc_47C0
4799                         cp      0B0h
479B                         ld      hl, byte_4E10
479E                         jr      z, loc_47C0
47A0                         cp      98h
47A2                         ld      hl, byte_4E0A
47A5                         jr      z, loc_47C5
47A7                         cp      0C0h
47A9                         ld      hl, tran_spr_bottom
47AC                         jr      z, loc_47C5
47AE                         cp      90h
47B0                         ld      hl, byte_4E08
47B3                         jr      z, loc_47C5
47B5                         cp      0B8h
47B7                         ld      hl, tram_spr_top
47BA                         jr      z, loc_47C5
47BC                         pop     hl
47BD                         jp      loc_47D9
47C0 ; ---------------------------------------------------------------------------
47C0
47C0 loc_47C0:                                                   ; 463D 4645 
47C0                         ld      b, 3
47C2                         jp      loc_47CC
47C5 ; ---------------------------------------------------------------------------
47C5
47C5 loc_47C5:                                                   ; 4625 462D 
47C5                         ld      b, 1
47C7                         jp      loc_47CC
47CA ; ---------------------------------------------------------------------------
47CA                         ld      b, 0
47CC
47CC loc_47CC:                                                   ; 47C2 47C7
47CC                         rst     random_number
47CD                         and     b
47CE                         rst     HL_plus_A
47CF                         ld      b, (hl)
47D0                         pop     hl
47D1                         ld      (hl), b
47D2                         inc     hl
47D3                         ld      a, 1
47D5                         or      c
47D6                         ld      (hl), a
47D7                         inc     hl
47D8                         ret
47D9 ; ---------------------------------------------------------------------------
47D9
47D9 loc_47D9:                                                   ; 467E 4685 
47D9                         inc     hl
47DA                         inc     hl
47DB                         ret
47DB ; End of function sub_4764
47DB
47DC
47DC ; =============== S U B R O U T I N E =======================================
47DC
47DC
47DC sub_47DC:                                                   ; 4470↑p
47DC
47DC ; FUNCTION CHUNK AT 4822 SIZE 00000012 BYTES
47DC
47DC                         ld      a, (iy+9)
47DF                         or      a
47E0                         ret     nz
47E1                         push    hl
47E2                         call    sub_47F3
47E5                         pop     hl
47E6                         ld      a, (iy+9)
47E9                         or      a
47EA                         ret     nz
47EB                         ld      a, (unk_E032)
47EE                         or      a
47EF                         ret     nz
47F0                         jp      loc_4822
47F0 ; End of function sub_47DC
47F0
47F3
47F3 ; =============== S U B R O U T I N E =======================================
47F3
47F3
47F3 sub_47F3:                                                   ; 47E2↑p
47F3                         ld      a, (iy+0Ch)
47F6                         bit     7, a
47F8                         jr      nz, loc_47FC
47FA                         or      a
47FB                         ret     nz
47FC
47FC loc_47FC:                                                   ; 47F8
47FC                         ld      a, (iy+3)
47FF                         ld      (iy+15h), a
4802                         ld      (iy+9), 0FFh
4806                         ld      (iy+0Ah), 1
480A                         push    hl
480B                         ld      hl, score_2500
480E                         call    add_to_score
4811                         pop     hl
4812                         ret
4812 ; End of function sub_47F3
4812
4813 ; ---------------------------------------------------------------------------
4813 ; START OF FUNCTION CHUNK FOR sub_3E0A
4813 ;   ADDITIONAL PARENT FUNCTION sub_3579
4813 ;   ADDITIONAL PARENT FUNCTION sub_CAC6
4813
4813 loc_4813:                                                   ; 367A 36A3 
4813                         ld      a, (iy+3)
4816                         ld      (iy+15h), a
4819                         ld      (iy+9), 0FFh
481D                         ld      (iy+0Ah), 1
4821                         ret
4821 ; END OF FUNCTION CHUNK FOR sub_3E0A
4822 ; ---------------------------------------------------------------------------
4822 ; START OF FUNCTION CHUNK FOR sub_47DC
4822
4822 loc_4822:                                                   ; 47F0
4822                         ld      a, (ix+26h)
4825                         cp      1
4827                         ret     nz
4828                         ld      a, (iy+2)
482B                         cp      6
482D                         ret     z
482E                         push    hl
482F                         call    sub_4834
4832                         pop     hl
4833                         ret
4833 ; END OF FUNCTION CHUNK FOR sub_47DC
4834
4834 ; =============== S U B R O U T I N E =======================================
4834
4834
4834 sub_4834:                                                   ; 482F↑p
4834                         sub     3
4836                         ld      b, a
4837                         ld      c, (iy+4)
483A                         push    bc
483B                         call    sub_44E0
483E                         ld      a, (iy+6)
4841                         ld      b, a
4842                         call    sub_4504
4845                         pop     bc
4846                         call    sub_1446
4849                         cp      30h ; '0'
484B                         jr      z, loc_4853
484D                         cp      c
484E                         jp      z, loc_4853
4851                         ld      c, 0FFh
4853
4853 loc_4853:                                                   ; 484B 484E
4853                         inc     hl
4854                         inc     hl
4855                         call    sub_1446
4858                         cp      30h ; '0'
485A                         ret     nz
485B
485B loc_485B:                                                   ; 485D↓j
485B                         inc     hl
485C                         inc     hl
485D                         djnz    loc_485B
485F                         call    sub_1446
4862                         cp      30h ; '0'
4864                         ret     nz
4865                         inc     hl
4866                         inc     hl
4867                         call    sub_1446
486A                         cp      30h ; '0'
486C                         jr      z, loc_4871
486E                         cp      c
486F                         jr      nz, loc_48B4
4871
4871 loc_4871:                                                   ; 486C
4871                         ld      a, (iy+0Ch)
4874                         dec     a
4875                         ld      (iy+0Ch), a
4878                         ld      a, (ix+24h)
487B                         add     a, 3
487D                         ld      (iy+0Ah), a
4880                         push    bc
4881                         ld      (iy+9), 1Eh
4885                         ld      b, a
4886                         ld      a, (iy+3)
4889                         sub     b
488A                         pop     bc
488B                         ld      (iy+15h), a
488E                         ld      a, (iy+16h)
4891                         or      a
4892                         jr      z, loc_48A5
4894                         ld      (iy+16h), 2
4898                         push    hl
4899                         ld      hl, score_1000
489C                         call    add_to_score
489F                         pop     hl
48A0                         call    sub_6555
48A3                         jr      loc_48B4
48A5 ; ---------------------------------------------------------------------------
48A5
48A5 loc_48A5:                                                   ; 4892
48A5                         ld      (iy+16h), 1
48A9                         push    hl
48AA                         ld      hl, score_250
48AD                         call    add_to_score
48B0                         pop     hl
48B1                         call    sub_65A7
48B4
48B4 loc_48B4:                                                   ; 486F 48A3
48B4                         ld      a, (iy+0Ch)
48B7                         dec     a
48B8                         ld      (iy+0Ch), a
48BB                         ret
48BB ; End of function sub_4834
48BB
48BC
48BC ; =============== S U B R O U T I N E =======================================
48BC
48BC
48BC sub_48BC:                                                   ; 09A9↑p
48BC                         ld      ix, Building1_data
48C0
48C0 loc_48C0:                                                   ; 48E1↓j
48C0                         ld      a, (ix+0)
48C3                         cp      0FFh
48C5                         ret     z
48C6                         ld      a, (ix+9)
48C9                         or      a
48CA                         jr      z, loc_48D1
48CC                         call    sub_48E3
48CF                         jr      loc_48DC
48D1 ; ---------------------------------------------------------------------------
48D1
48D1 loc_48D1:                                                   ; 48CA
48D1                         ld      a, (ix+0Dh)
48D4                         cp      0
48D6                         jr      z, loc_48DC
48D8                         ld      (ix+0Dh), 0
48DC
48DC loc_48DC:                                                   ; 48CF 48D6
48DC                         ld      de, 18h
48DF                         add     ix, de
48E1                         jr      loc_48C0
48E1 ; End of function sub_48BC
48E1
48E3
48E3 ; =============== S U B R O U T I N E =======================================
48E3
48E3
48E3 sub_48E3:                                                   ; 48CC↑p
48E3
48E3 ; FUNCTION CHUNK AT 4AF6 SIZE 0000010B BYTES
48E3
48E3                         call    sub_49BB
48E6                         ld      a, (ix+9)
48E9                         cp      0FFh
48EB                         jp      z, loc_4AF6
48EE                         dec     a
48EF                         jr      z, loc_48F5
48F1                         jp      loc_4B4A
48F4 ; ---------------------------------------------------------------------------
48F4                         ret
48F5 ; ---------------------------------------------------------------------------
48F5
48F5 loc_48F5:                                                   ; 48EF
48F5                         ld      a, (ix+17h)
48F8                         inc     a
48F9                         cp      0F0h
48FB                         jp      nc, loc_4989
48FE                         ld      (ix+17h), a
4901                         ld      a, (ix+15h)
4904                         or      a
4905                         jr      z, loc_4911
4907                         ld      a, (ix+15h)
490A                         call    sub_6555
490D                         ld      (ix+15h), 0
4911
4911 loc_4911:                                                   ; 4905
4911                         ld      a, (ix+0Bh)
4914                         inc     a
4915                         cp      6
4917                         jr      c, loc_491A
4919                         xor     a
491A
491A loc_491A:                                                   ; 4917
491A                         ld      (ix+0Bh), a
491D                         or      a
491E                         ret     nz
491F                         ld      a, (ix+12h)
4922                         or      a
4923                         jr      z, loc_492D
4925                         dec     a
4926                         ld      (ix+12h), a
4929                         jp      z, loc_4989
492C                         ret
492D ; ---------------------------------------------------------------------------
492D
492D loc_492D:                                                   ; 4923
492D                         ld      c, (ix+5)
4930                         ld      b, (ix+0Ah)
4933                         call    sub_4ADE
4936                         push    hl
4937                         ld      de, 0FFC0h
493A                         add     hl, de
493B                         pop     de
493C                         ld      b, (ix+0Ah)
493F                         ld      a, (ix+3)
4942                         sub     b
4943                         call    sub_4C01
4946                         dec     (ix+3)
4949                         ld      a, (ix+3)
494C                         sla     a
494E                         sla     a
4950                         sla     a
4952                         add     a, 10h
4954                         ld      (ix+8), a
4957                         ld      a, (ix+3)
495A                         cp      (ix+0Ah)
495D                         ret     nz
495E                         ld      (ix+0Dh), 0
4962                         ld      a, (ix+0Ah)
4965                         cp      2
4967                         jr      c, loc_497F
4969                         call    sub_4AA2
496C                         ld      (ix+9), 0
4970                         ld      a, (ix+0Ah)
4973                         cp      6
4975                         ret     nc
4976                         ld      (ix+9), 0FFh
497A                         ld      (ix+0Ah), 1
497E                         ret
497F ; ---------------------------------------------------------------------------
497F
497F loc_497F:                                                   ; 4967
497F                         ld      (ix+9), 1
4983                         ld      (ix+12h), 5
4987                         ret
4988 ; ---------------------------------------------------------------------------
4988                         ret
4989 ; ---------------------------------------------------------------------------
4989
4989 loc_4989:                                                   ; 48FB 4929
4989                         call    sub_4AA2
498C                         ld      hl, bg_row28
498F                         ld      a, (ix+5)
4992                         rst     HL_plus_A
4993                         ex      de, hl
4994                         ld      hl, 0FFC0h
4997                         add     hl, de
4998                         call    sub_4C09
499B                         ld      a, (base_strip_number)
499E                         cp      0
49A0                         jr      nz, loc_49AC
49A2                         ld      hl, bg_row29
49A5                         ld      a, (ix+5)
49A8                         rst     HL_plus_A
49A9                         call    sub_4AC0
49AC
49AC loc_49AC:                                                   ; 49A0
49AC                         ld      b, 18h
49AE                         push    ix
49B0
49B0 loc_49B0:                                                   ; 49B6↓j
49B0                         ld      (ix+0), 0
49B4                         inc     ix
49B6                         djnz    loc_49B0
49B8                         pop     ix
49BA                         ret
49BA ; End of function sub_48E3
49BA
49BB
49BB ; =============== S U B R O U T I N E =======================================
49BB
49BB
49BB sub_49BB:                                                   ; sub_48E3↑p
49BB                         ld      a, (ix+9)
49BE                         cp      0FFh
49C0                         jr      z, loc_49CF
49C2                         cp      32h ; '2'
49C4                         ret     nc
49C5                         cp      1
49C7                         jr      z, loc_49CF
49C9                         ld      a, (ix+16h)
49CC                         cp      1
49CE                         ret     z
49CF
49CF loc_49CF:                                                   ; 49C0 49C7
49CF                         push    iy
49D1                         ld      a, (ix+10h)
49D4                         call    sub_4412
49D7                         call    sub_49DD
49DA                         pop     iy
49DC                         ret
49DC ; End of function sub_49BB
49DC
49DD
49DD ; =============== S U B R O U T I N E =======================================
49DD
49DD
49DD sub_49DD:                                                   ; 49D7↑p
49DD                         ld      a, (ix+11h)
49E0                         or      a
49E1                         jr      nz, loc_4A5B
49E3                         ld      (ix+11h), 1
49E7                         ld      (ix+0Eh), 0
49EB                         ld      (ix+0Fh), 0
49EF                         ld      a, (ix+9)
49F2                         cp      0FFh
49F4                         jr      z, loc_49FB
49F6                         ld      a, (ix+0Ah)
49F9                         jr      loc_4A00
49FB ; ---------------------------------------------------------------------------
49FB
49FB loc_49FB:                                                   ; 49F4
49FB                         ld      a, 1
49FD                         ld      (ix+17h), a
4A00
4A00 loc_4A00:                                                   ; 49F9
4A00                         call    sub_4409
4A03                         add     a, 8
4A05                         ld      (iy+0), a
4A08                         ld      (iy+8), a
4A0B                         sub     1
4A0D                         ld      (iy+4), a
4A10                         ld      a, (ix+2)
4A13                         sub     4
4A15                         jr      z, loc_4A28
4A17                         cp      1
4A19                         jr      z, loc_4A24
4A1B                         ld      b, 10h
4A1D                         ld      a, (ix+6)
4A20                         add     a, 2
4A22                         jr      loc_4A2D
4A24 ; ---------------------------------------------------------------------------
4A24
4A24 loc_4A24:                                                   ; 4A19
4A24                         ld      b, 0Eh
4A26                         jr      loc_4A2A
4A28 ; ---------------------------------------------------------------------------
4A28
4A28 loc_4A28:                                                   ; 4A15
4A28                         ld      b, 0Ah
4A2A
4A2A loc_4A2A:                                                   ; 4A26
4A2A                         ld      a, (ix+6)
4A2D
4A2D loc_4A2D:                                                   ; 4A22
4A2D                         ld      (iy+3), a
4A30                         add     a, b
4A31                         ld      (iy+7), a
4A34                         add     a, b
4A35                         ld      (iy+0Bh), a
4A38                         ld      a, (ix+4)
4A3B                         srl     a
4A3D                         srl     a
4A3F                         srl     a
4A41                         srl     a
4A43                         set     3, a
4A45                         ld      (iy+1), a
4A48                         ld      (iy+5), a
4A4B                         ld      (iy+9), a
4A4E                         ld      (iy+2), 77h ; 'w'
4A52                         ld      (iy+6), 76h ; 'v'
4A56                         ld      (iy+0Ah), 78h ; 'x'
4A5A                         ret
4A5B ; ---------------------------------------------------------------------------
4A5B
4A5B loc_4A5B:                                                   ; 49E1
4A5B                         ld      a, (ix+3)
4A5E                         cp      1Eh
4A60                         jr      c, loc_4A66
4A62                         ld      (ix+3), 1
4A66
4A66 loc_4A66:                                                   ; 4A60
4A66                         ld      a, (ix+0Eh)
4A69                         inc     a
4A6A                         and     3
4A6C                         ld      (ix+0Eh), a
4A6F                         ret     nz
4A70                         ld      a, (ix+0Fh)
4A73                         inc     a
4A74                         cp      3
4A76                         jr      c, loc_4A79
4A78                         xor     a
4A79
4A79 loc_4A79:                                                   ; 4A76
4A79                         ld      (ix+0Fh), a
4A7C                         or      a
4A7D                         jr      z, loc_4A91
4A7F                         cp      1
4A81                         jr      z, loc_4A8A
4A83                         ld      a, 76h ; 'v'
4A85                         ld      bc, 2FFh
4A88                         jr      loc_4A96
4A8A ; ---------------------------------------------------------------------------
4A8A
4A8A loc_4A8A:                                                   ; 4A81
4A8A                         ld      a, 78h ; 'x'
4A8C                         ld      bc, 0FFFFh
4A8F                         jr      loc_4A96
4A91 ; ---------------------------------------------------------------------------
4A91
4A91 loc_4A91:                                                   ; 4A7D
4A91                         ld      a, 77h ; 'w'
4A93                         ld      bc, 0FF02h
4A96
4A96 loc_4A96:                                                   ; 4A88 4A8F
4A96                         ld      (iy+2), a
4A99                         add     a, b
4A9A                         ld      (iy+6), a
4A9D                         add     a, c
4A9E                         ld      (iy+0Ah), a
4AA1                         ret
4AA1 ; End of function sub_49DD
4AA1
4AA2
4AA2 ; =============== S U B R O U T I N E =======================================
4AA2
4AA2
4AA2 sub_4AA2:                                                   ; 4969↑p
4AA2                                                             ; loc_4989↑p
4AA2                         push    iy
4AA4                         ld      a, (ix+10h)
4AA7                         call    sub_4412
4AAA                         ld      (ix+17h), 0
4AAE                         ld      (ix+11h), 0
4AB2                         ld      (ix+0Eh), 0
4AB6                         ld      (ix+0Fh), 0
4ABA                         ld      b, 3
4ABC                         rst     do_sprite_clear_loop
4ABD                         pop     iy
4ABF                         ret
4ABF ; End of function sub_4AA2
4ABF
4AC0
4AC0 ; =============== S U B R O U T I N E =======================================
4AC0
4AC0
4AC0 sub_4AC0:                                                   ; 49A9↑p
4AC0                         ld      b, (ix+2)
4AC3                         ld      c, (ix+4)
4AC6                         ld      d, 80h
4AC8                         rst     random_number
4AC9                         and     3
4ACB                         add     a, d
4ACC                         inc     c
4ACD
4ACD loc_4ACD:                                                   ; 4AD6↓j 4ADB↓j
4ACD                         ld      (hl), a
4ACE                         inc     hl
4ACF                         ld      (hl), c
4AD0                         inc     hl
4AD1                         inc     a
4AD2                         cp      84h
4AD4                         jr      z, loc_4AD9
4AD6                         djnz    loc_4ACD
4AD8                         ret
4AD9 ; ---------------------------------------------------------------------------
4AD9
4AD9 loc_4AD9:                                                   ; 4AD4
4AD9                         ld      a, 80h
4ADB                         djnz    loc_4ACD
4ADD                         ret
4ADD ; End of function sub_4AC0
4ADD
4ADE
4ADE ; =============== S U B R O U T I N E =======================================
4ADE
4ADE
4ADE sub_4ADE:                                                   ; 4933↑p 4B1E↓p 
4ADE                         ld      a, b
4ADF                         add     a, 1
4AE1                         ld      h, 0
4AE3                         ld      l, a
4AE4                         ld      b, 6
4AE6
4AE6 loc_4AE6:                                                   ; 4AEA↓j
4AE6                         sla     l
4AE8                         rl      h
4AEA                         djnz    loc_4AE6
4AEC                         call    negate_hl
4AEF                         ld      de, bg_row30
4AF2                         add     hl, de
4AF3                         ld      a, c
4AF4                         rst     HL_plus_A
4AF5                         ret
4AF5 ; End of function sub_4ADE
4AF5
4AF6 ; ---------------------------------------------------------------------------
4AF6 ; START OF FUNCTION CHUNK FOR sub_48E3
4AF6
4AF6 loc_4AF6:                                                   ; 48EB
4AF6                         ld      a, (ix+14h)
4AF9                         or      a
4AFA                         jr      nz, loc_4B02
4AFC                         inc     (ix+14h)
4AFF                         call    sub_65A7
4B02
4B02 loc_4B02:                                                   ; 4AFA
4B02                         ld      (ix+13h), 0
4B06                         ld      a, (ix+0Bh)
4B09                         inc     a
4B0A                         ld      (ix+0Bh), a
4B0D                         cp      6
4B0F                         ret     c
4B10                         ld      (ix+0Dh), 2
4B14                         ld      (ix+0Bh), 0
4B18                         ld      c, (ix+5)
4B1B                         ld      b, (ix+0Ah)
4B1E                         call    sub_4ADE
4B21                         ld      c, (ix+4)
4B24                         ld      b, (ix+2)
4B27
4B27 loc_4B27:                                                   ; 4B2C↓j
4B27                         push    bc
4B28                         call    sub_4764
4B2B                         pop     bc
4B2C                         djnz    loc_4B27
4B2E                         ld      a, (ix+0Ah)
4B31                         inc     a
4B32                         ld      (ix+0Ah), a
4B35                         cp      (ix+3)
4B38                         ret     c
4B39                         ld      (ix+0Ah), 1
4B3D                         ld      (ix+0Dh), 1
4B41                         ld      (ix+9), 1
4B45                         ld      (ix+14h), 0
4B49                         ret
4B4A ; ---------------------------------------------------------------------------
4B4A
4B4A loc_4B4A:                                                   ; 48F1
4B4A                         ld      a, (ix+14h)
4B4D                         or      a
4B4E                         jr      nz, loc_4B56
4B50                         inc     (ix+14h)
4B53                         call    sub_65A7
4B56
4B56 loc_4B56:                                                   ; 4B4E
4B56                         ld      (ix+13h), 0
4B5A                         ld      a, (ix+0Bh)
4B5D                         inc     a
4B5E                         ld      (ix+0Bh), a
4B61                         cp      6
4B63                         ret     c
4B64                         ld      (ix+0Dh), 3
4B68                         ld      (ix+0Bh), 0
4B6C                         ld      a, (ix+9)
4B6F                         cp      32h ; '2'
4B71                         jr      nc, loc_4BB3
4B73                         cp      1Eh
4B75                         jr      nz, loc_4B7D
4B77                         ld      a, (ix+0Ah)
4B7A                         ld      (ix+9), a
4B7D
4B7D loc_4B7D:                                                   ; 4B75
4B7D                         ld      c, (ix+5)
4B80                         ld      b, (ix+9)
4B83                         call    sub_4ADE
4B86                         ld      c, (ix+4)
4B89                         ld      b, (ix+2)
4B8C
4B8C loc_4B8C:                                                   ; 4B91↓j
4B8C                         push    bc
4B8D                         call    sub_4764
4B90                         pop     bc
4B91                         djnz    loc_4B8C
4B93                         ld      a, (ix+9)
4B96                         inc     a
4B97                         ld      (ix+9), a
4B9A                         cp      (ix+3)
4B9D                         ret     c
4B9E                         ld      (ix+14h), 0
4BA2                         ld      a, (ix+16h)
4BA5                         cp      2
4BA7                         jr      z, loc_4BAE
4BA9                         ld      (ix+9), 0
4BAD                         ret
4BAE ; ---------------------------------------------------------------------------
4BAE
4BAE loc_4BAE:                                                   ; 4BA7
4BAE                         ld      (ix+9), 1
4BB2                         ret
4BB3 ; ---------------------------------------------------------------------------
4BB3
4BB3 loc_4BB3:                                                   ; 4B71
4BB3                         ld      c, (ix+5)
4BB6                         ld      b, (ix+0Ah)
4BB9                         call    sub_4ADE
4BBC                         ld      c, (ix+4)
4BBF                         ld      b, (ix+2)
4BC2                         push    hl
4BC3
4BC3 loc_4BC3:                                                   ; 4BC8↓j
4BC3                         push    bc
4BC4                         call    sub_4764
4BC7                         pop     bc
4BC8                         djnz    loc_4BC3
4BCA                         pop     hl
4BCB                         ld      de, 0FFC0h
4BCE                         add     hl, de
4BCF                         call    sub_44BC
4BD2                         and     0F8h
4BD4                         ld      c, 74h ; 't'
4BD6                         cp      0C8h
4BD8                         jr      z, loc_4BDC
4BDA                         ld      c, 72h ; 'r'
4BDC
4BDC loc_4BDC:                                                   ; 4BD8
4BDC                         ld      b, (ix+2)
4BDF                         jr      loc_4BF4
4BE1 ; ---------------------------------------------------------------------------
4BE1
4BE1 loc_4BE1:                                                   ; 4BF6↓j
4BE1                         call    sub_44BC
4BE4                         and     7
4BE6                         cp      0
4BE8                         jr      nz, loc_4BF4
4BEA                         ld      a, b
4BEB                         cp      1
4BED                         jr      z, loc_4BF4
4BEF                         rst     random_number
4BF0                         and     1
4BF2                         add     a, c
4BF3                         ld      (hl), a
4BF4
4BF4 loc_4BF4:                                                   ; 4BDF 4BE8 
4BF4                         inc     hl
4BF5                         inc     hl
4BF6                         djnz    loc_4BE1
4BF8                         ld      (ix+9), 0
4BFC                         ld      (ix+14h), 0
4C00                         ret
4C00 ; END OF FUNCTION CHUNK FOR sub_48E3
4C01
4C01 ; =============== S U B R O U T I N E =======================================
4C01
4C01
4C01 sub_4C01:                                                   ; 4943↑p 4C07↓j
4C01                         push    af
4C02                         call    sub_4C0F
4C05                         pop     af
4C06                         dec     a
4C07                         jr      nz, sub_4C01
4C07 ; End of function sub_4C01
4C07
4C09
4C09 ; =============== S U B R O U T I N E =======================================
4C09
4C09
4C09 sub_4C09:                                                   ; 4998↑p
4C09                         push    hl
4C0A                         call    sub_4C44
4C0D                         pop     hl
4C0E                         ret
4C0E ; End of function sub_4C09
4C0E
4C0F
4C0F ; =============== S U B R O U T I N E =======================================
4C0F
4C0F
4C0F sub_4C0F:                                                   ; 4C02↑p
4C0F                         push    hl
4C10                         push    de
4C11                         pop     de
4C12                         ld      b, (ix+2)
4C15                         ld      c, (ix+4)
4C18
4C18 loc_4C18:                                                   ; 4C38↓j
4C18                         inc     de
4C19                         ld      a, (de)
4C1A                         dec     de
4C1B                         and     30h ; '0'
4C1D                         cp      c
4C1E                         jr      z, loc_4C30
4C20                         cp      30h ; '0'
4C22                         jr      nz, loc_4C40
4C24                         inc     hl
4C25                         ld      a, (hl)
4C26                         dec     hl
4C27                         and     30h ; '0'
4C29                         cp      c
4C2A                         jr      z, loc_4C30
4C2C                         cp      30h ; '0'
4C2E                         jr      nz, loc_4C40
4C30
4C30 loc_4C30:                                                   ; 4C1E 4C2A
4C30                         ld      a, (hl)
4C31                         ld      (de), a
4C32                         inc     de
4C33                         inc     hl
4C34                         ld      a, (hl)
4C35                         ld      (de), a
4C36
4C36 loc_4C36:                                                   ; 4C42↓j
4C36                         inc     de
4C37                         inc     hl
4C38                         djnz    loc_4C18
4C3A                         pop     de
4C3B                         ld      hl, 0FFC0h
4C3E                         add     hl, de
4C3F                         ret
4C40 ; ---------------------------------------------------------------------------
4C40
4C40 loc_4C40:                                                   ; 4C22 4C2E
4C40                         inc     de
4C41                         inc     hl
4C42                         jr      loc_4C36
4C42 ; End of function sub_4C0F
4C42
4C44
4C44 ; =============== S U B R O U T I N E =======================================
4C44
4C44
4C44 sub_4C44:                                                   ; 4C0A↑p
4C44                         push    hl
4C45                         ld      b, (ix+2)
4C48
4C48 loc_4C48:                                                   ; 4CB7↓j
4C48                         inc     de
4C49                         ld      a, (de)
4C4A                         dec     de
4C4B                         and     30h ; '0'
4C4D                         cp      30h ; '0'
4C4F                         jr      z, loc_4C56
4C51                         cp      (ix+4)
4C54                         jr      nz, loc_4CCE
4C56
4C56 loc_4C56:                                                   ; 4C4F
4C56                         inc     hl
4C57                         ld      a, (hl)
4C58                         and     30h ; '0'
4C5A                         cp      30h ; '0'
4C5C                         jr      nz, loc_4C6E
4C5E                         call    sub_4D74
4C61                         cp      0FFh
4C63                         jr      z, loc_4CBF
4C65                         push    hl
4C66                         push    de
4C67                         push    bc
4C68                         push    af
4C69                         ld      a, c
4C6A                         ld      e, a
4C6B                         pop     af
4C6C                         jr      loc_4C7C
4C6E ; ---------------------------------------------------------------------------
4C6E
4C6E loc_4C6E:                                                   ; 4C5C
4C6E                         cp      (ix+4)
4C71                         jr      c, loc_4CCF
4C73                         push    hl
4C74                         push    de
4C75                         push    bc
4C76                         call    sub_4D41
4C79                         ld      a, (iy+0)
4C7C
4C7C loc_4C7C:                                                   ; 4C6C
4C7C                         sla     a
4C7E                         ld      hl, building_characters_table
4C81                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
4C84                         ld      c, (hl)
4C85                         inc     hl
4C86                         inc     hl
4C87                         ld      a, (hl)
4C88                         inc     hl
4C89                         srl     e
4C8B                         ld      (CHARACTER_HIGH_BYTE), a
4C8E                         cp      0FFh
4C90                         jr      nz, loc_4C96
4C92                         sla     e
4C94                         sla     c
4C96
4C96 loc_4C96:                                                   ; 4C90
4C96                         xor     a
4C97                         ld      b, (ix+3)
4C9A                         dec     b
4C9B                         jr      z, loc_4CA0
4C9D
4C9D loc_4C9D:                                                   ; 4C9E↓j
4C9D                         add     a, c
4C9E                         djnz    loc_4C9D
4CA0
4CA0 loc_4CA0:                                                   ; 4C9B
4CA0                         add     a, e
4CA1                         rst     HL_plus_A
4CA2                         pop     bc
4CA3                         pop     de
4CA4                         ld      a, (hl)
4CA5                         ld      (de), a
4CA6                         inc     de
4CA7                         inc     hl
4CA8                         ld      a, (CHARACTER_HIGH_BYTE)
4CAB                         cp      0FFh
4CAD                         jr      nz, loc_4CB0
4CAF                         ld      a, (hl)
4CB0
4CB0 loc_4CB0:                                                   ; 4CAD
4CB0                         or      (iy+4)
4CB3                         ld      (de), a
4CB4                         pop     hl
4CB5
4CB5 loc_4CB5:                                                   ; 4CC3↓j 4CCC↓j 
4CB5                         inc     de
4CB6                         inc     hl
4CB7                         djnz    loc_4C48
4CB9                         pop     de
4CBA                         ld      hl, 0FFC0h
4CBD                         add     hl, de
4CBE                         ret
4CBF ; ---------------------------------------------------------------------------
4CBF
4CBF loc_4CBF:                                                   ; 4C63
4CBF                         call    sub_4CD2
4CC2                         or      a
4CC3                         jr      nz, loc_4CB5
4CC5                         ld      a, 0Ah
4CC7                         ld      (de), a
4CC8                         inc     de
4CC9                         ld      a, 30h ; '0'
4CCB                         ld      (de), a
4CCC                         jr      loc_4CB5
4CCE ; ---------------------------------------------------------------------------
4CCE
4CCE loc_4CCE:                                                   ; 4C54
4CCE                         inc     hl
4CCF
4CCF loc_4CCF:                                                   ; 4C71
4CCF                         inc     de
4CD0                         jr      loc_4CB5
4CD0 ; End of function sub_4C44
4CD0
4CD2
4CD2 ; =============== S U B R O U T I N E =======================================
4CD2
4CD2
4CD2 sub_4CD2:                                                   ; loc_4CBF↑p
4CD2                         ld      a, (ix+3)
4CD5                         or      a
4CD6                         ret     z
4CD7                         cp      4
4CD9                         jr      nc, loc_4CEB
4CDB                         push    iy
4CDD                         push    bc
4CDE                         push    hl
4CDF                         ld      a, e
4CE0                         and     3Eh ; '>'
4CE2                         ld      c, a
4CE3                         call    sub_4CED
4CE6                         pop     hl
4CE7                         pop     bc
4CE8                         pop     iy
4CEA                         ret
4CEB ; ---------------------------------------------------------------------------
4CEB
4CEB loc_4CEB:                                                   ; 4CD9
4CEB                         xor     a
4CEC                         ret
4CEC ; End of function sub_4CD2
4CEC
4CED
4CED ; =============== S U B R O U T I N E =======================================
4CED
4CED
4CED sub_4CED:                                                   ; 4CE3↑p
4CED                         ld      iy, unk_E482
4CF1                         ld      a, (ix+3)
4CF4                         cp      3
4CF6                         jr      c, loc_4D01
4CF8                         ld      a, (iy+0)
4CFB                         cp      6
4CFD                         jr      c, loc_4D01
4CFF                         xor     a
4D00                         ret
4D01 ; ---------------------------------------------------------------------------
4D01
4D01 loc_4D01:                                                   ; 4CF6 4CFD
4D01                         ld      a, (iy+0)
4D04                         or      a
4D05                         ret     z
4D06                         ld      hl, foilage_table
4D09                         ld      a, (iy+0)
4D0C                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
4D0F                         ld      a, (iy+0)
4D12                         cp      6
4D14                         jr      nc, loc_4D22
4D16                         ld      a, (ix+3)
4D19                         cp      3
4D1B                         jr      nc, loc_4D35
4D1D                         xor     3
4D1F                         ld      b, a
4D20                         jr      loc_4D2D
4D22 ; ---------------------------------------------------------------------------
4D22
4D22 loc_4D22:                                                   ; 4D14
4D22                         ld      a, (ix+3)
4D25                         cp      2
4D27                         jr      nc, loc_4D35
4D29                         xor     3
4D2B                         dec     a
4D2C                         ld      b, a
4D2D
4D2D loc_4D2D:                                                   ; 4D20 4D33↓j
4D2D                         ld      a, (iy+2)
4D30                         sla     a
4D32                         rst     HL_plus_A
4D33                         djnz    loc_4D2D
4D35
4D35 loc_4D35:                                                   ; 4D1B 4D27
4D35                         ld      a, c
4D36                         rst     HL_plus_A
4D37                         ld      a, (hl)
4D38                         ld      (de), a
4D39                         inc     hl
4D3A                         inc     de
4D3B                         ld      a, (hl)
4D3C                         ld      (de), a
4D3D                         ld      a, 1
4D3F                         or      a
4D40                         ret
4D40 ; End of function sub_4CED
4D40
4D41
4D41 ; =============== S U B R O U T I N E =======================================
4D41
4D41
4D41 sub_4D41:                                                   ; 4C76↑p
4D41                         ld      c, a
4D42                         ld      a, e
4D43                         and     3Fh ; '?'
4D45                         sla     a
4D47                         sla     a
4D49                         ld      e, a
4D4A                         ld      iy, Building1_data
4D4E
4D4E loc_4D4E:                                                   ; 4D72↓j
4D4E                         ld      a, (iy+4)
4D51                         cp      c
4D52                         jr      nz, loc_4D6B
4D54                         ld      a, e
4D55                         cp      (iy+7)
4D58                         jr      nc, loc_4D6B
4D5A                         sub     (iy+6)
4D5D                         jr      c, loc_4D6B
4D5F                         sra     a
4D61                         sra     a
4D63                         and     0FEh
4D65                         cp      0Dh
4D67                         jr      nc, loc_4D6B
4D69                         ld      e, a
4D6A                         ret
4D6B ; ---------------------------------------------------------------------------
4D6B
4D6B loc_4D6B:                                                   ; 4D52 4D58 
4D6B                         push    bc
4D6C                         ld      bc, 18h                     ; Next Building
4D6F                         add     iy, bc
4D71                         pop     bc
4D72                         jr      loc_4D4E
4D72 ; End of function sub_4D41
4D72
4D74
4D74 ; =============== S U B R O U T I N E =======================================
4D74
4D74
4D74 sub_4D74:                                                   ; 4C5E↑p
4D74                         push    de
4D75                         call    sub_4D7A
4D78                         pop     de
4D79                         ret
4D79 ; End of function sub_4D74
4D79
4D7A
4D7A ; =============== S U B R O U T I N E =======================================
4D7A
4D7A
4D7A sub_4D7A:                                                   ; 4D75↑p
4D7A                         ld      a, (ix+4)
4D7D                         ld      c, a
4D7E                         ld      a, e
4D7F                         and     3Fh ; '?'
4D81                         sla     a
4D83                         sla     a
4D85                         ld      e, a
4D86                         ld      iy, Building1_data
4D8A
4D8A loc_4D8A:                                                   ; 4DBF↓j
4D8A                         ld      a, (iy+0)
4D8D                         cp      0FFh
4D8F                         ret     z
4D90                         ld      a, (iy+4)
4D93                         cp      c
4D94                         jr      z, loc_4DB8
4D96                         jr      c, loc_4DB8
4D98                         ld      a, e
4D99                         cp      (iy+7)
4D9C                         jr      nc, loc_4DB8
4D9E                         sub     (iy+6)
4DA1                         jr      c, loc_4DB8
4DA3                         sra     a
4DA5                         sra     a
4DA7                         and     0FEh
4DA9                         ld      c, a
4DAA                         ld      a, (iy+3)
4DAD                         sub     (ix+3)
4DB0                         jr      c, loc_4DC1
4DB2                         jr      z, loc_4DC1
4DB4                         ld      a, (iy+0)
4DB7                         ret
4DB8 ; ---------------------------------------------------------------------------
4DB8
4DB8 loc_4DB8:                                                   ; 4D94 4D96 
4DB8                         push    bc
4DB9                         ld      bc, 18h                     ; Next Building
4DBC                         add     iy, bc
4DBE                         pop     bc
4DBF                         jr      loc_4D8A
4DC1 ; ---------------------------------------------------------------------------
4DC1
4DC1 loc_4DC1:                                                   ; 4DB0 4DB2
4DC1                         ld      a, 0FFh
4DC3                         ret
4DC3 ; End of function sub_4D7A
4DC3
4DC3 ; ---------------------------------------------------------------------------
4DC4 byte_4DC4:              db  7Eh, 7Fh                        ; loc_4728↑o
4DC6 byte_4DC6:              db 0A8h,0A9h                        ; loc_472D↑o
4DC8 byte_4DC8:              db  3Eh, 3Fh, 40h, 41h              ; 46D5↑o
4DCC byte_4DCC:              db  42h, 43h, 44h, 45h              ; off_46D1↑o
4DD0 byte_4DD0:              db  3Ah, 3Bh, 3Ch, 3Dh              ; 46D3↑o
4DD4 byte_4DD4:              db  60h, 61h, 62h, 68h              ; 46E1↑o
4DD8 byte_4DD8:              db  69h, 6Ah, 6Bh, 6Ch              ; off_46DD↑o
4DDC byte_4DDC:              db  5Bh, 5Ch, 5Dh, 5Eh              ; 46DF↑o
4DE0 byte_4DE0:              db  53h, 54h, 55h, 56h              ; 46ED↑o
4DE4 byte_4DE4:              db  57h, 58h, 59h, 5Ah              ; off_46E9↑o
4DE8 byte_4DE8:              db  4Fh, 50h, 51h, 52h              ; 46EB↑o
4DEC byte_4DEC:              db 0B2h,0B3h,0B4h,0B5h              ; 46DB↑o
4DF0 byte_4DF0:              db 0B6h,0B7h,0B8h,0B9h              ; off_46D7↑o
4DF4 byte_4DF4:              db 0AEh,0AFh,0B0h,0B1h              ; 46D9↑o
4DF8 byte_4DF8:              db 0C8h,0C9h                        ; 46E7↑o
4DFA byte_4DFA:              db 0CCh,0CDh                        ; off_46E3↑o
4DFC byte_4DFC:              db 0C4h,0C5h                        ; 46E5↑o
4DFE byte_4DFE:              db 0C6h,0C7h                        ; 46F3↑o
4E00 byte_4E00:              db 0CAh,0CBh                        ; off_46EF↑o
4E02 byte_4E02:              db 0C2h,0C3h                        ; 46F1↑o
4E04 byte_4E04:              db  4Bh, 4Ch, 4Dh, 4Eh              ; 463A↑o 4794↑o
4E08 byte_4E08:              db  47h, 48h                        ; 47B0↑o
4E0A byte_4E0A:              db  49h, 4Ah                        ; 4622↑o 47A2↑o
4E0C tram_spr_top:           db 0BEh,0BFh                        ; 47B7↑o
4E0E tran_spr_bottom:        db 0C0h,0C1h                        ; 462A↑o 47A9↑o
4E10 byte_4E10:              db 0BAh,0BBh,0BCh,0BDh              ; 4642↑o 479B↑o
4E14
4E14 ; =============== S U B R O U T I N E =======================================
4E14
4E14
4E14 sub_4E14:                                                   ; 09BE↑p
4E14                         ld      a, (unk_E026)
4E17                         inc     a
4E18                         ld      (unk_E026), a
4E1B                         cp      1Eh
4E1D                         call    nc, sub_4E7B
4E20                         ld      ix, unk_E058
4E24                         ld      b, 9
4E26
4E26 loc_4E26:                                                   ; 4E3A↓j
4E26                         push    bc
4E27                         push    ix
4E29                         ld      a, 9
4E2B                         sub     b
4E2C                         ld      (ix+6), a
4E2F                         call    sub_4E3D
4E32                         pop     ix
4E34                         ld      de, 14h
4E37                         add     ix, de
4E39                         pop     bc
4E3A                         djnz    loc_4E26
4E3C                         ret
4E3C ; End of function sub_4E14
4E3C
4E3D
4E3D ; =============== S U B R O U T I N E =======================================
4E3D
4E3D
4E3D sub_4E3D:                                                   ; 4E2F↑p
4E3D
4E3D ; FUNCTION CHUNK AT 5637 SIZE 00000026 BYTES
4E3D
4E3D                         ld      a, (ix+0)
4E40                         cp      0
4E42                         ret     z
4E43                         cp      10h
4E45                         ret     z
4E46                         ld      a, (ix+1)
4E49                         cp      10h
4E4B                         jp      z, loc_5637
4E4E                         call    sub_560F
4E51                         call    sub_5B00
4E54                         ret
4E54 ; End of function sub_4E3D
4E54
4E55
4E55 ; =============== S U B R O U T I N E =======================================
4E55
4E55
4E55 sub_4E55:                                                   ; 8CF4↓p
4E55                         ld      ix, unk_E0F8
4E59                         ld      (ix+6), 8
4E5D                         rst     random_number
4E5E                         and     3
4E60                         ld      (ix+5), a
4E63                         xor     a
4E64                         ld      (unk_E015), a
4E67                         call    sub_4EDF
4E6A                         ld      a, (unk_E015)
4E6D                         or      a
4E6E                         ret     z
4E6F                         call    sub_4EB4
4E72                         ld      (ix+1), 10h
4E76                         ld      (ix+9), 78h ; 'x'
4E7A                         ret
4E7A ; End of function sub_4E55
4E7A
4E7B
4E7B ; =============== S U B R O U T I N E =======================================
4E7B
4E7B
4E7B sub_4E7B:                                                   ; 4E1D↑p 8DA7↓p
4E7B                         xor     a
4E7C                         ld      (unk_E026), a
4E7F                         ld      (unk_E015), a
4E82                         ld      a, (unk_E028)
4E85                         ld      b, a
4E86                         ld      a, (unk_E027)
4E89                         cp      b
4E8A                         ret     nc
4E8B                         ld      ix, unk_E058
4E8F                         ld      b, 8
4E91
4E91 loc_4E91:                                                   ; 4EB1↓j
4E91                         ld      a, (unk_E015)
4E94                         or      a
4E95                         ret     nz
4E96                         push    bc
4E97                         ld      a, (ix+0)
4E9A                         cp      10h
4E9C                         jr      nz, loc_4EAB
4E9E                         call    sub_4EDF
4EA1                         pop     bc
4EA2                         ld      a, (unk_E015)
4EA5                         or      a
4EA6                         ret     z
4EA7                         call    sub_4EB4
4EAA                         ret
4EAB ; ---------------------------------------------------------------------------
4EAB
4EAB loc_4EAB:                                                   ; 4E9C
4EAB                         ld      de, 14h
4EAE                         add     ix, de
4EB0                         pop     bc
4EB1                         djnz    loc_4E91
4EB3                         ret
4EB3 ; End of function sub_4E7B
4EB3
4EB4
4EB4 ; =============== S U B R O U T I N E =======================================
4EB4
4EB4
4EB4 sub_4EB4:                                                   ; 4E6F↑p 4EA7↑p
4EB4                         ld      (ix+0), 1
4EB8                         ld      (ix+12h), 0
4EBC                         ld      (ix+7), 0
4EC0                         ld      hl, byte_4ED7
4EC3                         ld      a, (ix+6)
4EC6                         rst     HL_plus_A
4EC7                         ld      a, (hl)
4EC8                         ld      (ix+9), a
4ECB                         ld      a, 1
4ECD                         ld      (unk_E015), a
4ED0                         ld      a, (iy+10h)
4ED3                         ld      (ix+5), a
4ED6                         ret
4ED6 ; End of function sub_4EB4
4ED6
4ED6 ; ---------------------------------------------------------------------------
4ED7 byte_4ED7:              db  78h,0FAh,0AFh, 50h,0E1h, 96h,0FAh, 3Ch ; 4EC0↑o
4EDF
4EDF ; =============== S U B R O U T I N E =======================================
4EDF
4EDF
4EDF sub_4EDF:                                                   ; 4E67↑p 4E9E↑p 
4EDF
4EDF ; FUNCTION CHUNK AT 4FE3 SIZE 0000000C BYTES
4EDF ; FUNCTION CHUNK AT 5013 SIZE 0000001E BYTES
4EDF
4EDF                         xor     a
4EE0                         ld      (temp_counter), a
4EE3                         ld      a, (ix+5)
4EE6                         cp      6
4EE8                         jr      c, loc_4EEB
4EEA                         xor     a
4EEB
4EEB loc_4EEB:                                                   ; 4EE8
4EEB                         ld      (ix+5), a
4EEE                         ld      iy, Building1_data
4EF2                         ld      de, 18h
4EF5                         or      a
4EF6                         jr      z, loc_4EFD
4EF8                         ld      b, a
4EF9
4EF9 loc_4EF9:                                                   ; 4EFB↓j
4EF9                         add     iy, de
4EFB                         djnz    loc_4EF9
4EFD
4EFD loc_4EFD:                                                   ; 4EF6
4EFD                         ld      b, 6
4EFF
4EFF loc_4EFF:                                                   ; 4F0B↓j 4F12↓j
4EFF                         ld      a, (iy+0)
4F02                         cp      0FFh
4F04                         jr      z, loc_4F0E
4F06                         or      a
4F07                         jr      nz, loc_4F15
4F09                         add     iy, de
4F0B                         djnz    loc_4EFF
4F0D                         ret
4F0E ; ---------------------------------------------------------------------------
4F0E
4F0E loc_4F0E:                                                   ; 4F04
4F0E                         ld      iy, Building1_data
4F12                         djnz    loc_4EFF
4F14                         ret
4F15 ; ---------------------------------------------------------------------------
4F15
4F15 loc_4F15:                                                   ; 4F07
4F15                         ld      a, (iy+3)
4F18                         ld      (ix+4), a
4F1B                         dec     a
4F1C                         ld      l, a
4F1D                         ld      h, 0
4F1F                         ld      de, 5
4F22                         call    sub_F8F
4F25
4F25 loc_4F25:                                                   ; 4FD1↓j
4F25                         call    sub_4FD4
4F28                         ld      c, (iy+4)
4F2B                         rst     random_number
4F2C                         and     10h
4F2E                         jr      z, loc_4F3E
4F30                         ld      e, (iy+2)
4F33                         dec     e
4F34                         sla     e
4F36                         ld      d, 0
4F38                         add     hl, de
4F39                         ld      de, 0FFFEh
4F3C                         jr      loc_4F4B
4F3E ; ---------------------------------------------------------------------------
4F3E
4F3E loc_4F3E:                                                   ; 4F2E
4F3E                         ld      de, 2
4F41                         jr      loc_4F4B
4F43 ; ---------------------------------------------------------------------------
4F43
4F43 loc_4F43:                                                   ; 4F55↓j
4F43                         ld      a, (ix+5)
4F46                         inc     a
4F47                         ld      (ix+5), a
4F4A                         ret
4F4B ; ---------------------------------------------------------------------------
4F4B
4F4B loc_4F4B:                                                   ; 4F3C 4F41 
4F4B                         ld      b, (iy+2)
4F4E                         ld      a, (ix+4)
4F51                         dec     a
4F52                         ld      (ix+4), a
4F55                         jr      z, loc_4F43
4F57
4F57 loc_4F57:                                                   ; 4FAB↓j
4F57                         ld      a, (ix+6)
4F5A                         cp      9
4F5C                         jr      c, loc_4F81
4F5E                         ld      a, b
4F5F                         cp      1
4F61                         jr      nz, loc_4F65
4F63                         jr      loc_4F81
4F65 ; ---------------------------------------------------------------------------
4F65
4F65 loc_4F65:                                                   ; 4F61
4F65                         ld      a, (iy+2)
4F68                         cp      5
4F6A                         jr      c, loc_4F7B
4F6C                         ld      a, b
4F6D                         cp      3
4F6F                         jr      nz, loc_4F81
4F71                         ld      a, (iy+4)
4F74                         cp      20h ; ' '
4F76                         jr      z, loc_4F81
4F78                         jp      loc_4FA9
4F7B ; ---------------------------------------------------------------------------
4F7B
4F7B loc_4F7B:                                                   ; 4F6A
4F7B                         ld      a, b
4F7C                         cp      4
4F7E                         jp      z, loc_4FAA
4F81
4F81 loc_4F81:                                                   ; 4F5C 4F63 
4F81                         ld      c, (iy+4)
4F84                         call    sub_1446
4F87                         cp      c
4F88                         jr      nz, loc_4FAA
4F8A                         call    sub_44BC
4F8D                         ld      c, a
4F8E                         and     7
4F90                         cp      0
4F92                         jr      nz, loc_4FAA
4F94                         ld      a, c
4F95                         and     0F8h
4F97                         cp      98h
4F99                         jr      z, loc_4FE4
4F9B                         cp      0C0h
4F9D                         jr      z, loc_4FE3
4F9F                         cp      90h
4FA1                         jr      z, loc_5013
4FA3                         cp      0B8h
4FA5                         jr      z, loc_5013
4FA7                         jr      loc_4FAA
4FA9 ; ---------------------------------------------------------------------------
4FA9
4FA9 loc_4FA9:                                                   ; 4F78
4FA9                         nop
4FAA
4FAA loc_4FAA:                                                   ; 4F7E 4F88 
4FAA                         add     hl, de
4FAB                         djnz    loc_4F57
4FAD                         ld      a, h
4FAE                         cp      0F6h
4FB0                         jr      nc, loc_4FCE
4FB2                         ld      a, d
4FB3                         cp      0FFh
4FB5                         jr      z, loc_4FC2
4FB7                         ld      de, 40h ; '@'
4FBA                         add     hl, de
4FBB                         ld      de, 0FFFEh
4FBE                         add     hl, de
4FBF                         jp      loc_4F4B
4FC2 ; ---------------------------------------------------------------------------
4FC2
4FC2 loc_4FC2:                                                   ; 4FB5
4FC2                         ld      de, 40h ; '@'
4FC5                         add     hl, de
4FC6                         ld      de, 2
4FC9                         add     hl, de
4FCA                         jp      loc_4F4B
4FCA ; ---------------------------------------------------------------------------
4FCD                         db    0
4FCE ; ---------------------------------------------------------------------------
4FCE
4FCE loc_4FCE:                                                   ; 4FB0
4FCE                         ld      a, (iy+3)
4FD1                         jp      loc_4F25
4FD1 ; End of function sub_4EDF
4FD1
4FD4
4FD4 ; =============== S U B R O U T I N E =======================================
4FD4
4FD4
4FD4 sub_4FD4:                                                   ; loc_4F25↑p
4FD4                         add     a, 3
4FD6                         sla     a
4FD8                         sla     a
4FDA                         sla     a
4FDC                         ld      c, a
4FDD                         ld      b, (iy+6)
4FE0                         jp      sub_4504
4FE0 ; End of function sub_4FD4
4FE0
4FE3 ; ---------------------------------------------------------------------------
4FE3 ; START OF FUNCTION CHUNK FOR sub_4EDF
4FE3
4FE3 loc_4FE3:                                                   ; 4F9D
4FE3                         nop
4FE4
4FE4 loc_4FE4:                                                   ; 4F99
4FE4                         push    bc
4FE5                         call    sub_4FEF
4FE8                         pop     bc
4FE9                         or      a
4FEA                         jp      nz, loc_4FAA
4FED                         jr      loc_5013
4FED ; END OF FUNCTION CHUNK FOR sub_4EDF
4FEF
4FEF ; =============== S U B R O U T I N E =======================================
4FEF
4FEF
4FEF sub_4FEF:                                                   ; 4FE5↑p
4FEF                         ld      bc, 40h ; '@'
4FF2                         add     hl, bc
4FF3                         call    sub_44BC
4FF6                         ld      b, a
4FF7                         and     0F8h
4FF9                         cp      0B8h
4FFB                         jr      z, loc_5001
4FFD                         cp      90h
4FFF                         jr      nz, loc_500D
5001
5001 loc_5001:                                                   ; 4FFB
5001                         ld      a, b
5002                         and     7
5004                         cp      0
5006                         jr      nz, loc_500D
5008                         xor     a
5009                         ret
500A ; ---------------------------------------------------------------------------
500A                         ld      a, 1
500C                         ret
500D ; ---------------------------------------------------------------------------
500D
500D loc_500D:                                                   ; 4FFF 5006
500D                         ld      bc, 0FFC0h
5010                         add     hl, bc
5011                         xor     a
5012                         ret
5012 ; End of function sub_4FEF
5012
5013 ; ---------------------------------------------------------------------------
5013 ; START OF FUNCTION CHUNK FOR sub_4EDF
5013
5013 loc_5013:                                                   ; 4FA1 4FA5 
5013                         xor     a
5014                         ld      (unk_E016), a
5017                         push    bc
5018                         push    de
5019                         push    iy
501B                         call    sub_5031
501E                         pop     iy
5020                         ld      a, (unk_E016)
5023                         or      a
5024                         call    z, sub_50A8
5027                         pop     de
5028                         pop     bc
5029                         ld      a, (unk_E016)
502C                         or      a
502D                         jp      nz, loc_4FAA
5030                         ret
5030 ; END OF FUNCTION CHUNK FOR sub_4EDF
5031
5031 ; =============== S U B R O U T I N E =======================================
5031
5031
5031 sub_5031:                                                   ; 501B↑p
5031                         call    sub_44E0
5034                         call    sub_44BC
5037                         and     0F8h
5039                         cp      98h
503B                         jr      z, loc_5045
503D                         cp      0C0h
503F                         jr      z, loc_5045
5041                         ld      d, 2
5043                         jr      loc_5047
5045 ; ---------------------------------------------------------------------------
5045
5045 loc_5045:                                                   ; 503B 503F
5045                         ld      d, 0
5047
5047 loc_5047:                                                   ; 5043
5047                         ld      a, c
5048                         add     a, d
5049                         ld      e, a
504A                         ld      a, b
504B                         dec     a
504C                         ld      d, a
504D                         ld      b, 9
504F                         ld      iy, unk_E058
5053
5053 loc_5053:                                                   ; 5062↓j
5053                         push    bc
5054                         call    sub_507C
5057                         ld      bc, 14h
505A                         add     iy, bc
505C                         pop     bc
505D                         ld      a, (unk_E016)
5060                         or      a
5061                         ret     nz
5062                         djnz    loc_5053
5064                         ld      b, 0Fh
5066                         ld      iy, unk_E10C
506A
506A loc_506A:                                                   ; 5079↓j
506A                         push    bc
506B                         call    sub_50B4
506E                         ld      bc, 0Dh
5071                         add     iy, bc
5073                         pop     bc
5074                         ld      a, (unk_E016)
5077                         or      a
5078                         ret     nz
5079                         djnz    loc_506A
507B                         ret
507B ; End of function sub_5031
507B
507C
507C ; =============== S U B R O U T I N E =======================================
507C
507C
507C sub_507C:                                                   ; 5054↑p
507C                         ld      a, (iy+0)
507F                         cp      0
5081                         ret     z
5082                         cp      10h
5084                         ret     z
5085                         ld      a, (iy+6)
5088                         cp      (ix+6)
508B                         ret     z
508C                         ld      a, (iy+2)
508F                         sub     d
5090                         jr      nc, loc_5094
5092                         neg
5094
5094 loc_5094:                                                   ; 5090
5094                         cp      5
5096                         ret     nc
5097                         ld      a, (iy+3)
509A                         sub     e
509B                         jr      nc, loc_509F
509D                         neg
509F
509F loc_509F:                                                   ; 509B
509F                         cp      9
50A1                         ret     nc
50A2                         ld      a, 1
50A4                         ld      (unk_E016), a
50A7                         ret
50A7 ; End of function sub_507C
50A7
50A8
50A8 ; =============== S U B R O U T I N E =======================================
50A8
50A8
50A8 sub_50A8:                                                   ; 5024↑p
50A8                         ld      (ix+3), e
50AB                         ld      (ix+2), d
50AE                         ld      a, 1
50B0                         ld      (unk_E015), a
50B3                         ret
50B3 ; End of function sub_50A8
50B3
50B4
50B4 ; =============== S U B R O U T I N E =======================================
50B4
50B4
50B4 sub_50B4:                                                   ; 506B↑p
50B4                         ld      a, (iy+0)
50B7                         cp      0
50B9                         ret     z
50BA                         ld      a, (iy+6)
50BD                         cp      (ix+6)
50C0                         ret     z
50C1                         ld      a, (iy+2)
50C4                         sub     d
50C5                         jr      nc, loc_50C9
50C7                         neg
50C9
50C9 loc_50C9:                                                   ; 50C5
50C9                         cp      7
50CB                         ret     nc
50CC                         ld      a, (iy+3)
50CF                         sub     e
50D0                         jr      nc, loc_50D4
50D2                         neg
50D4
50D4 loc_50D4:                                                   ; 50D0
50D4                         cp      9
50D6                         ret     nc
50D7                         ld      a, 1
50D9                         ld      (unk_E016), a
50DC                         ret
50DC ; End of function sub_50B4
50DC
50DD
50DD ; =============== S U B R O U T I N E =======================================
50DD
50DD
50DD sub_50DD:                                                   ; 3F01↑p 3F1A↑p 
50DD                         ld      a, (ix+2)
50E0                         cp      (ix+0Eh)
50E3                         jr      c, loc_50E9
50E5                         ld      a, 3
50E7                         jr      loc_50EB
50E9 ; ---------------------------------------------------------------------------
50E9
50E9 loc_50E9:                                                   ; 50E3
50E9                         ld      a, 13h
50EB
50EB loc_50EB:                                                   ; 50E7
50EB                         ld      d, a
50EC                         ret
50EC ; End of function sub_50DD
50EC
50ED ; ---------------------------------------------------------------------------
50ED ; START OF FUNCTION CHUNK FOR sub_565D
50ED ;   ADDITIONAL PARENT FUNCTION sub_5B00
50ED ;   ADDITIONAL PARENT FUNCTION sub_5EAD
50ED
50ED loc_50ED:                                                   ; 56BD↓j 56DE↓j 
50ED                         ld      (iy+2), a
50F0                         ld      (iy+1), d
50F3                         ld      a, (ix+3)
50F6                         add     a, 8
50F8                         ld      (iy+0), a
50FB                         ld      b, (ix+2)
50FE                         ld      (iy+3), b
5101                         ld      a, d
5102                         and     0F0h
5104                         ret     z
5105                         dec     b
5106                         ld      (iy+3), b
5109                         ret
5109 ; END OF FUNCTION CHUNK FOR sub_565D
510A
510A ; =============== S U B R O U T I N E =======================================
510A
510A
510A sub_510A:                                                   ; 5B04↓p 5EB1↓p
510A                         ld      a, (ix+6)
510D                         or      a
510E                         ret     z
510F                         ld      b, a
5110                         ld      de, 4
5113
5113 loc_5113:                                                   ; 5115↓j
5113                         add     iy, de
5115                         djnz    loc_5113
5117                         ret
5117 ; End of function sub_510A
5117
5118
5118 ; =============== S U B R O U T I N E =======================================
5118
5118
5118 sub_5118:                                                   ; 2C2C↑p 3316↑p
5118                         xor     a
5119                         ld      (unk_E016), a
511C                         ld      iy, unk_E058
5120                         ld      b, 9
5122
5122 loc_5122:                                                   ; 5131↓j
5122                         push    bc
5123                         call    sub_5134
5126                         ld      de, 14h
5129                         add     iy, de
512B                         pop     bc
512C                         ld      a, (unk_E016)
512F                         or      a
5130                         ret     nz
5131                         djnz    loc_5122
5133                         ret
5133 ; End of function sub_5118
5133
5134
5134 ; =============== S U B R O U T I N E =======================================
5134
5134
5134 sub_5134:                                                   ; 5123↑p
5134                         ld      a, (iy+0)
5137                         cp      3
5139                         ret     nz
513A                         ld      a, (ix+32h)
513D                         sub     7
513F                         sub     (iy+2)
5142                         jr      nc, loc_5146
5144                         neg
5146
5146 loc_5146:                                                   ; 5142
5146                         cp      7
5148                         ret     nc
5149                         ld      a, (iy+3)
514C                         sub     5
514E                         sub     (ix+33h)
5151                         jr      nc, loc_5155
5153                         neg
5155
5155 loc_5155:                                                   ; 5151
5155                         cp      9
5157                         ret     nc
5158                         ld      (ix+21h), 1
515C                         ld      a, (iy+1)
515F                         cp      10h
5161                         jr      z, loc_5179
5163                         call    sub_5AA3
5166                         call    sub_53A5
5169                         ld      hl, score_50
516C                         call    add_to_score
516F                         ld      (ix+2Bh), 51h ; 'Q'
5173                         ld      a, 1
5175                         ld      (unk_E016), a
5178                         ret
5179 ; ---------------------------------------------------------------------------
5179
5179 loc_5179:                                                   ; 5161
5179                         ld      a, 1
517B                         ld      (unk_E016), a
517E                         ld      a, (byte_E673)
5181                         cp      (ix+2)
5184                         jr      z, loc_518B
5186                         ld      (iy+0), 7
518A                         ret
518B ; ---------------------------------------------------------------------------
518B
518B loc_518B:                                                   ; 5184
518B                         ld      a, 1
518D                         ld      (unk_E00C), a
5190                         ld      (ix+4Eh), a
5193                         ld      (iy+0), 9
5197                         ld      (iy+7), 0
519B                         ret
519B ; End of function sub_5134
519B
519C
519C ; =============== S U B R O U T I N E =======================================
519C
519C
519C sub_519C:                                                   ; 3C2A↑p
519C                         ld      iy, unk_E058
51A0                         ld      b, a
51A1                         or      a
51A2                         ret     z
51A3                         ld      de, 14h
51A6
51A6 loc_51A6:                                                   ; 51A8↓j
51A6                         add     iy, de
51A8                         djnz    loc_51A6
51AA                         ret
51AA ; End of function sub_519C
51AA
51AB
51AB ; =============== S U B R O U T I N E =======================================
51AB
51AB
51AB sub_51AB:                                                   ; 3AED↑p
51AB                         ld      iy, unk_E10C
51AF                         sub     9
51B1                         ret     c
51B2                         ld      b, a
51B3                         or      a
51B4                         ret     z
51B5                         ld      de, 0Dh
51B8
51B8 loc_51B8:                                                   ; 51BA↓j
51B8                         add     iy, de
51BA                         djnz    loc_51B8
51BC                         ret
51BC ; End of function sub_51AB
51BC
51BD ; ---------------------------------------------------------------------------
51BD ; START OF FUNCTION CHUNK FOR sub_1FC9
51BD ;   ADDITIONAL PARENT FUNCTION sub_36B8
51BD
51BD loc_51BD:                                                   ; 2025 36CB
51BD                         ld      a, (ix+0Ah)
51C0                         call    sub_51C7
51C3                         ld      (ix+3Bh), a
51C6                         ret
51C6 ; END OF FUNCTION CHUNK FOR sub_1FC9
51C7
51C7 ; =============== S U B R O U T I N E =======================================
51C7
51C7
51C7 sub_51C7:                                                   ; 51C0↑p 51DC↓p
51C7                         and     0F0h
51C9                         srl     a
51CB                         srl     a
51CD                         srl     a
51CF                         srl     a
51D1                         add     a, 2
51D3                         cp      0Fh
51D5                         ret     c
51D6                         ld      a, 0Fh
51D8                         ret
51D8 ; End of function sub_51C7
51D8
51D9
51D9 ; =============== S U B R O U T I N E =======================================
51D9
51D9
51D9 sub_51D9:                                                   ; 3BB8↑p 64FD↓p
51D9                         ld      a, (iy+0Ah)
51DC                         call    sub_51C7
51DF                         ld      (iy+3Bh), a
51E2                         ret
51E2 ; End of function sub_51D9
51E2
51E3 ; ---------------------------------------------------------------------------
51E3 ; START OF FUNCTION CHUNK FOR sub_5303
51E3
51E3 loc_51E3:                                                   ; 5375↓j 537A↓j 
51E3                         ld      a, 1
51E5                         ld      (unk_E00B), a
51E5 ; END OF FUNCTION CHUNK FOR sub_5303
51E8 ; START OF FUNCTION CHUNK FOR sub_D99
51E8 ;   ADDITIONAL PARENT FUNCTION sub_52CE
51E8 ;   ADDITIONAL PARENT FUNCTION sub_52D4
51E8 ;   ADDITIONAL PARENT FUNCTION sub_52FE
51E8
51E8 loc_51E8:                                                   ; 529F↓j 52D1↓j 
51E8                         ld      a, b
51E9                         cp      10h
51EB                         jr      c, sub_51EF
51ED                         ld      b, 1
51ED ; END OF FUNCTION CHUNK FOR sub_D99
51EF
51EF ; =============== S U B R O U T I N E =======================================
51EF
51EF
51EF sub_51EF:                                                   ; 51EB 539F↓p
51EF                         ld      a, (byte_E00A)
51F2                         or      a
51F3                         ret     nz
51F4                         ld      a, (ix+1Bh)
51F7                         or      a
51F8                         ret     nz
51F9                         ld      a, (ix+3)
51FC                         cp      0FAh
51FE                         jr      nc, loc_5222
5200                         sub     b
5201                         jr      z, loc_520C
5203                         jr      c, loc_520C
5205                         ld      (ix+3), a
5208                         ld      (ix+1Ch), a
520B                         ret
520C ; ---------------------------------------------------------------------------
520C
520C loc_520C:                                                   ; 5201 5203
520C                         ld      a, (unk_E00B)
520F                         or      a
5210                         jr      z, loc_5222
5212                         ld      (ix+3), 1
5216                         xor     a
5217                         ld      (unk_E00B), a
521A                         ld      (ix+37h), 1
521E                         ld      (ix+1Ch), a
5221                         ret
5222 ; ---------------------------------------------------------------------------
5222
5222 loc_5222:                                                   ; 51FE 5210
5222                         ld      (ix+3), 0
5226                         ld      (ix+1Ch), a
5229                         ret
5229 ; End of function sub_51EF
5229
522A ; ---------------------------------------------------------------------------
522A ; START OF FUNCTION CHUNK FOR sub_D99
522A
522A loc_522A:                                                   ; 0D9F
522A                         ld      a, (ix+3)
522D                         cp      10h
522F                         ret     c
5230                         ld      hl, byte_52AA
5233                         ld      a, (game_difficulty)
5236                         or      a
5237                         jr      z, loc_524A
5239                         cp      1
523B                         ld      hl, byte_52A6
523E                         jr      z, loc_524A
5240                         cp      2
5242                         ld      hl, byte_52AE
5245                         jr      z, loc_524A
5247                         ld      hl, byte_52AA
524A
524A loc_524A:                                                   ; 5237 523E 
524A                         ld      a, (ix+5)
524D                         cp      5
524F                         jr      nc, loc_52A2
5251                         sla     a
5253                         ld      b, a
5254                         ld      a, (ix+6)
5257                         cp      30h ; '0'
5259                         jr      c, loc_525C
525B                         inc     b
525C
525C loc_525C:                                                   ; 5259 52A4↓j
525C                         ld      c, 0
525E                         ld      a, (game_difficulty)
5261                         cp      2
5263                         jr      z, loc_527F
5265                         ld      a, (game_level)
5268                         cp      5
526A                         jr      nc, loc_527F
526C                         ld      a, (byte_E679)
526F                         or      a
5270                         jr      nz, loc_527F
5272                         ld      a, (byte_E601)
5275                         cp      1
5277                         jr      nz, loc_527F
5279                         ld      c, 0FFh
527B                         ld      a, b
527C                         or      a
527D                         jr      z, loc_5281
527F
527F loc_527F:                                                   ; 5263 526A 
527F                         ld      a, b
5280                         add     a, c
5281
5281 loc_5281:                                                   ; 527D
5281                         cp      8
5283                         jr      c, loc_5287
5285                         ld      a, 8
5287
5287 loc_5287:                                                   ; 5283
5287                         sla     a
5289                         sla     a
528B                         rst     HL_plus_A
528C                         ld      a, (ticker_countup)
528F                         and     0C0h
5291                         jr      z, loc_529E
5293                         inc     hl
5294                         cp      40h ; '@'
5296                         jr      z, loc_529E
5298                         inc     hl
5299                         cp      80h
529B                         jr      z, loc_529E
529D                         inc     hl
529E
529E loc_529E:                                                   ; 5291 5296 
529E                         ld      b, (hl)
529F                         jp      loc_51E8
52A2 ; ---------------------------------------------------------------------------
52A2
52A2 loc_52A2:                                                   ; 524F
52A2                         ld      b, 8
52A4                         jr      loc_525C
52A4 ; END OF FUNCTION CHUNK FOR sub_D99
52A4 ; ---------------------------------------------------------------------------
52A6 byte_52A6:              db    0,   0,   1,   1              ; 523B↑o
52AA byte_52AA:              db    0,   1,   1,   1              ; 5230↑o 5247↑o
52AE byte_52AE:              db    1,   1,   1,   1,   1,   1,   1,   2,   1,   2,   1
52AE                                                             ; 5242↑o
52B9                         db    2,   1,   2,   2,   2,   2,   2,   2,   2,   2,   2
52C4                         db    2,   2,   2,   2,   2,   2,   2,   2,   2,   3
52CE
52CE ; =============== S U B R O U T I N E =======================================
52CE
52CE
52CE sub_52CE:                                                   ; 374F↑p
52CE
52CE ; FUNCTION CHUNK AT 51E8 SIZE 00000007 BYTES
52CE
52CE                         ld      b, (ix+3Bh)
52D1                         jp      loc_51E8
52D1 ; End of function sub_52CE
52D1
52D4
52D4 ; =============== S U B R O U T I N E =======================================
52D4
52D4
52D4 sub_52D4:                                                   ; 553C↓p 55F4↓p
52D4
52D4 ; FUNCTION CHUNK AT 51E8 SIZE 00000007 BYTES
52D4
52D4                         ld      b, 0Ah
52D6                         jp      loc_51E8
52D6 ; End of function sub_52D4
52D6
52D9 ; ---------------------------------------------------------------------------
52D9
52D9 loc_52D9:                                                   ; 2C6F
52D9                         ld      b, 1
52DB                         jp      loc_51E8
52DE
52DE ; =============== S U B R O U T I N E =======================================
52DE
52DE
52DE sub_52DE:                                                   ; CBC5↓p CC1F↓p
52DE                         ld      a, 1
52E0                         ld      (unk_E00B), a
52E0 ; End of function sub_52DE
52E0
52E3
52E3 ; =============== S U B R O U T I N E =======================================
52E3
52E3
52E3 sub_52E3:                                                   ; 4234↑p
52E3                         ld      b, 0Ah
52E5                         jp      loc_538E
52E5 ; End of function sub_52E3
52E5
52E8
52E8 ; =============== S U B R O U T I N E =======================================
52E8
52E8
52E8 sub_52E8:                                                   ; 586F↓p 64FA↓p
52E8                         ld      b, 6
52EA                         jp      loc_538E
52EA ; End of function sub_52E8
52EA
52ED
52ED ; =============== S U B R O U T I N E =======================================
52ED
52ED
52ED sub_52ED:                                                   ; 3DD5↑p 3DDC↑p
52ED                         ld      a, (game_difficulty)
52F0                         cp      1
52F2                         jr      z, sub_52F9
52F4                         ld      b, 3
52F6                         jp      loc_538E
52F6 ; End of function sub_52ED
52F6
52F9
52F9 ; =============== S U B R O U T I N E =======================================
52F9
52F9
52F9 sub_52F9:                                                   ; 3DCE↑p 52F2
52F9                         ld      b, 2
52FB                         jp      loc_538E
52FB ; End of function sub_52F9
52FB
52FE
52FE ; =============== S U B R O U T I N E =======================================
52FE
52FE
52FE sub_52FE:                                                   ; loc_2D72↑p
52FE
52FE ; FUNCTION CHUNK AT 51E8 SIZE 00000007 BYTES
52FE
52FE                         ld      b, 0Ah
5300                         jp      loc_51E8
5300 ; End of function sub_52FE
5300
5303
5303 ; =============== S U B R O U T I N E =======================================
5303
5303
5303 sub_5303:                                                   ; 60C8↓p 61ED↓p
5303
5303 ; FUNCTION CHUNK AT 51E3 SIZE 00000005 BYTES
5303 ; FUNCTION CHUNK AT 53AD SIZE 00000007 BYTES
5303
5303                         ld      a, (iy+1)
5306                         cp      13h
5308                         jr      z, loc_5382
530A                         cp      6
530C                         jr      z, loc_535B
530E                         cp      25h ; '%'
5310                         jr      z, loc_535B
5312                         cp      1
5314                         jr      z, loc_5347
5316                         cp      9
5318                         jr      z, loc_536F
531A                         cp      2
531C                         jr      z, loc_5360
531E                         cp      3
5320                         jr      z, loc_5365
5322                         cp      8
5324                         jr      z, loc_5351
5326                         cp      0Bh
5328                         jr      z, loc_5356
532A                         cp      0Ah
532C                         jr      z, loc_534C
532E                         cp      4
5330                         jr      z, loc_536A
5332                         cp      21h ; '!'
5334                         jr      z, loc_5373
5336                         cp      24h ; '$'
5338                         jr      z, loc_5373
533A                         cp      20h ; ' '
533C                         jr      z, loc_5378
533E                         cp      22h ; '"'
5340                         jr      z, loc_537D
5342                         cp      23h ; '#'
5344                         jr      z, loc_5387
5346                         ret
5347 ; ---------------------------------------------------------------------------
5347
5347 loc_5347:                                                   ; 5314
5347                         ld      b, 0Fh
5349                         jp      loc_53AD
534C ; ---------------------------------------------------------------------------
534C
534C loc_534C:                                                   ; 532C
534C                         ld      b, 4
534E                         jp      loc_53AD
5351 ; ---------------------------------------------------------------------------
5351
5351 loc_5351:                                                   ; 5324
5351                         ld      b, 4
5353                         jp      loc_53AD
5356 ; ---------------------------------------------------------------------------
5356
5356 loc_5356:                                                   ; 5328
5356                         ld      b, 0Ch
5358                         jp      loc_53AD
535B ; ---------------------------------------------------------------------------
535B
535B loc_535B:                                                   ; 530C 5310
535B                         ld      b, 5
535D                         jp      loc_53AD
5360 ; ---------------------------------------------------------------------------
5360
5360 loc_5360:                                                   ; 531C
5360                         ld      b, 0Ah
5362                         jp      loc_53AD
5365 ; ---------------------------------------------------------------------------
5365
5365 loc_5365:                                                   ; 5320
5365                         ld      b, 6
5367                         jp      loc_53AD
536A ; ---------------------------------------------------------------------------
536A
536A loc_536A:                                                   ; 5330
536A                         ld      b, 8
536C                         jp      loc_53AD
536F ; ---------------------------------------------------------------------------
536F
536F loc_536F:                                                   ; 5318
536F                         ld      b, 4
5371                         jr      loc_53AD
5373 ; ---------------------------------------------------------------------------
5373
5373 loc_5373:                                                   ; 5334 5338
5373                         ld      b, 6
5375                         jp      loc_51E3
5378 ; ---------------------------------------------------------------------------
5378
5378 loc_5378:                                                   ; 533C
5378                         ld      b, 8
537A                         jp      loc_51E3
537D ; ---------------------------------------------------------------------------
537D
537D loc_537D:                                                   ; 5340
537D                         ld      b, 8
537F                         jp      loc_51E3
5382 ; ---------------------------------------------------------------------------
5382
5382 loc_5382:                                                   ; 5308
5382                         ld      b, 6
5384                         jp      loc_51E3
5387 ; ---------------------------------------------------------------------------
5387
5387 loc_5387:                                                   ; 5344
5387                         ld      b, 6
5389                         jp      loc_51E3
5389 ; End of function sub_5303
5389
538C
538C ; =============== S U B R O U T I N E =======================================
538C
538C
538C sub_538C:                                                   ; 745D↓p
538C                         ld      b, 6
538E
538E loc_538E:                                                   ; 52E5 52EA 
538E                         ld      a, b
538F                         cp      0Fh
5391                         jr      c, loc_5399
5393                         ld      b, 1
5395                         jr      loc_5399
5395 ; End of function sub_538C
5395
5397
5397 ; =============== S U B R O U T I N E =======================================
5397
5397
5397 sub_5397:                                                   ; 3E03↑p
5397                         ld      b, 0Ah
5399
5399 loc_5399:                                                   ; 5391 5395
5399                         push    ix
539B                         push    iy
539D                         pop     ix
539F                         call    sub_51EF
53A2                         pop     ix
53A4                         ret
53A4 ; End of function sub_5397
53A4
53A5
53A5 ; =============== S U B R O U T I N E =======================================
53A5
53A5
53A5 sub_53A5:                                                   ; 5166↑p
53A5
53A5 ; FUNCTION CHUNK AT 53AD SIZE 00000007 BYTES
53A5
53A5                         ld      b, 2
53A7                         jr      loc_53AD
53A7 ; End of function sub_53A5
53A7
53A9
53A9 ; =============== S U B R O U T I N E =======================================
53A9
53A9
53A9 sub_53A9:                                                   ; 1AEC↑p 5938↓p
53A9                         ld      b, 6
53AB                         jr      sub_53C7
53AB ; End of function sub_53A9
53AB
53AD ; ---------------------------------------------------------------------------
53AD ; START OF FUNCTION CHUNK FOR sub_5303
53AD ;   ADDITIONAL PARENT FUNCTION sub_53A5
53AD
53AD loc_53AD:                                                   ; 5349 534E 
53AD                         ld      a, b
53AE                         cp      0Fh
53B0                         jr      c, sub_53B4
53B2                         ld      b, 0Ah
53B2 ; END OF FUNCTION CHUNK FOR sub_5303
53B4
53B4 ; =============== S U B R O U T I N E =======================================
53B4
53B4
53B4 sub_53B4:                                                   ; 53B0 53D4↓p
53B4                         ld      a, (ix+3)
53B7                         add     a, b
53B8                         cp      0D4h
53BA                         jr      c, loc_53BE
53BC                         ld      a, 0D4h
53BE
53BE loc_53BE:                                                   ; 53BA
53BE                         ld      (ix+3), a
53C1                         ld      (ix+1Ch), a
53C4                         ret
53C4 ; End of function sub_53B4
53C4
53C5
53C5 ; =============== S U B R O U T I N E =======================================
53C5
53C5
53C5 sub_53C5:                                                   ; D092↓p
53C5                         ld      b, 4
53C5 ; End of function sub_53C5
53C5
53C7
53C7 ; =============== S U B R O U T I N E =======================================
53C7
53C7
53C7 sub_53C7:                                                   ; 53AB B65B↓p 
53C7                         ld      a, b
53C8                         cp      0Fh
53CA                         jr      c, loc_53CE
53CC                         ld      b, 0Ah
53CE
53CE loc_53CE:                                                   ; 53CA
53CE                         push    ix
53D0                         push    iy
53D2                         pop     ix
53D4                         call    sub_53B4
53D7                         pop     ix
53D9                         ret
53D9 ; End of function sub_53C7
53D9
53DA
53DA ; =============== S U B R O U T I N E =======================================
53DA
53DA
53DA sub_53DA:                                                   ; 3456↑p
53DA                         ld      a, 2
53DC                         jr      loc_53EF
53DC ; End of function sub_53DA
53DC
53DE ; ---------------------------------------------------------------------------
53DE ; START OF FUNCTION CHUNK FOR sub_3579
53DE
53DE loc_53DE:                                                   ; 3586
53DE                         ld      a, 3
53E0                         jr      loc_53EF
53E0 ; END OF FUNCTION CHUNK FOR sub_3579
53E2 ; ---------------------------------------------------------------------------
53E2 ; START OF FUNCTION CHUNK FOR sub_3737
53E2
53E2 loc_53E2:                                                   ; loc_3758
53E2                         ld      a, 1
53E4                         jr      loc_53EF
53E4 ; END OF FUNCTION CHUNK FOR sub_3737
53E6
53E6 ; =============== S U B R O U T I N E =======================================
53E6
53E6
53E6 sub_53E6:                                                   ; 2BAE↑p 2E1B↑p 
53E6                         call    sub_5495
53E9                         ld      a, (byte_E025)
53EC                         or      a
53ED                         ret     nz
53EE                         xor     a
53EF
53EF loc_53EF:                                                   ; 53DC 53E0 
53EF                         ld      (unk_E023), a
53F2                         ld      a, (ix+2)
53F5                         or      a
53F6                         jr      z, loc_53FF
53F8                         cp      1
53FA                         jr      z, loc_5418
53FC                         jp      loc_5430
53FF ; ---------------------------------------------------------------------------
53FF
53FF loc_53FF:                                                   ; 53F6
53FF                         push    iy
5401                         ld      iy, Lizzie_data
5405                         call    sub_5448
5408                         ld      a, (byte_E025)
540B                         or      a
540C                         jr      nz, loc_5415
540E                         ld      iy, Ralph_data
5412                         call    sub_5448
5415
5415 loc_5415:                                                   ; 540C 5425↓j 
5415                         pop     iy
5417                         ret
5418 ; ---------------------------------------------------------------------------
5418
5418 loc_5418:                                                   ; 53FA
5418                         push    iy
541A                         ld      iy, George_data
541E                         call    sub_5448
5421                         ld      a, (byte_E025)
5424                         or      a
5425                         jr      nz, loc_5415
5427                         ld      iy, Ralph_data
542B                         call    sub_5448
542E                         jr      loc_5415
5430 ; ---------------------------------------------------------------------------
5430
5430 loc_5430:                                                   ; 53FC
5430                         push    iy
5432                         ld      iy, George_data
5436                         call    sub_5448
5439                         ld      a, (byte_E025)
543C                         or      a
543D                         jr      nz, loc_5415
543F                         ld      iy, Lizzie_data
5443                         call    sub_5448
5446                         jr      loc_5415
5446 ; End of function sub_53E6
5446
5448
5448 ; =============== S U B R O U T I N E =======================================
5448
5448
5448 sub_5448:                                                   ; 5405↑p 5412↑p 
5448
5448 ; FUNCTION CHUNK AT 54F8 SIZE 00000117 BYTES
5448
5448                         xor     a
5449                         ld      (byte_E025), a
544C                         ld      a, (unk_E023)
544F                         cp      1
5451                         jp      z, loc_5509
5454                         cp      2
5456                         jp      z, loc_556C
5459                         cp      3
545B                         jp      z, loc_55C6
545E                         ld      a, (iy+1)
5461                         cp      2
5463                         ret     nz
5464                         ld      a, c
5465                         cp      (iy+17h)
5468                         ret     nz
5469                         or      a
546A                         ret     z
546B                         ld      a, d
546C                         cp      (iy+16h)
546F                         ret     nz
5470                         cp      3
5472                         jp      z, loc_54F8
5475                         jr      loc_5477
5477 ; ---------------------------------------------------------------------------
5477
5477 loc_5477:                                                   ; 5475
5477                         ld      a, e
5478                         sub     (iy+0Ah)
547B                         jr      nc, loc_547F
547D                         neg
547F
547F loc_547F:                                                   ; 547B
547F                         cp      10h
5481                         ret     nc
5482                         ld      a, (ix+8)
5485                         sub     (iy+8)
5488                         jr      nc, loc_548C
548A                         neg
548C
548C loc_548C:                                                   ; 5488
548C                         cp      18h
548E                         ret     nc
548F                         ld      a, 1
5491                         ld      (byte_E025), a
5494                         ret
5494 ; End of function sub_5448
5494
5495
5495 ; =============== S U B R O U T I N E =======================================
5495
5495
5495 sub_5495:                                                   ; sub_53E6↑p
5495                         push    iy
5497                         push    bc
5498                         push    de
5499                         call    sub_54B2
549C                         pop     de
549D                         pop     bc
549E                         pop     iy
54A0                         ret
54A0 ; End of function sub_5495
54A0
54A1
54A1 ; =============== S U B R O U T I N E =======================================
54A1
54A1
54A1 sub_54A1:                                                   ; 54C7↓p D54D↓p
54A1                         ld      iy, Building1_data
54A5                         or      a
54A6                         ret     z
54A7                         push    de
54A8                         ld      b, a
54A9
54A9 loc_54A9:                                                   ; 54AE↓j
54A9                         ld      de, 18h
54AC                         add     iy, de
54AE                         djnz    loc_54A9
54B0                         pop     de
54B1                         ret
54B1 ; End of function sub_54A1
54B1
54B2
54B2 ; =============== S U B R O U T I N E =======================================
54B2
54B2
54B2 sub_54B2:                                                   ; 5499↑p
54B2                         xor     a
54B3                         ld      (byte_E025), a
54B6                         ld      a, d
54B7                         cp      2
54B9                         ret     nz
54BA                         ld      iy, unk_E337
54BE                         ld      a, (iy+0)
54C1                         cp      1
54C3                         ret     nz
54C4                         ld      a, (iy+8)
54C7                         call    sub_54A1
54CA                         ld      a, (iy+0)
54CD                         ld      iy, unk_E337
54D1                         cp      c
54D2                         ret     nz
54D3                         or      a
54D4                         ret     z
54D5                         ld      a, e
54D6                         sub     (iy+5)
54D9                         jr      nc, loc_54E2
54DB                         neg
54DD                         cp      22h ; '"'
54DF                         ret     nc
54E0                         jr      loc_54E5
54E2 ; ---------------------------------------------------------------------------
54E2
54E2 loc_54E2:                                                   ; 54D9
54E2                         cp      6
54E4                         ret     nc
54E5
54E5 loc_54E5:                                                   ; 54E0
54E5                         ld      a, (ix+8)
54E8                         sub     (iy+4)
54EB                         jr      nc, loc_54EF
54ED                         neg
54EF
54EF loc_54EF:                                                   ; 54EB
54EF                         cp      10h
54F1                         ret     nc
54F2                         ld      a, 1
54F4                         ld      (byte_E025), a
54F7                         ret
54F7 ; End of function sub_54B2
54F7
54F8 ; ---------------------------------------------------------------------------
54F8 ; START OF FUNCTION CHUNK FOR sub_5448
54F8
54F8 loc_54F8:                                                   ; 5472
54F8                         ld      a, e
54F9                         sub     (iy+8)
54FC                         jr      nc, loc_5500
54FE                         neg
5500
5500 loc_5500:                                                   ; 54FC
5500                         cp      0Ch
5502                         ret     nc
5503                         ld      a, 1
5505                         ld      (byte_E025), a
5508                         ret
5509 ; ---------------------------------------------------------------------------
5509
5509 loc_5509:                                                   ; 5451
5509                         ld      a, (ix+2Ch)
550C                         cp      2
550E                         ret     nc
550F                         ld      a, (iy+1)
5512                         cp      2
5514                         ret     nz
5515                         ld      a, (iy+16h)
5518                         cp      1
551A                         ret     nz
551B                         ld      a, (ix+8)
551E                         sub     (iy+8)
5521                         jr      nc, loc_5525
5523                         neg
5525
5525 loc_5525:                                                   ; 5521
5525                         cp      0Eh
5527                         ret     nc
5528                         ld      a, 1
552A                         ld      (byte_E025), a
552D                         ld      a, (ix+0Ah)
5530                         cp      24h ; '$'
5532                         ret     c
5533                         push    ix
5535                         push    iy
5537                         pop     ix
5539                         call    sub_3737
553C                         call    sub_52D4
553F                         ld      (ix+2Bh), 0
5543                         pop     ix
5545                         ld      (ix+1Fh), 10h
5549                         ld      hl, score_250
554C                         call    add_to_score
554F                         ld      a, (ix+2Ch)
5552                         inc     a
5553                         ld      (ix+2Ch), a
5556                         ld      (ix+0Eh), 1
555A                         ld      a, (ix+8)
555D                         cp      (iy+8)
5560                         jr      c, loc_5567
5562                         ld      (ix+0Ch), 1
5566                         ret
5567 ; ---------------------------------------------------------------------------
5567
5567 loc_5567:                                                   ; 5560
5567                         ld      (ix+0Ch), 0FFh
556B                         ret
556C ; ---------------------------------------------------------------------------
556C
556C loc_556C:                                                   ; 5456
556C                         ld      a, (iy+1)
556F                         cp      2
5571                         ret     nz
5572                         ld      a, (iy+16h)
5575                         cp      3
5577                         ret     nz
5578                         ld      a, (ix+17h)
557B                         cp      (iy+17h)
557E                         ret     nz
557F                         or      a
5580                         ret     z
5581                         ld      a, (ix+8)
5584                         sub     (iy+8)
5587                         jr      nc, loc_558B
5589                         neg
558B
558B loc_558B:                                                   ; 5587
558B                         cp      0Eh
558D                         ret     nc
558E                         ld      a, (ix+0Ah)
5591                         sub     (iy+0Ah)
5594                         jr      nc, loc_5598
5596                         neg
5598
5598 loc_5598:                                                   ; 5594
5598                         cp      20h ; ' '
559A                         ret     nc
559B                         call    sub_75C9
559E
559E loc_559E:                                                   ; 55E4↓j
559E                         ld      a, 1
55A0                         ld      (byte_E025), a
55A3                         ld      h, (ix+0Ch)
55A6                         ld      l, (ix+0Dh)
55A9                         bit     7, h
55AB                         call    nz, negate_hl
55AE                         ld      a, (ix+8)
55B1                         cp      (iy+8)
55B4                         jr      nc, loc_55B9
55B6                         call    negate_hl
55B9
55B9 loc_55B9:                                                   ; 55B4
55B9                         ld      (ix+0Ch), h
55BC                         ld      (ix+0Dh), l
55BF                         ld      hl, score_100
55C2                         call    add_to_score
55C5                         ret
55C6 ; ---------------------------------------------------------------------------
55C6
55C6 loc_55C6:                                                   ; 545B
55C6                         ld      a, (iy+1)
55C9                         cp      2
55CB                         ret     nz
55CC                         ld      a, (iy+16h)
55CF                         cp      1
55D1                         ret     nz
55D2                         ld      a, (ix+8)
55D5                         sub     (iy+8)
55D8                         jr      nc, loc_55DC
55DA                         neg
55DC
55DC loc_55DC:                                                   ; 55D8
55DC                         cp      0Eh
55DE                         ret     nc
55DF                         ld      a, (ix+0Ah)
55E2                         cp      24h ; '$'
55E4                         jr      c, loc_559E
55E6                         ld      a, 1
55E8                         ld      (byte_E025), a
55EB                         push    ix
55ED                         push    iy
55EF                         pop     ix
55F1                         call    sub_3737
55F4                         call    sub_52D4
55F7                         pop     ix
55F9                         ld      a, (ix+15h)
55FC                         push    af
55FD                         ld      (ix+15h), 0
5601                         call    sub_3423
5604                         pop     af
5605                         ld      (ix+15h), a
5608                         ld      hl, score_250
560B                         call    add_to_score
560E                         ret
560E ; END OF FUNCTION CHUNK FOR sub_5448
560F
560F ; =============== S U B R O U T I N E =======================================
560F
560F
560F sub_560F:                                                   ; 4E4E↑p
560F
560F ; FUNCTION CHUNK AT 5976 SIZE 0000012D BYTES
560F
560F                         cp      0FEh
5611                         ret     z
5612                         call    sub_5942
5615                         ld      a, (ix+0)
5618                         cp      1
561A                         jp      z, loc_5976
561D                         cp      2
561F                         jp      z, loc_5996
5622                         cp      3
5624                         jp      z, loc_59B3
5627                         cp      4
5629                         jp      z, loc_5A06
562C                         cp      5
562E                         jp      z, loc_5A21
5631                         cp      6
5633                         jp      z, loc_5A4A
5636                         ret
5636 ; End of function sub_560F
5636
5637 ; ---------------------------------------------------------------------------
5637 ; START OF FUNCTION CHUNK FOR sub_4E3D
5637
5637 loc_5637:                                                   ; 4E4B
5637                         call    sub_5806
563A                         call    sub_565D
563D                         ld      a, (ix+0)
5640                         cp      1
5642                         jr      z, loc_5659
5644                         cp      1
5646                         jr      z, loc_5659
5648                         cp      2
564A                         jr      z, loc_5659
564C                         cp      3
564E                         jr      z, loc_5659
5650                         cp      4
5652                         jr      z, loc_5659
5654                         cp      5
5656                         jr      z, loc_5659
5658                         ret
5659 ; ---------------------------------------------------------------------------
5659
5659 loc_5659:                                                   ; 5642 5646 
5659                         call    sub_5942
565C                         ret
565C ; END OF FUNCTION CHUNK FOR sub_4E3D
565D
565D ; =============== S U B R O U T I N E =======================================
565D
565D
565D sub_565D:                                                   ; 563A↑p
565D
565D ; FUNCTION CHUNK AT 50ED SIZE 0000001D BYTES
565D ; FUNCTION CHUNK AT 575A SIZE 00000007 BYTES
565D ; FUNCTION CHUNK AT 5AD9 SIZE 00000027 BYTES
565D
565D                         ld      a, (ix+0Ch)
5660                         and     1
5662                         ld      (ix+0Ch), a
5665                         ld      iy, sprite34_y
5669                         ld      a, (ix+0)
566C                         cp      0FEh
566E                         jp      z, loc_5AD9
5671                         cp      1
5673                         jp      z, loc_5AF9
5676                         cp      5
5678                         jp      z, loc_5AF9
567B                         cp      6
567D                         jp      z, loc_5AF9
5680                         cp      2
5682                         jp      z, loc_5B55
5685                         cp      4
5687                         jp      z, loc_5B55
568A                         cp      3
568C                         jp      z, loc_56A3
568F                         ld      a, (ix+0)
5692                         cp      7
5694                         jp      z, loc_56C0
5697                         cp      8
5699                         jp      z, loc_56E1
569C                         cp      0Ah
569E                         jp      z, loc_575A
56A1                         rst     clear_all_sprite
56A2                         ret
56A3 ; ---------------------------------------------------------------------------
56A3
56A3 loc_56A3:                                                   ; 568C
56A3                         ld      a, (byte_E673)
56A6                         cp      3
56A8                         jr      c, loc_56AB
56AA                         xor     a
56AB
56AB loc_56AB:                                                   ; 56A8
56AB                         ld      (byte_E673), a
56AE                         ld      hl, byte_5709
56B1                         sla     a
56B3                         add     a, (ix+0Ch)
56B6                         rst     HL_plus_A
56B7                         ld      a, (hl)
56B8                         push    af
56B9                         call    sub_50DD
56BC                         pop     af
56BD                         jp      loc_50ED
56C0 ; ---------------------------------------------------------------------------
56C0
56C0 loc_56C0:                                                   ; 5694
56C0                         ld      iy, sprite34_y
56C4                         rst     clear_all_sprite
56C5                         ld      iy, sprite117_y
56C9                         ld      a, (byte_E673)
56CC                         cp      3
56CE                         jr      c, loc_56D1
56D0                         xor     a
56D1
56D1 loc_56D1:                                                   ; 56CE
56D1                         ld      (byte_E673), a
56D4                         ld      hl, byte_570F
56D7                         rst     HL_plus_A
56D8                         ld      a, (hl)
56D9                         push    af
56DA                         call    sub_50DD
56DD                         pop     af
56DE                         jp      loc_50ED
56E1 ; ---------------------------------------------------------------------------
56E1
56E1 loc_56E1:                                                   ; 5699
56E1                         ld      iy, sprite117_y
56E5                         rst     clear_all_sprite
56E6                         ld      iy, sprite34_y
56EA                         ld      a, (ix+0Eh)
56ED                         ld      d, a
56EE                         ld      a, (byte_E673)
56F1                         ld      hl, byte_5712
56F4                         sla     a
56F6                         add     a, (ix+0Ch)
56F9                         rst     HL_plus_A
56FA                         ld      a, (ix+13h)
56FD                         or      a
56FE                         jr      nz, loc_5704
5700                         ld      a, (hl)
5701                         jp      loc_50ED
5704 ; ---------------------------------------------------------------------------
5704
5704 loc_5704:                                                   ; 56FE
5704                         ld      a, 0CAh
5706                         jp      loc_50ED
5706 ; End of function sub_565D
5706
5706 ; ---------------------------------------------------------------------------
5709 byte_5709:              db  8Bh, 8Ch, 89h, 90h,0DEh,0DFh    ; 56AE↑o
570F byte_570F:              db  8Dh,0D2h,0C4h                   ; 56D4↑o
5712 byte_5712:              db  8Eh, 8Fh, 91h, 92h,0C2h,0C3h    ; 56F1↑o
5718
5718 ; =============== S U B R O U T I N E =======================================
5718
5718
5718 sub_5718:                                                   ; 573E↓p
5718                         ld      b, 7
5718 ; End of function sub_5718
5718
571A
571A ; =============== S U B R O U T I N E =======================================
571A
571A
571A sub_571A:                                                   ; 57D2↓p
571A                         ld      a, (ix+0Bh)
571D                         inc     a
571E                         ld      (ix+0Bh), a
5721                         cp      7
5723                         ret     c
5724                         ld      (ix+0Bh), 0
5728                         ld      a, (ix+0Ch)
572B                         xor     1
572D                         and     1
572F                         ld      (ix+0Ch), a
5732                         ret
5732 ; End of function sub_571A
5732
5733 ; ---------------------------------------------------------------------------
5733 ; START OF FUNCTION CHUNK FOR sub_5806
5733
5733 loc_5733:                                                   ; 5815↓j
5733                         ld      (ix+13h), 0
5737                         ld      a, (unk_E00C)
573A                         or      a
573B                         jp      nz, loc_58D3
573E                         call    sub_5718
5741                         ld      a, (ticker_countup)
5744                         and     3Fh ; '?'
5746                         ret     nz
5747                         ld      a, (ix+7)
574A                         inc     a
574B                         ld      (ix+7), a
574E                         cp      7
5750                         ret     c
5751                         ld      (ix+7), 0
5755                         ld      (ix+0), 4
5759                         ret
5759 ; END OF FUNCTION CHUNK FOR sub_5806
575A ; ---------------------------------------------------------------------------
575A ; START OF FUNCTION CHUNK FOR sub_565D
575A
575A loc_575A:                                                   ; 569E
575A                         ld      a, 0FDh
575C                         ld      d, 3
575E                         jp      loc_50ED
575E ; END OF FUNCTION CHUNK FOR sub_565D
5761 ; ---------------------------------------------------------------------------
5761 ; START OF FUNCTION CHUNK FOR sub_5806
5761
5761 loc_5761:                                                   ; 5829↓j
5761                         ld      a, (ticker_countup)
5764                         and     1
5766                         inc     a
5767                         ld      b, a
5768                         ld      a, (ix+3)
576B                         sub     b
576C                         ld      (ix+3), a
576F                         cp      14h
5771                         ret     nc
5772                         ld      (ix+0Eh), 13h
5776                         rst     random_number
5777                         and     1
5779                         ld      b, a
577A                         ld      a, (game_level)
577D                         and     1
577F                         add     a, b
5780                         and     1
5782                         jr      z, loc_5788
5784                         ld      (ix+0Eh), 3
5788
5788 loc_5788:                                                   ; 5782
5788                         ld      a, 1
578A                         ld      (ix+7), 0
578E                         ld      (ix+0), 8
5792                         ret
5793 ; ---------------------------------------------------------------------------
5793
5793 loc_5793:                                                   ; 582E↓j
5793                         ld      a, (ix+13h)
5796                         or      a
5797                         jr      nz, loc_57B2
5799                         ld      a, (ix+2)
579C                         add     a, 8
579E                         ld      b, a
579F                         call    sub_CC73
57A2                         ld      a, c
57A3                         or      a
57A4                         jr      z, loc_57CD
57A6                         ld      c, 102
57A8                         rst     dispatch_sound
57A9                         ld      (ix+13h), 1
57AD                         ld      (ix+12h), d
57B0                         jr      loc_57CD
57B2 ; ---------------------------------------------------------------------------
57B2
57B2 loc_57B2:                                                   ; 5797
57B2                         ld      a, (ix+2)
57B5                         add     a, 8
57B7                         ld      b, a
57B8                         ld      a, (ix+12h)
57BB                         call    sub_CC54
57BE                         ld      a, c
57BF                         or      a
57C0                         jr      nz, loc_57CD
57C2                         ld      c, 102
57C4                         rst     dispatch_sound
57C5                         ld      (ix+13h), 0
57C9                         ld      (ix+12h), 0
57CD
57CD loc_57CD:                                                   ; 57A4 57B0 
57CD                         call    sub_58EF
57D0                         ld      b, 4
57D2                         call    sub_571A
57D5                         ld      (ix+3), 14h
57D9                         ld      b, 1
57DB                         ld      a, (ticker_countup)
57DE                         and     3
57E0                         jr      nz, loc_57E3
57E2                         ld      b, a
57E3
57E3 loc_57E3:                                                   ; 57E0
57E3                         ld      a, (ix+0Eh)
57E6                         cp      3
57E8                         ld      a, (ix+2)
57EB                         jr      z, loc_57F6
57ED                         add     a, b
57EE                         ld      (ix+2), a
57F1                         cp      0FCh
57F3                         ret     c
57F4                         jr      loc_57FD
57F6 ; ---------------------------------------------------------------------------
57F6
57F6 loc_57F6:                                                   ; 57EB
57F6                         sub     b
57F7                         ld      (ix+2), a
57FA                         cp      4
57FC                         ret     nc
57FD
57FD loc_57FD:                                                   ; 57F4
57FD                         ld      (ix+7), 0
5801                         ld      (ix+0), 0
5805                         ret
5805 ; END OF FUNCTION CHUNK FOR sub_5806
5806
5806 ; =============== S U B R O U T I N E =======================================
5806
5806
5806 sub_5806:                                                   ; loc_5637↑p
5806
5806 ; FUNCTION CHUNK AT 5733 SIZE 00000027 BYTES
5806 ; FUNCTION CHUNK AT 5761 SIZE 000000A5 BYTES
5806 ; FUNCTION CHUNK AT 5898 SIZE 0000000D BYTES
5806 ; FUNCTION CHUNK AT 58D3 SIZE 0000001C BYTES
5806 ; FUNCTION CHUNK AT 5976 SIZE 0000012D BYTES
5806
5806                         ld      a, (ix+0)
5809                         cp      1
580B                         jp      z, loc_5976
580E                         cp      2
5810                         jp      z, loc_5996
5813                         cp      3
5815                         jp      z, loc_5733
5818                         cp      4
581A                         jp      z, loc_5A06
581D                         cp      5
581F                         jp      z, loc_5A21
5822                         cp      6
5824                         jp      z, loc_5A4A
5827                         cp      7
5829                         jp      z, loc_5761
582C                         cp      8
582E                         jp      z, loc_5793
5831                         cp      9
5833                         jp      z, loc_584D
5836                         cp      0Ah
5838                         jp      z, loc_58DC
583B                         ld      (ix+0), 0
583F                         xor     a
5840                         ld      (unk_E00C), a
5843                         ld      (unk_E4E9), a
5846                         ld      (unk_E539), a
5849                         ld      (unk_E589), a
584C                         ret
584D ; ---------------------------------------------------------------------------
584D
584D loc_584D:                                                   ; 5833
584D                         call    sub_58A5
5850                         ld      a, (unk_E00C)
5853                         or      a
5854                         jr      z, loc_5872
5856                         call    sub_5888
5859                         ld      a, (ticker_countup)
585C                         and     3Fh ; '?'
585E                         ret     nz
585F                         ld      a, (ix+7)
5862                         inc     a
5863                         ld      (ix+7), a
5866                         cp      6
5868                         ret     c
5869                         jp      z, loc_5898
586C                         call    sub_58A5
586F                         call    sub_52E8
5872
5872 loc_5872:                                                   ; 5854
5872                         xor     a
5873                         ld      (unk_E00C), a
5876                         ld      (unk_E4E9), a
5879                         ld      (unk_E539), a
587C                         ld      (unk_E589), a
587F                         ld      (ix+7), 0
5883                         ld      (ix+0), 7
5887                         ret
5887 ; End of function sub_5806
5887
5888
5888 ; =============== S U B R O U T I N E =======================================
5888
5888
5888 sub_5888:                                                   ; 5856↑p
5888                         ld      a, (ticker_countup)
588B                         and     7
588D                         ret     nz
588E                         ld      a, (ix+7)
5891                         cp      1
5893                         ret     nc
5894                         ld      c, 103
5896                         rst     dispatch_sound
5897                         ret
5897 ; End of function sub_5888
5897
5898 ; ---------------------------------------------------------------------------
5898 ; START OF FUNCTION CHUNK FOR sub_5806
5898
5898 loc_5898:                                                   ; 5869
5898                         call    sub_58A5
589B                         ld      a, (iy+4Eh)
589E                         or      a
589F                         ret     z
58A0                         ld      (iy+4Eh), 0FFh
58A4                         ret
58A4 ; END OF FUNCTION CHUNK FOR sub_5806
58A5
58A5 ; =============== S U B R O U T I N E =======================================
58A5
58A5
58A5 sub_58A5:                                                   ; loc_584D↑p
58A5                                                             ; 586C↑p 
58A5                         ld      iy, George_data
58A9                         ld      a, (iy+4Eh)
58AC                         or      a
58AD                         jr      nz, loc_58C2
58AF                         ld      iy, Lizzie_data
58B3                         ld      a, (iy+4Eh)
58B6                         or      a
58B7                         jr      nz, loc_58C2
58B9                         ld      iy, Ralph_data
58BD                         ld      a, (iy+4Eh)
58C0                         or      a
58C1                         ret     z
58C2
58C2 loc_58C2:                                                   ; 58AD 58B7
58C2                         ld      a, (iy+8)
58C5                         sub     8
58C7                         ld      (ix+2), a
58CA                         ld      a, (iy+0Ah)
58CD                         add     a, 4
58CF                         ld      (ix+3), a
58D2                         ret
58D2 ; End of function sub_58A5
58D2
58D3 ; ---------------------------------------------------------------------------
58D3 ; START OF FUNCTION CHUNK FOR sub_5806
58D3
58D3 loc_58D3:                                                   ; 573B
58D3                         ld      (ix+7), 0
58D7                         ld      (ix+0), 9
58DB                         ret
58DC ; ---------------------------------------------------------------------------
58DC
58DC loc_58DC:                                                   ; 5838
58DC                         ld      a, (ix+7)
58DF                         inc     a
58E0                         ld      (ix+7), a
58E3                         cp      5Ah ; 'Z'
58E5                         ret     c
58E6                         ld      (ix+7), 0
58EA                         ld      (ix+0), 0
58EE                         ret
58EE ; END OF FUNCTION CHUNK FOR sub_5806
58EF
58EF ; =============== S U B R O U T I N E =======================================
58EF
58EF
58EF sub_58EF:                                                   ; loc_57CD↑p
58EF                         ld      iy, Ralph_data
58F3                         call    sub_5905
58F6                         ld      iy, Lizzie_data
58FA                         call    sub_5905
58FD                         ld      iy, George_data
5901                         call    sub_5905
5904                         ret
5904 ; End of function sub_58EF
5904
5905
5905 ; =============== S U B R O U T I N E =======================================
5905
5905
5905 sub_5905:                                                   ; 58F3↑p 58FA↑p 
5905                         ld      a, (ix+0)
5908                         cp      8
590A                         ret     nz
590B                         ld      a, (iy+1)
590E                         cp      2
5910                         ret     nz
5911                         ld      a, (iy+21h)
5914                         cp      5
5916                         ret     z
5917                         cp      2
5919                         ret     c
591A                         ld      a, (iy+33h)
591D                         cp      22h ; '"'
591F                         ret     nc
5920                         ld      a, (iy+32h)
5923                         sub     (ix+2)
5926                         jr      nc, loc_592A
5928                         neg
592A
592A loc_592A:                                                   ; 5926
592A                         cp      9
592C                         ret     nc
592D                         ld      (ix+0), 0Ah
5931                         ld      c, 59
5933                         rst     dispatch_sound
5934                         ld      (iy+2Bh), 51h ; 'Q'
5938                         call    sub_53A9
593B                         ld      hl, score_500
593E                         call    score_add_saveREGs
5941                         ret
5941 ; End of function sub_5905
5941
5942
5942 ; =============== S U B R O U T I N E =======================================
5942
5942
5942 sub_5942:                                                   ; 5612↑p
5942                                                             ; loc_5659↑p
5942                         ld      a, (ix+2)
5945                         ld      b, a
5946                         ld      a, (ix+3)
5949                         ld      c, a
594A                         call    sub_4504
594D                         call    sub_1446
5950                         cp      30h ; '0'
5952                         jp      z, loc_595F
5955                         call    sub_44BC
5958                         and     7
595A                         cp      0
595C                         ret     z
595D                         jr      loc_595F
595F ; ---------------------------------------------------------------------------
595F
595F loc_595F:                                                   ; 5952 595D 
595F                         ld      (ix+0), 59h ; 'Y'
5963                         ld      (ix+7), 0
5967                         ld      a, (unk_E027)
596A                         dec     a
596B                         ld      (unk_E027), a
596E                         bit     7, a
5970                         ret     z
5971                         xor     a
5972                         ld      (unk_E027), a
5975                         ret
5975 ; End of function sub_5942
5975
5976 ; ---------------------------------------------------------------------------
5976 ; START OF FUNCTION CHUNK FOR sub_560F
5976 ;   ADDITIONAL PARENT FUNCTION sub_5806
5976
5976 loc_5976:                                                   ; 561A 580B
5976                         ld      a, (byte_E601)
5979                         or      a
597A                         ret     z
597B                         ld      a, (unk_E00C)
597E                         or      a
597F                         ret     nz
5980                         ld      a, (ix+7)
5983                         inc     a
5984                         ld      (ix+7), a
5987                         cp      (ix+9)
598A                         ret     c
598B                         ld      (ix+7), 0
598F                         ld      (ix+0), 2
5993                         jp      sub_5B81
5996 ; ---------------------------------------------------------------------------
5996
5996 loc_5996:                                                   ; 561F 5810
5996                         ld      a, (ix+7)
5999                         inc     a
599A                         ld      (ix+7), a
599D                         cp      10h
599F                         ret     c
59A0                         ld      (ix+7), 0
59A4                         ld      (ix+0Bh), 0
59A8                         ld      (ix+11h), 0
59AC                         ld      (ix+0), 3
59B0                         jp      sub_5B81
59B3 ; ---------------------------------------------------------------------------
59B3
59B3 loc_59B3:                                                   ; 5624
59B3                         ld      a, (byte_E601)
59B6                         or      a
59B7                         jp      z, loc_59F9
59BA                         ld      a, (unk_E00C)
59BD                         or      a
59BE                         jp      nz, loc_59F9
59C1                         ld      a, (ix+1)
59C4                         or      a
59C5                         jp      nz, loc_5A57
59C8                         ld      a, (ix+0Dh)
59CB                         or      a
59CC                         jr      nz, loc_59DF
59CE                         call    sub_5BC5
59D1                         ld      a, (ix+0Bh)
59D4                         inc     a
59D5                         ld      (ix+0Bh), a
59D8                         cp      8
59DA                         ret     c
59DB                         call    sub_3EE3
59DE                         ret
59DF ; ---------------------------------------------------------------------------
59DF
59DF loc_59DF:                                                   ; 59CC
59DF                         ld      a, (ix+0Bh)
59E2                         or      a
59E3                         ret     z
59E4                         inc     a
59E5                         ld      (ix+0Bh), a
59E8                         cp      10h
59EA                         ret     c
59EB                         ld      (ix+0Bh), 0
59EF                         ld      a, (ix+11h)
59F2                         inc     a
59F3                         ld      (ix+11h), a
59F6                         cp      6
59F8                         ret     c
59F9
59F9 loc_59F9:                                                   ; 59B7 59BE
59F9                         ld      (ix+7), 0
59FD                         ld      (ix+11h), 0
5A01                         ld      (ix+0), 4
5A05                         ret
5A06 ; ---------------------------------------------------------------------------
5A06
5A06 loc_5A06:                                                   ; 5629 581A
5A06                         ld      a, (ix+7)
5A09                         inc     a
5A0A                         ld      (ix+7), a
5A0D                         cp      10h
5A0F                         ret     c
5A10                         ld      (ix+7), 0
5A14                         ld      (ix+0Bh), 0
5A18                         ld      (ix+11h), 0
5A1C                         ld      (ix+0), 5
5A20                         ret
5A21 ; ---------------------------------------------------------------------------
5A21
5A21 loc_5A21:                                                   ; 562E 581F
5A21                         ld      a, (ix+7)
5A24                         inc     a
5A25                         ld      (ix+7), a
5A28                         cp      10h
5A2A                         ret     c
5A2B                         ld      (ix+7), 0
5A2F                         ld      (ix+0Bh), 0
5A33                         ld      (ix+11h), 0
5A37                         ld      (ix+0), 1
5A3B                         ld      a, (ix+12h)
5A3E                         inc     a
5A3F                         ld      (ix+12h), a
5A42                         cp      4
5A44                         ret     c
5A45                         ld      (ix+0), 6
5A49                         ret
5A4A ; ---------------------------------------------------------------------------
5A4A
5A4A loc_5A4A:                                                   ; 5633 5824
5A4A                         ld      a, (ix+7)
5A4D                         inc     a
5A4E                         cp      1Eh
5A50                         ld      (ix+7), a
5A53                         jp      nc, loc_595F
5A56                         ret
5A57 ; ---------------------------------------------------------------------------
5A57
5A57 loc_5A57:                                                   ; 59C5
5A57                         ld      a, (byte_E601)
5A5A                         or      a
5A5B                         jp      z, loc_5A96
5A5E                         ld      a, (unk_E00C)
5A61                         or      a
5A62                         jp      nz, loc_5A96
5A65                         ld      a, (ix+0Dh)
5A68                         or      a
5A69                         jr      nz, loc_5A7C
5A6B                         call    sub_5BC5
5A6E                         ld      a, (ix+0Bh)
5A71                         inc     a
5A72                         ld      (ix+0Bh), a
5A75                         cp      2Dh ; '-'
5A77                         ret     c
5A78                         call    sub_40BE
5A7B                         ret
5A7C ; ---------------------------------------------------------------------------
5A7C
5A7C loc_5A7C:                                                   ; 5A69
5A7C                         ld      a, (ix+0Bh)
5A7F                         or      a
5A80                         ret     z
5A81                         inc     a
5A82                         ld      (ix+0Bh), a
5A85                         cp      35h ; '5'
5A87                         ret     c
5A88                         ld      (ix+0Bh), 0
5A8C                         ld      a, (ix+11h)
5A8F                         inc     a
5A90                         ld      (ix+11h), a
5A93                         cp      3
5A95                         ret     c
5A96
5A96 loc_5A96:                                                   ; 5A5B 5A62
5A96                         ld      (ix+7), 0
5A9A                         ld      (ix+11h), 0
5A9E                         ld      (ix+0), 4
5AA2                         ret
5AA2 ; END OF FUNCTION CHUNK FOR sub_560F
5AA3
5AA3 ; =============== S U B R O U T I N E =======================================
5AA3
5AA3
5AA3 sub_5AA3:                                                   ; 5163↑p
5AA3                         ld      a, (iy+0)
5AA6                         cp      0FEh
5AA8                         ret     z
5AA9                         ld      (iy+0), 0FEh
5AAD                         ld      (iy+7), 0
5AB1                         ld      a, (unk_E027)
5AB4                         call    sub_5ACD
5AB7                         ld      (unk_E027), a
5ABA                         ld      a, (unk_E028)
5ABD                         call    sub_5ACD
5AC0                         ld      (unk_E028), a
5AC3                         ld      a, (iy+8)
5AC6                         call    sub_5ACD
5AC9                         ld      (iy+8), a
5ACC                         ret
5ACC ; End of function sub_5AA3
5ACC
5ACD
5ACD ; =============== S U B R O U T I N E =======================================
5ACD
5ACD
5ACD sub_5ACD:                                                   ; 5AB4↑p 5ABD↑p 
5ACD                         dec     a
5ACE                         bit     7, a
5AD0                         ret     z
5AD1                         xor     a
5AD2                         ret
5AD2 ; End of function sub_5ACD
5AD2
5AD3 ; ---------------------------------------------------------------------------
5AD3 ; START OF FUNCTION CHUNK FOR sub_5B00
5AD3
5AD3 loc_5AD3:                                                   ; 5B10↓j
5AD3                         rst     clear_all_sprite
5AD4                         ld      (ix+0), 10h
5AD8                         ret
5AD8 ; END OF FUNCTION CHUNK FOR sub_5B00
5AD9 ; ---------------------------------------------------------------------------
5AD9 ; START OF FUNCTION CHUNK FOR sub_565D
5AD9 ;   ADDITIONAL PARENT FUNCTION sub_5B00
5AD9
5AD9 loc_5AD9:                                                   ; 566E 5B0C↓j
5AD9                         ld      a, (ix+7)
5ADC                         inc     a
5ADD                         cp      3Ch ; '<'
5ADF                         ld      (ix+7), a
5AE2                         jr      c, loc_5AF5
5AE4                         rst     clear_all_sprite
5AE5                         ld      a, (ix+8)
5AE8                         or      a
5AE9                         jr      z, loc_5AF0
5AEB                         ld      (ix+0), 10h
5AEF                         ret
5AF0 ; ---------------------------------------------------------------------------
5AF0
5AF0 loc_5AF0:                                                   ; 5AE9
5AF0                         ld      (ix+0), 0
5AF4                         ret
5AF5 ; ---------------------------------------------------------------------------
5AF5
5AF5 loc_5AF5:                                                   ; 5AE2
5AF5                         ld      a, 0FAh
5AF7                         jr      loc_5AFB
5AF9 ; ---------------------------------------------------------------------------
5AF9
5AF9 loc_5AF9:                                                   ; 5673 5678 
5AF9                         ld      a, 76h ; 'v'
5AFB
5AFB loc_5AFB:                                                   ; 5AF7
5AFB                         ld      d, 3
5AFD                         jp      loc_50ED
5AFD ; END OF FUNCTION CHUNK FOR sub_565D
5B00
5B00 ; =============== S U B R O U T I N E =======================================
5B00
5B00
5B00 sub_5B00:                                                   ; 4E51↑p
5B00
5B00 ; FUNCTION CHUNK AT 50ED SIZE 0000001D BYTES
5B00 ; FUNCTION CHUNK AT 5AD3 SIZE 00000006 BYTES
5B00 ; FUNCTION CHUNK AT 5AD9 SIZE 00000027 BYTES
5B00
5B00                         ld      iy, sprite26_y
5B04                         call    sub_510A
5B07                         ld      a, (ix+0)
5B0A                         cp      0FEh
5B0C                         jr      z, loc_5AD9
5B0E                         cp      59h ; 'Y'
5B10                         jr      z, loc_5AD3
5B12                         cp      1
5B14                         jp      z, loc_5AF9
5B17                         cp      5
5B19                         jp      z, loc_5AF9
5B1C                         cp      6
5B1E                         jp      z, loc_5AF9
5B21                         cp      2
5B23                         jp      z, loc_5B55
5B26                         cp      4
5B28                         jp      z, loc_5B55
5B2B                         ld      a, (ix+1)
5B2E                         or      a
5B2F                         jp      nz, loc_5B5F
5B32                         ld      a, (ix+0Bh)
5B35                         or      a
5B36                         jr      z, loc_5B50
5B38                         ld      a, (ix+10h)
5B3B                         or      a
5B3C                         jr      z, loc_5B46
5B3E                         cp      1
5B40                         jr      z, loc_5B4B
5B42                         ld      a, 7Bh ; '{'
5B44                         jr      loc_5B57
5B46 ; ---------------------------------------------------------------------------
5B46
5B46 loc_5B46:                                                   ; 5B3C
5B46                         ld      a, 7Ah ; 'z'
5B48                         jp      loc_5B57
5B4B ; ---------------------------------------------------------------------------
5B4B
5B4B loc_5B4B:                                                   ; 5B40
5B4B                         ld      a, 79h ; 'y'
5B4D                         jp      loc_5B57
5B50 ; ---------------------------------------------------------------------------
5B50
5B50 loc_5B50:                                                   ; 5B36
5B50                         ld      a, 78h ; 'x'
5B52                         jp      loc_5B57
5B55 ; ---------------------------------------------------------------------------
5B55
5B55 loc_5B55:                                                   ; 5682 5687 
5B55                         ld      a, 77h ; 'w'
5B57
5B57 loc_5B57:                                                   ; 5B44 5B48 
5B57                         push    af
5B58                         call    sub_50DD
5B5B                         pop     af
5B5C                         jp      loc_50ED
5B5F ; ---------------------------------------------------------------------------
5B5F
5B5F loc_5B5F:                                                   ; 5B2F
5B5F                         ld      a, (ix+0Bh)
5B62                         or      a
5B63                         jr      z, loc_5B7C
5B65                         cp      1Eh
5B67                         jr      c, loc_5B77
5B69                         cp      2Ch ; ','
5B6B                         jr      c, loc_5B72
5B6D                         ld      a, 80h
5B6F                         jp      loc_5B57
5B72 ; ---------------------------------------------------------------------------
5B72
5B72 loc_5B72:                                                   ; 5B6B
5B72                         ld      a, 7Fh
5B74                         jp      loc_5B57
5B77 ; ---------------------------------------------------------------------------
5B77
5B77 loc_5B77:                                                   ; 5B67
5B77                         ld      a, 7Eh ; '~'
5B79                         jp      loc_5B57
5B7C ; ---------------------------------------------------------------------------
5B7C
5B7C loc_5B7C:                                                   ; 5B63
5B7C                         ld      a, 87h
5B7E                         jp      loc_5B57
5B7E ; End of function sub_5B00
5B7E
5B81
5B81 ; =============== S U B R O U T I N E =======================================
5B81
5B81
5B81 sub_5B81:                                                   ; 3F53↑p 40F7↑p 
5B81                         call    sub_5BAA
5B84                         jr      nz, loc_5B8F
5B86                         call    sub_5BB0
5B89                         jr      nz, loc_5B8F
5B8B                         call    sub_5BB6
5B8E                         ret     z
5B8F
5B8F loc_5B8F:                                                   ; 5B84 5B89
5B8F                         ld      a, (ix+0Ch)
5B92                         inc     a
5B93                         cp      3
5B95                         jr      c, loc_5B98
5B97                         xor     a
5B98
5B98 loc_5B98:                                                   ; 5B95
5B98                         ld      (ix+0Ch), a
5B9B                         call    sub_5BA1
5B9E                         ret     nz
5B9F                         jr      sub_5B81
5B9F ; End of function sub_5B81
5B9F
5BA1
5BA1 ; =============== S U B R O U T I N E =======================================
5BA1
5BA1
5BA1 sub_5BA1:                                                   ; 5B9B↑p 5BC8↓p
5BA1                         or      a
5BA2                         jr      z, sub_5BAA
5BA4                         cp      1
5BA6                         jr      z, sub_5BB0
5BA8                         jr      sub_5BB6
5BA8 ; End of function sub_5BA1
5BA8
5BAA
5BAA ; =============== S U B R O U T I N E =======================================
5BAA
5BAA
5BAA sub_5BAA:                                                   ; sub_5B81↑p
5BAA                                                             ; 5BA2
5BAA                         ld      iy, George_data
5BAE                         jr      loc_5BBA
5BAE ; End of function sub_5BAA
5BAE
5BB0
5BB0 ; =============== S U B R O U T I N E =======================================
5BB0
5BB0
5BB0 sub_5BB0:                                                   ; 5B86↑p 5BA6
5BB0                         ld      iy, Lizzie_data
5BB4                         jr      loc_5BBA
5BB4 ; End of function sub_5BB0
5BB4
5BB6
5BB6 ; =============== S U B R O U T I N E =======================================
5BB6
5BB6
5BB6 sub_5BB6:                                                   ; 5B8B↑p 5BA8
5BB6                         ld      iy, Ralph_data
5BBA
5BBA loc_5BBA:                                                   ; 5BAE 5BB4
5BBA                         ld      a, (iy+1)
5BBD                         cp      2
5BBF                         jr      nz, loc_5BC3
5BC1                         or      a
5BC2                         ret
5BC3 ; ---------------------------------------------------------------------------
5BC3
5BC3 loc_5BC3:                                                   ; 5BBF
5BC3                         xor     a
5BC4                         ret
5BC4 ; End of function sub_5BB6
5BC4
5BC5
5BC5 ; =============== S U B R O U T I N E =======================================
5BC5
5BC5
5BC5 sub_5BC5:                                                   ; 59CE↑p 5A6B↑p
5BC5                         ld      a, (ix+0Ch)
5BC8                         call    sub_5BA1
5BCB                         call    z, sub_5B81
5BCE                         call    sub_5BEF
5BD1                         ld      b, 1
5BD3                         ld      a, (ix+3)
5BD6                         sub     (ix+0Fh)
5BD9                         jr      nc, loc_5BDF
5BDB                         neg
5BDD                         ld      b, 0
5BDF
5BDF loc_5BDF:                                                   ; 5BD9
5BDF                         cp      14h
5BE1                         jr      c, loc_5BEA
5BE3                         ld      a, b
5BE4                         sla     a
5BE6                         ld      (ix+10h), a
5BE9                         ret
5BEA ; ---------------------------------------------------------------------------
5BEA
5BEA loc_5BEA:                                                   ; 5BE1
5BEA                         ld      (ix+10h), 1
5BEE                         ret
5BEE ; End of function sub_5BC5
5BEE
5BEF
5BEF ; =============== S U B R O U T I N E =======================================
5BEF
5BEF
5BEF sub_5BEF:                                                   ; 5BCE↑p
5BEF                         ld      a, (iy+8)
5BF2                         sub     8
5BF4                         ld      (ix+0Eh), a
5BF7                         ld      a, (iy+0Ah)
5BFA                         add     a, 0Ch
5BFC                         ld      (ix+0Fh), a
5BFF                         ret
5BFF ; End of function sub_5BEF
5BFF
5C00
5C00 ; =============== S U B R O U T I N E =======================================
5C00
5C00
5C00 sub_5C00:                                                   ; 09C1↑p
5C00                         ld      ix, unk_E10C
5C04                         ld      b, 0Fh
5C06
5C06 loc_5C06:                                                   ; 5C1A↓j
5C06                         push    bc
5C07                         push    ix
5C09                         ld      a, 18h
5C0B                         sub     b
5C0C                         ld      (ix+6), a
5C0F                         call    sub_5C1D
5C12                         pop     ix
5C14                         ld      de, 0Dh
5C17                         add     ix, de
5C19                         pop     bc
5C1A                         djnz    loc_5C06
5C1C                         ret
5C1C ; End of function sub_5C00
5C1C
5C1D
5C1D ; =============== S U B R O U T I N E =======================================
5C1D
5C1D
5C1D sub_5C1D:                                                   ; 5C0F↑p
5C1D                         ld      a, (ix+0)
5C20                         cp      0
5C22                         ret     z
5C23                         call    sub_5C2A
5C26                         call    sub_5EAD
5C29                         ret
5C29 ; End of function sub_5C1D
5C29
5C2A
5C2A ; =============== S U B R O U T I N E =======================================
5C2A
5C2A
5C2A sub_5C2A:                                                   ; 5C23↑p
5C2A
5C2A ; FUNCTION CHUNK AT 62D5 SIZE 00000006 BYTES
5C2A ; FUNCTION CHUNK AT 6363 SIZE 00000006 BYTES
5C2A ; FUNCTION CHUNK AT 640E SIZE 00000006 BYTES
5C2A
5C2A                         call    sub_5D0B
5C2D                         ld      a, (ix+0)
5C30                         cp      3
5C32                         jp      nz, loc_5C8F
5C35                         ld      a, (ix+0Ah)
5C38                         cp      0FFh
5C3A                         jp      z, loc_5C8F
5C3D                         ld      a, (ix+1)
5C40                         cp      6
5C42                         jp      z, loc_6363
5C45                         cp      25h ; '%'
5C47                         jp      z, loc_62D5
5C4A                         cp      40h ; '@'
5C4C                         jp      z, loc_640E
5C4F                         cp      10h
5C51                         jr      z, loc_5C7B
5C53                         cp      0Dh
5C55                         jr      z, loc_5C6A
5C57                         cp      12h
5C59                         jr      nz, loc_5C8F
5C5B                         ld      a, (ix+0Ah)
5C5E                         dec     a
5C5F                         ld      (ix+0Ah), a
5C62                         jr      nz, loc_5C8F
5C64                         ld      (ix+1), 9
5C68                         jr      loc_5C8F
5C6A ; ---------------------------------------------------------------------------
5C6A
5C6A loc_5C6A:                                                   ; 5C55
5C6A                         ld      a, (ticker_countup)
5C6D                         and     1Fh
5C6F                         jr      nz, loc_5C8F
5C71                         ld      a, (ix+0Ah)
5C74                         inc     a
5C75                         and     1
5C77                         ld      (ix+0Ah), a
5C7A                         ret
5C7B ; ---------------------------------------------------------------------------
5C7B
5C7B loc_5C7B:                                                   ; 5C51
5C7B                         ld      a, (ticker_countup)
5C7E                         and     7
5C80                         jr      nz, loc_5C8F
5C82                         ld      a, (ix+0Ah)
5C85                         dec     a
5C86                         ld      (ix+0Ah), a
5C89                         jr      nz, loc_5C8F
5C8B                         ld      (ix+1), 11h
5C8F
5C8F loc_5C8F:                                                   ; 5C32 5C3A 
5C8F                         ld      a, (ix+0)
5C92                         cp      0
5C94                         ret     z
5C95                         cp      4
5C97                         jr      z, loc_5CA9
5C99                         cp      1
5C9B                         jp      z, loc_5CC9
5C9E                         cp      3
5CA0                         jp      z, loc_5CE9
5CA3                         cp      6
5CA5                         jp      z, loc_5CB8
5CA8                         ret
5CA9 ; ---------------------------------------------------------------------------
5CA9
5CA9 loc_5CA9:                                                   ; 5C97
5CA9                         ld      a, (ix+7)
5CAC                         inc     a
5CAD                         ld      (ix+7), a
5CB0                         cp      5Ah ; 'Z'
5CB2                         jp      nz, loc_5CE9
5CB5                         jp      loc_5CB8
5CB8 ; ---------------------------------------------------------------------------
5CB8
5CB8 loc_5CB8:                                                   ; 5CA5 5CB5 
5CB8                         ld      (ix+0), 0
5CBC                         ld      (ix+2), 0
5CC0                         ld      (ix+3), 0
5CC4                         ld      (ix+7), 0
5CC8                         ret
5CC9 ; ---------------------------------------------------------------------------
5CC9
5CC9 loc_5CC9:                                                   ; 5C9B
5CC9                         ld      a, (ix+2)
5CCC                         ld      b, a
5CCD                         ld      a, (ix+3)
5CD0                         ld      c, a
5CD1                         call    sub_4504
5CD4                         call    sub_1446
5CD7                         cp      30h ; '0'
5CD9                         jp      z, loc_5CE4
5CDC                         call    sub_44BC
5CDF                         and     7
5CE1                         cp      0
5CE3                         ret     z
5CE4
5CE4 loc_5CE4:                                                   ; 5CD9
5CE4                         ld      (ix+0), 2
5CE8                         ret
5CE9 ; ---------------------------------------------------------------------------
5CE9
5CE9 loc_5CE9:                                                   ; 5CA0 5CB2
5CE9                         ld      a, (ix+1)
5CEC                         cp      40h ; '@'
5CEE                         jr      nz, loc_5CF5
5CF0                         ld      a, (ix+9)
5CF3                         or      a
5CF4                         ret     nz
5CF5
5CF5 loc_5CF5:                                                   ; 5CEE
5CF5                         ld      a, (ix+2)
5CF8                         ld      b, a
5CF9                         ld      a, (ix+3)
5CFC                         ld      c, a
5CFD                         call    sub_4504
5D00                         call    sub_1446
5D03                         cp      30h ; '0'
5D05                         ret     z
5D06                         ld      (ix+0), 6
5D0A                         ret
5D0A ; End of function sub_5C2A
5D0A
5D0B
5D0B ; =============== S U B R O U T I N E =======================================
5D0B
5D0B
5D0B sub_5D0B:                                                   ; sub_5C2A↑p
5D0B                         ld      a, (ix+5)
5D0E                         call    sub_5D35
5D11                         ld      a, (iy+0Dh)
5D14                         cp      0
5D16                         ret     z
5D17                         cp      1
5D19                         jp      z, loc_5CB8
5D1C                         ld      a, (iy+8)
5D1F                         sub     0Ch
5D21                         cp      (ix+3)
5D24                         ret     nc
5D25                         ld      a, (ix+1)
5D28                         cp      40h ; '@'
5D2A                         jp      nz, loc_5CB8
5D2D                         ld      a, (ix+9)
5D30                         or      a
5D31                         jp      z, loc_5CB8
5D34                         ret
5D34 ; End of function sub_5D0B
5D34
5D35
5D35 ; =============== S U B R O U T I N E =======================================
5D35
5D35
5D35 sub_5D35:                                                   ; 5D0E↑p
5D35                         ld      iy, Building1_data
5D39                         or      a
5D3A                         ret     z
5D3B                         dec     a
5D3C                         ret     z
5D3D                         ld      de, 18h
5D40                         ld      b, a
5D41
5D41 loc_5D41:                                                   ; 5D43↓j
5D41                         add     iy, de
5D43                         djnz    loc_5D41
5D45                         ret
5D45 ; End of function sub_5D35
5D45
5D46
5D46 ; =============== S U B R O U T I N E =======================================
5D46
5D46
5D46 sub_5D46:                                                   ; setup_all_player_data↑p
5D46                         ld      a, (unk_E671)
5D49                         and     1
5D4B                         dec     a
5D4C                         ld      (unk_E603), a
5D4F                         ld      ix, unk_E10C
5D53                         ld      b, 0Fh
5D55
5D55 loc_5D55:                                                   ; 5D73↓j
5D55                         push    bc
5D56                         cp      6
5D58                         jr      c, loc_5D5B
5D5A                         xor     a
5D5B
5D5B loc_5D5B:                                                   ; 5D58
5D5B                         ld      (ix+5), a
5D5E                         ld      a, 18h
5D60                         sub     b
5D61                         ld      (ix+6), a
5D64                         call    sub_4EDF
5D67                         call    sub_5D76
5D6A                         ld      a, (ix+5)
5D6D                         ld      de, 0Dh
5D70                         add     ix, de
5D72                         pop     bc
5D73                         djnz    loc_5D55
5D75                         ret
5D75 ; End of function sub_5D46
5D75
5D76
5D76 ; =============== S U B R O U T I N E =======================================
5D76
5D76
5D76 sub_5D76:                                                   ; 5D67↑p
5D76                         ld      (ix+0), 1
5D7A                         ld      a, (iy+10h)
5D7D                         ld      (ix+5), a
5D80                         ld      a, (ix+2)
5D83                         sub     (iy+6)
5D86                         jr      c, loc_5D8C
5D88                         cp      0Ch
5D8A                         jr      nc, loc_5D8F
5D8C
5D8C loc_5D8C:                                                   ; 5D86
5D8C                         xor     a
5D8D                         jr      loc_5D91
5D8F ; ---------------------------------------------------------------------------
5D8F
5D8F loc_5D8F:                                                   ; 5D8A
5D8F                         ld      a, 10h
5D91
5D91 loc_5D91:                                                   ; 5D8D
5D91                         ld      (ix+0Bh), a
5D94                         ld      hl, byte_5DDE
5D97                         ld      a, (unk_E603)
5D9A                         inc     a
5D9B                         ld      (unk_E603), a
5D9E                         rst     HL_plus_A
5D9F                         ld      a, (hl)
5DA0                         call    sub_5DEE
5DA3                         ld      (ix+1), a
5DA6                         cp      6
5DA8                         jr      z, loc_5DC3
5DAA                         cp      25h ; '%'
5DAC                         jr      z, loc_5DCC
5DAE                         cp      12h
5DB0                         jr      z, loc_5DBE
5DB2                         cp      40h ; '@'
5DB4                         jr      z, loc_5DD5
5DB6                         cp      10h
5DB8                         ret     nz
5DB9                         ld      (ix+0Ah), 3Ch ; '<'
5DBD                         ret
5DBE ; ---------------------------------------------------------------------------
5DBE
5DBE loc_5DBE:                                                   ; 5DB0
5DBE                         ld      (ix+0Ah), 0F0h
5DC2                         ret
5DC3 ; ---------------------------------------------------------------------------
5DC3
5DC3 loc_5DC3:                                                   ; 5DA8
5DC3                         ld      (ix+0Ah), 14h
5DC7                         ld      (ix+9), 0
5DCB                         ret
5DCC ; ---------------------------------------------------------------------------
5DCC
5DCC loc_5DCC:                                                   ; 5DAC
5DCC                         ld      (ix+0Ah), 1Eh
5DD0                         ld      (ix+9), 0
5DD4                         ret
5DD5 ; ---------------------------------------------------------------------------
5DD5
5DD5 loc_5DD5:                                                   ; 5DB4
5DD5                         ld      (ix+0Ah), 1Eh
5DD9                         ld      (ix+9), 0
5DDD                         ret
5DDD ; End of function sub_5D76
5DDD
5DDD ; ---------------------------------------------------------------------------
5DDE byte_5DDE:              db    0,   0,   0,   0,   0,   0,   1,   1,   1,   1,   2
5DDE                                                             ; 5D94↑o
5DE9                         db    2,   2,   3,   3,   1
5DEE
5DEE ; =============== S U B R O U T I N E =======================================
5DEE
5DEE
5DEE sub_5DEE:                                                   ; 5DA0↑p
5DEE                         or      a
5DEF                         jr      z, loc_5E28
5DF1                         cp      1
5DF3                         jr      z, loc_5E14
5DF5                         cp      2
5DF7                         jr      z, loc_5E1E
5DF9                         ld      a, (unk_E603)
5DFC                         and     1
5DFE                         ld      a, 24h ; '$'
5E00                         ret     z
5E01                         ld      a, (game_level)
5E04                         and     78h ; 'x'
5E06                         ld      a, 5
5E08                         ret     z
5E09                         ld      a, (game_level)
5E0C                         and     3
5E0E                         ld      a, 5
5E10                         ret     nz
5E11                         ld      a, 27h ; '''
5E13                         ret
5E14 ; ---------------------------------------------------------------------------
5E14
5E14 loc_5E14:                                                   ; 5DF3
5E14                         ld      hl, off_5E6D
5E17                         ld      a, (unk_E017)
5E1A                         ld      b, 3
5E1C                         jr      loc_5E30
5E1E ; ---------------------------------------------------------------------------
5E1E
5E1E loc_5E1E:                                                   ; 5DF7
5E1E                         ld      hl, off_5E9D
5E21                         ld      a, (unk_E018)
5E24                         ld      b, 1
5E26                         jr      loc_5E30
5E28 ; ---------------------------------------------------------------------------
5E28
5E28 loc_5E28:                                                   ; 5DEF
5E28                         ld      hl, off_5E3D
5E2B                         ld      a, (unk_E019)
5E2E                         ld      b, 3
5E30
5E30 loc_5E30:                                                   ; 5E1C 5E26
5E30                         sla     a
5E32                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
5E35                         ld      a, (unk_E603)
5E38                         and     3
5E3A                         rst     HL_plus_A
5E3B                         ld      a, (hl)
5E3C                         ret
5E3C ; End of function sub_5DEE
5E3C
5E3C ; ---------------------------------------------------------------------------
5E3D off_5E3D:               dw byte_5E4D                        ; loc_5E28↑o
5E3F                         dw byte_5E51
5E41                         dw byte_5E55
5E43                         dw byte_5E59
5E45                         dw byte_5E5D
5E47                         dw byte_5E61
5E49                         dw byte_5E65
5E4B                         dw byte_5E69
5E4D byte_5E4D:              db  20h, 21h, 13h, 22h              ; off_5E3D↑o
5E51 byte_5E51:              db  20h, 12h, 22h, 23h              ; 5E3F↑o
5E55 byte_5E55:              db  10h, 22h, 0Dh, 21h              ; 5E41↑o
5E59 byte_5E59:              db  0Dh, 23h,   6, 21h              ; 5E43↑o
5E5D byte_5E5D:              db  20h, 12h, 0Dh, 10h              ; 5E45↑o
5E61 byte_5E61:              db  20h, 25h, 10h, 23h              ; 5E47↑o
5E65 byte_5E65:              db  12h, 22h, 10h, 0Dh              ; 5E49↑o
5E69 byte_5E69:              db  40h, 12h,   6, 0Dh              ; 5E4B↑o
5E6D off_5E6D:               dw byte_5E7D                        ; loc_5E14↑o
5E6F                         dw byte_5E81
5E71                         dw byte_5E85
5E73                         dw byte_5E89
5E75                         dw byte_5E8D
5E77                         dw byte_5E91
5E79                         dw byte_5E95
5E7B                         dw byte_5E99
5E7D byte_5E7D:              db    8,   3,   4, 0Ah              ; off_5E6D↑o
5E81 byte_5E81:              db    3, 0Ah,   8,   2              ; 5E6F↑o
5E85 byte_5E85:              db  0Bh,   3, 0Ah,   8              ; 5E71↑o
5E89 byte_5E89:              db  0Ah,   8,   4,   2              ; 5E73↑o
5E8D byte_5E8D:              db    8,   2,   4,   3              ; 5E75↑o
5E91 byte_5E91:              db    2,   3,   8,   1              ; 5E77↑o
5E95 byte_5E95:              db  0Ah, 0Bh,   1,   3              ; 5E79↑o
5E99 byte_5E99:              db    1, 0Bh,   2,   4              ; 5E7B↑o
5E9D off_5E9D:               dw byte_5EA5                        ; loc_5E1E↑o
5E9F                         dw byte_5EA7
5EA1                         dw byte_5EA9
5EA3                         dw byte_5EAB
5EA5 byte_5EA5:              db  25h,   6                        ; off_5E9D↑o
5EA7 byte_5EA7:              db  25h, 40h                        ; 5E9F↑o
5EA9 byte_5EA9:              db  40h,   6                        ; 5EA1↑o
5EAB byte_5EAB:              db  40h, 40h                        ; 5EA3↑o
5EAD
5EAD ; =============== S U B R O U T I N E =======================================
5EAD
5EAD
5EAD sub_5EAD:                                                   ; 5C26↑p
5EAD
5EAD ; FUNCTION CHUNK AT 50ED SIZE 0000001D BYTES
5EAD
5EAD                         ld      iy, sprite26_y
5EB1                         call    sub_510A
5EB4                         ld      a, (ix+0)
5EB7                         cp      0
5EB9                         jp      z, loc_6029
5EBC                         cp      6
5EBE                         jp      z, loc_6029
5EC1                         cp      2
5EC3                         jp      z, loc_6029
5EC6                         cp      1
5EC8                         jp      z, loc_6015
5ECB                         ld      a, (ix+1)
5ECE                         cp      13h
5ED0                         jp      z, loc_5FF1
5ED3                         cp      25h ; '%'
5ED5                         jp      z, loc_5FAD
5ED8                         cp      40h ; '@'
5EDA                         jp      z, loc_5FC5
5EDD                         cp      6
5EDF                         jp      z, loc_5F9F
5EE2                         cp      0Ch
5EE4                         jp      z, loc_6002
5EE7                         cp      0Dh
5EE9                         jp      z, loc_5F84
5EEC                         cp      11h
5EEE                         jp      z, loc_5F67
5EF1                         cp      10h
5EF3                         jp      z, loc_601A
5EF6                         cp      12h
5EF8                         jp      z, loc_5F6B
5EFB                         cp      9
5EFD                         jp      z, loc_5F6F
5F00                         cp      21h ; '!'
5F02                         jp      z, loc_5F47
5F05                         cp      24h ; '$'
5F07                         jp      z, loc_5F4B
5F0A                         cp      27h ; '''
5F0C                         jp      z, loc_5F4F
5F0F                         cp      20h ; ' '
5F11                         jp      z, loc_5F73
5F14                         cp      23h ; '#'
5F16                         jp      z, loc_5F77
5F19                         cp      22h ; '"'
5F1B                         jp      z, loc_5F90
5F1E                         cp      1
5F20                         jp      z, loc_5F94
5F23                         cp      3
5F25                         jp      z, loc_5FFE
5F28                         cp      4
5F2A                         jp      z, loc_6011
5F2D                         cp      2
5F2F                         jp      z, loc_5F9B
5F32                         cp      0Ah
5F34                         jp      z, loc_5F5F
5F37                         cp      8
5F39                         jp      z, loc_5F53
5F3C                         cp      5
5F3E                         jp      z, loc_5F5A
5F41                         cp      0Bh
5F43                         jp      z, loc_5F63
5F46                         ret
5F47 ; ---------------------------------------------------------------------------
5F47
5F47 loc_5F47:                                                   ; 5F02
5F47                         ld      a, 97h
5F49                         jr      loc_5F96
5F4B ; ---------------------------------------------------------------------------
5F4B
5F4B loc_5F4B:                                                   ; 5F07
5F4B                         ld      a, 0E2h
5F4D                         jr      loc_5F96
5F4F ; ---------------------------------------------------------------------------
5F4F
5F4F loc_5F4F:                                                   ; 5F0C
5F4F                         ld      a, 0D0h
5F51                         jr      loc_5F96
5F53 ; ---------------------------------------------------------------------------
5F53
5F53 loc_5F53:                                                   ; 5F39
5F53                         ld      a, 0DCh
5F55                         ld      d, 1
5F57                         jp      loc_50ED
5F5A ; ---------------------------------------------------------------------------
5F5A
5F5A loc_5F5A:                                                   ; 5F3E
5F5A                         ld      a, 0A8h
5F5C                         jp      loc_600C
5F5F ; ---------------------------------------------------------------------------
5F5F
5F5F loc_5F5F:                                                   ; 5F34
5F5F                         ld      a, 0DDh
5F61                         jr      loc_5F96
5F63 ; ---------------------------------------------------------------------------
5F63
5F63 loc_5F63:                                                   ; 5F43
5F63                         ld      a, 0DBh
5F65                         jr      loc_5F96
5F67 ; ---------------------------------------------------------------------------
5F67
5F67 loc_5F67:                                                   ; 5EEE
5F67                         ld      a, 0A5h
5F69                         jr      loc_5F96
5F6B ; ---------------------------------------------------------------------------
5F6B
5F6B loc_5F6B:                                                   ; 5EF8
5F6B                         ld      a, 9Bh
5F6D                         jr      loc_5F96
5F6F ; ---------------------------------------------------------------------------
5F6F
5F6F loc_5F6F:                                                   ; 5EFD
5F6F                         ld      a, 9Ch
5F71                         jr      loc_5F96
5F73 ; ---------------------------------------------------------------------------
5F73
5F73 loc_5F73:                                                   ; 5F11
5F73                         ld      a, 98h
5F75                         jr      loc_5F96
5F77 ; ---------------------------------------------------------------------------
5F77
5F77 loc_5F77:                                                   ; 5F16
5F77                         ld      a, (ticker_countup)
5F7A                         and     4
5F7C                         ld      a, 99h
5F7E                         jr      z, loc_5F96
5F80                         ld      a, 9Ah
5F82                         jr      loc_5F96
5F84 ; ---------------------------------------------------------------------------
5F84
5F84 loc_5F84:                                                   ; 5EE9
5F84                         ld      a, (ix+0Ah)
5F87                         or      a
5F88                         ld      a, 0EAh
5F8A                         jr      z, loc_5F96
5F8C                         ld      a, 0E9h
5F8E                         jr      loc_5F96
5F90 ; ---------------------------------------------------------------------------
5F90
5F90 loc_5F90:                                                   ; 5F1B
5F90                         ld      a, 9Dh
5F92                         jr      loc_5F96
5F94 ; ---------------------------------------------------------------------------
5F94
5F94 loc_5F94:                                                   ; 5F20
5F94                         ld      a, 94h
5F96
5F96 loc_5F96:                                                   ; 5F49 5F4D 
5F96                         ld      d, 13h
5F98                         jp      loc_50ED
5F9B ; ---------------------------------------------------------------------------
5F9B
5F9B loc_5F9B:                                                   ; 5F2F
5F9B                         ld      a, 95h
5F9D                         jr      loc_5F96
5F9F ; ---------------------------------------------------------------------------
5F9F
5F9F loc_5F9F:                                                   ; 5EDF
5F9F                         ld      a, (ix+9)
5FA2                         or      a
5FA3                         ld      a, 9Eh
5FA5                         jp      z, loc_5FF3
5FA8                         ld      a, 9Fh
5FAA                         jp      loc_5FF3
5FAD ; ---------------------------------------------------------------------------
5FAD
5FAD loc_5FAD:                                                   ; 5ED5
5FAD                         ld      a, (ix+9)
5FB0                         or      a
5FB1                         jr      z, loc_5FBC
5FB3                         cp      3
5FB5                         jr      z, loc_5FC1
5FB7                         ld      a, 8Ah
5FB9                         jp      loc_5FF3
5FBC ; ---------------------------------------------------------------------------
5FBC
5FBC loc_5FBC:                                                   ; 5FB1
5FBC                         ld      a, 77h ; 'w'
5FBE                         jp      loc_5FF3
5FC1 ; ---------------------------------------------------------------------------
5FC1
5FC1 loc_5FC1:                                                   ; 5FB5
5FC1                         xor     a
5FC2                         jp      loc_600C
5FC5 ; ---------------------------------------------------------------------------
5FC5
5FC5 loc_5FC5:                                                   ; 5EDA
5FC5                         ld      a, (ix+9)
5FC8                         or      a
5FC9                         ld      a, 84h
5FCB                         jp      z, loc_600C
5FCE                         ld      a, (ix+0Bh)
5FD1                         ld      d, 33h ; '3'
5FD3                         or      a
5FD4                         jr      z, loc_5FD8
5FD6                         ld      d, 3
5FD8
5FD8 loc_5FD8:                                                   ; 5FD4
5FD8                         ld      a, (ix+0Ah)
5FDB                         cp      8
5FDD                         ld      a, 0F7h
5FDF                         jp      c, loc_50ED
5FE2                         ld      a, (ix+0Ah)
5FE5                         cp      0Dh
5FE7                         ld      a, 0F8h
5FE9                         jp      c, loc_50ED
5FEC                         ld      a, 0F9h
5FEE                         jp      loc_50ED
5FF1 ; ---------------------------------------------------------------------------
5FF1
5FF1 loc_5FF1:                                                   ; 5ED0
5FF1                         ld      a, 0A0h
5FF3
5FF3 loc_5FF3:                                                   ; 5FA5 5FAA 
5FF3                         push    af
5FF4                         ld      a, (ix+0Bh)
5FF7                         add     a, 3
5FF9                         ld      d, a
5FFA                         pop     af
5FFB                         jp      loc_50ED
5FFE ; ---------------------------------------------------------------------------
5FFE
5FFE loc_5FFE:                                                   ; 5F25
5FFE                         ld      a, 93h
6000                         jr      loc_5F96
6002 ; ---------------------------------------------------------------------------
6002
6002 loc_6002:                                                   ; 5EE4
6002                         ld      a, (ix+0Ch)
6005                         cp      5
6007                         jr      c, loc_600A
6009                         xor     a
600A
600A loc_600A:                                                   ; 6007
600A                         add     a, 0FAh
600C
600C loc_600C:                                                   ; 5F5C 5FC2 
600C                         ld      d, 3
600E                         jp      loc_50ED
6011 ; ---------------------------------------------------------------------------
6011
6011 loc_6011:                                                   ; 5F2A
6011                         ld      a, 96h
6013                         jr      loc_5F96
6015 ; ---------------------------------------------------------------------------
6015
6015 loc_6015:                                                   ; 5EC8
6015                         ld      a, 76h ; 'v'
6017                         jp      loc_5F96
601A ; ---------------------------------------------------------------------------
601A
601A loc_601A:                                                   ; 5EF3
601A                         ld      a, (ticker_countup)
601D                         and     4
601F                         ld      a, 0A2h
6021                         jp      z, loc_5F96
6024                         ld      a, 0A3h
6026                         jp      loc_5F96
6029 ; ---------------------------------------------------------------------------
6029
6029 loc_6029:                                                   ; 5EB9 5EBE 
6029                         rst     clear_all_sprite
602A                         ret
602A ; End of function sub_5EAD
602A
602B ; ---------------------------------------------------------------------------
602B ; START OF FUNCTION CHUNK FOR sub_43CD
602B
602B loc_602B:                                                   ; 4453
602B                         push    iy
602D                         push    hl
602E                         push    de
602F                         push    bc
6030                         call    sub_6047
6033                         pop     bc
6034                         pop     de
6035                         pop     hl
6036                         pop     iy
6038                         ret
6038 ; END OF FUNCTION CHUNK FOR sub_43CD
6039
6039 ; =============== S U B R O U T I N E =======================================
6039
6039
6039 sub_6039:                                                   ; sub_465C↑p
6039                         push    iy
603B                         push    hl
603C                         push    de
603D                         push    bc
603E                         call    sub_6207
6041                         pop     bc
6042                         pop     de
6043                         pop     hl
6044                         pop     iy
6046                         ret
6046 ; End of function sub_6039
6046
6047
6047 ; =============== S U B R O U T I N E =======================================
6047
6047
6047 sub_6047:                                                   ; 6030↑p
6047                         xor     a
6048                         ld      (unk_E016), a
604B                         ld      iy, unk_E10C
604F                         ld      b, 0Fh
6051
6051 loc_6051:                                                   ; 6060↓j
6051                         push    bc
6052                         call    sub_6063
6055                         ld      de, 0Dh
6058                         add     iy, de
605A                         pop     bc
605B                         ld      a, (unk_E016)
605E                         or      a
605F                         ret     nz
6060                         djnz    loc_6051
6062                         ret
6062 ; End of function sub_6047
6062
6063
6063 ; =============== S U B R O U T I N E =======================================
6063
6063
6063 sub_6063:                                                   ; 6052↑p
6063                         cp      4
6065                         ret     z
6066                         ld      a, (ix+32h)
6069                         sub     8
606B                         sub     (iy+2)
606E                         jr      nc, loc_6072
6070                         neg
6072
6072 loc_6072:                                                   ; 606E
6072                         cp      5
6074                         ret     nc
6075                         ld      a, (iy+3)
6078                         sub     2
607A                         sub     (ix+33h)
607D                         jr      nc, loc_6081
607F                         neg
6081
6081 loc_6081:                                                   ; 607D
6081                         cp      9
6083                         ret     nc
6084                         ld      (ix+21h), 1
6088                         ld      a, (iy+0)
608B                         cp      3
608D                         ret     nz
608E                         ld      a, 1
6090                         ld      (unk_E016), a
6093                         ld      a, (iy+1)
6096                         cp      25h ; '%'
6098                         jp      z, loc_61D2
609B                         ld      (iy+0), 6
609F                         ld      a, (iy+1)
60A2                         cp      24h ; '$'
60A4                         jp      z, loc_6150
60A7                         cp      27h ; '''
60A9                         jp      z, loc_6162
60AC                         cp      12h
60AE                         jp      z, loc_617B
60B1                         cp      0Dh
60B3                         jp      z, loc_618B
60B6                         cp      40h ; '@'
60B8                         jp      z, loc_61FA
60BB                         cp      10h
60BD                         jp      z, loc_61A2
60C0                         cp      11h
60C2                         jr      z, loc_612E
60C4                         cp      5
60C6                         jr      z, loc_60FF
60C8                         call    sub_5303
60CB                         ld      (ix+2Bh), 51h ; 'Q'
60CF                         ld      a, (iy+1)
60D2                         cp      9
60D4                         jp      z, loc_61B2
60D7                         cp      21h ; '!'
60D9                         jr      z, loc_60F6
60DB                         cp      20h ; ' '
60DD                         jr      z, loc_60F6
60DF                         cp      23h ; '#'
60E1                         jr      z, loc_60F6
60E3                         cp      13h
60E5                         jr      z, loc_60F6
60E7                         cp      6
60E9                         jp      z, loc_61BF
60EC                         cp      22h ; '"'
60EE                         jr      z, loc_60F6
60F0                         ld      hl, score_175
60F3                         jp      add_to_score
60F6 ; ---------------------------------------------------------------------------
60F6
60F6 loc_60F6:                                                   ; 60D9 60DD 
60F6                         ld      (ix+2Bh), 0FFh
60FA                         ld      (ix+47h), 22h ; '"'
60FE                         ret
60FF ; ---------------------------------------------------------------------------
60FF
60FF loc_60FF:                                                   ; 60C6
60FF                         ld      a, (unk_E671)
6102                         ld      b, a
6103                         rst     random_number
6104                         add     a, b
6105                         and     7
6107                         jr      z, loc_6119
6109                         and     3
610B                         cp      2
610D                         jr      z, loc_6120
610F                         cp      1
6111                         jr      z, loc_6127
6113                         cp      2
6115                         jr      z, loc_612E
6117                         jr      loc_6135
6119 ; ---------------------------------------------------------------------------
6119
6119 loc_6119:                                                   ; 6107
6119                         ld      b, 4
611B                         ld      hl, score_1000
611E                         jr      loc_613A
6120 ; ---------------------------------------------------------------------------
6120
6120 loc_6120:                                                   ; 610D
6120                         ld      b, 0
6122                         ld      hl, score_50
6125                         jr      loc_613A
6127 ; ---------------------------------------------------------------------------
6127
6127 loc_6127:                                                   ; 6111
6127                         ld      b, 1
6129                         ld      hl, score_100
612C                         jr      loc_613A
612E ; ---------------------------------------------------------------------------
612E
612E loc_612E:                                                   ; 60C2 6115
612E                         ld      b, 2
6130                         ld      hl, score_350
6133                         jr      loc_613A
6135 ; ---------------------------------------------------------------------------
6135
6135 loc_6135:                                                   ; 6117 6160↓j 
6135                         ld      b, 3
6137                         ld      hl, score_500
613A
613A loc_613A:                                                   ; 611E 6125 
613A                         ld      (iy+0Ch), b
613D                         call    add_to_score
6140                         ld      (iy+1), 0Ch
6144                         ld      (iy+0), 4
6148                         ld      (iy+7), 0
614C                         ld      c, 113
614E                         rst     dispatch_sound
614F                         ret
6150 ; ---------------------------------------------------------------------------
6150
6150 loc_6150:                                                   ; 60A4
6150                         ld      b, (iy+2)
6153                         ld      c, (iy+3)
6156                         push    iy
6158                         call    sub_40FB
615B                         pop     iy
615D                         ld      c, 108
615F                         rst     dispatch_sound
6160                         jr      loc_6135
6162 ; ---------------------------------------------------------------------------
6162
6162 loc_6162:                                                   ; 60A9
6162                         ld      b, (iy+2)
6165                         ld      c, (iy+3)
6168                         push    iy
616A                         call    sub_4138
616D                         pop     iy
616F                         ld      c, 112
6171                         rst     dispatch_sound
6172                         ld      (iy+0), 3
6176                         ld      (iy+1), 5
617A                         ret
617B ; ---------------------------------------------------------------------------
617B
617B loc_617B:                                                   ; 60AE
617B                         ld      (ix+2Bh), 0
617F                         ld      (ix+3Eh), 2Dh ; '-'
6183                         ld      (ix+3Dh), 12h
6187                         ld      c, 62
6189                         rst     dispatch_sound
618A                         ret
618B ; ---------------------------------------------------------------------------
618B
618B loc_618B:                                                   ; 60B3
618B                         ld      a, (iy+0Ah)
618E                         or      a
618F                         jp      z, loc_6135
6192                         ld      (ix+2Bh), 0
6196                         ld      (ix+3Eh), 2Dh ; '-'
619A                         ld      (ix+3Dh), 12h
619E                         ld      c, 62
61A0                         rst     dispatch_sound
61A1                         ret
61A2 ; ---------------------------------------------------------------------------
61A2
61A2 loc_61A2:                                                   ; 60BD
61A2                         ld      (ix+2Bh), 0
61A6                         ld      (ix+3Eh), 2Dh ; '-'
61AA                         ld      (ix+3Dh), 10h
61AE                         ld      c, 62
61B0                         rst     dispatch_sound
61B1                         ret
61B2 ; ---------------------------------------------------------------------------
61B2
61B2 loc_61B2:                                                   ; 60D4
61B2                         ld      (iy+0), 3
61B6                         ld      (iy+1), 12h
61BA                         ld      (iy+0Ah), 0FFh
61BE                         ret
61BF ; ---------------------------------------------------------------------------
61BF
61BF loc_61BF:                                                   ; 60E9
61BF                         ld      hl, score_750
61C2                         call    add_to_score
61C5                         ld      (iy+0), 3
61C9                         ld      (iy+1), 13h
61CD                         ld      (iy+0Ah), 0FFh
61D1                         ret
61D2 ; ---------------------------------------------------------------------------
61D2
61D2 loc_61D2:                                                   ; 6098
61D2                         ld      a, (iy+9)
61D5                         or      a
61D6                         jp      z, loc_61F1
61D9                         cp      3
61DB                         ret     z
61DC                         ld      (ix+2Bh), 51h ; 'Q'
61E0                         ld      (iy+0), 6
61E4                         ld      hl, score_750
61E7                         call    add_to_score
61EA                         ld      a, (iy+1)
61ED                         call    sub_5303
61F0                         ret
61F1 ; ---------------------------------------------------------------------------
61F1
61F1 loc_61F1:                                                   ; 61D6
61F1                         ld      (iy+0Ah), 3Fh ; '?'
61F5                         ld      (iy+9), 3
61F9                         ret
61FA ; ---------------------------------------------------------------------------
61FA
61FA loc_61FA:                                                   ; 60B8
61FA                         ld      (ix+2Bh), 0FFh
61FE                         ld      (ix+47h), 40h ; '@'
6202                         ld      (iy+0), 6
6206                         ret
6206 ; End of function sub_6063
6206
6207
6207 ; =============== S U B R O U T I N E =======================================
6207
6207
6207 sub_6207:                                                   ; 603E↑p
6207                         xor     a
6208                         ld      (unk_E016), a
620B                         ld      iy, unk_E10C
620F                         ld      b, 0Fh
6211
6211 loc_6211:                                                   ; 6222↓j
6211                         push    bc
6212                         push    hl
6213                         call    sub_6225
6216                         pop     hl
6217                         ld      de, 0Dh
621A                         add     iy, de
621C                         pop     bc
621D                         ld      a, (unk_E016)
6220                         or      a
6221                         ret     nz
6222                         djnz    loc_6211
6224                         ret
6224 ; End of function sub_6207
6224
6225
6225 ; =============== S U B R O U T I N E =======================================
6225
6225
6225 sub_6225:                                                   ; 6213↑p
6225                         ld      a, (iy+0)
6228                         or      a
6229                         ret     z
622A                         cp      3
622C                         ret     z
622D                         cp      4
622F                         ret     z
6230                         cp      6
6232                         ret     z
6233                         ld      a, (ix+32h)
6236                         sub     8
6238                         sub     (iy+2)
623B                         jr      nc, loc_623F
623D                         neg
623F
623F loc_623F:                                                   ; 623B
623F                         cp      0Ch
6241                         ret     nc
6242                         ld      a, (iy+3)
6245                         sub     4
6247                         sub     (ix+33h)
624A                         jr      nc, loc_624E
624C                         neg
624E
624E loc_624E:                                                   ; 624A
624E                         cp      0Ch
6250                         ret     nc
6251                         push    hl
6252                         ld      b, (iy+2)
6255                         ld      a, (iy+3)
6258                         sub     4
625A                         ld      c, a
625B                         call    sub_4504
625E                         pop     de
625F                         xor     a
6260                         sbc     hl, de
6262                         jr      nz, loc_6276
6264                         ld      (iy+0), 3
6268                         ld      a, (iy+3)
626B                         sub     4
626D                         ld      (iy+3), a
6270                         ld      a, 1
6272                         ld      (unk_E016), a
6275                         ret
6276 ; ---------------------------------------------------------------------------
6276
6276 loc_6276:                                                   ; 6262
6276                         cp      59h ; 'Y'
6278                         ret
6278 ; End of function sub_6225
6278
6279
6279 ; =============== S U B R O U T I N E =======================================
6279
6279
6279 sub_6279:                                                   ; loc_6385↓p
6279                         call    sub_6297
627C                         ld      (iy+1), 3
6280                         ld      c, 80
6282                         rst     dispatch_sound
6283                         ret
6283 ; End of function sub_6279
6283
6284
6284 ; =============== S U B R O U T I N E =======================================
6284
6284
6284 sub_6284:                                                   ; 630B↓p
6284                         call    sub_6297
6287                         ld      (iy+1), 21h ; '!'
628B                         ld      c, 111
628D                         rst     dispatch_sound
628E                         ld      a, (iy+6)
6291                         add     a, 6
6293                         ld      (iy+6), a
6296                         ret
6296 ; End of function sub_6284
6296
6297
6297 ; =============== S U B R O U T I N E =======================================
6297
6297
6297 sub_6297:                                                   ; sub_6279↑p
6297                                                             ; sub_6284↑p
6297                         call    sub_4212
629A                         or      a
629B                         ret     nz
629C                         ld      a, (ix+0Bh)
629F                         ld      (iy+10h), a
62A2                         ld      b, 1Ch
62A4                         or      a
62A5                         jr      nz, loc_62A9
62A7                         ld      b, 0F4h
62A9
62A9 loc_62A9:                                                   ; 62A5
62A9                         ld      a, (ix+2)
62AC                         add     a, b
62AD                         ld      (iy+4), a
62B0                         ld      (iy+5), 0
62B4                         ld      a, (ix+3)
62B7                         sub     2
62B9                         ld      (iy+6), a
62BC                         ld      (iy+7), 0
62C0                         ld      (iy+0Dh), 0
62C4                         ld      a, (ix+6)
62C7                         ld      (iy+12h), a
62CA                         ld      a, (ix+5)
62CD                         ld      (iy+13h), a
62D0                         ld      (iy+0), 1
62D4                         ret
62D4 ; End of function sub_6297
62D4
62D5 ; ---------------------------------------------------------------------------
62D5 ; START OF FUNCTION CHUNK FOR sub_5C2A
62D5
62D5 loc_62D5:                                                   ; 5C47
62D5                         call    sub_62DB
62D8                         jp      loc_5C8F
62D8 ; END OF FUNCTION CHUNK FOR sub_5C2A
62DB
62DB ; =============== S U B R O U T I N E =======================================
62DB
62DB
62DB sub_62DB:                                                   ; loc_62D5↑p
62DB                         ld      a, (ix+9)
62DE                         or      a
62DF                         jr      z, loc_6352
62E1                         cp      2
62E3                         jr      z, loc_6317
62E5                         cp      3
62E7                         jr      z, loc_632A
62E9                         ld      a, (ix+0Ah)
62EC                         dec     a
62ED                         ld      (ix+0Ah), a
62F0                         or      a
62F1                         ret     nz
62F2                         ld      b, (ix+2)
62F5                         ld      a, (ix+3)
62F8                         sub     8
62FA                         ld      c, a
62FB                         call    sub_63B6
62FE                         ld      (ix+9), 2
6302                         ld      (ix+0Ah), 1Fh
6306                         ld      a, (byte_E025)
6309                         or      a
630A                         ret     z
630B                         call    sub_6284
630E                         ld      (ix+9), 2
6312                         ld      (ix+0Ah), 3Fh ; '?'
6316                         ret
6317 ; ---------------------------------------------------------------------------
6317
6317 loc_6317:                                                   ; 62E3
6317                         ld      a, (ix+0Ah)
631A                         dec     a
631B                         and     3Fh ; '?'
631D                         ld      (ix+0Ah), a
6320                         ret     nz
6321                         ld      (ix+0Ah), 3Fh ; '?'
6325                         ld      (ix+9), 3
6329                         ret
632A ; ---------------------------------------------------------------------------
632A
632A loc_632A:                                                   ; 62E7
632A                         ld      a, (ix+0Ah)
632D                         dec     a
632E                         and     3Fh ; '?'
6330                         ld      (ix+0Ah), a
6333                         ret     nz
6334                         ld      (ix+0Ah), 3Fh ; '?'
6338                         ld      b, (ix+2)
633B                         ld      a, (ix+3)
633E                         sub     8
6340                         ld      c, a
6341                         call    sub_63B6
6344                         ld      a, (byte_E025)
6347                         or      a
6348                         ret     z
6349                         ld      (ix+9), 0
634D                         ld      (ix+0Ah), 1Eh
6351                         ret
6352 ; ---------------------------------------------------------------------------
6352
6352 loc_6352:                                                   ; 62DF
6352                         ld      a, (ix+0Ah)
6355                         dec     a
6356                         ld      (ix+0Ah), a
6359                         ret     nz
635A                         ld      (ix+9), 1
635E                         ld      (ix+0Ah), 1Eh
6362                         ret
6362 ; End of function sub_62DB
6362
6363 ; ---------------------------------------------------------------------------
6363 ; START OF FUNCTION CHUNK FOR sub_5C2A
6363
6363 loc_6363:                                                   ; 5C42
6363                         call    sub_6369
6366                         jp      loc_5C8F
6366 ; END OF FUNCTION CHUNK FOR sub_5C2A
6369
6369 ; =============== S U B R O U T I N E =======================================
6369
6369
6369 sub_6369:                                                   ; loc_6363↑p
6369
6369 ; FUNCTION CHUNK AT 639E SIZE 00000018 BYTES
6369
6369                         ld      a, (ix+9)
636C                         or      a
636D                         jr      z, loc_6389
636F                         ld      a, (ix+0Ah)
6372                         dec     a
6373                         ld      (ix+0Ah), a
6376                         cp      50h ; 'P'
6378                         jr      z, loc_6385
637A                         or      a
637B                         ret     nz
637C                         ld      (ix+9), 0
6380                         ld      (ix+0Ah), 0FEh
6384                         ret
6385 ; ---------------------------------------------------------------------------
6385
6385 loc_6385:                                                   ; 6378
6385                         call    sub_6279
6388                         ret
6389 ; ---------------------------------------------------------------------------
6389
6389 loc_6389:                                                   ; 636D
6389                         ld      a, (ix+0Ah)
638C                         cp      0FEh
638E                         jr      z, loc_639E
6390                         dec     a
6391                         ld      (ix+0Ah), a
6394                         ret     nz
6394 ; End of function sub_6369
6394
6395
6395 ; =============== S U B R O U T I N E =======================================
6395
6395
6395 sub_6395:                                                   ; 63B2↓p
6395                         ld      (ix+9), 1
6399                         ld      (ix+0Ah), 5Ah ; 'Z'
639D                         ret
639D ; End of function sub_6395
639D
639E ; ---------------------------------------------------------------------------
639E ; START OF FUNCTION CHUNK FOR sub_6369
639E
639E loc_639E:                                                   ; 638E
639E                         ld      a, (ticker_countup)
63A1                         cp      59h ; 'Y'
63A3                         ret     nz
63A4                         ld      b, (ix+2)
63A7                         ld      c, (ix+3)
63AA                         call    sub_63B6
63AD                         ld      a, (byte_E025)
63B0                         or      a
63B1                         ret     z
63B2                         call    sub_6395
63B5                         ret
63B5 ; END OF FUNCTION CHUNK FOR sub_6369
63B6
63B6 ; =============== S U B R O U T I N E =======================================
63B6
63B6
63B6 sub_63B6:                                                   ; 62FB↑p 6341↑p 
63B6                         xor     a
63B7                         ld      (byte_E025), a
63BA                         ld      iy, George_data
63BE                         call    sub_63D0
63C1                         ld      iy, Lizzie_data
63C5                         call    sub_63D0
63C8                         ld      iy, Ralph_data
63CC                         call    sub_63D0
63CF                         ret
63CF ; End of function sub_63B6
63CF
63D0
63D0 ; =============== S U B R O U T I N E =======================================
63D0
63D0
63D0 sub_63D0:                                                   ; 63BE↑p 63C5↑p 
63D0                         ld      a, (byte_E025)
63D3                         or      a
63D4                         ret     nz
63D5                         ld      a, (iy+25h)
63D8                         or      a
63D9                         ret     nz
63DA                         ld      a, (ix+5)
63DD                         cp      (iy+48h)
63E0                         ret     nz
63E1                         ld      a, (iy+0Ah)
63E4                         sub     c
63E5                         jr      nc, loc_63E9
63E7                         neg
63E9
63E9 loc_63E9:                                                   ; 63E5
63E9                         cp      18h
63EB                         ret     nc
63EC                         ld      d, 0
63EE                         ld      a, (iy+8)
63F1                         sub     b
63F2                         jr      nc, loc_63F8
63F4                         ld      d, 1
63F6                         neg
63F8
63F8 loc_63F8:                                                   ; 63F2
63F8                         cp      30h ; '0'
63FA                         ret     nc
63FB                         ld      a, (ix+0Bh)
63FE                         or      a
63FF                         ld      a, d
6400                         jr      z, loc_6406
6402                         or      a
6403                         ret     nz
6404                         jr      loc_6408
6406 ; ---------------------------------------------------------------------------
6406
6406 loc_6406:                                                   ; 6400
6406                         or      a
6407                         ret     z
6408
6408 loc_6408:                                                   ; 6404
6408                         ld      a, 1
640A                         ld      (byte_E025), a
640D                         ret
640D ; End of function sub_63D0
640D
640E ; ---------------------------------------------------------------------------
640E ; START OF FUNCTION CHUNK FOR sub_5C2A
640E
640E loc_640E:                                                   ; 5C4C
640E                         call    sub_6414
6411                         jp      loc_5C8F
6411 ; END OF FUNCTION CHUNK FOR sub_5C2A
6414
6414 ; =============== S U B R O U T I N E =======================================
6414
6414
6414 sub_6414:                                                   ; loc_640E↑p
6414                         ld      a, (ix+9)
6417                         or      a
6418                         jr      nz, loc_642C
641A                         ld      a, (ix+0Ah)
641D                         dec     a
641E                         ld      (ix+0Ah), a
6421                         ret     nz
6422                         ld      (ix+9), 1
6426                         ld      (ix+0Ah), 0
642A                         jr      loc_6448
642C ; ---------------------------------------------------------------------------
642C
642C loc_642C:                                                   ; 6418
642C                         ld      a, (ix+0Ah)
642F                         inc     a
6430                         ld      (ix+0Ah), a
6433                         cp      3
6435                         jp      z, loc_6485
6438                         cp      12h
643A                         ret     nz
643B                         ld      (ix+9), 0
643F                         ld      (ix+0Ah), 0
6443                         ld      (ix+0), 6
6447                         ret
6448 ; ---------------------------------------------------------------------------
6448
6448 loc_6448:                                                   ; 642A
6448                         call    sub_4212
644B                         or      a
644C                         ret     nz
644D                         ld      a, (ix+0Bh)
6450                         ld      (iy+10h), a
6453                         or      a
6454                         ld      bc, 8F0h
6457                         jr      z, loc_645C
6459                         ld      bc, 0F810h
645C
645C loc_645C:                                                   ; 6457
645C                         ld      a, (ix+2)
645F                         add     a, b
6460                         ld      (ix+2), a
6463                         add     a, c
6464                         ld      (iy+4), a
6467                         ld      a, (ix+3)
646A                         add     a, 8
646C                         ld      (iy+6), a
646F                         ld      (iy+0Dh), 0
6473                         ld      a, (ix+6)
6476                         ld      (iy+12h), a
6479                         ld      (iy+0), 1
647D                         ld      (iy+1), 4
6481                         ld      c, 78
6483                         rst     dispatch_sound
6484                         ret
6485 ; ---------------------------------------------------------------------------
6485
6485 loc_6485:                                                   ; 6435
6485                         ld      a, (ix+0Bh)
6488                         or      a
6489                         ld      b, 0
648B                         jr      z, loc_648F
648D                         ld      b, 10h
648F
648F loc_648F:                                                   ; 648B
648F                         ld      a, (ix+2)
6492                         add     a, b
6493                         ld      b, a
6494                         ld      a, (ix+3)
6497                         ld      c, a
6498                         ld      iy, George_data
649C                         call    sub_64AE
649F                         ld      iy, Lizzie_data
64A3                         call    sub_64AE
64A6                         ld      iy, Ralph_data
64AA                         call    sub_64AE
64AD                         ret
64AD ; End of function sub_6414
64AD
64AE
64AE ; =============== S U B R O U T I N E =======================================
64AE
64AE
64AE sub_64AE:                                                   ; 649C↑p 64A3↑p 
64AE                         xor     a
64AF                         ld      (byte_E025), a
64B2                         ld      a, (iy+25h)
64B5                         or      a
64B6                         ret     nz
64B7                         call    sub_75E1
64BA                         ret     z
64BB                         ld      a, b
64BC                         sub     (iy+8)
64BF                         jr      nc, loc_64C3
64C1                         neg
64C3
64C3 loc_64C3:                                                   ; 64BF
64C3                         cp      17h
64C5                         ret     nc
64C6                         ld      a, c
64C7                         sub     0Ch
64C9                         sub     (iy+0Ah)
64CC                         jr      nc, loc_64D0
64CE                         neg
64D0
64D0 loc_64D0:                                                   ; 64CC
64D0                         cp      15h
64D2                         ret     nc
64D3                         ld      c, 56
64D5                         rst     dispatch_sound
64D6                         ld      (iy+2Ch), 0
64DA                         ld      (iy+25h), 0
64DE                         ld      (iy+16h), 5
64E2                         ld      (iy+1Fh), 14h
64E6                         ld      (iy+0Ch), 0
64EA                         ld      (iy+0Dh), 0
64EE                         ld      (iy+0Eh), 0
64F2                         ld      (iy+0Fh), 0
64F6                         ld      (iy+20h), 59h ; 'Y'
64FA                         call    sub_52E8
64FD                         call    sub_51D9
6500                         ret
6500 ; End of function sub_64AE
6500
6501
6501 ; =============== S U B R O U T I N E =======================================
6501
6501 ; Called with c as the sound number
6501 ; Sound codes
6501 ; 18 Helicopter
6501 ; 27 Siren start
6501 ; 34 Select Growl (George)
6501 ; 37 Sounds like a lower roar
6501 ; 38 Sounds like a high roar
6501 ; 50 Eating something
6501 ; 56 Landing thud
6501 ; 59 Little bullets
6501 ; 62 sounds like space ship lasers
6501 ; 78 Explosion
6501 ; 79 Dynamite explodes
6501 ; 92 die 1
6501 ; 93 die 2
6501 ; 104 News Flash
6501 ; 108 Train sound
6501
6501 inject_sound:                                               ; 654F↓p AEB4↓p
6501                         ld      a, (sound_enable)
6504                         or      a
6505                         ret     nz
6506
6506 loc_6506:                                                   ; 654B↓j
6506                         ld      a, (active_sound_channels)
6509                         cp      6                           ; Max of 6 sounds as 2 × AY-3-8910 chips × 3 channels each
650B                         ret     nc                          ; Already reached our max, sorry no more
650C                         ld      hl, soundfx_list            ; Pointer to the sound numbers we need to process
650F                         rst     HL_plus_A
6510                         ld      (hl), c                     ; Save to the next slot
6511                         ld      hl, active_sound_channels
6514                         inc     (hl)                        ; Advance the active sounds number
6515                         ret
6515 ; End of function inject_sound
6515
6516
6516 ; =============== S U B R O U T I N E =======================================
6516
6516
6516 startup_sound:                                              ; 08CA↑p
6516                                                             ; loc_AC6↑p
6516                         ld      a, (startup_sound_rotate)   ; We cycle around the sounds
6519                         inc     a
651A                         and     11111b                      ; Keep in range 0–31 (mask lower 5 bits)
651C                         ld      (startup_sound_rotate), a   ; Store updated number
651F                         push    hl
6520                         ld      hl, soundfx_table
6523                         rst     HL_plus_A                   ; Get hl as offset from the sound table
6524                         ld      c, (hl)                     ; Sound code in c
6525                         pop     hl
6526                         jr      do_sound                    ; Insert sound
6526 ; End of function startup_sound
6526
6526 ; ---------------------------------------------------------------------------
6528 soundfx_table:          db  68h, 1Fh, 22h, 68h, 1Bh, 68h, 22h, 68h, 68h, 1Eh, 68h
6528                                                             ; 6520↑o
6533                         db  22h, 1Bh, 1Fh, 22h, 68h, 22h, 1Bh, 68h, 1Eh, 22h, 68h
653E                         db  1Bh, 68h, 1Fh, 1Bh, 1Fh, 68h, 22h, 68h, 22h, 68h, 1Bh
6549
6549 ; =============== S U B R O U T I N E =======================================
6549
6549
6549 sub_6549:                                                   ; loc_870↑p
6549                                                             ; loc_8D3↑p 
6549                         ld      c, 0
654B                         jr      loc_6506
654B ; End of function sub_6549
654B
654D
654D ; =============== S U B R O U T I N E =======================================
654D
654D
654D do_sound:                                                   ; dispatch_sound
654D                                                             ; 1D69↑p 
654D                         push    af
654E                         push    hl
654F                         call    inject_sound                ; C = sound number (to be injected/queued)
6552                         pop     hl
6553                         pop     af
6554                         ret
6554 ; End of function do_sound
6554
6555
6555 ; =============== S U B R O U T I N E =======================================
6555
6555
6555 sub_6555:                                                   ; 48A0↑p 490A↑p
6555                         push    hl
6556                         call    sub_6561
6559                         ld      hl, soundlist_table2
655C                         rst     HL_plus_A
655D                         ld      c, (hl)
655E                         pop     hl
655F                         jr      do_sound
655F ; End of function sub_6555
655F
6561
6561 ; =============== S U B R O U T I N E =======================================
6561
6561
6561 sub_6561:                                                   ; 6556↑p
6561                                                             ; loc_65C7↓p
6561                         push    af
6562                         ld      a, (unk_E62F)
6565                         ld      (unk_E630), a
6568                         ld      a, (unk_E62E)
656B                         ld      (unk_E62F), a
656E                         ld      a, (unk_E62D)
6571                         ld      (unk_E62E), a
6574                         pop     af
6575                         ld      (unk_E62D), a
6578                         cp      3
657A                         jr      c, loc_6592
657C                         cp      6
657E                         jr      c, loc_6595
6580                         cp      9
6582                         jr      c, loc_6598
6584                         cp      12
6586                         jr      c, loc_659B
6588                         cp      15
658A                         jr      c, loc_659E
658C                         cp      19
658E                         jr      c, loc_65A1
6590                         jr      loc_65A4
6592 ; ---------------------------------------------------------------------------
6592
6592 loc_6592:                                                   ; 657A
6592                         ld      a, 0
6594                         ret
6595 ; ---------------------------------------------------------------------------
6595
6595 loc_6595:                                                   ; 657E
6595                         ld      a, 1
6597                         ret
6598 ; ---------------------------------------------------------------------------
6598
6598 loc_6598:                                                   ; 6582
6598                         ld      a, 2
659A                         ret
659B ; ---------------------------------------------------------------------------
659B
659B loc_659B:                                                   ; 6586
659B                         ld      a, 3
659D                         ret
659E ; ---------------------------------------------------------------------------
659E
659E loc_659E:                                                   ; 658A
659E                         ld      a, 4
65A0                         ret
65A1 ; ---------------------------------------------------------------------------
65A1
65A1 loc_65A1:                                                   ; 658E
65A1                         ld      a, 5
65A3                         ret
65A4 ; ---------------------------------------------------------------------------
65A4
65A4 loc_65A4:                                                   ; 6590
65A4                         ld      a, 6
65A6                         ret
65A6 ; End of function sub_6561
65A6
65A7
65A7 ; =============== S U B R O U T I N E =======================================
65A7
65A7
65A7 sub_65A7:                                                   ; 48B1↑p 4AFF↑p 
65A7                         push    hl
65A8                         call    sub_65B3
65AB                         ld      hl, soundlist_table1
65AE                         rst     HL_plus_A
65AF                         ld      c, (hl)
65B0                         pop     hl
65B1                         jr      do_sound
65B1 ; End of function sub_65A7
65B1
65B3
65B3 ; =============== S U B R O U T I N E =======================================
65B3
65B3
65B3 sub_65B3:                                                   ; 65A8↑p
65B3                         ld      a, (ix+0Ah)
65B6                         ld      b, a
65B7                         ld      a, (ix+3)
65BA                         sub     b
65BB                         ld      c, a
65BC                         ld      a, b
65BD                         cp      6
65BF                         jr      nc, loc_65C6
65C1                         add     a, c
65C2                         add     a, 1
65C4                         jr      loc_65C7
65C6 ; ---------------------------------------------------------------------------
65C6
65C6 loc_65C6:                                                   ; 65BF
65C6                         ld      a, c
65C7
65C7 loc_65C7:                                                   ; 65C4
65C7                         call    sub_6561
65CA                         ret
65CA ; End of function sub_65B3
65CA
65CA ; ---------------------------------------------------------------------------
65CB soundlist_table1:       db  48h, 49h, 4Ah, 4Bh, 4Ch, 4Ch, 4Ch, 4Ch ; 65AB↑o
65D3 soundlist_table2:       db  2Dh, 28h, 2Eh, 29h, 29h, 2Fh, 2Fh, 2Fh ; 6559↑o
65DB
65DB ; =============== S U B R O U T I N E =======================================
65DB
65DB
65DB dateline_display_all:                                       ; 08CD↑p 0AC9↑p
65DB                         xor     a
65DC                         ld      (temp_counter), a
65DF                         call    clear_sprites_and_screen
65E2                         call    watchdog_reset
65E5                         call    setup_palett3
65E8                         ld      ix, George_data
65EC                         xor     a
65ED                         ld      (unk_E005), a
65F0                         call    get_dateline_image_pointer
65F3                         ld      de, bg_row21
65F6                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
65F9                         call    dateline_messages_bottom
65FC                         ld      hl, skyline_sprites
65FF                         ld      a, (ix+1)
6602                         cp      0
6604                         jr      z, loc_6609
6606                         ld      hl, george_photo_taken
6609
6609 loc_6609:                                                   ; 6604
6609                         call    sprites_bottom
660C                         ld      b, 10
660E                         call    sub_66BB
6611                         ld      ix, George_data
6615                         call    get_dateline_image_pointer
6618                         ld      de, bg_row11
661B                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
661E                         call    dateline_messages_middle
6621                         ld      hl, skyline_sprites
6624                         ld      a, (ix+1)
6627                         cp      0
6629                         jr      z, loc_662E
662B                         ld      hl, george_photo_taken      ; So this for george photo with different colour maybe?
662E
662E loc_662E:                                                   ; 6629
662E                         call    sprites_middle
6631                         ld      ix, Lizzie_data
6635                         call    get_dateline_image_pointer
6638                         ld      de, bg_row21
663B                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
663E                         call    dateline_messages_bottom
6641                         ld      hl, skyline_sprites
6644                         ld      a, (ix+1)
6647                         cp      0
6649                         jr      z, loc_664E
664B                         ld      hl, lizzie_photo_taken
664E
664E loc_664E:                                                   ; 6649
664E                         call    sprites_bottom
6651                         ld      a, 1
6653                         ld      (unk_E005), a
6656                         ld      b, 10
6658                         call    sub_66BB
665B                         ld      ix, George_data
665F                         call    get_dateline_image_pointer
6662                         ld      de, bg_videoram
6665                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
6668                         ld      hl, skyline_sprites
666B                         ld      a, (ix+1)
666E                         cp      0
6670                         jr      z, loc_6675
6672                         ld      hl, george_photo_taken
6675
6675 loc_6675:                                                   ; 6670
6675                         call    sprites_top
6678                         ld      ix, Lizzie_data
667C                         call    get_dateline_image_pointer
667F                         ld      de, bg_row11
6682                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
6685                         ld      hl, skyline_sprites
6688                         ld      a, (ix+1)
668B                         cp      0
668D                         jr      z, loc_6692
668F                         ld      hl, lizzie_photo_taken
6692
6692 loc_6692:                                                   ; 668D
6692                         call    sprites_middle
6695                         ld      ix, Ralph_data
6699                         call    get_dateline_image_pointer
669C                         ld      de, bg_row21
669F                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
66A2                         ld      hl, skyline_sprites
66A5                         ld      a, (ix+1)
66A8                         cp      0
66AA                         jr      z, loc_66AF
66AC                         ld      hl, ralph_photo_taken
66AF
66AF loc_66AF:                                                   ; 66AA
66AF                         call    sprites_bottom
66B2                         call    sub_6718
66B5                         ld      b, 10
66B7                         call    sub_66BB
66BA                         ret
66BA ; End of function dateline_display_all
66BA
66BB
66BB ; =============== S U B R O U T I N E =======================================
66BB
66BB
66BB sub_66BB:                                                   ; 660E↑p 6658↑p 
66BB                         push    bc
66BC                         call    watchdog_reset
66BF                         call    ready_players
66C2                         pop     bc
66C3                         djnz    sub_66BB
66C5                         ret
66C5 ; End of function sub_66BB
66C5
66C6 ; ---------------------------------------------------------------------------
66C6 ; START OF FUNCTION CHUNK FOR get_dateline_image_pointer
66C6
66C6 loc_66C6:                                                   ; 66E3↓j
66C6                         ld      hl, dateline_bg_empty
66C9                         ld      (ix+3Ah), 0
66CD                         ld      a, (game_credits)
66D0                         or      a
66D1                         ret     z
66D2                         ld      (ix+3Ah), 1
66D6                         ret
66D6 ; END OF FUNCTION CHUNK FOR get_dateline_image_pointer
66D7
66D7 ; =============== S U B R O U T I N E =======================================
66D7
66D7
66D7 get_dateline_image_pointer:                                 ; 65F0↑p 6615↑p 
66D7
66D7 ; FUNCTION CHUNK AT 66C6 SIZE 00000011 BYTES
66D7
66D7                         ld      a, (ix+1)
66DA                         cp      0
66DC                         jr      nz, player_active_image
66DE                         ld      a, (ix+4)
66E1                         cp      3
66E3                         jp      nz, loc_66C6
66E6                         ld      (ix+3Ah), 2
66EA                         ld      hl, dateline_bg_empty
66ED                         ret
66EE ; ---------------------------------------------------------------------------
66EE
66EE player_active_image:                                        ; 66DC
66EE                         ld      (ix+3Ah), 16h
66F2                         ld      hl, dateline_images
66F5                         ld      a, (ix+2)
66F8                         sla     a
66FA                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
66FD                         ld      a, (ix+1)
6700                         cp      1
6702                         ret     z
6703                         ld      (ix+3Ah), 6
6707                         ld      a, (ix+4)
670A                         cp      2
670C                         ret     nz
670D                         ld      (ix+3Ah), 19h
6711                         ret
6711 ; End of function get_dateline_image_pointer
6711
6711 ; ---------------------------------------------------------------------------
6712 dateline_images:        dw dateline_bg_george               ; 66F2↑o
6714                         dw dateline_bg_lizzie
6716                         dw dateline_bg_ralph
6718
6718 ; =============== S U B R O U T I N E =======================================
6718
6718
6718 sub_6718:                                                   ; 66B2↑p
6718                         ld      ix, George_data
671C                         call    sub_672E
671F                         ld      ix, Lizzie_data
6723                         call    dateline_messages_middle
6726                         ld      ix, Ralph_data
672A                         call    dateline_messages_bottom
672D                         ret
672D ; End of function sub_6718
672D
672E
672E ; =============== S U B R O U T I N E =======================================
672E
672E
672E sub_672E:                                                   ; 671C↑p 6907↓p
672E                         ld      bc,  bg_row04+10h
6731                         call    sub_675B
6734                         call    get_level_name
6737                         ld      hl,  bg_row02+10h
673A                         jp      message_print_white
673A ; End of function sub_672E
673A
673D
673D ; =============== S U B R O U T I N E =======================================
673D
673D
673D dateline_messages_middle:                                   ; 661E↑p 6723↑p 
673D                         ld      bc,  bg_row14+10h
6740                         call    sub_675B
6743                         call    get_level_name
6746                         ld      hl,  bg_row12+10h
6749                         jp      message_print_white
6749 ; End of function dateline_messages_middle
6749
674C
674C ; =============== S U B R O U T I N E =======================================
674C
674C
674C dateline_messages_bottom:                                   ; 65F9↑p 663E↑p 
674C                         ld      bc,  bg_row24+10h
674F                         call    sub_675B
6752                         call    get_level_name
6755                         ld      hl,  bg_row22+10h
6758                         jp      message_print_white
6758 ; End of function dateline_messages_bottom
6758
675B
675B ; =============== S U B R O U T I N E =======================================
675B
675B
675B sub_675B:                                                   ; 6731↑p 6740↑p 
675B                         ld      a, (ix+2)
675E                         ld      d, a
675F                         ld      a, (ix+3Ah)
6762                         cp      2
6764                         jr      c, loc_6790
6766                         cp      16h
6768                         jr      nc, loc_678F
676A                         cp      6
676C                         jr      z, loc_677B
676E                         ld      a, (unk_E671)
6771                         and     7
6773                         add     a, d
6774                         and     3
6776                         add     a, (ix+3Ah)
6779                         jr      loc_6790
677B ; ---------------------------------------------------------------------------
677B
677B loc_677B:                                                   ; 676C
677B                         ld      a, (unk_E005)
677E                         or      a
677F                         jr      z, loc_679F
6781                         ld      a, (unk_E67A)
6784                         inc     a
6785                         and     0Fh
6787                         ld      (unk_E67A), a
678A                         add     a, (ix+3Ah)
678D                         jr      loc_6790
678F ; ---------------------------------------------------------------------------
678F
678F loc_678F:                                                   ; 6768
678F                         add     a, d
6790
6790 loc_6790:                                                   ; 6764 6779 
6790                         sla     a
6792                         ld      hl, message_table
6795                         rst     HL_plus_A
6796                         ld      e, (hl)
6797                         inc     hl
6798                         ld      d, (hl)
6799
6799 loc_6799:                                                   ; 67A2↓j
6799                         push    bc
679A                         pop     hl
679B                         call    message_print_white
679E                         ret
679F ; ---------------------------------------------------------------------------
679F
679F loc_679F:                                                   ; 677F
679F                         ld      de, unk_67EB
67A2                         jr      loc_6799
67A2 ; End of function sub_675B
67A2
67A4
67A4 ; =============== S U B R O U T I N E =======================================
67A4
67A4
67A4 get_level_name:                                             ; 6734↑p 6743↑p 
67A4                         ld      a, (game_level)
67A7                         and     7Fh                         ; Wrap level number 0 - 127
67A9                         sla     a
67AB                         ld      hl, level_names
67AE                         rst     HL_plus_A
67AF                         ld      e, (hl)
67B0                         inc     hl
67B1                         ld      d, (hl)
67B2                         ret
67B2 ; End of function get_level_name
67B2
67B2 ; ---------------------------------------------------------------------------
67B3 message_table:          dw aJoinTheAction                   ; 6792↑o
67B3                                                             ; "/  JOIN THE//   ACTION"
67B5                         dw aPressJump2butt                  ; "/PRESS JUMP//#2BUTTON"
67B7                         dw aExMutantIsArre                  ; "EX-MUTANT IS//ARRESTED FOR//STREAKING!"
67B9                         dw aLabScrewUpWear                  ; "LAB SCREW-UP//WEARS OFF//FILM AT 11."
67BB                         dw aSpouseOfMutant                  ; "SPOUSE OF//MUTANT FILES//LEGAL ACTION."
67BD                         dw aFormerBeastSay                  ; "FORMER BEAST//SAYS IT MAY//HAPPEN AGAIN"
67BF                         dw aHintDuringAJum                  ; "HINT- DURING/A JUMP, HOLD/JOYSTICK UP/T"
67C1                         dw aIsThereNoEndTo                  ; "IS THERE NO//END TO THIS//RAMPAGE???"
67C3                         dw aHintFoodBehind                  ; "HINT//FOOD BEHIND//OPEN WINDOWS."
67C5                         dw aWarningElectri                  ; "WARNING //ELECTRICITY//IS SHOCKING!"
67C7                         dw aPropertyValues                  ; "PROPERTY//VALUES AT//ALL TIME LOW."
67C9                         dw aJobOpeningsInN                  ; "JOB OPENINGS//IN NATIONAL//GUARD!"
67CB                         dw aHintIfYouWatch                  ; "HINT/IF YOU WATCH/WHAT YOU EAT/YOU C"
67CD                         dw aRampageHas768D                  ; "RAMPAGE HAS/768 DAYS OF/DESTRUCTION.//N"
67CF                         dw aHintJumpWhenYo                  ; "HINT JUMP//WHEN YOU SEE//DUST CLOUDS"
67D1                         dw aStillAtLargeVe                  ; "STILL AT //LARGE//VERY LARGE!"
67D3                         dw aHintFoodBehind                  ; "HINT//FOOD BEHIND//OPEN WINDOWS."
67D5                         dw aRealLifeJekyll                  ; "REAL LIFE//JEKYLL AND//HYDE STORY!!"
67D7                         dw aHintWantToEatW                  ; "HINT WANT//TO EAT WELL?//PUNCH SLOWE"
67D9                         dw aYourAdHereCall                  ; "YOUR AD HERE//CALL NOW! 1-//800-ZOO-KEE"
67DB                         dw aHintIfYouWatch                  ; "HINT/IF YOU WATCH/WHAT YOU EAT/YOU C"
67DD                         dw aHintMegaVitami                  ; "HINT /MEGA-VITAMIN/BONUS EVERY/128TH"
67DF                         dw aExperimentalVi                  ; "EXPERIMENTAL//VITAMIN HAS//ILL EFFECTS."
67E1                         dw aWomanFindsLake                  ; "WOMAN FINDS//LAKE TO BE//RADIOACTIVE."
67E3                         dw aUnusualFoodAdd                  ; "UNUSUAL FOOD//ADDITIVE MAY//BE RECALLED"
67E5                         dw aEverGrowingCon                  ; "EVER GROWING//CONCERN OVER//MEGA-VITAMI"
67E7                         dw aRadioactiveLak                  ; "RADIOACTIVE//LAKE CHANGES//WOMANS SCALE"
67E9                         dw aCityHowlingMad                  ; "CITY HOWLING//MAD, SAUSAGE//SCAM EXPOSE"
67EB unk_67EB:               db  20h                             ; loc_679F↑o
67EC                         db    0
67ED
67ED ; =============== S U B R O U T I N E =======================================
67ED
67ED
67ED dateline_setup:                                             ; 0B57↑p
67ED                         call    clear_sprites_and_screen
67F0                         call    watchdog_reset
67F3                         call    setup_palett3
67F6                         ld      hl, dateline_bg_empty
67F9                         ld      de, bg_row11
67FC                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
67FF                         call    get_level_name
6802                         ld      hl,  bg_row12+10h
6805                         call    message_print_white
6808                         ld      de, aDay                    ; "DAY "
680B                         ld      hl,  bg_row15+14h
680E                         call    message_print_white
6811                         call    sub_682D
6814                         ld      hl, skyline_sprites
6817                         call    sprites_middle
681A                         ret
681A ; End of function dateline_setup
681A
681B
681B ; =============== S U B R O U T I N E =======================================
681B
681B
681B sub_681B:                                                   ; 0A1D↑p
681B                         ld      a, (byte_E58C)
681E                         ld      b, a
681F                         ld      a, (game_level)
6822                         inc     a
6823                         call    sub_108F
6826                         ld      hl,  bg_row30+1Eh
6829                         ld      e, 60h ; '`'
682B                         jr      loc_683D
682B ; End of function sub_681B
682B
682D
682D ; =============== S U B R O U T I N E =======================================
682D
682D
682D sub_682D:                                                   ; 6811↑p
682D                         ld      a, (byte_E58C)
6830                         ld      b, a
6831                         ld      a, (game_level)
6834                         inc     a
6835                         call    sub_108F
6838                         ld      hl,  bg_row15+1Ch
683B                         ld      e, 70h ; 'p'
683D
683D loc_683D:                                                   ; 682B
683D                         ld      a, d
683E                         or      a
683F                         jr      z, loc_684A
6841                         add     a, 30h ; '0'
6843                         ld      (hl), a
6844                         inc     hl
6845                         ld      (hl), e
6846                         inc     hl
6847                         ld      a, c
6848                         jr      loc_684E
684A ; ---------------------------------------------------------------------------
684A
684A loc_684A:                                                   ; 683F
684A                         ld      a, c
684B                         or      a
684C                         jr      z, loc_6854
684E
684E loc_684E:                                                   ; 6848
684E                         add     a, 30h ; '0'
6850                         ld      (hl), a
6851                         inc     hl
6852                         ld      (hl), e
6853                         inc     hl
6854
6854 loc_6854:                                                   ; 684C
6854                         ld      a, b
6855                         add     a, 30h ; '0'
6857                         ld      (hl), a
6858                         inc     hl
6859                         ld      (hl), e
685A                         ret
685A ; End of function sub_682D
685A
685B
685B ; =============== S U B R O U T I N E =======================================
685B
685B
685B sprites_top:                                                ; loc_6675↑p
685B                                                             ; 68EA↓p
685B                         ld      iy, sprite57_y
685F                         ld      bc, byte_2AC8
6862                         jr      update_2x3_box_sprites
6862 ; End of function sprites_top
6862
6864
6864 ; =============== S U B R O U T I N E =======================================
6864
6864
6864 sprites_middle:                                             ; loc_662E↑p
6864                                                             ; loc_6692↑p 
6864                         ld      iy, sprite65_y
6868                         ld      bc, 2A78h
686B                         jr      update_2x3_box_sprites
686B ; End of function sprites_middle
686B
686D
686D ; =============== S U B R O U T I N E =======================================
686D
686D
686D sprites_bottom:                                             ; loc_6609↑p
686D                                                             ; loc_664E↑p 
686D                         ld      iy, sprite73_y
6871                         ld      bc, 2A28h
6874
6874 update_2x3_box_sprites:                                     ; 6862 686B
6874                         call    sprite_2x3_cords            ; ; Super Sprite Layout (2x3 tiles, 4 bytes per sprite)
6874                                                             ; ; +-------------------+-------------------+
6874                                                             ; ; | (iy+0),(iy+3)     | (iy+4),(iy+7)     |  ; Box 0, Box 1
6874                                                             ; ; +-------------------+-------------------+
6874                                                             ; ; | (iy+8),(iy+0B)    | (iy+0C),(iy+0F)   |  ; Box 2, Box 3
6874                                                             ; ; +-------------------+-------------------+
6874                                                             ; ; | (iy+10),(iy+13)   | (iy+14),(iy+17)   |  ; Box 4, Box 5
6874                                                             ; ; +-------------------+-------------------+
6874                                                             ; ;  Each box = 1 sprite (Y,X,Attr,Tile)
6874                                                             ; ;  Y is bottom-to-top; X is left-to-right.
6874                                                             ;
6877                         push    iy                          ; Save sprite base
6879                         ld      b, 6                        ; 6 Sprites to update
687B                         ld      de, 4                       ; add value for next sprite base
687E
687E sprite_code_loop:                                           ; 6885↓j
687E                         ld      a, (hl)                     ; Get sprite codes
687F                         inc     hl
6880                         ld      (iy+2), a                   ; Save to sprite
6883                         add     iy, de                      ; Next sprite
6885                         djnz    sprite_code_loop            ; Do all
6887                         pop     iy                          ; Get back base sprite number
6889                         ld      a, (hl)                     ; final byte in table is control byte
688A                         ld      (iy+1), a                   ; Sprite 1
688D                         ld      (iy+5), a                   ; Sprite 2
6890                         ld      (iy+9), a                   ; Sprite 3
6893                         ld      (iy+0Dh), a                 ; Sprite 4
6896                         ld      (iy+11h), 0Ah               ; Bottom two sprites, both codes are $1xx
689A                         ld      (iy+15h), 0Ah               ; Before mutation text sprites.
689E                         ret
689E ; End of function sprites_bottom
689E
689E ; ---------------------------------------------------------------------------
689F skyline_sprites:        db  72h, 79h, 7Ah, 7Fh,0F9h,0F9h, 0Ah ; 65FC↑o
689F                                                             ; 6621↑o 
68A6 george_photo_taken:     db  67h, 68h, 69h, 6Ah,0F1h,0F2h,   2 ; 6606↑o
68A6                                                             ; 662B↑o 
68AD lizzie_photo_taken:     db  67h, 68h, 69h, 6Ah,0F1h,0F2h, 0Ah ; 664B↑o
68AD                                                             ; 668F↑o 
68AD                                                             ; Sprites of George photo prior to mutation.
68B4 ralph_photo_taken:      db 0E7h,0E8h,0E9h,0EAh,0F1h,0F2h, 0Ah ; 66AC↑o
68B4                                                             ; loc_6985↓o
68BB
68BB ; =============== S U B R O U T I N E =======================================
68BB
68BB
68BB sub_68BB:                                                   ; 0B42↑p
68BB                         ld      ix, George_data
68BF                         ld      a, (ix+3Ah)
68C2                         ld      b, a
68C3                         cp      6
68C5                         jr      nc, loc_690A
68C7                         ld      a, (ix+1)
68CA                         cp      0
68CC                         jr      nz, loc_68E7
68CE                         ld      a, b
68CF                         cp      2
68D1                         jr      z, loc_690A
68D3                         ld      a, (game_credits)
68D6                         or      a
68D7                         jr      z, loc_68F6
68D9                         ld      a, b
68DA                         cp      1
68DC                         jr      z, loc_690A
68DE                         ld      hl, dateline_bg_empty
68E1                         ld      (ix+3Ah), 1
68E5                         jr      loc_6901
68E7 ; ---------------------------------------------------------------------------
68E7
68E7 loc_68E7:                                                   ; 68CC
68E7                         ld      hl, george_photo_taken
68EA                         call    sprites_top
68ED                         ld      hl, dateline_bg_george
68F0                         ld      (ix+3Ah), 16h
68F4                         jr      loc_6901
68F6 ; ---------------------------------------------------------------------------
68F6
68F6 loc_68F6:                                                   ; 68D7
68F6                         ld      a, b
68F7                         or      a
68F8                         jr      z, loc_690A
68FA                         ld      (ix+3Ah), 0
68FE                         ld      hl, dateline_bg_empty
6901
6901 loc_6901:                                                   ; 68E5 68F4
6901                         ld      de, bg_videoram
6904                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
6907                         call    sub_672E
690A
690A loc_690A:                                                   ; 68C5 68D1 
690A                         call    watchdog_reset
690D                         ld      ix, Lizzie_data
6911                         ld      a, (ix+3Ah)
6914                         ld      b, a
6915                         cp      6
6917                         jr      nc, loc_695C
6919                         ld      a, (ix+1)
691C                         cp      0
691E                         jr      nz, loc_6939
6920                         ld      a, b
6921                         cp      2
6923                         jr      z, loc_695C
6925                         ld      a, (game_credits)
6928                         or      a
6929                         jr      z, loc_6948
692B                         ld      a, b
692C                         cp      1
692E                         jr      z, loc_695C
6930                         ld      hl, dateline_bg_empty
6933                         ld      (ix+3Ah), 1
6937                         jr      loc_6953
6939 ; ---------------------------------------------------------------------------
6939
6939 loc_6939:                                                   ; 691E
6939                         ld      hl, lizzie_photo_taken
693C                         call    sprites_middle
693F                         ld      hl, dateline_bg_lizzie
6942                         ld      (ix+3Ah), 16h
6946                         jr      loc_6953
6948 ; ---------------------------------------------------------------------------
6948
6948 loc_6948:                                                   ; 6929
6948                         ld      a, b
6949                         or      a
694A                         jr      z, loc_695C
694C                         ld      hl, dateline_bg_empty
694F                         ld      (ix+3Ah), 0
6953
6953 loc_6953:                                                   ; 6937 6946
6953                         ld      de, bg_row11
6956                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
6959                         call    dateline_messages_middle
695C
695C loc_695C:                                                   ; 6917 6923 
695C                         ld      ix, Ralph_data
6960                         ld      a, (ix+3Ah)
6963                         ld      b, a
6964                         cp      6
6966                         ret     nc
6967                         ld      a, (ix+1)
696A                         cp      0
696C                         jr      nz, loc_6985
696E                         ld      a, b
696F                         cp      2
6971                         ret     z
6972                         ld      a, (game_credits)
6975                         or      a
6976                         jr      z, loc_6994
6978                         ld      a, b
6979                         cp      1
697B                         ret     z
697C                         ld      (ix+3Ah), 1
6980                         ld      hl, dateline_bg_empty
6983                         jr      loc_699E
6985 ; ---------------------------------------------------------------------------
6985
6985 loc_6985:                                                   ; 696C
6985                         ld      hl, ralph_photo_taken
6988                         call    sprites_bottom
698B                         ld      (ix+3Ah), 16h
698F                         ld      hl, dateline_bg_ralph
6992                         jr      loc_699E
6994 ; ---------------------------------------------------------------------------
6994
6994 loc_6994:                                                   ; 6976
6994                         ld      a, b
6995                         or      a
6996                         ret     z
6997                         ld      hl, dateline_bg_empty
699A                         ld      (ix+3Ah), 0
699E
699E loc_699E:                                                   ; 6983 6992
699E                         ld      de, bg_row21
69A1                         call    unpack_character_data       ; Decode compressed data from source in hl to destination in de
69A4                         jp      dateline_messages_bottom
69A4 ; End of function sub_68BB
69A4
69A4 ; ---------------------------------------------------------------------------
69A7 aDay:                   .ascii 'DAY ',0                     ; 6808↑o
69AC aExMutantIsArre:        .ascii 'EX-MUTANT IS//ARRESTED FOR//STREAKING!',0
69AC                                                             ; 67B7↑o
69D3 aLabScrewUpWear:        .ascii 'LAB SCREW-UP//WEARS OFF//FILM AT 11.',0
69D3                                                             ; 67B9↑o
69FB aSpouseOfMutant:        .ascii 'SPOUSE OF//MUTANT FILES//LEGAL ACTION.',0
69FB                                                             ; 67BB↑o
6A22 aFormerBeastSay:        .ascii 'FORMER BEAST//SAYS IT MAY//HAPPEN AGAIN.',0
6A22                                                             ; 67BD↑o
6A4B aStillAtLargeVe:        .ascii 'STILL AT //LARGE//VERY LARGE!',0 ; 67D1↑o
6A6C aIsThereNoEndTo:        .ascii 'IS THERE NO//END TO THIS//RAMPAGE???',0
6A6C                                                             ; 67C1↑o
6A91 aPropertyValues:        .ascii 'PROPERTY//VALUES AT//ALL TIME LOW.',0
6A91                                                             ; 67C7↑o
6AB4 aYourAdHereCall:        .ascii 'YOUR AD HERE//CALL NOW! 1-//800-ZOO-KEEP',0
6AB4                                                             ; 67D9↑o
6ADD aJobOpeningsInN:        .ascii 'JOB OPENINGS//IN NATIONAL//GUARD!',0 ; 67C9↑o
6AFF aRealLifeJekyll:        .ascii 'REAL LIFE//JEKYLL AND//HYDE STORY!!',0
6AFF                                                             ; 67D5↑o
6B23 aHintFoodBehind:        .ascii 'HINT//FOOD BEHIND//OPEN WINDOWS.',0
6B23                                                             ; 67C3↑o 67D3↑o
6B47 aHintDuringAJum:        .ascii 'HINT- DURING/A JUMP, HOLD/JOYSTICK UP/TO GRAB SIDE/OF BUILDING.',0
6B47                                                             ; 67BF↑o
6B87 aHintIfYouWatch:        .ascii 'HINT/IF YOU WATCH/WHAT YOU EAT/YOU CAN LIVE/LONGER!',0
6B87                                                             ; 67CB↑o 67DB↑o
6BBE aHintJumpWhenYo:        .ascii 'HINT JUMP//WHEN YOU SEE//DUST CLOUDS!',0
6BBE                                                             ; 67CF↑o
6BE7 aHintMegaVitami:        .ascii 'HINT /MEGA-VITAMIN/BONUS EVERY/128TH DAY/IN PLANO ILL.',0
6BE7                                                             ; 67DD↑o
6C21 aWarningElectri:        .ascii 'WARNING //ELECTRICITY//IS SHOCKING!',0
6C21                                                             ; 67C5↑o
6C48 aRampageHas768D:        .ascii 'RAMPAGE HAS/768 DAYS OF/DESTRUCTION.//NO TWO ALIKE!',0
6C48                                                             ; 67CD↑o
6C7C aHintWantToEatW:        .ascii 'HINT WANT//TO EAT WELL?//PUNCH SLOWER.',0
6C7C                                                             ; 67D7↑o
6CA6 aExperimentalVi:        .ascii 'EXPERIMENTAL//VITAMIN HAS//ILL EFFECTS.',0
6CA6                                                             ; 67DF↑o
6CCE aWomanFindsLake:        .ascii 'WOMAN FINDS//LAKE TO BE//RADIOACTIVE.',0
6CCE                                                             ; 67E1↑o
6CF4 aUnusualFoodAdd:        .ascii 'UNUSUAL FOOD//ADDITIVE MAY//BE RECALLED.',0
6CF4                                                             ; 67E3↑o
6D1D aEverGrowingCon:        .ascii 'EVER GROWING//CONCERN OVER//MEGA-VITAMIN.',0
6D1D                                                             ; 67E5↑o
6D47 aRadioactiveLak:        .ascii 'RADIOACTIVE//LAKE CHANGES//WOMANS SCALE.',0
6D47                                                             ; 67E7↑o
6D70 aCityHowlingMad:        .ascii 'CITY HOWLING//MAD, SAUSAGE//SCAM EXPOSED.',0
6D70                                                             ; 67E9↑o
6D9A aJoinTheAction:         .ascii '/  JOIN THE//   ACTION',0   ; message_table↑o
6DB1 aPressJump2butt:        .ascii '/PRESS JUMP//#2BUTTON',0    ; 67B5↑o
6DC7 dateline_bg_empty:      db  82h,   4, 71h,   5, 71h, 13h,   4, 71h,   8,   0, 20h
6DC7                                                             ; loc_66C6↑o
6DC7                                                             ; 66EA↑o 
6DD2                         db  8Ah,   4, 71h,   5, 71h,   4, 71h,   9, 71h,   2, 71h
6DDD                         db    9, 71h,   3, 71h,   6, 71h,   7, 71h, 0Ah, 71h, 0Dh
6DE8                         db  0Bh, 71h, 81h,   9, 71h,   3,   0, 20h, 81h, 8Fh, 61h
6DF3                         db    4,   0, 20h, 82h,   9, 71h,   2, 71h,   2,   9, 71h
6DFE                         db  81h,   2, 71h, 13h,   9, 71h,   3,   0, 20h, 81h, 87h
6E09                         db  61h,   4,   0, 20h, 82h,   9, 71h,   2, 71h,   2,   9
6E14                         db  71h, 82h,   2, 71h,   9, 71h,   4,   8, 71h, 0Eh,   9
6E1F                         db  71h,   2,   0, 20h, 84h, 90h, 61h, 84h, 61h,   0, 20h
6E2A                         db  8Ah, 61h,   2,   0, 20h, 82h,   9, 71h,   2, 71h,   2
6E35                         db    9, 71h, 82h,   2, 71h,   9, 71h,   4,   8, 71h, 0Eh
6E40                         db    9, 71h,   2,   0, 20h, 84h, 8Ch, 61h, 84h, 61h,   0
6E4B                         db  20h, 84h, 61h,   2,   0, 20h, 82h,   9, 71h,   2, 71h
6E56                         db    2,   9, 71h, 82h,   2, 71h,   9, 71h,   4,   8, 71h
6E61                         db  0Eh,   9, 71h, 8Ah, 85h, 65h, 8Eh, 65h, 86h, 61h, 84h
6E6C                         db  61h, 86h, 61h, 84h, 61h, 89h, 61h,   0, 20h,   9, 71h
6E77                         db    2, 71h,   2,   9, 71h, 82h,   2, 71h,   9, 71h,   4
6E82                         db    8, 71h, 0Eh,   9, 71h, 82h, 85h, 65h, 85h, 61h,   2
6E8D                         db  84h, 61h, 81h, 86h, 61h,   2, 84h, 61h, 83h, 8Bh, 61h
6E98                         db    9, 71h,   2, 71h,   2,   9, 71h, 82h,   2, 71h,   9
6EA3                         db  71h,   4,   8, 71h, 0Eh,   9, 71h, 82h, 84h, 61h, 85h
6EAE                         db  61h,   6, 84h, 61h, 82h,   9, 71h,   2, 71h,   2,   9
6EB9                         db  71h, 82h,   2, 71h,   9, 71h,   4,   8, 71h, 0Eh,   9
6EC4                         db  71h,   8, 84h, 61h, 82h,   9, 71h,   2, 71h,   2,   9
6ECF                         db  71h, 81h,   2, 71h, 13h,   9, 71h,   8, 84h, 61h, 83h
6EDA                         db    9, 71h,   2, 71h,   9, 71h,   0
6EE1 dateline_bg_george:     db  82h,   4, 41h,   5, 41h, 13h,   4, 41h,   2,   0, 20h
6EE1                                                             ; dateline_images↑o
6EE1                                                             ; 68ED↑o
6EEC                         db  84h, 11h, 60h,0B1h, 60h,0B3h, 60h, 11h, 64h,   2,   0
6EF7                         db  20h, 8Ah,   4, 41h,   5, 41h,   4, 41h,   9, 41h,   2
6F02                         db  41h,   9, 41h,   3, 41h,   6, 41h,   7, 41h, 0Ah, 41h
6F0D                         db  0Dh, 0Bh, 41h, 81h,   9, 41h,   2,   0, 20h, 84h,0B0h
6F18                         db  60h,0B2h, 60h,0B4h, 60h,0B5h, 60h,   2,   0, 20h, 82h
6F23                         db    9, 41h,   2, 41h,   2,   9, 41h, 81h,   2, 41h, 13h
6F2E                         db    9, 41h, 8Ah,   0, 20h,0B6h, 60h,0B7h, 60h,0B8h, 60h
6F39                         db 0B9h, 60h,0BAh, 60h,0BBh, 60h,   0, 20h,   9, 41h,   2
6F44                         db  41h,   2,   9, 41h, 82h,   2, 41h,   9, 41h,   4,   8
6F4F                         db  41h, 0Eh,   9, 41h, 8Ah, 11h, 60h,0BCh, 60h,0BDh, 60h
6F5A                         db 0BEh, 60h,0BFh, 60h,0C0h, 60h,0C1h, 60h,   0, 20h,   9
6F65                         db  41h,   2, 41h,   2,   9, 41h, 82h,   2, 41h,   9, 41h
6F70                         db    4,   8, 41h, 0Eh,   9, 41h, 8Ah,0C2h, 60h,0C5h, 60h
6F7B                         db 0C6h, 60h,0C8h, 60h,0C9h, 60h,0CAh, 60h,0CBh, 60h,   0
6F86                         db  20h,   9, 41h,   2, 41h,   2,   9, 41h, 82h,   2, 41h
6F91                         db    9, 41h,   4,   8, 41h, 0Eh,   9, 41h, 8Ah,0C3h, 60h
6F9C                         db 0C4h, 60h,0C7h, 60h,0CCh, 60h,0CDh, 60h,0CEh, 60h,0CFh
6FA7                         db  60h,0D0h, 60h,   9, 41h,   2, 41h,   2,   9, 41h, 82h
6FB2                         db    2, 41h,   9, 41h,   4,   8, 41h, 0Eh,   9, 41h, 8Ah
6FBD                         db 0D1h, 60h,0D2h, 60h,0D3h, 60h,0D4h, 60h,0D5h, 60h,0D6h
6FC8                         db  60h,0D7h, 60h,0D8h, 60h,   9, 41h,   2, 41h,   2,   9
6FD3                         db  41h, 82h,   2, 41h,   9, 41h,   4,   8, 41h, 0Eh,   9
6FDE                         db  41h, 8Ah,0E0h, 60h,0DFh, 60h,0DEh, 60h,0DDh, 60h,0DCh
6FE9                         db  60h,0DBh, 60h,0DAh, 60h,0D9h, 60h,   9, 41h,   2, 41h
6FF4                         db    2,   9, 41h, 82h,   2, 41h,   9, 41h,   4,   8, 41h
6FFF                         db  0Eh,   9, 41h, 8Ah,0E1h, 60h,0E2h, 60h,0E3h, 60h,0E4h
700A                         db  60h,0E5h, 60h,0E6h, 60h,0E7h, 60h,0E8h, 60h,   9, 41h
7015                         db    2, 41h,   2,   9, 41h, 81h,   2, 41h, 13h,   9, 41h
7020                         db  8Bh,0F0h, 60h,0EFh, 60h,0EEh, 60h,0EDh, 60h,0ECh, 60h
702B                         db 0EBh, 60h,0EAh, 60h,0E9h, 60h,   9, 41h,   2, 41h,   9
7036                         db  41h,   0
7038 dateline_bg_lizzie:     db  82h,   4, 41h,   5, 41h, 13h,   4, 41h,   4,   0, 20h
7038                                                             ; 6714↑o 693F↑o
7043                         db  81h, 11h, 64h,   3,   0, 20h, 8Ah,   4, 41h,   5, 41h
704E                         db    4, 41h,   9, 41h,   2, 41h,   9, 41h,   3, 41h,   6
7059                         db  41h,   7, 41h, 0Ah, 41h, 0Dh, 0Bh, 41h, 81h,   9, 41h
7064                         db    2,   0, 20h, 84h, 11h, 60h, 12h, 60h, 13h, 60h, 14h
706F                         db  64h,   2,   0, 20h, 82h,   9, 41h,   2, 41h,   2,   9
707A                         db  41h, 81h,   2, 41h, 13h,   9, 41h, 8Ah,   0, 20h, 14h
7085                         db  60h, 15h, 60h, 16h, 60h, 17h, 60h, 18h, 60h, 19h, 60h
7090                         db    0, 20h,   9, 41h,   2, 41h,   2,   9, 41h, 82h,   2
709B                         db  41h,   9, 41h,   4,   8, 41h, 0Eh,   9, 41h, 8Ah,   0
70A6                         db  20h, 1Ah, 60h, 1Bh, 60h, 1Ch, 60h, 1Dh, 60h, 1Eh, 60h
70B1                         db  1Fh, 60h,   0, 20h,   9, 41h,   2, 41h,   2,   9, 41h
70BC                         db  82h,   2, 41h,   9, 41h,   4,   8, 41h, 0Eh,   9, 41h
70C7                         db  8Ah, 11h, 60h, 79h, 61h, 22h, 60h, 23h, 60h, 24h, 60h
70D2                         db  25h, 60h, 26h, 60h,   0, 20h,   9, 41h,   2, 41h,   2
70DD                         db    9, 41h, 82h,   2, 41h,   9, 41h,   4,   8, 41h, 0Eh
70E8                         db    9, 41h, 8Ah, 27h, 60h, 28h, 60h, 29h, 60h, 2Ah, 60h
70F3                         db  2Bh, 60h, 7Ah, 61h, 7Bh, 61h, 7Ch, 61h,   9, 41h,   2
70FE                         db  41h,   2,   9, 41h, 82h,   2, 41h,   9, 41h,   4,   8
7109                         db  41h, 0Eh,   9, 41h, 8Ah, 12h, 61h, 3Ah, 60h, 3Bh, 60h
7114                         db  3Ch, 60h, 3Dh, 60h, 3Eh, 60h, 7Dh, 61h, 40h, 60h,   9
711F                         db  41h,   2, 41h,   2,   9, 41h, 82h,   2, 41h,   9, 41h
712A                         db    4,   8, 41h, 0Eh,   9, 41h, 8Ah, 12h, 61h, 13h, 61h
7135                         db  60h, 60h, 5Fh, 60h, 5Eh, 60h, 5Dh, 60h, 5Ch, 60h, 5Bh
7140                         db  60h,   9, 41h,   2, 41h,   2,   9, 41h, 82h,   2, 41h
714B                         db    9, 41h,   4,   8, 41h, 0Eh,   9, 41h, 8Ah, 14h, 61h
7156                         db  17h, 61h, 18h, 61h, 1Ah, 61h, 1Ch, 61h, 1Fh, 61h, 20h
7161                         db  61h, 21h, 61h,   9, 41h,   2, 41h,   2,   9, 41h, 81h
716C                         db    2, 41h, 13h,   9, 41h, 8Bh, 15h, 61h, 16h, 61h, 19h
7177                         db  61h, 1Bh, 61h, 1Dh, 61h, 1Eh, 61h, 23h, 61h, 22h, 61h
7182                         db    9, 41h,   2, 41h,   9, 41h,   0
7189 dateline_bg_ralph:      db  82h,   4, 41h,   5, 41h, 13h,   4, 41h, 83h,   0, 20h
7189                                                             ; 6716↑o 698F↑o
7194                         db  24h, 61h, 25h, 61h,   2,   0, 20h, 8Dh, 2Bh, 61h, 2Ch
719F                         db  61h,   0, 20h,   4, 41h,   5, 41h,   4, 41h,   9, 41h
71AA                         db    2, 41h,   9, 41h,   3, 41h,   6, 41h,   7, 41h, 0Ah
71B5                         db  41h, 0Dh, 0Bh, 41h, 8Bh,   9, 41h,   0, 20h, 27h, 61h
71C0                         db  26h, 61h, 28h, 61h, 29h, 61h, 2Ah, 61h, 2Dh, 61h,   0
71CB                         db  20h,   9, 41h,   2, 41h,   2,   9, 41h, 81h,   2, 41h
71D6                         db  13h,   9, 41h, 8Ah,   0, 20h, 80h, 64h, 7Bh, 60h, 7Dh
71E1                         db  60h, 7Eh, 60h, 7Fh, 60h, 80h, 60h,   0, 20h,   9, 41h
71EC                         db    2, 41h,   2,   9, 41h, 82h,   2, 41h,   9, 41h,   4
71F7                         db    8, 41h, 0Eh,   9, 41h, 8Ah,   0, 20h, 86h, 60h, 85h
7202                         db  60h, 84h, 60h, 83h, 60h, 82h, 60h, 81h, 60h,   0, 20h
720D                         db    9, 41h,   2, 41h,   2,   9, 41h, 82h,   2, 41h,   9
7218                         db  41h,   4,   8, 41h, 0Eh,   9, 41h, 8Ah,   0, 20h, 87h
7223                         db  60h, 88h, 60h, 89h, 60h, 8Ah, 60h, 8Bh, 60h, 8Ch, 60h
722E                         db    0, 20h,   9, 41h,   2, 41h,   2,   9, 41h, 82h,   2
7239                         db  41h,   9, 41h,   4,   8, 41h, 0Eh,   9, 41h, 8Ah, 94h
7244                         db  60h, 93h, 60h, 92h, 60h, 91h, 60h, 90h, 60h, 8Fh, 60h
724F                         db  8Eh, 60h, 8Dh, 60h,   9, 41h,   2, 41h,   2,   9, 41h
725A                         db  82h,   2, 41h,   9, 41h,   4,   8, 41h, 0Eh,   9, 41h
7265                         db  8Ah, 95h, 60h, 96h, 60h, 97h, 60h, 98h, 60h, 99h, 60h
7270                         db  9Ah, 60h, 9Bh, 60h, 9Ch, 60h,   9, 41h,   2, 41h,   2
727B                         db    9, 41h, 82h,   2, 41h,   9, 41h,   4,   8, 41h, 0Eh
7286                         db    9, 41h, 8Ah, 9Dh, 60h,0AEh, 60h, 9Eh, 60h, 9Fh, 60h
7291                         db 0A1h, 60h,0A2h, 60h,0A3h, 60h,0AEh, 60h,   9, 41h,   2
729C                         db  41h,   2,   9, 41h, 82h,   2, 41h,   9, 41h,   4,   8
72A7                         db  41h, 0Eh,   9, 41h, 8Ah,0AFh, 60h,0A4h, 60h,0AAh, 60h
72B2                         db 0A9h, 60h,0A8h, 60h,0A7h, 60h,0A4h, 60h,0AFh, 60h,   9
72BD                         db  41h,   2, 41h,   2,   9, 41h, 81h,   2, 41h, 13h,   9
72C8                         db  41h, 8Bh,0A4h, 64h,0A4h, 6Ch,0ABh, 60h,0ACh, 60h,0ADh
72D3                         db  60h,0A6h, 60h,0A5h, 60h,0A4h, 60h,   9, 41h,   2, 41h
72DE                         db    9, 41h,   0
72E1 ; ---------------------------------------------------------------------------
72E1 ; START OF FUNCTION CHUNK FOR sub_335D
72E1
72E1 loc_72E1:                                                   ; 3381
72E1                         push    iy
72E3                         call    sub_72E9
72E6                         pop     iy
72E8                         ret
72E8 ; END OF FUNCTION CHUNK FOR sub_335D
72E9
72E9 ; =============== S U B R O U T I N E =======================================
72E9
72E9
72E9 sub_72E9:                                                   ; 72E3↑p
72E9                         ld      hl, byte_731F
72EC                         ld      b, (ix+26h)
72EF                         dec     b
72F0                         sla     b
72F2                         sla     b
72F4                         ld      a, (ix+1Dh)
72F7                         or      a
72F8                         ld      a, b
72F9                         jr      z, loc_72FD
72FB                         add     a, 2
72FD
72FD loc_72FD:                                                   ; 72F9
72FD                         rst     HL_plus_A
72FE                         ld      b, (hl)
72FF                         inc     hl
7300                         ld      c, (hl)
7301                         ld      a, (ix+8)
7304                         add     a, b
7305                         ld      (ix+32h), a
7308                         ld      a, (ix+16h)
730B                         cp      1
730D                         jr      z, loc_7314
730F                         ld      a, (ix+0Ah)
7312                         jr      loc_7316
7314 ; ---------------------------------------------------------------------------
7314
7314 loc_7314:                                                   ; 730D
7314                         ld      a, 17h
7316
7316 loc_7316:                                                   ; 7312
7316                         add     a, c
7317                         ld      (ix+33h), a
731A                         ld      (ix+35h), 1Eh
731E                         ret
731E ; End of function sub_72E9
731E
731E ; ---------------------------------------------------------------------------
731F byte_731F:              db  14h, 10h,0ECh, 10h,0E5h, 14h, 19h, 14h,   4, 2Ah,0FCh
731F                                                             ; sub_72E9↑o
732A                         db  2Ah, 0Ch,0F2h,0F4h,0F2h
732F
732F ; =============== S U B R O U T I N E =======================================
732F
732F
732F sub_732F:                                                   ; 2C23↑p 330E↑p
732F                         ld      a, (ix+2)
7332                         or      a
7333                         jr      z, loc_733C
7335                         cp      1
7337                         jr      z, loc_7355
7339                         jp      loc_736D
733C ; ---------------------------------------------------------------------------
733C
733C loc_733C:                                                   ; 7333
733C                         push    iy
733E                         ld      iy, Lizzie_data
7342                         call    sub_7385
7345                         ld      a, (byte_E025)
7348                         or      a
7349                         jr      nz, loc_7352
734B                         ld      iy, Ralph_data
734F                         call    sub_7385
7352
7352 loc_7352:                                                   ; 7349 7362↓j 
7352                         pop     iy
7354                         ret
7355 ; ---------------------------------------------------------------------------
7355
7355 loc_7355:                                                   ; 7337
7355                         push    iy
7357                         ld      iy, George_data
735B                         call    sub_7385
735E                         ld      a, (byte_E025)
7361                         or      a
7362                         jr      nz, loc_7352
7364                         ld      iy, Ralph_data
7368                         call    sub_7385
736B                         jr      loc_7352
736D ; ---------------------------------------------------------------------------
736D
736D loc_736D:                                                   ; 7339
736D                         push    iy
736F                         ld      iy, George_data
7373                         call    sub_7385
7376                         ld      a, (byte_E025)
7379                         or      a
737A                         jr      nz, loc_7352
737C                         ld      iy, Lizzie_data
7380                         call    sub_7385
7383                         jr      loc_7352
7383 ; End of function sub_732F
7383
7385
7385 ; =============== S U B R O U T I N E =======================================
7385
7385
7385 sub_7385:                                                   ; 7342↑p 734F↑p 
7385                         xor     a
7386                         ld      (byte_E025), a
7389                         ld      a, (iy+45h)
738C                         or      a
738D                         ret     nz
738E                         ld      a, (iy+1)
7391                         cp      2
7393                         ret     nz
7394                         call    sub_75E7
7397                         ret     z
7398                         ld      a, (iy+8)
739B                         add     a, 0
739D                         ld      b, a
739E                         ld      a, (iy+0Ah)
73A1                         add     a, 0Ch
73A3                         ld      c, a
73A4                         push    bc
73A5                         call    sub_73CF
73A8                         pop     bc
73A9                         ld      a, (byte_E025)
73AC                         cp      0FFh
73AE                         jr      z, loc_73CA
73B0                         or      a
73B1                         ret     nz
73B2                         ld      a, b
73B3                         cp      (ix+32h)
73B6                         jr      nc, loc_73BC
73B8                         add     a, 3
73BA                         jr      loc_73BE
73BC ; ---------------------------------------------------------------------------
73BC
73BC loc_73BC:                                                   ; 73B6
73BC                         sub     3
73BE
73BE loc_73BE:                                                   ; 73BA
73BE                         ld      b, a
73BF                         call    sub_73CF
73C2                         ld      a, (byte_E025)
73C5                         cp      0FFh
73C7                         jr      z, loc_73CA
73C9                         ret
73CA ; ---------------------------------------------------------------------------
73CA
73CA loc_73CA:                                                   ; 73AE 73C7
73CA                         xor     a
73CB                         ld      (byte_E025), a
73CE                         ret
73CE ; End of function sub_7385
73CE
73CF
73CF ; =============== S U B R O U T I N E =======================================
73CF
73CF
73CF sub_73CF:                                                   ; 73A5↑p 73BF↑p
73CF                         push    iy
73D1                         call    sub_73D7
73D4                         pop     iy
73D6                         ret
73D6 ; End of function sub_73CF
73D6
73D7
73D7 ; =============== S U B R O U T I N E =======================================
73D7
73D7
73D7 sub_73D7:                                                   ; 73D1↑p
73D7                         ld      a, (ix+32h)
73DA                         sub     b
73DB                         ld      b, a
73DC                         jr      nc, loc_73E0
73DE                         neg
73E0
73E0 loc_73E0:                                                   ; 73DC
73E0                         cp      11h
73E2                         jp      nc, loc_750A
73E5                         ld      a, 10h
73E7                         add     a, b
73E8                         ld      b, a
73E9                         ld      a, (ix+33h)
73EC                         sub     c
73ED                         ld      c, a
73EE                         jr      nc, loc_73F2
73F0                         neg
73F2
73F2 loc_73F2:                                                   ; 73EE
73F2                         cp      14h
73F4                         jp      nc, loc_750A
73F7                         ld      a, 13h
73F9                         add     a, c
73FA                         ld      c, a
73FB                         ld      a, 26h ; '&'
73FD                         sub     c
73FE                         ld      hl, byte_74B2
7401                         and     0FEh
7403                         ld      c, a
7404                         ld      a, (iy+16h)
7407                         cp      2
7409                         jr      z, loc_741A
740B                         cp      1
740D                         jr      nz, loc_7425
740F                         ld      a, (ix+16h)
7412                         cp      1
7414                         jr      nz, loc_7425
7416                         ld      a, 0Eh
7418                         jr      loc_7426
741A ; ---------------------------------------------------------------------------
741A
741A loc_741A:                                                   ; 7409
741A                         ld      a, c
741B                         cp      1Ah
741D                         jr      c, loc_7426
741F                         ld      hl, byte_7506
7422                         xor     a
7423                         jr      loc_7426
7425 ; ---------------------------------------------------------------------------
7425
7425 loc_7425:                                                   ; 740D 7414
7425                         ld      a, c
7426
7426 loc_7426:                                                   ; 7418 741D 
7426                         nop
7427                         sla     a
7429                         rst     HL_plus_A
742A                         ld      a, (iy+1Dh)
742D                         or      a
742E                         jr      z, loc_7476
7430                         bit     4, b
7432                         jr      z, loc_7436
7434                         inc     hl
7435                         inc     hl
7436
7436 loc_7436:                                                   ; 7432
7436                         bit     3, b
7438                         jr      z, loc_743B
743A                         inc     hl
743B
743B loc_743B:                                                   ; 7438
743B                         ld      a, b
743C                         and     7
743E                         ld      b, (hl)
743F                         call    sub_7515
7442                         jr      z, loc_7490
7444
7444 loc_7444:                                                   ; 748E↓j
7444                         ld      (ix+3Fh), 1
7448                         ld      a, 1
744A                         ld      (byte_E025), a
744D                         ld      (iy+45h), a
7450                         ld      a, (iy+3Dh)
7453                         or      a
7454                         ld      (ix+2Bh), 0
7458                         jr      nz, loc_7467
745A                         call    sub_7567
745D                         call    sub_538C
7460                         ld      hl, score_225
7463                         call    add_to_score
7466                         ret
7467 ; ---------------------------------------------------------------------------
7467
7467 loc_7467:                                                   ; 7458
7467                         ld      (ix+2Bh), 0
746B                         ld      a, (iy+3Eh)
746E                         ld      (ix+3Eh), a
7471                         ld      (ix+3Dh), 59h ; 'Y'
7475                         ret
7476 ; ---------------------------------------------------------------------------
7476
7476 loc_7476:                                                   ; 742E
7476                         ld      a, b
7477                         add     a, 0FFh
7479                         ld      b, a
747A                         bit     4, b
747C                         jr      nz, loc_7480
747E                         inc     hl
747F                         inc     hl
7480
7480 loc_7480:                                                   ; 747C
7480                         bit     3, b
7482                         jr      nz, loc_7485
7484                         inc     hl
7485
7485 loc_7485:                                                   ; 7482
7485                         ld      a, b
7486                         and     7
7488                         ld      b, (hl)
7489                         call    sub_7532
748C                         jr      z, loc_7490
748E                         jr      loc_7444
7490 ; ---------------------------------------------------------------------------
7490
7490 loc_7490:                                                   ; 7442 748C
7490                         ld      (ix+3Fh), 0
7494                         ld      a, 1
7496                         ret
7496 ; ---------------------------------------------------------------------------
7497                         db 0DDh, 7Eh, 3Fh,0FDh, 77h,   1,0FDh, 36h,   2, 55h,0DDh
74A2                         db  7Eh, 32h,0D6h,   8,0FDh, 77h,   3,0DDh, 7Eh, 33h,0C6h
74AD                         db    8,0FDh, 77h,   0,0C9h
74B2 byte_74B2:              db    0,   0,   0,   0,   0, 1Ch,   0,   0,   0, 3Fh,   0
74B2                                                             ; 3D3D↑o 73FE↑o
74BD                         db    0,   0, 7Fh,   0,   0,   0,0FFh, 80h,   0,   0
74C7                         db 0FFh,0E0h,   0,   0,0FFh,0F8h,   0,   0,0FFh,0F8h,   0
74D2                         db    0, 7Fh,0FCh,   0,   0, 7Fh,0FEh,   0,   0, 7Fh,0FEh
74DD                         db    0,   0, 3Fh,0FEh,   0,   0, 3Fh,0FEh,   0,   0, 1Fh
74E8                         db 0FEh,   0,   0, 0Fh,0FFh,   0,   0, 0Fh,0FFh, 80h,   0
74F3                         db    7,0FFh, 80h,   0,   3,0FFh, 80h,   0,   3,0FFh,   0
74FE                         db    0,   1,0E0h,   0,   0,   0,   0,   0
7506 byte_7506:              db    0,   1,0E0h,   0              ; 3D51↑o 741F↑o
750A ; ---------------------------------------------------------------------------
750A
750A loc_750A:                                                   ; 73E2 73F4
750A                         nop
750B                         ld      (ix+3Fh), 0
750F                         ld      a, 0FFh
7511                         ld      (byte_E025), a
7514                         ret
7514 ; End of function sub_73D7
7514
7515
7515 ; =============== S U B R O U T I N E =======================================
7515
7515
7515 sub_7515:                                                   ; 3D71↑p 743F↑p
7515                         or      a
7516                         jr      z, loc_754F
7518                         cp      1
751A                         jr      z, loc_7552
751C                         cp      2
751E                         jr      z, loc_7555
7520                         cp      3
7522                         jr      z, loc_7558
7524                         cp      4
7526                         jr      z, loc_755B
7528                         cp      5
752A                         jr      z, loc_755E
752C                         cp      6
752E                         jr      z, loc_7561
7530                         jr      loc_7564
7530 ; End of function sub_7515
7530
7532
7532 ; =============== S U B R O U T I N E =======================================
7532
7532
7532 sub_7532:                                                   ; 3DA7↑p 7489↑p
7532                         or      a
7533                         jr      z, loc_7564
7535                         cp      1
7537                         jr      z, loc_7561
7539                         cp      2
753B                         jr      z, loc_755E
753D                         cp      3
753F                         jr      z, loc_755B
7541                         cp      4
7543                         jr      z, loc_7558
7545                         cp      5
7547                         jr      z, loc_7555
7549                         cp      6
754B                         jr      z, loc_7552
754D                         jr      loc_754F
754F ; ---------------------------------------------------------------------------
754F
754F loc_754F:                                                   ; 7516 754D
754F                         bit     7, b
7551                         ret
7552 ; ---------------------------------------------------------------------------
7552
7552 loc_7552:                                                   ; 751A 754B
7552                         bit     6, b
7554                         ret
7555 ; ---------------------------------------------------------------------------
7555
7555 loc_7555:                                                   ; 751E 7547
7555                         bit     5, b
7557                         ret
7558 ; ---------------------------------------------------------------------------
7558
7558 loc_7558:                                                   ; 7522 7543
7558                         bit     4, b
755A                         ret
755B ; ---------------------------------------------------------------------------
755B
755B loc_755B:                                                   ; 7526 753F
755B                         bit     3, b
755D                         ret
755E ; ---------------------------------------------------------------------------
755E
755E loc_755E:                                                   ; 752A 753B
755E                         bit     2, b
7560                         ret
7561 ; ---------------------------------------------------------------------------
7561
7561 loc_7561:                                                   ; 752E 7537
7561                         bit     1, b
7563                         ret
7564 ; ---------------------------------------------------------------------------
7564
7564 loc_7564:                                                   ; 7530 7533
7564                         bit     0, b
7566                         ret
7566 ; End of function sub_7532
7566
7567
7567 ; =============== S U B R O U T I N E =======================================
7567
7567
7567 sub_7567:                                                   ; 745A↑p
7567
7567 ; FUNCTION CHUNK AT 75C4 SIZE 00000005 BYTES
7567
7567                         ld      c, 64
7569                         rst     dispatch_sound
756A                         ld      (iy+40h), 1
756E                         ld      (iy+2Bh), 0
7572                         ld      (iy+41h), 14h
7576                         ld      hl, 200h
7579                         ld      a, (iy+25h)
757C                         or      a
757D                         jr      nz, loc_7594
757F                         ld      a, (iy+16h)
7582                         cp      1
7584                         jr      z, sub_75A3
7586                         cp      2
7588                         jr      z, loc_75C4
758A                         ld      hl, 100h
758D                         cp      3
758F                         jr      z, sub_75A3
7591                         ld      hl, 140h
7594
7594 loc_7594:                                                   ; 757D
7594                         ld      h, (iy+0Ch)
7597                         ld      l, (iy+0Dh)
759A                         bit     7, h
759C                         call    nz, negate_hl
759F                         call    sub_75A3
75A2                         ret
75A2 ; End of function sub_7567
75A2
75A3
75A3 ; =============== S U B R O U T I N E =======================================
75A3
75A3
75A3 sub_75A3:                                                   ; 7584 758F 
75A3                         ld      a, h
75A4                         or      a
75A5                         jr      nz, loc_75AA
75A7                         ld      hl, 100h
75AA
75AA loc_75AA:                                                   ; 75A5
75AA                         ld      a, (iy+8)
75AD                         cp      (ix+8)
75B0                         jr      nc, loc_75B5
75B2                         call    negate_hl
75B5
75B5 loc_75B5:                                                   ; 75B0 75C7↓j
75B5                         ld      (iy+0Ch), h
75B8                         ld      (iy+0Dh), l
75BB                         ld      (iy+0Eh), 0
75BF                         ld      (iy+0Fh), 0
75C3                         ret
75C3 ; End of function sub_75A3
75C3
75C4 ; ---------------------------------------------------------------------------
75C4 ; START OF FUNCTION CHUNK FOR sub_7567
75C4
75C4 loc_75C4:                                                   ; 7588
75C4                         ld      hl, 0
75C7                         jr      loc_75B5
75C7 ; END OF FUNCTION CHUNK FOR sub_7567
75C9
75C9 ; =============== S U B R O U T I N E =======================================
75C9
75C9
75C9 sub_75C9:                                                   ; 559B↑p
75C9                         ld      c, 60
75CB                         rst     dispatch_sound
75CC                         ld      (iy+40h), 1
75D0                         ld      (iy+2Bh), 0
75D4                         ld      a, (ix+1Fh)
75D7                         and     1Fh
75D9                         ld      (iy+41h), a
75DC                         ld      hl, 100h
75DF                         jr      sub_75A3
75DF ; End of function sub_75C9
75DF
75E1
75E1 ; =============== S U B R O U T I N E =======================================
75E1
75E1
75E1 sub_75E1:                                                   ; 3CFA↑p 64B7↑p
75E1                         ld      a, (iy+3Dh)
75E4                         or      a
75E5                         jr      nz, loc_7611
75E5 ; End of function sub_75E1
75E5
75E7
75E7 ; =============== S U B R O U T I N E =======================================
75E7
75E7
75E7 sub_75E7:                                                   ; 7394↑p
75E7                         ld      a, (iy+1)
75EA                         cp      2
75EC                         jr      nz, loc_7611
75EE                         ld      a, (iy+16h)
75F1                         cp      5
75F3                         jr      z, loc_7611
75F5                         cp      0Ch
75F7                         jr      z, loc_7611
75F9                         cp      0Eh
75FB                         ld      a, (iy+40h)
75FE                         or      a
75FF                         jr      nz, loc_7611
7601                         ld      a, (iy+43h)
7604                         or      a
7605                         jr      nz, loc_7611
7607                         ld      a, (iy+1Bh)
760A                         or      a
760B                         jr      nz, loc_7611
760D                         ld      a, 1
760F                         or      a
7610                         ret
7611 ; ---------------------------------------------------------------------------
7611
7611 loc_7611:                                                   ; 75E5 75EC 
7611                         xor     a
7612                         ret
7612 ; End of function sub_75E7
7612
7612 ; ---------------------------------------------------------------------------
7613 score_status_lines:     db  20h,   0, 70h,   3,   0, 70h,   7, 20h, 40h,   2,   0
7613                                                             ; 896A↓o 8999↓o
761E                         db  70h,   7, 20h, 50h,   2,   0, 70h,   7, 20h, 60h,   8
7629                         db    0, 70h,   6, 20h, 40h,   3,   0, 70h,   6, 20h, 50h
7634                         db    3,   0, 70h,   6, 20h, 60h,   4,   0, 70h,   0
763E silhouette3:            db  13h,   0, 70h, 81h, 8Dh, 71h,   8,   0, 70h, 10h,   0
763E                                                             ; silhouette_table↓o
7649                         db  70h, 81h, 8Ch, 71h,   6,   0, 70h, 81h, 84h, 71h,   4
7654                         db    0, 70h,   2, 8Bh, 71h, 12h,   0, 70h, 81h, 8Ah, 71h
765F                         db    5,   0, 70h,   2, 84h, 71h, 81h, 90h, 71h,   3,   0
766A                         db  70h,   2, 84h, 71h, 11h,   0, 70h, 82h, 85h, 75h, 84h
7675                         db  71h,   5,   0, 70h,   2, 84h, 71h, 81h, 8Ah, 71h,   3
7680                         db    0, 70h,   3, 84h, 71h, 10h,   0, 70h, 83h, 85h, 75h
768B                         db  84h, 71h, 8Bh, 71h,   4,   0, 70h,   3, 84h, 71h, 81h
7696                         db  85h, 71h,   2,   0, 70h,   3, 84h, 71h, 0Ah,   0, 70h
76A1                         db  81h, 8Fh, 71h,   5,   0, 70h,   3, 84h, 71h,   3,   0
76AC                         db  70h,   2, 84h, 71h, 85h, 84h, 75h, 84h, 71h, 85h, 71h
76B7                         db    0, 70h, 8Eh, 71h,   3, 84h, 71h, 81h, 8Eh, 75h,   9
76C2                         db    0, 70h, 81h, 8Ah, 71h,   3,   0, 70h, 82h, 84h, 71h
76CD                         db    0, 70h,   3, 84h, 71h,   3,   0, 70h,   2, 84h, 71h
76D8                         db  85h, 84h, 75h, 84h, 71h, 85h, 71h,   0, 70h, 8Eh, 71h
76E3                         db    3, 84h, 71h, 81h, 8Eh, 75h,   9,   0, 70h, 82h, 84h
76EE                         db  71h, 85h, 71h,   2,   0, 70h, 82h, 84h, 71h,   0, 70h
76F9                         db    3, 84h, 71h, 81h, 85h, 71h,   2,   0, 70h,   2, 84h
7704                         db  71h, 84h, 84h, 75h, 84h, 71h, 85h, 71h, 8Eh, 71h,   4
770F                         db  84h, 71h, 81h, 8Eh, 75h,   9,   0, 70h, 82h, 84h, 71h
771A                         db  85h, 71h,   2,   0, 70h, 82h, 84h, 71h, 85h, 71h,   3
7725                         db  84h, 71h, 83h, 85h, 71h,   0, 70h, 8Ch, 71h,   2, 84h
7730                         db  71h, 84h, 84h, 75h, 84h, 71h, 85h, 71h, 8Eh, 71h,   5
773B                         db  84h, 71h, 81h, 8Eh, 75h,   7,   0, 70h, 87h, 8Dh, 75h
7746                         db  84h, 71h, 85h, 71h,   0, 70h, 85h, 75h, 84h, 71h, 85h
7751                         db  71h,   3, 84h, 71h, 82h, 85h, 71h,   0, 70h,   5, 84h
775C                         db  71h, 82h, 85h, 71h, 8Eh, 71h,   6, 84h, 71h,   7,   0
7767                         db  70h,   3, 84h, 71h, 82h,   0, 70h, 85h, 75h,   5, 84h
7772                         db  71h, 82h, 85h, 71h,   0, 70h,   5, 84h, 71h, 82h, 85h
777D                         db  71h, 8Eh, 71h,   6, 84h, 71h,   2,   0, 70h, 81h, 84h
7788                         db  71h,   4,   0, 70h,   3, 84h, 71h, 82h,   0, 70h, 85h
7793                         db  75h,   5, 84h, 71h, 82h, 85h, 71h,   0, 70h,   5, 84h
779E                         db  71h, 81h, 85h, 71h,   7, 84h, 71h,   2,   0, 70h, 81h
77A9                         db  84h, 71h,   4,   0, 70h,   3, 84h, 71h, 82h,   0, 70h
77B4                         db  85h, 75h,   5, 84h, 71h, 82h, 85h, 71h,   0, 70h,   5
77BF                         db  84h, 71h, 81h, 85h, 71h,   7, 84h, 71h,   2,   0, 70h
77CA                         db  85h, 84h, 71h, 95h, 71h, 95h, 71h,   0, 70h, 85h, 75h
77D5                         db    3, 84h, 71h, 82h,   0, 70h, 85h, 75h,   5, 84h, 71h
77E0                         db  82h, 85h, 71h, 85h, 75h,   5, 84h, 71h, 81h, 85h, 71h
77EB                         db    7, 84h, 71h, 87h, 85h, 71h,   0, 70h, 84h, 71h, 84h
77F6                         db  71h, 84h, 71h,   0, 70h, 85h, 75h,   4, 84h, 71h, 81h
7801                         db  85h, 75h,   6, 84h, 71h, 81h, 85h, 75h,   5, 84h, 71h
780C                         db  81h, 85h, 71h,   7, 84h, 71h, 87h, 85h, 71h, 90h, 71h
7817                         db  84h, 71h, 84h, 71h, 84h, 71h,   0, 70h, 85h, 75h,   4
7822                         db  84h, 71h, 81h, 85h, 75h,   6, 84h, 71h, 81h, 85h, 75h
782D                         db    5, 84h, 71h, 81h, 85h, 71h,   7, 84h, 71h, 81h, 85h
7838                         db  71h,   2, 84h, 71h, 84h, 84h, 71h, 84h, 71h,   0, 70h
7843                         db  85h, 75h,   4, 84h, 71h, 81h, 85h, 75h,   6, 84h, 71h
784E                         db  81h, 85h, 75h, 0Dh, 84h, 71h, 81h, 85h, 71h,   2, 84h
7859                         db  71h, 84h, 84h, 71h, 84h, 71h,   0, 70h, 85h, 75h,   4
7864                         db  84h, 71h, 81h, 85h, 75h, 14h, 84h, 71h, 81h, 85h, 71h
786F                         db    4, 84h, 71h, 81h, 85h, 75h,   5, 84h, 71h, 81h, 85h
787A                         db  75h, 14h, 84h, 71h, 81h, 85h, 71h,   4, 84h, 71h, 81h
7885                         db  85h, 75h,   5, 84h, 71h, 81h, 85h, 75h, 14h, 84h, 71h
7890                         db  81h, 85h, 71h, 0Ah, 84h, 71h, 81h, 85h, 75h, 7Fh, 84h
789B                         db  71h, 38h, 84h, 71h,   0
78A0 road_and_pavent:        db    2, 63h, 41h, 81h, 67h, 45h,   8, 66h, 45h, 0Ah, 65h
78A0                                                             ; base_table↓o
78AB                         db  41h,   8, 66h, 41h, 81h, 67h, 41h,   2, 63h, 45h,0A0h ; Compressed block size: 87 bytes
78B6                         db  64h, 41h, 63h, 41h, 64h, 41h, 63h, 41h, 64h, 41h, 63h
78C1                         db  41h, 64h, 41h, 63h, 41h, 64h, 41h, 63h, 41h, 64h, 41h
78CC                         db  63h, 41h, 64h, 41h, 63h, 41h, 64h, 41h, 63h, 41h, 64h
78D7                         db  41h, 63h, 41h, 64h, 41h, 63h, 41h, 64h, 41h, 63h, 41h
78E2                         db  64h, 41h, 63h, 41h, 64h, 41h, 63h, 41h, 64h, 41h, 63h
78ED                         db  45h, 64h, 45h, 63h, 45h, 64h, 45h, 63h, 45h,   0
78F7 train_track:            db 20h, 0F6h, 61h, 20h, 0F2h, 61h, 0 ; table8928_01↓o
78F7                                                             ; Compressed block size: 7 bytes
78FE water_piers1:           db    9,0F0h, 41h, 81h,0F1h, 41h,   3,0ECh, 41h, 81h,0F8h
78FE                                                             ; table8928_04↓o
7909                         db  41h,   4,0F0h, 41h, 81h,0F1h, 41h,   3,0ECh, 41h, 81h ; Compressed block size: 88 bytes
7914                         db 0F8h, 41h,   8,0F0h, 41h, 81h,0F1h, 41h, 8Ah,0EFh, 41h
791F                         db 0F4h, 41h,0EFh, 41h,0F4h, 41h,0EFh, 41h,0F4h, 41h,0EFh
792A                         db  41h,0F4h, 41h,0EFh, 41h,0F3h, 41h,   4,0EBh, 41h, 85h
7935                         db 0F7h, 41h,0F4h, 41h,0EFh, 41h,0F4h, 41h,0F3h, 41h,   4
7940                         db 0EBh, 41h, 89h,0F7h, 41h,0EFh, 41h,0F4h, 41h,0EFh, 41h
794B                         db 0F4h, 41h,0EFh, 41h,0F4h, 41h,0EFh, 41h,0F3h, 41h,   0
7956 water_piers2:           db    8,0F0h, 41h, 81h,0F1h, 41h,   4,0ECh, 41h, 81h,0F8h
7956                                                             ; table8928_05↓o
7961                         db  41h,   3,0F0h, 41h, 81h,0F1h, 41h,   4,0ECh, 41h, 81h ; Compressed block size: 84 bytes
796C                         db 0F8h, 41h,   8,0F0h, 41h, 81h,0F1h, 41h, 89h,0F4h, 41h
7977                         db 0EFh, 41h,0F4h, 41h,0EFh, 41h,0F4h, 41h,0EFh, 41h,0F4h
7982                         db  41h,0EFh, 41h,0F3h, 41h,   5,0EBh, 41h, 84h,0F7h, 41h
798D                         db 0EFh, 41h,0F4h, 41h,0F3h, 41h,   5,0EBh, 41h, 89h,0F7h
7998                         db  41h,0EFh, 41h,0F4h, 41h,0EFh, 41h,0F4h, 41h,0EFh, 41h
79A3                         db 0F4h, 41h,0EFh, 41h,0F3h, 41h,   0
79AA road_with_water_gap_right:db  12h, 66h, 65h, 81h,0EDh, 65h,   4,0ECh, 61h, 81h,0EDh
79AA                                                             ; table8928_02↓o
79B5                         db  61h,   8, 66h, 61h, 12h, 63h, 61h, 81h,0EEh, 65h,   4 ; Compressed block size: 31 bytes
79C0                         db 0EBh, 61h, 81h,0EEh, 61h,   8, 63h, 61h,   0
79C9 road_with_water_gap_left:db    8, 66h, 65h, 81h,0EDh, 65h,   4,0ECh, 61h, 81h,0EDh
79C9                                                             ; table8928_03↓o
79D4                         db  61h, 12h, 66h, 61h,   8, 63h, 61h, 81h,0EEh, 65h,   4 ; Compressed block size: 31 bytes
79DF                         db 0EBh, 61h, 81h,0EEh, 61h, 12h, 63h, 61h,   0
79E8 silhouette2:            db  20h,   0, 70h,   6,   0, 70h, 82h, 8Ch, 71h, 8Bh, 75h
79E8                                                             ; table8928_07↓o
79F3                         db  0Bh,   0, 70h, 81h, 84h, 75h,   6,   0, 70h, 81h, 8Fh ; Compressed block size: 605 bytes
79FE                         db  75h, 0Bh,   0, 70h,   2, 84h, 75h,   3,   0, 70h,   2
7A09                         db  8Bh, 75h,   6,   0, 70h, 81h, 84h, 75h,   6,   0, 70h
7A14                         db  81h, 8Fh, 75h, 0Ah,   0, 70h,   3, 84h, 75h,   3,   0
7A1F                         db  70h,   2, 84h, 75h,   6,   0, 70h, 82h, 84h, 75h, 85h
7A2A                         db  71h,   5,   0, 70h, 81h, 8Ah, 75h, 0Ah,   0, 70h,   3
7A35                         db  84h, 75h,   2,   0, 70h, 81h, 85h, 75h,   2, 84h, 75h
7A40                         db  82h, 85h, 71h, 8Ch, 75h,   3,   0, 70h, 83h, 8Bh, 75h
7A4B                         db  84h, 75h, 85h, 71h,   4,   0, 70h, 82h, 85h, 75h, 84h
7A56                         db  75h,   9,   0, 70h, 81h, 8Eh, 71h,   3, 84h, 75h,   2
7A61                         db    0, 70h, 81h, 85h, 75h,   2, 84h, 75h, 82h, 85h, 71h
7A6C                         db  84h, 75h,   3,   0, 70h,   3, 84h, 75h,   4,   0, 70h
7A77                         db  82h, 85h, 75h, 84h, 75h,   9,   0, 70h, 81h, 8Eh, 71h
7A82                         db    3, 84h, 75h, 87h, 8Eh, 75h,   0, 70h, 85h, 75h, 84h
7A8D                         db  75h, 84h, 71h, 85h, 71h, 84h, 75h,   3,   0, 70h,   3
7A98                         db  84h, 75h,   4,   0, 70h,   3, 84h, 75h,   8,   0, 70h
7AA3                         db  81h, 8Eh, 71h,   4, 84h, 75h, 85h, 8Eh, 75h, 85h, 75h
7AAE                         db  84h, 75h, 84h, 71h, 85h, 71h,   2, 84h, 75h, 82h,   0
7AB9                         db  70h, 85h, 75h,   3, 84h, 75h, 82h,   0, 70h, 8Dh, 71h
7AC4                         db    2,   0, 70h,   3, 84h, 75h,   7,   0, 70h, 81h, 8Eh
7ACF                         db  71h,   5, 84h, 75h, 85h, 8Eh, 75h, 85h, 75h, 84h, 75h
7ADA                         db  84h, 71h, 85h, 71h,   2, 84h, 75h, 82h,   0, 70h, 85h
7AE5                         db  75h,   3, 84h, 75h, 82h, 85h, 75h, 84h, 75h,   2,   0
7AF0                         db  70h,   3, 84h, 75h, 81h, 85h, 71h,   6,   0, 70h,   6
7AFB                         db  84h, 75h, 82h, 8Eh, 75h, 85h, 75h,   5, 84h, 75h, 82h
7B06                         db    0, 70h, 85h, 75h,   3, 84h, 75h, 83h, 85h, 75h, 84h
7B11                         db  75h,   0, 70h,   4, 84h, 75h, 81h, 85h, 71h,   2,   0
7B1C                         db  70h, 81h, 84h, 75h,   3,   0, 70h,   6, 84h, 75h, 82h
7B27                         db  8Eh, 75h, 85h, 75h,   5, 84h, 75h, 82h,   0, 70h, 85h
7B32                         db  75h,   5, 84h, 75h, 81h,   0, 70h,   4, 84h, 75h, 81h
7B3D                         db  85h, 71h,   2,   0, 70h, 81h, 84h, 75h,   3,   0, 70h
7B48                         db    7, 84h, 75h, 81h, 85h, 75h,   5, 84h, 75h, 82h,   0
7B53                         db  70h, 85h, 75h,   5, 84h, 75h, 81h,   0, 70h,   4, 84h
7B5E                         db  75h, 81h, 85h, 71h,   2,   0, 70h, 81h, 84h, 75h,   3
7B69                         db    0, 70h,   7, 84h, 75h, 81h, 85h, 75h,   5, 84h, 75h
7B74                         db  82h,   0, 70h, 85h, 75h,   5, 84h, 75h, 81h, 85h, 71h
7B7F                         db    4, 84h, 75h, 81h, 85h, 71h,   2,   0, 70h,   2, 84h
7B8A                         db  75h, 82h, 90h, 75h, 85h, 75h,   7, 84h, 75h, 81h, 85h
7B95                         db  75h,   5, 84h, 75h, 82h, 85h, 71h, 85h, 75h,   5, 84h
7BA0                         db  75h, 81h, 85h, 71h,   5, 84h, 75h, 82h,   0, 70h, 95h
7BAB                         db  75h,   2, 84h, 75h, 82h, 8Ah, 75h, 85h, 75h,   7, 84h
7BB6                         db  75h, 81h, 85h, 75h,   5, 84h, 75h, 81h, 85h, 71h,   6
7BC1                         db  84h, 75h, 81h, 85h, 71h,   5, 84h, 75h, 81h,   0, 70h
7BCC                         db    4, 84h, 75h, 81h, 85h, 75h,   7, 84h, 75h, 81h, 85h
7BD7                         db  75h,   5, 84h, 75h, 81h, 85h, 71h,   6, 84h, 75h, 81h
7BE2                         db  85h, 71h,   5, 84h, 75h, 81h,   0, 70h,   4, 84h, 75h
7BED                         db  81h, 85h, 75h, 0Dh, 84h, 75h, 81h, 85h, 71h,   6, 84h
7BF8                         db  75h, 81h, 85h, 71h,   5, 84h, 75h, 81h,   0, 70h,   4
7C03                         db  84h, 75h, 81h, 85h, 75h, 14h, 84h, 75h, 81h, 85h, 71h
7C0E                         db    5, 84h, 75h, 81h,   0, 70h,   4, 84h, 75h, 81h, 85h
7C19                         db  75h, 14h, 84h, 75h, 81h, 85h, 71h,   5, 84h, 75h, 81h
7C24                         db  85h, 71h,   4, 84h, 75h, 81h, 85h, 75h, 14h, 84h, 75h
7C2F                         db  81h, 85h, 71h,   5, 84h, 75h, 81h, 85h, 71h, 19h, 84h
7C3A                         db  75h, 81h, 85h, 71h, 68h, 84h, 75h, 40h, 84h, 71h,   0
7C45 silhouette1:            db  0Dh,   0, 70h, 81h, 8Fh, 75h, 12h,   0, 70h, 0Dh,   0
7C45                                                             ; table8928_08↓o
7C45                                                             ; table8928_09↓o
7C50                         db  70h, 81h, 8Fh, 75h, 12h,   0, 30h,   3,   0, 34h,   2 ; Compressed block size: 670 bytes
7C5B                         db    0, 30h, 81h,   0, 34h,   2,   0, 30h, 81h, 87h, 71h
7C66                         db    4,   0, 30h, 81h, 8Fh, 75h, 12h,   0, 30h,   3,   0
7C71                         db  34h,   2,   0, 30h, 81h,   0, 70h,   2,   0, 30h, 81h
7C7C                         db  84h, 71h,   4,   0, 30h, 81h, 8Ch, 71h,   5,   0, 30h
7C87                         db    2, 8Bh, 71h,   5,   0, 30h,   2,   0, 34h,   4,   0
7C92                         db  30h, 81h,   0, 34h,   4,   0, 30h, 85h,   0, 70h,   0
7C9D                         db  30h, 87h, 71h, 84h, 71h, 87h, 71h,   3,   0, 30h, 81h
7CA8                         db  8Ch, 71h,   5,   0, 30h, 82h, 84h, 75h, 84h, 71h,   5
7CB3                         db    0, 30h, 82h, 8Eh, 75h,   0, 34h,   4,   0, 30h, 81h
7CBE                         db    0, 34h,   4,   0, 30h, 82h,   0, 34h,   0, 30h,   3
7CC9                         db  84h, 71h,   3,   0, 30h, 81h, 84h, 71h,   2,   0, 30h
7CD4                         db  85h, 8Dh, 71h,   0, 34h,   0, 30h, 84h, 75h, 84h, 71h
7CDF                         db    5,   0, 30h, 82h, 8Eh, 75h,   0, 34h,   4,   0, 30h
7CEA                         db  81h,   0, 34h,   2,   0, 30h,   3,   0, 34h, 81h, 8Eh
7CF5                         db  71h,   3, 84h, 71h, 81h, 8Eh, 75h,   2,   0, 30h, 84h
7D00                         db  84h, 71h, 89h, 71h,   0, 30h, 84h, 71h,   2,   0, 30h
7D0B                         db  82h, 84h, 75h, 84h, 71h,   5,   0, 30h, 83h, 8Eh, 75h
7D16                         db    0, 34h, 8Fh, 75h,   3,   0, 30h,   6,   0, 34h, 81h
7D21                         db  8Eh, 71h,   3, 84h, 71h, 83h, 8Eh, 75h,   0, 30h, 8Eh
7D2C                         db  71h,   2, 84h, 71h, 82h,   0, 30h, 84h, 71h,   2,   0
7D37                         db  30h, 82h, 84h, 75h, 84h, 71h,   4,   0, 30h, 84h, 8Eh
7D42                         db  71h, 8Eh, 75h,   0, 30h, 8Fh, 75h,   3,   0, 30h,   6
7D4D                         db    0, 34h, 81h, 8Eh, 71h,   3, 84h, 71h, 83h, 8Eh, 75h
7D58                         db    0, 30h, 85h, 75h,   2, 84h, 71h, 82h,   0, 30h, 84h
7D63                         db  71h,   2,   0, 30h, 83h, 84h, 75h, 84h, 71h, 85h, 71h
7D6E                         db    2,   0, 30h, 83h, 8Bh, 71h, 8Eh, 71h, 85h, 71h,   2
7D79                         db  8Fh, 75h,   3,   0, 30h,   6,   0, 34h, 81h, 8Eh, 71h
7D84                         db    4, 84h, 71h, 82h,   0, 30h, 85h, 75h,   4, 84h, 71h
7D8F                         db    2,   0, 30h, 83h, 84h, 75h, 84h, 71h, 85h, 71h,   2
7D9A                         db    0, 30h,   2, 84h, 71h, 81h, 85h, 71h,   2, 8Fh, 75h
7DA5                         db    3,   0, 30h,   6,   0, 34h, 81h, 8Eh, 71h,   4, 84h
7DB0                         db  71h, 82h,   0, 30h, 85h, 75h,   4, 84h, 71h,   2,   0
7DBB                         db  30h,   2, 84h, 71h, 83h, 85h, 71h, 95h, 71h, 91h, 71h
7DC6                         db    2, 84h, 71h, 81h, 85h, 71h,   2, 8Fh, 75h,   2,   0
7DD1                         db  30h, 81h, 8Bh, 71h,   4,   0, 34h, 83h, 8Eh, 75h,   0
7DDC                         db  34h, 8Eh, 71h,   4, 84h, 71h, 82h, 8Eh, 75h, 85h, 75h
7DE7                         db    5, 84h, 71h, 81h,   0, 30h,   2, 84h, 71h, 81h, 85h
7DF2                         db  71h,   4, 84h, 71h, 81h, 85h, 71h,   2, 8Ah, 75h, 83h
7DFD                         db    0, 30h, 90h, 71h, 84h, 71h,   4,   0, 34h, 83h, 8Eh
7E08                         db  75h,   0, 34h, 8Eh, 71h,   4, 84h, 71h, 82h, 8Eh, 75h
7E13                         db  85h, 75h,   8, 84h, 71h, 81h, 85h, 71h,   4, 84h, 71h
7E1E                         db  81h, 85h, 71h,   2, 84h, 71h, 83h, 85h, 71h, 8Ch, 71h
7E29                         db  84h, 71h,   4,   0, 30h, 83h, 8Eh, 75h, 90h, 75h, 8Eh
7E34                         db  71h,   5, 84h, 71h, 81h, 84h, 75h,   8, 84h, 71h, 81h
7E3F                         db  85h, 71h,   4, 84h, 71h, 81h, 85h, 71h,   2, 84h, 71h
7E4A                         db  81h, 85h, 71h,   2, 84h, 71h, 81h,   0, 34h,   3, 8Ah
7E55                         db  71h, 83h, 8Eh, 75h, 8Ch, 75h, 8Eh, 71h, 0Eh, 84h, 71h
7E60                         db  81h, 85h, 71h,   4, 84h, 71h, 81h, 85h, 71h,   2, 84h
7E6B                         db  71h, 81h, 85h, 71h,   2, 84h, 71h, 81h,   0, 34h,   4
7E76                         db  84h, 75h, 82h, 8Ch, 75h, 8Eh, 71h, 0Eh, 84h, 71h, 81h
7E81                         db  85h, 71h, 0Ah, 84h, 71h, 81h,   0, 34h,   4, 84h, 75h
7E8C                         db  82h, 8Ch, 75h, 8Eh, 71h, 0Eh, 84h, 71h, 81h, 85h, 71h
7E97                         db  0Ah, 84h, 71h, 81h,   0, 34h,   5, 84h, 75h, 81h, 8Eh
7EA2                         db  71h, 0Eh, 84h, 71h, 81h, 85h, 71h, 0Ah, 84h, 71h, 81h
7EAD                         db  8Eh, 75h,   5, 84h, 75h, 81h, 8Eh, 71h, 0Eh, 84h, 71h
7EB8                         db  81h, 85h, 71h, 0Ah, 84h, 71h, 81h, 8Eh, 75h,   5, 84h
7EC3                         db  75h, 1Ah, 84h, 71h, 81h, 8Eh, 75h,   5, 84h, 75h, 1Ah
7ECE                         db  84h, 71h,   6, 84h, 75h, 1Ah, 84h, 71h,   6, 84h, 75h
7ED9                         db  1Ah, 84h, 71h,   6, 84h, 75h, 5Ah, 84h, 71h,   0
7EE3 silhouette4:            db  7Ch,0F6h, 30h, 81h,0FBh, 30h, 1Eh,0F6h, 30h, 82h,0F9h
7EE3                                                             ; table8928_11↓o
7EEE                         db  34h,0FCh, 30h, 12h,0F6h, 30h, 81h,0F6h, 34h,   2,0F6h ; Compressed block size: 174 bytes
7EF9                         db  30h, 81h,0F5h, 30h,   8,0F6h, 30h, 82h,0F8h, 34h,0FDh
7F04                         db  30h,   4,0F6h, 30h, 83h,0F6h, 34h,0F1h, 30h,0F1h, 34h
7F0F                         db  0Bh,0F6h, 30h, 86h,0FBh, 34h,0F6h, 30h,0FEh, 34h, 84h
7F1A                         db  31h,0F2h, 30h,0F3h, 30h,   5,0F6h, 30h, 81h,0F4h, 30h
7F25                         db    2, 84h, 31h, 85h,0F2h, 30h,0F1h, 34h,0F1h, 30h,0F3h
7F30                         db  34h,0F2h, 34h,   2, 84h, 31h, 88h,0F4h, 34h,0FBh, 30h
7F3B                         db 0F6h, 30h,0FFh, 30h,0FEh, 34h,0F1h, 34h,0FAh, 34h,0F9h
7F46                         db  30h,   3,0F6h, 30h, 82h,0FCh, 34h,0F4h, 30h,   4, 84h
7F51                         db  31h, 85h,0F2h, 30h,0F1h, 34h,0FFh, 30h,0F3h, 34h,0F2h
7F5C                         db  34h, 0Bh, 84h, 31h, 82h,0FDh, 30h,0FEh, 34h,   4, 84h
7F67                         db  31h, 81h,0F8h, 30h,   3,0F6h, 30h, 81h,0FDh, 34h, 1Ch
7F72                         db  84h, 31h, 83h,0FEh, 30h,0FAh, 30h,0F4h, 30h, 7Fh, 84h
7F7D                         db  31h, 7Fh, 84h, 31h, 7Fh, 84h, 31h, 7Fh, 84h, 31h, 15h
7F88                         db  84h, 31h, 7Fh,0EBh, 21h, 81h,0EBh, 21h,   0
7F91 silhouette5:            db    7,   0, 34h,   3,0F6h, 30h,   6,   0, 30h, 81h, 8Fh
7F91                                                             ; table8928_10↓o
7F9C                         db  35h,   3,   0, 30h, 0Ch,0F6h, 30h,   7,   0, 34h,   3 ; Compressed block size: 565 bytes
7FA7                         db 0F6h, 30h,   6,   0, 30h, 81h, 8Fh, 35h,   3,   0, 30h
7FB2                         db  0Ch,0F6h, 30h,   2,   0, 34h,   2,   0, 30h,   3,   0
7FBD                         db  34h,   4,   0, 30h, 81h, 87h, 31h,   4,   0, 30h, 81h
7FC8                         db  8Fh, 35h,   3,   0, 30h, 0Ch,0F6h, 30h,   2,   0, 34h
7FD3                         db    2,   0, 30h,   3,   0, 34h,   4,   0, 30h, 81h, 84h
7FDE                         db  31h,   4,   0, 30h, 81h, 8Ch, 31h,   3,   0, 30h, 0Ch
7FE9                         db 0F6h, 30h,   2,   0, 34h,   2,   0, 30h,   3,   0, 34h
7FF4                         db    3,   0, 30h, 83h, 8Eh, 31h, 84h, 31h, 87h, 31h,   3
7FFF                         db    0, 30h, 81h, 8Ch, 31h,   3,   0, 30h, 0Ch,0F6h, 30h
800A                         db    2,   0, 34h, 82h, 84h, 31h,   0, 30h,   3,   0, 34h
8015                         db    3, 84h, 35h, 81h, 85h, 35h,   2, 84h, 31h,   3,   0
8020                         db  30h, 81h, 84h, 31h,   2,   0, 30h, 81h, 8Dh, 31h, 0Ch
802B                         db 0F6h, 30h, 84h,   0, 34h, 84h, 35h, 84h, 31h, 89h, 31h
8036                         db    2,   0, 34h, 81h, 8Eh, 31h,   3, 84h, 35h, 81h, 85h
8041                         db  35h,   2, 84h, 31h, 81h, 8Eh, 35h,   2,   0, 30h, 84h
804C                         db  84h, 31h, 89h, 31h,   0, 30h, 84h, 31h, 0Ch,0F6h, 30h
8057                         db  82h, 89h, 35h, 84h, 35h,   2, 84h, 31h, 81h,   0, 34h
8062                         db    5, 84h, 35h,   3, 84h, 31h, 83h, 8Eh, 35h,   0, 30h
806D                         db  8Eh, 31h,   2, 84h, 31h, 82h,   0, 30h, 84h, 31h, 0Ch
8078                         db 0F6h, 30h,   4, 84h, 35h, 81h,   0, 34h,   5, 84h, 35h
8083                         db    3, 84h, 31h, 83h, 8Eh, 35h,   0, 30h, 85h, 35h,   2
808E                         db  84h, 31h, 82h,   0, 30h, 84h, 31h, 0Ch,0F6h, 30h,   4
8099                         db  84h, 35h, 81h,   0, 34h,   5, 84h, 35h,   4, 84h, 31h
80A4                         db  82h,   0, 30h, 85h, 35h,   4, 84h, 31h, 81h, 84h, 35h
80AF                         db    2,   0, 34h,   9,0F6h, 30h,   4, 84h, 35h, 81h, 89h
80BA                         db  35h,   5, 84h, 35h,   4, 84h, 31h, 82h,   0, 30h, 85h
80C5                         db  35h,   4, 84h, 31h, 83h, 84h, 35h, 91h, 35h, 95h, 35h
80D0                         db    9,0F6h, 30h, 0Ah, 84h, 35h,   4, 84h, 31h, 82h, 8Eh
80DB                         db  35h, 85h, 35h,   7, 84h, 31h,   9,0F6h, 30h, 0Ah, 84h
80E6                         db  35h,   4, 84h, 31h, 82h, 8Eh, 35h, 85h, 35h,   7, 84h
80F1                         db  31h,   9,0F6h, 30h, 0Ah, 84h, 35h,   5, 84h, 31h, 81h
80FC                         db  84h, 35h,   7, 84h, 31h,   9,0F6h, 30h, 0Ah, 84h, 35h
8107                         db  0Dh, 84h, 31h,   9,0F6h, 30h, 0Ah, 84h, 35h, 0Dh, 84h
8112                         db  31h,   9,0F6h, 30h, 0Ah, 84h, 35h,   3, 84h, 31h,   4
811D                         db  84h, 35h,   6, 84h, 31h,   9,0F6h, 30h, 0Ah, 84h, 35h
8128                         db    3, 84h, 31h,   4, 84h, 35h,   6, 84h, 31h,   9,0F6h
8133                         db  30h, 0Ah, 84h, 35h, 81h, 84h, 31h,   4, 84h, 35h,   8
813E                         db  84h, 31h, 83h,0F1h, 34h,0F6h, 30h,0FBh, 30h,   6,0F6h
8149                         db  30h, 0Ah, 84h, 35h, 81h, 84h, 31h,   4, 84h, 35h,   9
8154                         db  84h, 31h, 85h,0F4h, 34h,0FCh, 30h,0F6h, 30h,0FFh, 30h
815F                         db 0F9h, 30h,   3,0F6h, 30h, 0Ah, 84h, 35h, 81h, 84h, 31h
816A                         db    4, 84h, 35h, 0Ah, 84h, 31h, 84h,0FDh, 30h,0FEh, 34h
8175                         db  84h, 31h,0F8h, 30h,   3,0F6h, 30h, 0Ah, 84h, 35h, 81h
8180                         db  84h, 31h,   4, 84h, 35h, 0Ah, 84h, 31h, 81h, 84h, 35h
818B                         db    3, 84h, 31h, 83h,0FEh, 30h,0FAh, 30h,0F6h, 30h, 0Ah
8196                         db  84h, 35h, 81h, 84h, 31h,   4, 84h, 35h, 10h, 84h, 31h
81A1                         db  81h,0F4h, 34h, 0Bh, 84h, 31h,   3, 84h, 35h, 0Bh, 84h
81AC                         db  31h,   4, 84h, 35h, 1Ch, 84h, 31h,   4, 84h, 35h, 1Ch
81B7                         db  84h, 31h,   4, 84h, 35h,   3, 84h, 31h, 7Fh,0EBh, 21h
81C2                         db  81h,0EBh, 21h,   0
81C6 title_screen_papcked_data:db  89h,   0, 10h,   8, 10h, 5Ah, 53h, 59h, 53h,   8, 10h
81C6                                                             ; AE70↓o
81D1                         db  58h, 53h, 5Ah, 5Bh,   8, 10h,   8, 52h, 0Eh,   0, 10h
81DC                         db  81h, 4Ch, 53h,   9,   0, 10h, 85h,   8, 10h, 58h, 53h
81E7                         db  5Ah, 53h,   8, 10h, 58h, 53h,   2,   8, 10h, 81h,   8
81F2                         db  52h, 0Eh,   0, 10h, 81h, 4Ch, 53h,   9,   0, 10h, 85h
81FD                         db    8, 10h, 5Bh, 5Bh, 5Ch, 53h,   8, 10h, 5Bh, 53h,   2
8208                         db    8, 10h, 81h,   9, 52h,   3,   0, 10h, 81h, 5Dh, 53h
8213                         db  0Ch,   0, 10h, 85h, 4Ch, 53h, 4Dh, 53h, 4Eh, 53h, 55h
821E                         db  53h, 56h, 53h,   2,   0, 10h, 83h,   8, 56h,   0, 52h
8229                         db  13h, 52h,   2,   8, 10h, 84h,   0, 52h, 1Ch, 52h, 25h
8234                         db  52h, 26h, 52h,   2,   0, 10h, 82h,   5, 52h,   8, 10h
823F                         db  0Ch,   0, 10h, 85h, 46h, 53h, 4Bh, 53h, 4Fh, 53h, 54h
824A                         db  53h, 57h, 53h,   2,   0, 10h, 8Bh,   9, 56h, 0Dh, 52h
8255                         db  12h, 52h, 14h, 52h, 19h, 52h, 1Bh, 52h, 1Dh, 52h, 24h
8260                         db  52h, 27h, 52h,   0, 10h, 0Ah, 52h,   3,   8, 10h, 0Bh
826B                         db    0, 10h, 84h, 47h, 53h, 4Ah, 53h, 50h, 53h, 53h, 53h
8276                         db    3,   0, 10h, 8Fh,   8, 10h, 0Eh, 52h, 11h, 52h, 15h
8281                         db  52h, 18h, 52h, 1Eh, 52h, 21h, 52h, 23h, 52h, 28h, 52h
828C                         db    0, 10h, 68h, 52h, 58h, 53h, 5Bh, 5Bh, 58h, 53h, 0Ch
8297                         db  52h, 0Ah,   0, 10h, 84h, 48h, 53h, 49h, 53h, 51h, 53h
82A2                         db  52h, 53h,   3,   0, 10h, 91h,   8, 10h, 0Fh, 52h, 10h
82AD                         db  52h, 16h, 52h, 17h, 52h, 1Fh, 52h, 20h, 52h, 22h, 52h
82B8                         db  29h, 52h, 42h, 53h, 67h, 52h, 71h, 52h, 5Ch, 5Bh, 5Bh
82C3                         db  53h,   8, 10h,   8, 56h,   1, 52h, 0Fh,   0, 10h, 8Eh
82CE                         db    8, 10h, 2Ch, 52h, 2Dh, 52h, 34h, 52h, 35h, 52h, 3Ch
82D9                         db  52h, 3Dh, 52h, 44h, 52h, 45h, 52h, 69h, 52h, 6Ah, 52h
82E4                         db  59h, 53h, 58h, 53h, 59h, 53h,   2,   8, 10h, 82h, 5Ah
82EF                         db  53h, 0Bh, 52h, 0Eh,   0, 10h, 92h,   8, 10h, 2Bh, 52h
82FA                         db  2Eh, 52h, 33h, 52h, 36h, 52h, 3Bh, 52h, 3Eh, 52h, 43h
8305                         db  52h, 46h, 52h, 6Bh, 52h, 73h, 52h,   8, 10h, 58h, 53h
8310                         db  75h, 52h, 74h, 52h, 7Ah, 52h, 5Bh, 53h,   3, 52h, 0Eh
831B                         db    0, 10h, 8Bh,   8, 10h, 2Ah, 52h, 2Fh, 52h, 32h, 52h
8326                         db  37h, 52h, 3Ah, 52h, 3Fh, 52h, 42h, 52h, 47h, 52h, 6Ch
8331                         db  52h, 72h, 52h,   2,   8, 10h, 85h, 76h, 52h, 77h, 52h
833C                         db  7Bh, 52h, 5Ah, 5Bh,   8, 10h,   8,   0, 10h, 81h, 5Eh
8347                         db  53h,   5,   0, 10h,   2,   8, 10h, 8Eh, 30h, 52h, 31h
8352                         db  52h, 38h, 52h, 39h, 52h, 40h, 52h, 41h, 52h, 48h, 52h
835D                         db  6Dh, 52h, 6Eh, 52h, 6Fh, 52h, 70h, 52h, 78h, 52h, 79h
8368                         db  52h, 7Ch, 52h,   2,   8, 10h, 85h,   0, 10h, 3Dh, 53h
8373                         db  3Bh, 53h, 3Ch, 53h, 3Eh, 53h,   2,   0, 10h, 82h,   5
837E                         db  56h,   3, 52h,   3,   0, 10h, 82h, 60h, 53h,   0, 10h
8389                         db    3,   8, 10h, 8Dh, 4Dh, 52h, 55h, 52h, 56h, 52h, 5Dh
8394                         db  52h, 5Eh, 52h, 64h, 52h,   8, 10h, 81h, 52h, 82h, 52h
839F                         db  83h, 52h,0A2h, 52h,0A5h, 52h,0AAh, 52h,   2,   8, 10h
83AA                         db  8Ah, 9Ah, 53h, 99h, 53h, 9Fh, 53h,0A0h, 53h,0A7h, 53h
83B5                         db  69h, 53h,   0, 10h,   8, 10h, 5Fh, 53h, 5Dh, 53h,   2
83C0                         db    0, 10h, 92h,   7, 52h,   0, 10h,   8, 10h, 4Ah, 52h
83CB                         db  4Bh, 52h, 4Eh, 52h, 54h, 52h, 57h, 52h, 5Ch, 52h, 5Fh
83D6                         db  52h, 65h, 52h, 7Fh, 52h, 80h, 52h, 85h, 52h, 84h, 52h
83E1                         db 0A1h, 52h,0A6h, 52h,0A9h, 52h,   2,   8, 10h, 87h, 67h
83EC                         db  53h, 9Bh, 53h, 9Eh, 53h,0A1h, 53h,0A6h, 53h,0A5h, 53h
83F7                         db    4, 52h,   3,   8, 10h, 9Ch, 0Ch, 56h,   0, 10h,   8
8402                         db  10h, 5Dh, 53h,   8, 10h, 49h, 52h, 4Ch, 52h, 4Fh, 52h
840D                         db  53h, 52h, 58h, 52h, 5Bh, 52h, 60h, 52h, 63h, 52h, 7Eh
8418                         db  52h, 86h, 52h, 89h, 52h, 8Ah, 52h,0A0h, 52h,0A7h, 52h
8423                         db 0A8h, 52h,0ABh, 52h, 65h, 53h, 66h, 53h, 9Ch, 53h, 9Dh
842E                         db  53h,0A2h, 53h,0A3h, 53h,0A4h, 53h,   5,   8, 10h, 81h
8439                         db  5Fh, 57h,   4,   8, 10h, 9Ah, 51h, 52h, 50h, 52h, 52h
8444                         db  52h, 59h, 52h, 5Ah, 52h, 61h, 52h, 62h, 52h, 7Dh, 52h
844F                         db  87h, 52h, 88h, 52h, 8Bh, 52h, 9Fh, 52h, 9Eh, 52h, 99h
845A                         db  52h,0ACh, 52h, 62h, 53h, 63h, 53h,0A8h, 53h,0A9h, 53h
8465                         db 0AAh, 53h,0ABh, 53h,0ACh, 53h,0ADh, 53h, 3Fh, 53h, 40h
8470                         db  53h, 41h, 53h, 0Ah,   8, 10h, 96h,0AFh, 52h,0B0h, 52h
847B                         db 0B1h, 52h, 8Ch, 52h, 93h, 52h, 94h, 52h, 9Bh, 52h, 9Ch
8486                         db  52h,0A3h, 52h,0A4h, 52h,0ECh, 52h,0F3h, 52h,0F4h, 52h
8491                         db 0FBh, 52h,0FCh, 52h, 10h, 53h, 11h, 53h, 18h, 53h, 19h
849C                         db  53h, 30h, 53h, 31h, 53h, 34h, 53h, 0Ah,   8, 10h, 95h
84A7                         db 0AEh, 52h,0B3h, 52h,0B2h, 52h, 8Dh, 52h, 92h, 52h, 95h
84B2                         db  52h, 9Ah, 52h, 9Dh, 52h,0E1h, 52h,0EAh, 52h,0EDh, 52h
84BD                         db 0F2h, 52h,0F5h, 52h,0FAh, 52h,0FDh, 52h, 13h, 53h, 12h
84C8                         db  53h, 17h, 53h, 1Ah, 53h, 2Fh, 53h, 32h, 53h, 0Ah,   8
84D3                         db  10h, 96h,0ADh, 52h,0BAh, 52h,0B9h, 52h,0B8h, 52h, 8Eh
84DE                         db  52h, 6Dh, 53h, 96h, 52h, 7Ah, 53h,0E4h, 52h,0E5h, 52h
84E9                         db 0E9h, 52h,0EEh, 52h,0F1h, 52h,0F6h, 52h,0F9h, 52h,0FEh
84F4                         db  52h, 14h, 53h, 15h, 53h, 16h, 53h, 1Bh, 53h, 2Eh, 53h
84FF                         db  33h, 53h, 0Ah,   8, 10h, 97h,0B4h, 52h,0B5h, 52h,0B6h
850A                         db  52h,0B7h, 52h, 61h, 53h, 6Eh, 53h, 97h, 52h, 7Bh, 53h
8515                         db 0E6h, 52h,0E8h, 52h,0E7h, 52h,0EFh, 52h,0F0h, 52h,0F7h
8520                         db  52h,0F8h, 52h,0FFh, 52h, 1Ch, 53h,0D1h, 52h, 1Dh, 53h
852B                         db  1Eh, 53h, 2Bh, 53h, 2Ch, 53h, 2Dh, 53h,   9,   8, 10h
8536                         db  97h, 88h, 53h,0D1h, 52h, 89h, 53h, 8Ah, 53h,0BBh, 52h
8541                         db 0BFh, 52h,0C3h, 52h,0CAh, 52h,   3, 53h,   4, 53h, 0Ch
854C                         db  53h, 0Dh, 53h, 70h, 53h, 73h, 53h, 74h, 53h, 7Ch, 53h
8557                         db  21h, 53h, 22h, 53h, 27h, 53h, 28h, 53h, 35h, 53h,0D1h
8562                         db  52h, 38h, 53h,   9,   8, 10h, 97h, 87h, 53h, 86h, 53h
856D                         db  8Bh, 53h, 8Ch, 53h,0BCh, 52h,0C0h, 52h,0C4h, 52h,0C9h
8578                         db  52h,   2, 53h,   5, 53h, 0Bh, 53h, 0Eh, 53h, 71h, 53h
8583                         db  72h, 53h, 75h, 53h, 7Dh, 53h, 20h, 53h, 23h, 53h, 26h
858E                         db  53h, 29h, 53h, 36h, 53h, 37h, 53h, 39h, 53h,   9,   8
8599                         db  10h, 94h, 84h, 53h, 85h, 53h,0D1h, 52h, 8Dh, 53h,0BDh
85A4                         db  52h,0C1h, 52h,0C5h, 52h,0C8h, 52h,   1, 53h,   6, 53h
85AF                         db    8, 53h, 0Fh, 53h, 91h, 53h, 94h, 53h, 95h, 53h, 97h
85BA                         db  53h, 1Fh, 53h, 24h, 53h, 25h, 53h, 2Ah, 53h, 0Ch,   8
85C5                         db  10h, 90h, 83h, 53h, 82h, 53h,0D1h, 52h, 8Eh, 53h,0BEh
85D0                         db  52h,0C2h, 52h,0C6h, 52h,0C7h, 52h,   0, 53h,   7, 53h
85DB                         db  0Ah, 53h,   9, 53h, 92h, 53h, 93h, 53h, 96h, 53h, 98h
85E6                         db  53h, 10h,   8, 10h, 8Ch,0CCh, 52h,0CBh, 52h,0D1h, 52h
85F1                         db 0D2h, 52h,0D8h, 52h,0D9h, 52h,0DDh, 52h,0DEh, 52h, 7Fh
85FC                         db  53h, 80h, 53h, 8Fh, 53h, 90h, 53h, 15h,   8, 10h, 89h
8607                         db 0CDh, 52h,0D1h, 52h,0D3h, 52h,0D7h, 52h,0D1h, 52h,0DCh
8612                         db  52h,0DFh, 52h, 7Eh, 53h, 81h, 53h, 17h,   8, 10h, 86h
861D                         db 0CEh, 52h,0D1h, 52h,0D4h, 52h,0D6h, 52h,0DAh, 52h,0DBh
8628                         db  52h, 1Ah,   8, 10h, 83h,0CFh, 52h,0D0h, 52h,0D5h, 52h
8633                         db  77h,   8, 10h,   0
8637 george_lizzie_ralf_image:db  63h,   0, 40h, 1Ch,   0, 70h,   4,   0, 40h, 1Ch,   0
8637                                                             ; AEB7↓o
8637                                                             ; development_team↓o 
8642                         db  70h,   4,   0, 40h, 1Ch,   0, 70h,   4,   0, 40h, 1Ch
864D                         db    0, 70h,   4,   0, 40h, 1Ch,   0, 70h,   4,   0, 40h
8658                         db  1Ch,   0, 70h,   4,   0, 40h, 1Ch,   0, 70h,   4,   0
8663                         db  40h, 1Ch,   0, 70h,   4,   0, 40h, 1Ch,   0, 70h, 64h
866E                         db    0, 40h, 88h,   0, 70h, 47h, 40h, 45h, 40h, 4Fh, 40h
8679                         db  52h, 40h, 47h, 40h, 45h, 40h,   0, 70h,   2,   0, 40h
8684                         db  83h,   0, 70h, 4Ch, 50h, 49h, 50h,   2, 5Ah, 50h, 83h
868F                         db  49h, 50h, 45h, 50h,   0, 70h,   2,   0, 40h, 88h,   0
869A                         db  70h, 52h, 60h, 41h, 60h, 4Ch, 60h, 50h, 60h, 48h, 60h
86A5                         db  21h, 60h,   0, 70h,   4,   0, 40h,   2,   0, 70h, 84h
86B0                         db  11h, 70h,0B1h, 70h,0B3h, 70h, 11h, 74h,   2,   0, 70h
86BB                         db    2,   0, 40h,   3,   0, 70h, 82h, 11h, 70h, 11h, 74h
86C6                         db    3,   0, 70h,   2,   0, 40h, 83h,   0, 70h, 24h, 71h
86D1                         db  25h, 71h,   2,   0, 70h, 83h, 2Bh, 71h, 2Ch, 71h,   0
86DC                         db  70h,   4,   0, 40h,   2,   0, 70h, 84h,0B0h, 70h,0B2h
86E7                         db  70h,0B4h, 70h,0B5h, 70h,   2,   0, 70h,   2,   0, 40h
86F2                         db    2,   0, 70h, 84h, 11h, 70h, 12h, 70h, 13h, 70h, 14h
86FD                         db  74h,   2,   0, 70h,   2,   0, 40h, 88h,   0, 70h, 27h
8708                         db  71h, 26h, 71h, 28h, 71h, 29h, 71h, 2Ah, 71h, 2Dh, 71h
8713                         db    0, 70h,   4,   0, 40h, 88h,   0, 70h,0B6h, 70h,0B7h
871E                         db  70h,0B8h, 70h,0B9h, 70h,0BAh, 70h,0BBh, 70h,   0, 70h
8729                         db    2,   0, 40h, 88h,   0, 70h, 14h, 70h, 15h, 70h, 16h
8734                         db  70h, 17h, 70h, 18h, 70h, 19h, 70h,   0, 70h,   2,   0
873F                         db  40h, 88h,   0, 70h, 80h, 74h, 7Bh, 70h, 7Dh, 70h, 7Eh
874A                         db  70h, 7Fh, 70h, 80h, 70h,   0, 70h,   4,   0, 40h, 88h
8755                         db  11h, 70h,0BCh, 70h,0BDh, 70h,0BEh, 70h,0BFh, 70h,0C0h
8760                         db  70h,0C1h, 70h,   0, 70h,   2,   0, 40h, 88h,   0, 70h
876B                         db  1Ah, 70h, 1Bh, 70h, 1Ch, 70h, 1Dh, 70h, 1Eh, 70h, 1Fh
8776                         db  70h,   0, 70h,   2,   0, 40h, 88h,   0, 70h, 86h, 70h
8781                         db  85h, 70h, 84h, 70h, 83h, 70h, 82h, 70h, 81h, 70h,   0
878C                         db  70h,   4,   0, 40h, 88h,0C2h, 70h,0C5h, 70h,0C6h, 70h
8797                         db 0C8h, 70h,0C9h, 70h,0CAh, 70h,0CBh, 70h,   0, 70h,   2
87A2                         db    0, 40h, 88h, 11h, 70h, 79h, 71h, 22h, 70h, 23h, 70h
87AD                         db  24h, 70h, 25h, 70h, 26h, 70h,   0, 70h,   2,   0, 40h
87B8                         db  88h, 11h, 70h, 87h, 70h, 88h, 70h, 89h, 70h, 8Ah, 70h
87C3                         db  8Bh, 70h, 8Ch, 70h,   0, 70h,   4,   0, 40h, 88h,0C3h
87CE                         db  70h,0C4h, 70h,0C7h, 70h,0CCh, 70h,0CDh, 70h,0CEh, 70h
87D9                         db 0CFh, 70h,0D0h, 70h,   2,   0, 40h, 88h, 27h, 70h, 28h
87E4                         db  70h, 29h, 70h, 2Ah, 70h, 2Bh, 70h, 7Ah, 71h, 7Bh, 71h
87EF                         db  7Ch, 71h,   2,   0, 40h, 88h, 94h, 70h, 93h, 70h, 92h
87FA                         db  70h, 91h, 70h, 90h, 70h, 8Fh, 70h, 8Eh, 70h, 8Dh, 70h
8805                         db    4,   0, 40h, 88h,0D1h, 70h,0D2h, 70h,0D3h, 70h,0D4h
8810                         db  70h,0D5h, 70h,0D6h, 70h,0D7h, 70h,0D8h, 70h,   2,   0
881B                         db  40h, 88h, 12h, 71h, 3Ah, 70h, 3Bh, 70h, 3Ch, 70h, 3Dh
8826                         db  70h, 3Eh, 70h, 7Dh, 71h, 40h, 70h,   2,   0, 40h, 88h
8831                         db  95h, 70h, 96h, 70h, 97h, 70h, 98h, 70h, 99h, 70h, 9Ah
883C                         db  70h, 9Bh, 70h, 9Ch, 70h,   4,   0, 40h, 88h,0E0h, 70h
8847                         db 0DFh, 70h,0DEh, 70h,0DDh, 70h,0DCh, 70h,0DBh, 70h,0DAh
8852                         db  70h,0D9h, 70h,   2,   0, 40h, 88h, 12h, 71h, 13h, 71h
885D                         db  60h, 70h, 5Fh, 70h, 5Eh, 70h, 5Dh, 70h, 5Ch, 70h, 5Bh
8868                         db  70h,   2,   0, 40h, 88h, 9Dh, 70h,0AEh, 70h, 9Eh, 70h
8873                         db  9Fh, 70h,0A1h, 70h,0A2h, 70h,0A3h, 70h,0AEh, 70h,   4
887E                         db    0, 40h, 88h,0E1h, 70h,0E2h, 70h,0E3h, 70h,0E4h, 70h
8889                         db 0E5h, 70h,0E6h, 70h,0E7h, 70h,0E8h, 70h,   2,   0, 40h
8894                         db  88h, 14h, 71h, 17h, 71h, 18h, 71h, 1Ah, 71h, 1Ch, 71h
889F                         db  1Fh, 71h, 20h, 71h, 21h, 71h,   2,   0, 40h, 88h,0AFh
88AA                         db  70h,0A4h, 70h,0AAh, 70h,0A9h, 70h,0A8h, 70h,0A7h, 70h
88B5                         db 0A4h, 70h,0AFh, 70h,   4,   0, 40h, 88h,0F0h, 70h,0EFh
88C0                         db  70h,0EEh, 70h,0EDh, 70h,0ECh, 70h,0EBh, 70h,0EAh, 70h
88CB                         db 0E9h, 70h,   2,   0, 40h, 88h, 15h, 71h, 16h, 71h, 19h
88D6                         db  71h, 1Bh, 71h, 1Dh, 71h, 1Eh, 71h, 23h, 71h, 22h, 71h
88E1                         db    2,   0, 40h, 88h,0A4h, 74h,0A4h, 7Ch,0ABh, 70h,0ACh
88EC                         db  70h,0ADh, 70h,0A6h, 70h,0A5h, 70h,0A4h, 70h, 7Fh,   0
88F7                         db  40h,   2,   0, 40h,   0
88FC
88FC ; =============== S U B R O U T I N E =======================================
88FC
88FC
88FC get_level_table_offset:                                     ; 8943↓p
88FC                         ld      hl, 0                       ; offset initialise
88FF                         ld      a, (sound_enable)
8902                         or      a
8903                         ld      a, 1
8905                         jr      nz, loc_891D                ; Table DE = 10 (entry size)
8907                         ld      a, (byte_E58C)
890A                         or      a
890B                         jr      z, loc_8914                 ; Load the current game level (0–127) AFAIK
890D                         ld      a, (game_level)
8910                         set     7, a
8912                         jr      loc_8917                    ; Is it >= 132 max level number
8914 ; ---------------------------------------------------------------------------
8914
8914 loc_8914:                                                   ; 890B
8914                         ld      a, (game_level)             ; Load the current game level (0–127) AFAIK
8917
8917 loc_8917:                                                   ; 8912
8917                         cp      84h                         ; Is it >= 132 max level number
8919                         jr      c, loc_891D                 ; If not, skip
891B                         and     7Fh                         ; If >= $84, mask off bit 7 (make it wrap at 128)
891D
891D loc_891D:                                                   ; 8905 8919
891D                         ld      de, 0Ah                     ; Table DE = 10 (entry size)
8920                         call    HL_is_A_x_DE                ; HL = A × 10 (using multiply)
8923                         ld      de, level_data_table        ; base of 10-byte data table
8926                         add     hl, de                      ; HL now points to entry = table + (level × 10)
8927                         ret
8927 ; End of function get_level_table_offset
8927
8927 ; ---------------------------------------------------------------------------
8928 base_table:             dw road_and_pavent                  ; 897A↓o
8928                                                             ; Compressed block size: 87 bytes
892A table8928_01:           dw train_track                      ; Compressed block size: 7 bytes
892C table8928_02:           dw road_with_water_gap_right        ; Compressed block size: 31 bytes
892E table8928_03:           dw road_with_water_gap_left         ; Compressed block size: 31 bytes
8930 table8928_04:           dw water_piers1                     ; Compressed block size: 88 bytes
8932 table8928_05:           dw water_piers2                     ; Compressed block size: 84 bytes
8934 silhouette_table:       dw silhouette3                      ; 8959↓o
8936 table8928_07:           dw silhouette2                      ; Compressed block size: 605 bytes
8938 table8928_08:           dw silhouette1                      ; Compressed block size: 670 bytes
893A table8928_09:           dw silhouette1                      ; Duplicate of $7C45
893C table8928_10:           dw silhouette5                      ; Compressed block size: 565 bytes
893E table8928_11:           dw silhouette4                      ; Compressed block size: 174 bytes
8940
8940 ; =============== S U B R O U T I N E =======================================
8940
8940
8940 setup_all_background:                                       ; 08F5↑p
8940                         call    setup_palette1
8943                         call    get_level_table_offset      ; Return HL for level data table
8946                         ld      a, l                        ; Level data Table pointer low
8947                         ld      (level_table_offset), a
894A                         ld      a, h                        ; Level data Table pointer high
894B                         ld      (level_table_high), a
894E                         ld      a, 2                        ; Add 2 for 3rd byte
8950                         rst     HL_plus_A
8951                         ld      a, (hl)                     ; First Single byte is Background number (low nybble)
8952                         ld      b, a                        ; save to b temporary
8953                         and     0Fh                         ; lower 4 bits of value
8955                         ld      (background_number), a
8958                         ld      a, b                        ; get back original value
8959                         ld      hl, silhouette_table
895C                         srl     a
895E                         srl     a
8960                         srl     a
8962                         srl     a                           ; get high nybble to low nybble
8964                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
8967                         call    unpack_screen_data_2linesdown ; Decode backdrop screen to display
896A                         ld      hl, score_status_lines      ; Spaces and clear top lines of display
896D                         call    unpack_fullscreen_data      ; decompressed from start top of screen
8970                         ld      hl, (level_table_offset)
8973                         ld      a, 3                        ; 4th byte in table
8975                         rst     HL_plus_A
8976                         ld      a, (hl)                     ; Base strip number six types
8977                         ld      (base_strip_number), a
897A                         ld      hl, base_table
897D                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
8980                         call    base_strip_plot
8983                         call    grass_and_buildings
8986                         call    base_strip_adjust
8989                         ld      hl, (level_table_offset)
898C                         ld      a, 5                        ; Now get the 5th value
898E                         rst     HL_plus_A
898F                         xor     a
8990                         ld      (level_table_high), a
8993                         call    sub_8CF3
8996                         call    sub_8A0C
8999                         ld      hl, score_status_lines
899C                         call    unpack_fullscreen_data      ; decompressed from start top of screen
899F                         ld      a, (unk_E3F9)
89A2                         ld      (unk_E011), a
89A5                         ld      a, 0
89A7                         ld      (unk_E3B5), a
89AA                         ld      a, (level_table_high)
89AD                         bit     6, a
89AF                         jr      z, loc_89B6
89B1                         ld      a, 40h ; '@'
89B3                         ld      (unk_E3B5), a
89B6
89B6 loc_89B6:                                                   ; 89AF
89B6                         ld      a, (level_table_high)
89B9                         bit     7, a
89BB                         ret     z
89BC                         ld      c, 0
89BE                         rst     dispatch_sound
89BF                         call    sub_B964
89C2                         ld      hl, object_action_table
89C5                         ld      b, 10h
89C7
89C7 loc_89C7:                                                   ; 89CA↓j
89C7                         ld      (hl), 0
89C9                         inc     hl
89CA                         djnz    loc_89C7
89CC                         ret
89CC ; End of function setup_all_background
89CC
89CD
89CD ; =============== S U B R O U T I N E =======================================
89CD
89CD
89CD base_strip_adjust:                                          ; 8986↑p
89CD                         ld      a, (base_strip_number)
89D0                         cp      4                           ; if the base is > 4 then ignore this table set
89D2                         ret     c
89D3                         sub     4
89D5                         sla     a                           ; Base is 0 2 4
89D7                         ld      hl, base_adjust_table
89DA                         rst     HL_plus_A
89DB                         ld      iy, unk_E355
89DF                         ld      a, (hl)                     ; Get 1st byte
89E0                         inc     hl
89E1                         ld      (iy+1), a                   ; Save into special table set offset +1
89E4                         ld      a, (hl)                     ; Get 2nd byte
89E5                         inc     hl
89E6                         ld      (iy+2), a                   ; Save into special table set offset +2
89E9                         ld      (iy+0), 1                   ; Some control value for level settings
89ED                         ld      (iy+6), 2                   ; Additional control to say what was base type.
89F1                         ld      a, (hl)                     ; Get 3rd Byte
89F2                         inc     hl
89F3                         ld      (iy+7), a                   ; Save into special table set offset +7
89F6                         ld      a, (hl)                     ; Get last byte
89F7                         inc     hl                          ; A pointless instruction as destroyed as soon as returned!
89F8                         ld      (iy+8), a                   ; Save into special table set offset +8
89FB                         ret
89FB ; End of function base_strip_adjust
89FB
89FB ; ---------------------------------------------------------------------------
89FC base_adjust_table:      db  98h,0BCh,   0,   0              ; 89D7↑o
8A00                         db  48h, 6Ch,   0,   0
8A04                         db  50h, 70h, 98h,0B8h
8A08                         db  48h, 70h, 90h,0B8h
8A0C
8A0C ; =============== S U B R O U T I N E =======================================
8A0C
8A0C
8A0C sub_8A0C:                                                   ; 8996↑p
8A0C                         ld      ix, unk_E3A9
8A10                         ld      (ix+0), 0
8A14                         ld      a, (base_strip_number)
8A17                         cp      4
8A19                         jp      z, loc_8AAC
8A1C                         cp      6
8A1E                         jp      z, loc_8AAC
8A21                         cp      8
8A23                         jp      z, loc_8AC7
8A26                         cp      0Ah
8A28                         jp      z, loc_8AC7
8A2B                         cp      2
8A2D                         jr      z, loc_8A95
8A2F                         ld      ix, object_action_table
8A33                         rst     random_number
8A34                         and     8
8A36                         jr      z, loc_8A44
8A38                         ld      a, 80h
8A3A                         ld      (ix+5), 1
8A3E                         ld      (ix+6), 1
8A42                         jr      loc_8A4C
8A44 ; ---------------------------------------------------------------------------
8A44
8A44 loc_8A44:                                                   ; 8A36
8A44                         ld      (ix+5), 0
8A48                         ld      (ix+6), 0
8A4C
8A4C loc_8A4C:                                                   ; 8A42
8A4C                         add     a, 40h ; '@'
8A4E                         ld      (ix+2), a
8A51                         rst     random_number
8A52                         and     1
8A54                         ld      (ix+7), a
8A57                         ld      (ix+1), 0
8A5B                         ld      (ix+4), 0
8A5F                         ld      a, (sound_enable)
8A62                         or      a
8A63                         jr      nz, loc_8A76
8A65                         ld      a, (game_level)
8A68                         inc     a
8A69                         cp      1
8A6B                         jr      z, loc_8A87
8A6D                         ld      a, (unk_E671)
8A70                         and     1
8A72                         add     a, 1
8A74                         jr      loc_8A87
8A76 ; ---------------------------------------------------------------------------
8A76
8A76 loc_8A76:                                                   ; 8A63
8A76                         ld      (ix+6), 0
8A7A                         ld      (ix+2), a
8A7D                         ld      (ix+2), 40h ; '@'
8A81                         ld      (ix+7), 0Ah
8A85                         ld      a, 2
8A87
8A87 loc_8A87:                                                   ; 8A6B 8A74
8A87                         ld      (ix+0), a
8A8A                         cp      2
8A8C                         ret     z
8A8D                         ld      c, 18
8A8F                         rst     dispatch_sound
8A90                         ld      (ix+2), 0
8A94                         ret
8A95 ; ---------------------------------------------------------------------------
8A95
8A95 loc_8A95:                                                   ; 8A2D
8A95                         ld      ix, object_action_table
8A99                         ld      (ix+0), 1
8A9D                         rst     random_number
8A9E                         and     1
8AA0                         ld      (ix+7), a
8AA3                         ld      (ix+1), 0
8AA7                         ld      (ix+4), 0
8AAB                         ret
8AAC ; ---------------------------------------------------------------------------
8AAC
8AAC loc_8AAC:                                                   ; 8A19 8A1E
8AAC                         ld      iy, unk_E355
8AB0                         ld      a, (iy+1)
8AB3                         ld      ix, object_action_table
8AB7                         ld      (ix+2), a
8ABA                         ld      (ix+0), 1
8ABE                         ld      (ix+3), 1
8AC2                         ld      (ix+1), 0
8AC6                         ret
8AC7 ; ---------------------------------------------------------------------------
8AC7
8AC7 loc_8AC7:                                                   ; 8A23 8A28
8AC7                         ld      ix, object_action_table
8ACB                         ld      (ix+0), 1
8ACF                         rst     random_number
8AD0                         and     1
8AD2                         jr      z, loc_8AE6
8AD4                         ld      (ix+5), 1
8AD8                         ld      (ix+6), 1
8ADC                         ld      (ix+4), 0
8AE0                         ld      (ix+2), 0A0h
8AE4                         jr      loc_8AF2
8AE6 ; ---------------------------------------------------------------------------
8AE6
8AE6 loc_8AE6:                                                   ; 8AD2
8AE6                         ld      (ix+5), 0
8AEA                         ld      (ix+6), 0
8AEE                         ld      (ix+2), 60h ; '`'
8AF2
8AF2 loc_8AF2:                                                   ; 8AE4
8AF2                         rst     random_number
8AF3                         and     3Fh ; '?'
8AF5                         add     a, 60h ; '`'
8AF7                         ld      (ix+7), a
8AFA                         ld      (ix+1), 0
8AFE                         ret
8AFE ; End of function sub_8A0C
8AFE
8AFF
8AFF ; =============== S U B R O U T I N E =======================================
8AFF
8AFF
8AFF grass_and_buildings:                                        ; 8983↑p
8AFF
8AFF ; FUNCTION CHUNK AT 8C0D SIZE 0000008A BYTES
8AFF
8AFF                         ld      hl, (level_table_offset)
8B02                         ld      a, 0                        ; Now get the building data set pointer in HL
8B04                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
8B07                         ld      ix, Building1_data          ; This is building data set start in RAM for each building drawn
8B0B                         ld      (ix+0), 0FFh                ; Building 1
8B0F                         ld      (ix+18h), 0FFh              ; Building 2
8B13                         ld      (ix+30h), 0FFh              ; Building 3
8B17                         ld      (ix+48h), 0FFh              ; Building 4
8B1B                         ld      (ix+60h), 0FFh              ; Building 5
8B1F                         ld      (ix+78h), 0FFh              ; Building 6
8B23                         ld      iy, unk_E482
8B27                         call    trees_grass_strip           ; Plot the bottom row before the buildings
8B2A                         xor     a
8B2B                         ld      (unk_E337), a
8B2E                         push    af                          ; Save af
8B2F
8B2F another_building:                                           ; 8BCB↓j 8C54↓j 
8B2F                         ld      a, (hl)                     ; Now start to read the buildings data
8B30                         cp      0FDh
8B32                         jp      z, building_control1
8B35                         cp      0FCh
8B37                         jp      z, building_control1
8B3A                         cp      0FBh
8B3C                         jp      z, building_control2
8B3F                         cp      0FAh
8B41                         jp      z, building_control2
8B44                         pop     af                          ; restore count
8B45                         inc     a                           ; +1 so starts at value 1
8B46                         ld      (ix+10h), a                 ; Looks like building number
8B49                         push    af                          ; Save this back to stack
8B4A                         ld      a, (hl)                     ; re-read the first entry value
8B4B                         ld      (ix+0), a                   ; Save this in building data 1st value
8B4E                         cp      0FFh                        ; $ff marks end of the data set
8B50                         jp      z, end_building_data        ; Exit as all buildings done.
8B53                         sla     a                           ; Otherwise double the value
8B55                         ld      b, a                        ; b is now the building number
8B56                         inc     hl                          ; advance data to next value
8B57                         ld      a, (hl)                     ; get 2nd byte
8B58                         ld      (ix+5), a                   ; save into data table
8B5B                         sla     a
8B5D                         sla     a                           ; * 4 for this value
8B5F                         ld      (ix+1), a                   ; save into two places in table
8B62                         ld      (ix+6), a                   ; Another copy of same value
8B65                         inc     hl                          ; advance to 3rd value
8B66                         ld      a, (hl)                     ; Read 3rd byte this is building palette
8B67                         ld      (ix+4), a                   ; Save this into table also
8B6A                         ld      (unk_E02F), a               ; 2nd copy of value
8B6D                         inc     hl                          ; Advance source pointer
8B6E                         push    hl                          ; Save to stack for later
8B6F                         ld      a, (ix+0)                   ; Get the first table entry value
8B72                         or      a                           ; Check if this was 0
8B73                         jr      z, next_building_pointer    ; If it was then change the building index to next one.
8B75                         ld      hl, bg_row28                ; Building base row
8B78                         ld      a, (ix+5)                   ; Get X position for building
8B7B                         rst     HL_plus_A                   ; Add to screen row
8B7C                         push    hl                          ; Save this on stack
8B7D                         ld      hl, building_characters_table
8B80                         ld      a, b                        ; Get back first byte which was building number
8B81                         call    get_HL_plus_A               ; Get our building table into hl
8B84                         ld      a, (hl)                     ; First byte is the x width of building
8B85                         ld      (ix+2), a                   ; Save to the building table offset
8B88                         ld      (temp_counter), a           ; Save width into temp counter
8B8B                         sla     a
8B8D                         sla     a
8B8F                         sla     a                           ; a is now building width * 8
8B91                         add     a, (ix+6)                   ; Add the x (position * 4)
8B94                         ld      (ix+7), a                   ; Save to master building tableset
8B97                         inc     hl                          ; advance pointer
8B98                         ld      a, (hl)                     ; Read 2nd byte in building type table
8B99                         ld      (ix+3), a                   ; This is building height (y)
8B9C                         sla     a                           ; * 2
8B9E                         sla     a                           ; * 4
8BA0                         sla     a                           ; Y size * 8
8BA2                         add     a, 10h                      ; y height * 8 + 16
8BA4                         ld      (ix+8), a                   ; Save to table
8BA7                         ld      a, (hl)                     ; Get y size again
8BA8                         ld      c, a                        ; get height into c (used in plot loop below)
8BA9                         sra     a                           ; height / 2
8BAB                         cp      5                           ; Check this height < 5
8BAD                         jr      c, small_building           ; is a tiny building?
8BAF                         ld      d, a                        ; Temp in d
8BB0                         ld      a, (ix+2)                   ; Get back building width
8BB3                         sub     4                           ; width - 4
8BB5                         sla     a                           ; * 2
8BB7                         add     a, d                        ; add together
8BB8
8BB8 small_building:                                             ; 8BAD
8BB8                         ld      (ix+0Ch), a                 ; Save to building data table
8BBB                         inc     hl                          ; advance building info
8BBC                         ld      a, (hl)                     ; Save as high byte / control code
8BBD                         inc     hl                          ; now set hl to start of building data
8BBE                         ld      (CHARACTER_HIGH_BYTE), a    ; Save code/control byte
8BC1                         pop     de                          ; get back screen RAM position
8BC2                         call    do_building                 ; Now actually plot a building to the screen
8BC5
8BC5 next_building_pointer:                                      ; 8B73
8BC5                         ld      de, 18h                     ; advance data table to next building
8BC8                         add     ix, de                      ; advance pointer
8BCA                         pop     hl
8BCB                         jp      another_building
8BCB ; End of function grass_and_buildings
8BCB
8BCE
8BCE ; =============== S U B R O U T I N E =======================================
8BCE
8BCE
8BCE do_building:                                                ; 8BC2↑p
8BCE                         push    iy
8BD0                         push    ix                          ; Save the current pointers
8BD2                         ld      iy, unk_E02F                ; point iy to the colour byte for building
8BD6                         call    plot_building               ; Go and plot a building to screen
8BD9                         pop     ix
8BDB                         pop     iy                          ; restore pointers before the call
8BDD                         ret
8BDD ; End of function do_building
8BDD
8BDE
8BDE ; =============== S U B R O U T I N E =======================================
8BDE
8BDE
8BDE plot_building:                                              ; 8BD6↑p 8C03↓j
8BDE                         push    de                          ; Save screen base position
8BDF                         ld      a, (temp_counter)           ; Get the x size counter
8BE2                         ld      b, a                        ; use in b for x plot loop
8BE3
8BE3 building_row_loop:                                          ; 8BF5↓j
8BE3                         ld      a, (hl)                     ; Start to read the building characters
8BE4                         ld      (de), a                     ; Save to screen RAM
8BE5                         inc     hl                          ; advance source
8BE6                         inc     de                          ; bump source and destination
8BE7                         ld      a, (CHARACTER_HIGH_BYTE)    ; Get the colour / control data byte
8BEA                         cp      0FFh                        ; now that magic control byte says if this is a single character dataset
8BEC                         jr      nz, character_building      ; if not then we yes control colour as the high word byt for this building
8BEE                         ld      a, (hl)                     ; So read the 2nd byte in data
8BEF                         or      (iy+0)                      ; Add on the palette value
8BF2                         ld      (de), a                     ; Save to screen RAM
8BF3                         inc     hl                          ; Advance next character
8BF4
8BF4 buiding_plot_loop:                                          ; 8C0B↓j
8BF4                         inc     de                          ; Advance screen ram
8BF5                         djnz    building_row_loop           ; Loop the x size
8BF7                         dec     c                           ; if not 255, then we will use two bytes in source data for building characters
8BF8                         pop     de                          ; get back screen base
8BF9                         ret     z                           ; return if all y plotted
8BFA                         ld      ix, 0FFC0h                  ; otherwise let's subtract $40 ie draw up one line from base
8BFE                         add     ix, de                      ; add well basically subtract from screen
8C00                         push    ix                          ; save back the index
8C02                         pop     de                          ; basically put ix to de
8C03                         jr      plot_building               ; Keep on plotting
8C05 ; ---------------------------------------------------------------------------
8C05
8C05 end_building_data:                                          ; 8B50
8C05                         pop     af
8C06                         ret
8C07 ; ---------------------------------------------------------------------------
8C07
8C07 character_building:                                         ; 8BEC
8C07                         or      (iy+0)                      ; Use the initial byte value, and add palette
8C0A                         ld      (de), a                     ; save to screen
8C0B                         jr      buiding_plot_loop           ; jump back to normal loop
8C0B ; End of function plot_building
8C0B
8C0D ; ---------------------------------------------------------------------------
8C0D ; START OF FUNCTION CHUNK FOR grass_and_buildings
8C0D
8C0D building_control1:                                          ; 8B32 8B37
8C0D                         ld      c, a
8C0E                         ld      a, (byte_E679)
8C11                         or      a
8C12                         jr      z, loc_8C1F
8C14                         ld      a, c
8C15                         cp      0FDh
8C17                         jr      nz, loc_8C1D
8C19                         ld      c, 0FCh
8C1B                         jr      loc_8C1F
8C1D ; ---------------------------------------------------------------------------
8C1D
8C1D loc_8C1D:                                                   ; 8C17
8C1D                         ld      c, 0FDh
8C1F
8C1F loc_8C1F:                                                   ; 8C12 8C1B
8C1F                         pop     af
8C20                         push    af
8C21                         dec     a
8C22                         ld      b, a
8C23                         push    iy
8C25                         ld      iy, unk_E337
8C29                         ld      (iy+1), c
8C2C                         push    ix
8C2E                         ld      de, 0FFE8h
8C31                         add     ix, de
8C33                         ld      a, (ix+7)
8C36                         add     a, 0Ah
8C38
8C38 loc_8C38:                                                   ; 8C94↓j
8C38                         ld      (iy+4), a
8C3B                         ld      (iy+8), b
8C3E                         ld      (iy+0), 1
8C42                         ld      (iy+6), 1
8C46                         ld      (iy+2), 0
8C4A                         inc     hl
8C4B                         ld      a, (hl)
8C4C                         ld      (iy+5), a
8C4F                         inc     hl
8C50                         pop     ix
8C52                         pop     iy
8C54                         jp      another_building
8C57 ; ---------------------------------------------------------------------------
8C57
8C57 building_control2:                                          ; 8B3C 8B41
8C57                         ld      c, a
8C58                         ld      a, (byte_E679)
8C5B                         or      a
8C5C                         jr      z, loc_8C69
8C5E                         ld      a, c
8C5F                         cp      0FBh
8C61                         jr      nz, loc_8C67
8C63                         ld      c, 0FAh
8C65                         jr      loc_8C69
8C67 ; ---------------------------------------------------------------------------
8C67
8C67 loc_8C67:                                                   ; 8C61
8C67                         ld      c, 0FBh
8C69
8C69 loc_8C69:                                                   ; 8C5C 8C65
8C69                         ld      a, (game_level)
8C6C                         cp      1
8C6E                         jr      nz, loc_8C7B
8C70                         ld      a, (sound_enable)
8C73                         or      a
8C74                         jr      nz, loc_8C7B
8C76                         inc     hl
8C77                         inc     hl
8C78                         jp      another_building
8C7B ; ---------------------------------------------------------------------------
8C7B
8C7B loc_8C7B:                                                   ; 8C6E 8C74
8C7B                         pop     af
8C7C                         push    af
8C7D                         dec     a
8C7E                         ld      b, a
8C7F                         push    iy
8C81                         ld      iy, unk_E337
8C85                         ld      (iy+1), c
8C88                         push    ix
8C8A                         ld      de, 0FFE8h                  ; -$18 size of building table
8C8D                         add     ix, de
8C8F                         ld      a, (ix+6)
8C92                         sub     6
8C94                         jp      loc_8C38
8C94 ; END OF FUNCTION CHUNK FOR grass_and_buildings
8C97
8C97 ; =============== S U B R O U T I N E =======================================
8C97
8C97 ; Plot the bottom foliage data behind buildings before buildings
8C97
8C97 trees_grass_strip:                                          ; 8B27↑p
8C97                         push    hl
8C98                         ld      hl, (level_table_offset)
8C9B                         ld      a, 4                        ; 4th byte in table data
8C9D                         rst     HL_plus_A
8C9E                         ld      a, (hl)
8C9F                         ld      (iy+0), a                   ; Save to building data set
8CA2                         ld      (iy+6), 0
8CA6                         ld      hl, foilage_table
8CA9                         ld      a, (iy+0)                   ; Kind of pointless as a is already this value!
8CAC                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
8CAF                         ld      a, 20h ; ' '                ; 32 characters across (word plotted)
8CB1                         ld      (iy+2), a                   ; save to Buiding set, perhaps they were going to define different levels with different set of data widths?
8CB4                         ld      (temp_counter), a           ; count for one row of data
8CB7                         dec     a                           ; -1
8CB8                         sla     a                           ; * 2
8CBA                         add     a, (iy+6)                   ; add offset but this is normally 0 as above has been set at
8CBD                         ld      (iy+7), a                   ; save this multiplied value
8CC0                         ld      de, bg_row26                ; Trees and grass start
8CC3                         ld      c, 3                        ; Default is 3 rows of data
8CC5                         ld      a, (iy+0)                   ; Was it > than the 3rd set of data, as they are only 2 rows high
8CC8                         cp      6                           ; Was it the 6th data set. as this is 3 rows high
8CCA                         jr      c, three_heigh              ; yes it was the tall trees & grass
8CCC                         ld      de, bg_row27                ; If only two rows than skip a row and start one more down
8CCF                         ld      c, 2                        ; set c to 2 is more
8CD1
8CD1 three_heigh:                                                ; 8CCA
8CD1                         call    plot_trees_grass            ; Plot all strip to screen
8CD4                         pop     hl                          ; return master pointer
8CD5                         ret
8CD5 ; End of function trees_grass_strip
8CD5
8CD6
8CD6 ; =============== S U B R O U T I N E =======================================
8CD6
8CD6
8CD6 plot_trees_grass:                                           ; three_heigh↑p
8CD6                                                             ; 8CF1↓j
8CD6                         push    de                          ; Source row pointer
8CD7                         ld      a, (temp_counter)           ; count to plot
8CDA                         ld      b, a
8CDB
8CDB grass_loop:                                                 ; 8CE3↓j
8CDB                         ld      a, (hl)                     ; get character code
8CDC                         ld      (de), a                     ; save 1st character code
8CDD                         inc     hl                          ; advance source and destination
8CDE                         inc     de
8CDF                         ld      a, (hl)
8CE0                         ld      (de), a                     ; save 2nd character code
8CE1                         inc     hl
8CE2                         inc     de
8CE3                         djnz    grass_loop                  ; grass_loop
8CE5                         dec     c                           ; row counter -1
8CE6                         pop     de                          ; get back pointer. (frankly it's almost pointless) we seems to always have a full row, so the pointer is actually correct for each row!
8CE7                         ret     z                           ; all rows completed?
8CE8                         ld      iy, 64                      ; next line down screen
8CEC                         add     iy, de                      ; advance to next row
8CEE                         push    iy
8CF0                         pop     de                          ; de now points to next row (as I said it already would of done so!)
8CF1                         jr      plot_trees_grass
8CF1 ; End of function plot_trees_grass
8CF1
8CF3
8CF3 ; =============== S U B R O U T I N E =======================================
8CF3
8CF3
8CF3 sub_8CF3:                                                   ; 8993↑p
8CF3                         push    hl
8CF4                         call    sub_4E55
8CF7                         pop     hl
8CF8                         ld      ix, unk_E058
8CFC                         xor     a
8CFD                         ld      (unk_E026), a
8D00                         ld      a, (hl)
8D01                         inc     hl
8D02                         push    hl
8D03                         call    sub_8D61
8D06                         pop     hl
8D07                         ld      a, (hl)
8D08                         ld      (level_table_high), a
8D0B                         and     0Fh
8D0D                         ld      (unk_E3B3), a
8D10                         inc     hl
8D11                         ld      a, (hl)
8D12                         ld      (unk_E037), a
8D15                         inc     hl
8D16                         ld      a, (hl)
8D17                         ld      (unk_E3D8), a
8D1A                         ld      a, 10h
8D1C                         ld      (unk_E3D1), a
8D1F                         inc     hl
8D20                         ld      a, (hl)
8D21                         ld      b, a
8D22                         ld      a, (sound_enable)
8D25                         or      a
8D26                         jr      z, loc_8D2C
8D28                         ld      b, 0
8D2A                         ld      a, 0
8D2C
8D2C loc_8D2C:                                                   ; 8D26
8D2C                         ld      a, b
8D2D                         and     7
8D2F                         ld      (unk_E017), a
8D32                         ld      a, b
8D33                         srl     a
8D35                         srl     a
8D37                         srl     a
8D39                         srl     a
8D3B                         and     7
8D3D                         ld      (unk_E019), a
8D40                         ld      a, (game_level)
8D43                         and     3
8D45                         ld      (unk_E018), a
8D48                         ld      a, (byte_E679)
8D4B                         or      a
8D4C                         ret     z
8D4D                         ld      b, a
8D4E                         ld      a, (unk_E019)
8D51                         add     a, b
8D52                         and     7
8D54                         ld      (unk_E019), a
8D57                         ld      a, (unk_E017)
8D5A                         sub     b
8D5B                         and     7
8D5D                         ld      (unk_E017), a
8D60                         ret
8D60 ; End of function sub_8CF3
8D60
8D61
8D61 ; =============== S U B R O U T I N E =======================================
8D61
8D61
8D61 sub_8D61:                                                   ; 8D03↑p
8D61                         ld      b, a
8D62                         and     0F0h
8D64                         srl     a
8D66                         srl     a
8D68                         srl     a
8D6A                         srl     a
8D6C                         ld      c, a
8D6D                         ld      a, b
8D6E                         and     0Fh
8D70                         ld      e, a
8D71                         ld      b, 1
8D73                         jr      z, loc_8D76
8D75                         ld      b, a
8D76
8D76 loc_8D76:                                                   ; 8D73
8D76                         xor     a
8D77
8D77 loc_8D77:                                                   ; 8D78↓j
8D77                         add     a, c
8D78                         djnz    loc_8D77
8D7A                         ld      (unk_E028), a
8D7D                         ld      a, c
8D7E                         ld      b, a
8D7F                         ld      c, 0
8D81                         push    af
8D82
8D82 loc_8D82:                                                   ; 8DA0↓j
8D82                         ld      a, d
8D83                         and     1
8D85                         xor     1
8D87                         ld      d, a
8D88                         ld      (ix+1), a
8D8B                         ld      (ix+0), 10h
8D8F                         ld      (ix+8), e
8D92                         ld      (ix+6), c
8D95                         inc     c
8D96                         ld      (ix+5), c
8D99                         push    de
8D9A                         ld      de, 14h
8D9D                         add     ix, de
8D9F                         pop     de
8DA0                         djnz    loc_8D82
8DA2                         pop     af
8DA3                         ld      a, b
8DA4                         and     3
8DA6
8DA6 loc_8DA6:                                                   ; 8DAB↓j
8DA6                         push    bc
8DA7                         call    sub_4E7B
8DAA                         pop     bc
8DAB                         djnz    loc_8DA6
8DAD                         ret
8DAD ; End of function sub_8D61
8DAD
8DAD ; ---------------------------------------------------------------------------
8DAE level_data_table:       dw building_data_92D9               ; 8923↑o
8DAE                                                             ; First word is offset building set
8DAE                                                             ; 2nd+ Byte high nybble is Silouette number (5 types)
8DAE                                                             ; 3rd+ Byte is base graphic (6 types)
8DAE                                                             ; 4th+ Byte is trees / grass (4 types, note it's not compressed as no compression on data)
8DB0                         db  40h,   0,   2, 32h,   0,   2, 30h,   3
8DB8 level02_data:           dw building_data_92EE
8DBA                         db  60h,   0,   2, 42h,   0,   1, 2Bh, 14h
8DC2 level03_data:           dw building_data_9385
8DC4                         db    0,   2,   2, 71h,   0,   0, 23h, 57h
8DCC level04_data:           dw building_data_931D
8DCE                         db    0,   0,   2, 52h,   1,   1, 23h, 45h
8DD6 level05_data:           dw building_data_951B
8DD8                         db 0A3h,   0,   2, 44h,   0,   0, 28h, 36h
8DE0 level06_data:           dw building_data_9558
8DE2                         db  40h,   6,   4, 81h,   2,   0, 1Eh, 61h
8DEA level07_data:           dw building_data_92FD
8DEC                         db  40h,   0,   2, 62h, 81h,   0, 23h, 22h
8DF4 level08_data:           dw building_data_94B5
8DF6                         db  29h,   0,   2, 52h,   2,   0, 26h, 40h
8DFE level09_data:           dw building_data_94E9
8E00                         db  20h,   8,   2, 34h,   0,   1, 28h, 15h
8E08 level10_data:           dw building_data_932F
8E0A                         db  63h,   0,   2, 73h, 82h,   0, 1Eh, 74h
8E12 level11_data:           dw building_data_9356
8E14                         db  60h,   0,   2, 42h,   0,   0, 26h,   6
8E1C level12_data:           dw building_data_959D
8E1E                         db  80h,   4,   4, 62h,   0,   0, 26h, 41h
8E26 level13_data:           dw building_data_9464
8E28                         db  83h,   0,   2, 43h,   2,   0, 1Eh, 23h
8E30 level14_data:           dw building_data_9344
8E32                         db    0,   0,   2, 63h, 82h,   0, 1Eh, 60h
8E3A level15_data:           dw building_data_9363
8E3C                         db    0,   2,   2, 53h,   2,   0, 23h, 34h
8E44 level16_data:           dw building_data_93BF
8E46                         db  49h,   0,   2, 42h,   0,   2, 2Dh, 55h
8E4E level17_data:           dw building_data_9537
8E50                         db  23h,   0,   2, 72h, 42h,   0, 1Eh, 16h
8E58 level18_data:           dw building_data_9398
8E5A                         db  20h, 0Ah,   2, 54h,   3,   0, 1Eh, 77h
8E62 level19_data:           dw building_data_9484
8E64                         db  80h,   0,   2, 34h,   1,   1, 28h,   6
8E6C level20_data:           dw building_data_9454
8E6E                         db  82h,   0,   2, 81h,   2,   0, 23h, 21h
8E76 level21_data:           dw building_data_93DD
8E78                         db 0A9h,   0,   6, 52h,   0,   1, 2Dh, 42h
8E80 level22_data:           dw building_data_9574
8E82                         db    0,   6,   4, 62h,   2,   0, 23h, 15h
8E8A level23_data:           dw building_data_9546
8E8C                         db  60h,   4,   4, 44h,   2,   0, 1Eh, 63h
8E94 level24_data:           dw building_data_9581
8E96                         db  22h,   6,   4, 81h,   0,   1, 26h, 37h
8E9E level25_data:           dw building_data_93AD
8EA0                         db  40h,   0,   2, 63h, 83h,   0, 1Eh, 74h
8EA8 level26_data:           dw building_data_94D9
8EAA                         db 0A0h,   8,   2, 52h,   1,   0, 23h,   0
8EB2 level27_data:           dw building_data_9474
8EB4                         db  83h,   0,   6, 32h,   0,   2, 2Dh, 45h
8EBC level28_data:           dw building_data_9373
8EBE                         db    0,   2,   2, 72h,   2,   0, 23h, 12h
8EC6 level29_data:           dw building_data_930D
8EC8                         db    0,   0,   2, 43h, 82h,   0, 23h, 33h
8ED0 level30_data:           dw building_data_958E
8ED2                         db 0A1h,   4,   4, 61h,   0,   0, 28h, 26h
8EDA level31_data:           dw building_data_9408
8EDC                         db  23h,   0,   6, 81h,   2,   0, 23h, 51h
8EE4 level32_data:           dw building_data_9565
8EE6                         db 0A0h,   6,   4, 34h,   2,   0, 23h, 64h
8EEE level33_data:           dw building_data_9432
8EF0                         db    0,   0,   6, 63h, 83h,   1, 1Eh, 77h
8EF8 level34_data:           dw building_data_93CE
8EFA                         db  49h,   0,   2, 34h,   0,   2, 2Dh,   5
8F02 level35_data:           dw building_data_94E9
8F04                         db 0A0h,   2,   6, 42h,   1,   0, 26h, 20h
8F0C level36_data:           dw building_data_93FB
8F0E                         db  22h,   0,   2, 62h,   0,   1, 23h, 42h
8F16 level37_data:           dw building_data_94A3
8F18                         db 0A0h,   0,   2, 43h,0C2h,   0, 1Eh, 13h
8F20 level38_data:           dw building_data_950C
8F22                         db  89h,   8,   4, 72h,   2,   0, 1Eh, 36h
8F2A level39_data:           dw building_data_9444
8F2C                         db  80h, 0Ah,   2, 44h,   2,   0, 23h, 40h
8F34 level40_data:           dw building_data_9398
8F36                         db    3,   0,   6, 83h, 83h,   2, 1Eh, 55h
8F3E level41_data:           dw building_data_9558
8F40                         db    0,   6,   4, 43h,   0,   0, 23h,   4
8F48 level42_data:           dw building_data_93BF
8F4A                         db  20h,   0,   2, 52h, 42h,   1, 23h, 71h
8F52 level43_data:           dw building_data_9537
8F54                         db  22h,   4,   4, 81h,   2,   0, 28h, 27h
8F5C level44_data:           dw building_data_9344
8F5E                         db  40h,   0,   2, 52h,0C2h,   2, 23h, 62h
8F66 level45_data:           dw building_data_94C7
8F68                         db 0A1h,   0,   2, 43h,   0,   1, 2Dh, 43h
8F70 level46_data:           dw building_data_9464
8F72                         db  80h, 0Ah,   2, 71h,   0,   0, 28h, 30h
8F7A level47_data:           dw building_data_932F
8F7C                         db  80h,   0,   2, 63h, 83h,   0, 1Eh, 56h
8F84 level48_data:           dw building_data_93EC
8F86                         db    3,   0,   8, 43h, 42h,   1, 23h, 15h
8F8E level49_data:           dw building_data_9373
8F90                         db  20h,   0,   8, 52h,   2,   0, 23h, 21h
8F98 level50_data:           dw building_data_94FC
8F9A                         db 0A0h,   2,   8, 62h,   0,   0, 23h,   4
8FA2 level51_data:           dw building_data_9363
8FA4                         db    3,   0,   8, 81h,   1,   1, 28h, 42h
8FAC level52_data:           dw building_data_9425
8FAE                         db  60h,   0,   2, 32h,   0,   0, 2Dh, 66h
8FB6 level53_data:           dw building_data_930D
8FB8                         db  23h,   0,   2, 71h, 82h,   0, 23h, 37h
8FC0 level54_data:           dw building_data_9385
8FC2                         db  20h,   2,   2, 84h,   0,   0, 1Eh, 73h
8FCA level55_data:           dw building_data_931D
8FCC                         db    0,   0,   2, 42h, 82h,   0, 28h,   5
8FD4 level56_data:           dw building_data_94B5
8FD6                         db    2,   0,   2, 62h, 42h,   1, 28h, 10h
8FDE level57_data:           dw building_data_952A
8FE0                         db  40h,   4,   4, 42h,   0,   1, 2Dh, 52h
8FE8 level58_data:           dw building_data_9474
8FEA                         db  82h,   8,   2, 52h,   2,   0, 23h, 26h
8FF2 level59_data:           dw building_data_9484
8FF4                         db  80h,   2,   2, 72h,   2,   0, 28h, 34h
8FFC level60_data:           dw building_data_94D9
8FFE                         db  61h,   0,   2, 43h, 82h,   0, 23h, 41h
9006 level61_data:           dw building_data_9491
9008                         db  80h,   8,   4, 82h,   3,   0, 1Eh, 77h
9010 level62_data:           dw building_data_9432
9012                         db  20h,   0,   2, 62h,0C2h,   0, 28h,   5
901A level63_data:           dw building_data_9408
901C                         db  23h,   0,   2, 43h, 42h,   0, 23h, 23h
9024 level64_data:           dw building_data_9418
9026                         db  80h, 0Ah,   2, 72h,   0,   0, 28h, 60h
902E level65_data:           dw building_data_9356
9030                         db  40h,   0,   2, 61h,   0,   1, 2Dh,   5
9038 level66_data:           dw building_data_9363
903A                         db  61h,   0,   2, 62h,   0,   0, 28h, 14h
9042 level67_data:           dw building_data_9444
9044                         db    3,   0,   2, 43h,   2,   2, 28h, 57h
904C level68_data:           dw building_data_9558
904E                         db  20h,   6,   4, 81h,   1,   1, 23h, 43h
9056 level69_data:           dw building_data_9425
9058                         db  40h,   0,   2, 44h,   2,   2, 28h, 36h
9060 level70_data:           dw building_data_94B5
9062                         db 0A2h,   0,   2, 73h, 83h,   0, 1Eh, 61h
906A level71_data:           dw building_data_951B
906C                         db 0A0h,   2,   2, 34h,   0,   1, 28h, 22h
9074 level72_data:           dw building_data_931D
9076                         db    1,   0,   2, 53h,   2,   0, 23h, 40h
907E level73_data:           dw building_data_92FD
9080                         db    3,   0,   2, 62h,   2,   0, 23h, 15h
9088 level74_data:           dw building_data_93BF
908A                         db  60h,   0,   2, 53h,   0,   0, 28h, 74h
9092 level75_data:           dw building_data_959D
9094                         db  20h,   4,   4, 81h, 82h,   1, 23h,   6
909C level76_data:           dw building_data_9385
909E                         db  20h,   0,   2, 54h,   2,   0, 1Eh, 41h
90A6 level77_data:           dw building_data_9344
90A8                         db 0A3h,   0,   2, 53h, 42h,   1, 28h, 23h
90B0 level78_data:           dw building_data_93AD
90B2                         db 0A0h,   2,   2, 81h,   0,   0, 23h, 60h
90BA level79_data:           dw building_data_93EC
90BC                         db  40h,   0,   2, 34h,   0,   1, 2Dh, 34h
90C4 level80_data:           dw building_data_94E9
90C6                         db 0A2h,   0,   2, 81h,   0,   0, 23h, 55h
90CE level81_data:           dw building_data_9546
90D0                         db  20h,   4,   4, 43h, 41h,   0, 23h, 16h
90D8 level82_data:           dw building_data_9373
90DA                         db  20h,   0,   2, 73h,0C2h,   0, 1Eh, 77h
90E2 level83_data:           dw building_data_93EC
90E4                         db  61h,   0,   2, 51h,   0,   0, 28h,   6
90EC level84_data:           dw building_data_9581
90EE                         db    2,   6,   4, 71h,   2,   0, 23h, 21h
90F6 level85_data:           dw building_data_930D
90F8                         db    0,   2,   2, 43h,   2,   0, 23h, 42h
9100 level86_data:           dw building_data_93DD
9102                         db  63h,   0,   2, 62h,   0,   1, 28h, 15h
910A level87_data:           dw building_data_9408
910C                         db  40h,   0,   2, 44h,   0,   1, 23h, 63h
9114 level88_data:           dw building_data_93CE
9116                         db  62h,   0,   2, 52h, 42h,   0, 23h, 37h
911E level89_data:           dw building_data_958E
9120                         db    0,   4,   4, 81h, 41h,   0, 23h, 74h
9128 level90_data:           dw building_data_932F
912A                         db    3,   0,   2, 53h,0C3h,   0, 1Eh,   0
9132 level91_data:           dw building_data_93FB
9134                         db  61h,   0,   2, 42h,   0,   0, 28h, 45h
913C level92_data:           dw building_data_93CE
913E                         db  40h,   0,   2, 53h,   1,   0, 28h, 12h
9146 level93_data:           dw building_data_932F
9148                         db  60h,   0,   2, 62h,   0,   0, 28h, 33h
9150 level94_data:           dw building_data_94D9
9152                         db 0A3h,   0,   6, 44h, 82h,   0, 23h, 26h
915A level95_data:           dw building_data_94E9
915C                         db 0A2h,   0,   6, 81h,   2,   0, 23h, 51h
9164 level96_data:           dw building_data_950C
9166                         db 0A0h,   2,   6, 63h,   2,   0, 1Eh, 64h
916E level97_data:           dw building_data_930D
9170                         db  40h,   0,   2, 42h,   2,   2, 28h, 77h
9178 level98_data:           dw building_data_9373
917A                         db  22h,   8,   8, 52h,   1,   0, 23h,   5
9182 level99_data:           dw building_data_9454
9184                         db  20h, 0Ah,   8, 62h,   1,   0, 23h, 20h
918C level100_data:          dw building_data_94A3
918E                         db 0A3h,   0,   8, 51h, 41h,   0, 28h, 42h
9196 level101_data:          dw building_data_9565
9198                         db    0,   6,   4, 44h,   1,   0, 28h, 13h
91A0 level102_data:          dw building_data_931D
91A2                         db  21h,   0,   2, 52h,0C2h,   0, 23h, 36h
91AA level103_data:          dw building_data_9398
91AC                         db  22h,   0,   2, 82h, 42h,   0, 1Eh, 40h
91B4 level104_data:          dw building_data_93DD
91B6                         db 0A0h,   0,   2, 63h,   0,   0, 28h, 55h
91BE level105_data:          dw building_data_9464
91C0                         db  80h, 0Ah,   2, 54h,   0,   0, 28h,   4
91C8 level106_data:          dw building_data_94FC
91CA                         db 0A3h,   0,   6, 72h,   2,   1, 28h, 71h
91D2 level107_data:          dw building_data_94C7
91D4                         db 0A0h,   2,   6, 62h,   1,   0, 28h, 27h
91DC level108_data:          dw building_data_94B5
91DE                         db 0A2h,   0,   6, 42h,   1,   0, 28h, 62h
91E6 level109_data:          dw building_data_93AD
91E8                         db    0,   0,   6, 62h,0C2h,   0, 1Eh, 43h
91F0 level110_data:          dw building_data_93DD
91F2                         db  23h,   0,   2, 71h, 42h,   0, 23h, 30h
91FA level111_data:          dw building_data_952A
91FC                         db  60h,   4,   4, 44h, 82h,   1, 28h, 56h
9204 level112_data:          dw building_data_9474
9206                         db  80h,   8,   4, 83h,   0,   1, 2Dh, 15h
920E level113_data:          dw building_data_9385
9210                         db    3,   0,   2, 81h,0C3h,   0, 23h, 21h
9218 level114_data:          dw building_data_9425
921A                         db  40h,   0,   2, 44h,   0,   0, 28h,   4
9222 level115_data:          dw building_data_93CE
9224                         db  62h,   0,   2, 52h,   1,   0, 28h, 42h
922C level116_data:          dw building_data_951B
922E                         db  20h,   0,   2, 43h,   2,   0, 23h, 66h
9236 level117_data:          dw building_data_93AD
9238                         db    1,   2,   2, 61h,   1,   0, 28h, 37h
9240 level118_data:          dw building_data_9432
9242                         db  20h,   0,   2, 82h, 82h,   0, 1Eh, 73h
924A level119_data:          dw building_data_9491
924C                         db  83h,   0,   2, 52h,   1,   0, 23h,   5
9254 level120_data:          dw building_data_9574
9256                         db  40h,   6,   4, 43h,   0,   0, 28h, 10h
925E level121_data:          dw building_data_930D
9260                         db  60h,   0,   6, 62h,   1,   0, 23h, 52h
9268 level122_data:          dw building_data_9373
926A                         db  21h,   0,   2, 43h,   1,   0, 28h, 26h
9272 level123_data:          dw building_data_9484
9274                         db  80h,   8,   6, 62h,   0,   1, 2Dh, 34h
927C level124_data:          dw building_data_9558
927E                         db  20h,   0,   2, 43h,   1,   0, 28h, 41h
9286 level125_data:          dw building_data_931D
9288                         db    3,   0,   2, 82h, 82h,   0, 1Eh, 70h
9290 level126_data:          dw building_data_93CE
9292                         db  42h,   0,   2, 61h,   0,   0, 28h,   5
929A level127_data:          dw building_data_9537
929C                         db  60h,   4,   2, 43h,   2,   0, 23h, 23h
92A4 level128_data:          dw building_data_92E5
92A6                         db 0A3h,   0,   2, 81h,0C5h,   0, 2Dh, 77h
92AE level129_data:          dw building_data_92D6
92B0                         db  41h,   2,   2, 34h,   1,   0, 28h, 32h
92B8 level130_data:          dw building_data_92EE
92BA                         db  40h,   0,   2, 62h, 42h,   1, 23h, 14h
92C2 level131_data:          dw building_data_9385
92C4                         db    2,   0,   2, 53h, 42h,   0, 23h, 43h
92CC level132_data:          dw building_data_9398
92CE                         db    0,   2,   2, 73h,   2,   0, 1Eh, 57h
92D6 building_data_92D6:     db  0Ah, 2Ch, 20h                   ; level129_data↑o
92D6                                                             ; 1st byte is building Number / control byte
92D6                                                             ;     $ff = end; $fD,$fc,$fb,$fa
92D6                                                             ; 2nd byte is x offset into screen RAM for start position
92D6                                                             ; 3rd byte palette data or with character memory
92D9 building_data_92D9:     db  26h, 26h, 10h, 11h, 18h, 20h,0FCh, 80h, 1Ch, 10h,   0
92D9                                                             ; level_data_table↑o
92E4                         db 0FFh
92E5 building_data_92E5:     db  10h, 10h,   0, 25h, 28h, 20h,0FAh, 70h,0FFh
92E5                                                             ; level128_data↑o
92EE building_data_92EE:     db  18h, 24h, 20h, 0Eh, 14h, 10h,0FBh, 90h, 1Ch, 2Ah, 10h
92EE                                                             ; level02_data↑o
92EE                                                             ; level130_data↑o
92F9                         db    3, 0Ch,   0,0FFh
92FD building_data_92FD:     db  2Ch, 2Ah, 20h, 25h, 12h, 10h, 0Dh, 30h, 10h, 27h,   8
92FD                                                             ; level07_data↑o
92FD                                                             ; level73_data↑o
9308                         db    0,   8, 1Ah,   0,0FFh
930D building_data_930D:     db  0Ah, 1Ah, 20h,   6, 2Ch, 20h, 16h,   8, 10h, 1Bh, 22h
930D                                                             ; level29_data↑o
930D                                                             ; level53_data↑o 
9318                         db  10h,   9, 12h,   0,0FFh
931D building_data_931D:     db    6, 1Ch, 20h,0FAh, 78h,   2,   8, 10h, 0Eh, 30h, 10h
931D                                                             ; level04_data↑o
931D                                                             ; level55_data↑o 
9328                         db  19h, 0Eh,   0, 2Bh, 22h,   0,0FFh
932F building_data_932F:     db    7, 0Eh, 20h, 22h, 26h, 20h,0FDh, 88h, 0Bh, 16h, 10h
932F                                                             ; level10_data↑o
932F                                                             ; level47_data↑o 
933A                         db    9, 2Eh, 10h, 12h,   8,   0, 1Ch, 1Eh,   0,0FFh
9344 building_data_9344:     db  0Ch,   8, 20h, 23h, 18h, 20h,0FCh, 60h, 1Bh, 0Eh, 10h
9344                                                             ; level14_data↑o
9344                                                             ; level44_data↑o 
934F                         db  1Eh, 2Ch, 10h, 24h, 26h,   0,0FFh
9356 building_data_9356:     db    7, 0Ch, 20h, 25h, 28h, 20h, 16h, 20h, 10h, 18h, 12h
9356                                                             ; level11_data↑o
9356                                                             ; level65_data↑o
9361                         db    0,0FFh
9363 building_data_9363:     db    2, 0Eh, 20h, 0Ah, 2Ch, 20h,   5, 0Ah, 10h, 21h, 24h
9363                                                             ; level15_data↑o
9363                                                             ; level51_data↑o 
936E                         db  10h, 26h, 12h,   0,0FFh
9373 building_data_9373:     db  0Bh, 2Eh, 20h, 1Eh,   8, 10h, 20h, 20h, 10h,0FAh, 60h
9373                                                             ; level28_data↑o
9373                                                             ; level49_data↑o 
937E                         db  2Bh, 12h,   0, 1Ch, 26h,   0,0FFh
9385 building_data_9385:     db  23h,   8, 20h,   7, 26h, 20h, 22h, 16h, 10h, 24h, 2Eh
9385                                                             ; level03_data↑o
9385                                                             ; level54_data↑o 
9390                         db  10h, 1Ch, 0Eh,   0,   8, 1Eh,   0,0FFh
9398 building_data_9398:     db  0Bh, 0Eh, 20h,0FBh, 80h,   7, 2Eh, 20h, 0Ah, 1Eh, 10h
9398                                                             ; level18_data↑o
9398                                                             ; level40_data↑o 
93A3                         db  10h,   8,   0,   4, 16h,   0, 24h, 26h,   0,0FFh
93AD building_data_93AD:     db  28h, 1Ah, 20h, 11h, 30h, 20h, 22h, 12h, 10h, 13h,   8
93AD                                                             ; level25_data↑o
93AD                                                             ; level78_data↑o 
93B8                         db    0, 2Ch, 22h,   0,0FCh, 48h,0FFh
93BF building_data_93BF:     db  0Bh, 18h, 20h,0FAh, 48h, 27h, 2Ch, 20h, 1Ch,   8, 10h
93BF                                                             ; level16_data↑o
93BF                                                             ; level42_data↑o 
93CA                         db  0Dh, 1Eh,   0,0FFh
93CE building_data_93CE:     db  1Dh,   8, 20h, 15h, 0Eh, 10h, 2Bh, 30h, 10h,0FCh, 50h
93CE                                                             ; level34_data↑o
93CE                                                             ; level88_data↑o 
93D9                         db    5, 20h,   0,0FFh
93DD building_data_93DD:     db  16h, 18h, 20h,   3,   8, 10h,0FDh, 50h, 10h, 20h,   0
93DD                                                             ; level21_data↑o
93DD                                                             ; level86_data↑o 
93E8                         db    4, 2Eh,   0,0FFh
93EC building_data_93EC:     db  27h, 12h, 20h,0FDh, 50h, 26h,   8, 10h, 25h, 24h, 10h
93EC                                                             ; level48_data↑o
93EC                                                             ; level79_data↑o 
93F7                         db  2Ah, 2Ah,   0,0FFh
93FB building_data_93FB:     db  24h, 2Ah, 20h,   8,   8, 10h, 28h, 18h,   0, 2Bh, 30h
93FB                                                             ; level36_data↑o
93FB                                                             ; level91_data↑o
9406                         db    0,0FFh
9408 building_data_9408:     db    1,   8, 20h, 21h, 18h, 20h, 24h, 2Eh, 20h, 1Bh, 10h
9408                                                             ; level31_data↑o
9408                                                             ; level63_data↑o 
9413                         db  10h, 2Bh, 2Ah, 10h,0FFh
9418 building_data_9418:     db    7,   8, 20h, 29h, 18h, 10h, 15h, 0Eh,   0, 2Ah, 2Ah
9418                                                             ; level64_data↑o
9423                         db    0,0FFh
9425 building_data_9425:     db  16h, 24h, 20h, 1Eh, 10h, 10h, 26h, 2Ah, 10h, 17h,   8
9425                                                             ; level52_data↑o
9425                                                             ; level69_data↑o 
9430                         db    0,0FFh
9432 building_data_9432:     db  0Eh, 1Eh, 20h,   7, 2Eh, 20h, 20h,   8, 10h, 14h, 24h
9432                                                             ; level33_data↑o
9432                                                             ; level62_data↑o 
943D                         db  10h, 0Ch, 0Eh,   0,0FDh, 58h,0FFh
9444 building_data_9444:     db  25h,   8, 20h, 27h, 2Ch, 20h, 1Dh, 0Eh, 10h, 1Bh, 14h
9444                                                             ; level39_data↑o
9444                                                             ; level67_data↑o
944F                         db    0, 1Fh, 26h,   0,0FFh
9454 building_data_9454:     db  2Dh,   8, 20h, 14h, 20h, 20h, 21h, 0Eh, 10h, 10h, 2Ah
9454                                                             ; level20_data↑o
9454                                                             ; level99_data↑o
945F                         db  10h,   3, 18h,   0,0FFh
9464 building_data_9464:     db  1Eh, 18h, 20h, 0Eh, 0Ah, 10h, 16h, 20h, 10h,   1, 10h
9464                                                             ; level13_data↑o
9464                                                             ; level46_data↑o 
946F                         db    0, 17h, 2Ah,   0,0FFh
9474 building_data_9474:     db  22h,   8, 20h, 0Bh, 18h, 20h, 1Fh, 0Eh, 10h,   1, 28h
9474                                                             ; level27_data↑o
9474                                                             ; level58_data↑o 
947F                         db  10h,   9, 20h,   0,0FFh
9484 building_data_9484:     db  28h, 16h, 20h, 1Ah, 10h, 10h, 24h, 20h, 10h, 1Bh, 28h
9484                                                             ; level19_data↑o
9484                                                             ; level59_data↑o 
948F                         db    0,0FFh
9491 building_data_9491:     db  1Eh, 18h, 20h,   7,   8, 10h,0FAh, 90h, 16h, 20h, 10h
9491                                                             ; level61_data↑o
9491                                                             ; level119_data↑o
949C                         db    1, 10h,   0, 17h, 2Ah,   0,0FFh
94A3 building_data_94A3:     db  1Fh,   8, 20h, 25h, 20h, 20h, 2Ch, 30h, 20h,   4, 28h
94A3                                                             ; level37_data↑o
94A3                                                             ; level100_data↑o
94AE                         db  10h, 0Fh, 1Ah,   0,0FAh, 40h,0FFh
94B5 building_data_94B5:     db  22h, 0Eh, 20h, 29h, 24h, 20h, 0Dh,   8, 10h,   5, 2Ah
94B5                                                             ; level08_data↑o
94B5                                                             ; level56_data↑o 
94C0                         db  10h, 26h, 20h,   0,0FBh, 48h,0FFh
94C7 building_data_94C7:     db    6, 28h, 20h, 2Ah,   8, 10h, 12h, 30h, 10h, 10h, 10h
94C7                                                             ; level45_data↑o
94C7                                                             ; level107_data↑o
94D2                         db    0,0FCh, 40h, 27h, 1Eh,   0,0FFh
94D9 building_data_94D9:     db  14h, 1Ch, 20h, 2Ch, 0Eh, 10h, 1Dh, 2Eh, 10h, 0Dh,   8
94D9                                                             ; level26_data↑o
94D9                                                             ; level60_data↑o 
94E4                         db    0,   4, 26h,   0,0FFh
94E9 building_data_94E9:     db  22h, 0Eh, 20h,   2, 26h, 20h,   5, 16h, 10h, 2Bh,   8
94E9                                                             ; level09_data↑o
94E9                                                             ; level35_data↑o 
94F4                         db    0,   9, 1Eh,   0, 1Ch, 2Eh,   0,0FFh
94FC building_data_94FC:     db  29h, 26h, 20h,   1, 16h, 20h, 18h,   8, 10h, 13h, 2Ch
94FC                                                             ; level50_data↑o
94FC                                                             ; level106_data↑o
9507                         db  10h,   8, 0Eh,   0,0FFh
950C building_data_950C:     db  0Bh, 0Eh, 20h, 12h, 1Eh, 10h,   8,   8,   0, 29h, 2Ch
950C                                                             ; level38_data↑o
950C                                                             ; level96_data↑o
9517                         db    0,0FAh, 40h,0FFh
951B building_data_951B:     db  22h,   8, 20h, 21h, 18h, 10h,0FDh, 50h, 1Ah, 30h, 10h
951B                                                             ; level05_data↑o
951B                                                             ; level71_data↑o 
9526                         db  1Bh, 0Eh,   0,0FFh
952A building_data_952A:     db  28h, 1Ah, 20h, 11h, 30h, 20h, 0Bh, 12h, 10h, 13h,   8
952A                                                             ; level57_data↑o
952A                                                             ; level111_data↑o
9535                         db    0,0FFh
9537 building_data_9537:     db  28h,   8, 20h, 0Eh, 1Ah, 20h,0FDh, 60h, 24h, 12h, 10h
9537                                                             ; level17_data↑o
9537                                                             ; level43_data↑o 
9542                         db  0Ah, 2Eh,   0,0FFh
9546 building_data_9546:     db  12h, 1Eh, 20h,0FDh, 60h,   2, 0Eh, 10h, 0Fh,   8,   0
9546                                                             ; level23_data↑o
9546                                                             ; level81_data↑o
9551                         db    3, 16h,   0, 19h, 30h,   0,0FFh
9558 building_data_9558:     db  18h, 1Ah, 20h, 25h, 2Ah, 20h, 2Dh,   8, 10h, 16h, 20h
9558                                                             ; level06_data↑o
9558                                                             ; level41_data↑o 
9563                         db  10h,0FFh
9565 building_data_9565:     db  23h, 2Ch, 20h, 1Ah,   8, 10h, 24h, 1Ah, 10h,0FBh, 78h
9565                                                             ; level32_data↑o
9565                                                             ; level101_data↑o
9570                         db  26h, 22h,   0,0FFh
9574 building_data_9574:     db  14h, 1Ah, 20h, 11h, 2Ch, 10h, 1Dh,   8, 10h,   5, 24h
9574                                                             ; level22_data↑o
9574                                                             ; level120_data↑o
957F                         db    0,0FFh
9581 building_data_9581:     db    6, 2Eh, 20h, 0Ch, 1Eh, 10h, 2Dh,   8,   0, 10h, 1Ah
9581                                                             ; level24_data↑o
9581                                                             ; level84_data↑o
958C                         db    0,0FFh
958E building_data_958E:     db    6, 12h, 20h, 1Ch, 0Ah, 10h, 2Ch, 30h, 10h,0FAh, 60h
958E                                                             ; level30_data↑o
958E                                                             ; level89_data↑o
9599                         db  16h, 1Ah,   0,0FFh
959D building_data_959D:     db    6,   8, 20h, 16h, 18h, 10h, 10h, 30h, 10h, 26h, 0Eh
959D                                                             ; level12_data↑o
959D                                                             ; level75_data↑o
95A8                         db    0,0FFh
95AA foilage_table:          dw trees_and_grass                  ; 4D06↑o 8CA6↑o
95AA                                                             ; This graphic is 3 rows high
95AC                         dw trees_and_grass                  ; This graphic is 3 rows high
95AE                         dw trees_and_grass2
95B0                         dw trees_and_snow
95B2                         dw cactus_and_desert
95B4 building_characters_table:dw building1_ch                   ; 4C7E↑o 8B7D↑o
95B4                                                             ; Building characters x size, y size and then colour byte.
95B4                                                             ; If the colour = 255, then the data for the building is normal low/high values direct to screen character ram. Otherwise it's single bytes with the colour repeated for the word character data RAM. Buildings are plotted top to bottom.
95B6                         dw building1_ch                     ; Building characters x size, y size and then colour byte.
95B6                                                             ; If the colour = 255, then the data for the building is normal low/high values direct to screen character ram. Otherwise it's single bytes with the colour repeated for the word character data RAM. Buildings are plotted top to bottom.
95B8                         dw building2_ch
95BA                         dw building3_ch
95BC                         dw building4_ch
95BE                         dw building5_ch
95C0                         dw building6_ch
95C2                         dw building7_ch
95C4                         dw building8_ch
95C6                         dw building9_ch
95C8                         dw building10_ch
95CA                         dw building11_ch
95CC                         dw building12_ch
95CE                         dw building13_ch
95D0                         dw building14_ch
95D2                         dw building15_ch
95D4                         dw building16_ch
95D6                         dw building17_ch
95D8                         dw building18_ch
95DA                         dw building19_ch
95DC                         dw building20_ch                    ; Word Character sized.
95DE                         dw building21_ch
95E0                         dw building22_ch
95E2                         dw building23_ch
95E4                         dw building24_ch
95E6                         dw building25_ch
95E8                         dw building26_ch
95EA                         dw building27_ch
95EC                         dw building28_ch
95EE                         dw building29_ch
95F0                         dw building30_ch
95F2                         dw building31_ch
95F4                         dw building32_ch
95F6                         dw building33_ch
95F8                         dw building34_ch
95FA                         dw building35_ch
95FC                         dw building36_ch
95FE                         dw building37_ch
9600                         dw building38_ch
9602                         dw building39_ch
9604                         dw building40_ch
9606                         dw building41_ch
9608                         dw building42_ch
960A                         dw building43_ch
960C                         dw building44_ch
960E                         dw building45_ch
9610 a6peoria:               .ascii '#6PEORIA',0                 ; level_names↓o
9619 a6joliet:               .ascii '#6JOLIET',0                 ; 99B0↓o
9622 a5chicago:              .ascii '#5CHICAGO',0                ; 99B2↓o 99B4↓o 
962C a3kalamazoo:            .ascii '#3KALAMAZOO',0              ; 99B6↓o
9638 a5detroit:              .ascii '#5DETROIT',0                ; 99B8↓o 99BA↓o 
9642 a3cleveland:            .ascii '#3CLEVELAND',0              ; 99BC↓o 99BE↓o
964E a2pittsburgh:           .ascii '#2PITTSBURGH',0             ; 99C0↓o 99C2↓o
965B a3baltimore:            .ascii '#3BALTIMORE',0              ; 99C4↓o 99C6↓o
9667 aPhiladelphia:          .ascii 'PHILADELPHIA',0             ; 99C8↓o 99CA↓o 
9674 a6newark:               .ascii '#6NEWARK',0                 ; 99CC↓o
967D a3manhattan:            .ascii '#3MANHATTAN',0              ; 99CE↓o 99D0↓o 
9689 a6boston:               .ascii '#6BOSTON',0                 ; 99D2↓o 99D4↓o 
9692 a6bangor:               .ascii '#6BANGOR',0                 ; 99D6↓o
969B a6quebec:               .ascii '#6QUEBEC',0                 ; 99D8↓o
96A4 a4montreal:             .ascii '#4MONTREAL',0               ; 99DA↓o 9A9C↓o
96AF a6ottawa:               .ascii '#6OTTAWA',0                 ; 99DC↓o
96B8 a5toronto:              .ascii '#5TORONTO',0                ; 99DE↓o 9A9E↓o
96C2 a4mackinaw:             .ascii '#4MACKINAW',0               ; 99E0↓o
96CD a3greenBay:             .ascii '#3GREEN BAY',0              ; 99E2↓o 9AA2↓o
96D9 a3milwaukee:            .ascii '#3MILWAUKEE',0              ; 99E4↓o 99E6↓o 
96E5 a3laCrosse:             .ascii '#3LA CROSSE',0              ; 99E8↓o
96F1 a4stPaul:               .ascii '#4ST. PAUL',0               ; 99EA↓o
96FC a6duluth:               .ascii '#6DULUTH',0                 ; 99EC↓o
9705 a4bismarck:             .ascii '#4BISMARCK',0               ; 99EE↓o
9710 a6custer:               .ascii '#6CUSTER',0                 ; 99F0↓o
9719 a4billings:             .ascii '#4BILLINGS',0               ; 99F2↓o
9724 a7boise:                .ascii '#7BOISE',0                  ; 99F4↓o
972C a5spokane:              .ascii '#5SPOKANE',0                ; 99F6↓o
9736 a5seattle:              .ascii '#5SEATTLE',0                ; 99F8↓o 99FA↓o 
9740 a4portland:             .ascii '#4PORTLAND',0               ; 99FC↓o 99FE↓o
974B a2sacramento:           .ascii '#2SACRAMENTO',0             ; 9A00↓o 9A02↓o
9758 a6fresno:               .ascii '#6FRESNO',0                 ; 9A04↓o
9761 a5burbank:              .ascii '#5BURBANK',0                ; 9A06↓o
976B a3sanDiego:             .ascii '#3SAN DIEGO',0              ; 9A08↓o 9A0A↓o 
9777 a3lasVegas:             .ascii '#3LAS VEGAS',0              ; 9A0C↓o
9783 a5phoenix:              .ascii '#5PHOENIX',0                ; 9A0E↓o
978D a1albuquerque:          .ascii '#1ALBUQUERQUE',0            ; 9A10↓o
979B a4amarillo:             .ascii '#4AMARILLO',0               ; 9A12↓o
97A6 a5lubbock:              .ascii '#5LUBBOCK',0                ; 9A14↓o
97B0 a6dallas:               .ascii '#6DALLAS',0                 ; 9A16↓o 9A18↓o
97B9 a5houston:              .ascii '#5HOUSTON',0                ; 9A1A↓o 9A1C↓o
97C3 a1batonRouge:           .ascii '#1BATON ROUGE',0            ; 9A1E↓o
97D1 a1newOrleans:           .ascii '#1NEW ORLEANS',0            ; 9A20↓o 9A22↓o 
97DF a6mobile:               .ascii '#6MOBILE',0                 ; 9A24↓o
97E8 a3tampaBay:             .ascii '#3TAMPA BAY',0              ; 9A26↓o 9A8C↓o
97F4 a7miami:                .ascii '#7MIAMI',0                  ; 9A28↓o 9A2A↓o 
97FC a5daytona:              .ascii '#5DAYTONA',0                ; 9A2C↓o
9806 a4savannah:             .ascii '#4SAVANNAH',0               ; 9A2E↓o 9A90↓o
9811 a3charlotte:            .ascii '#3CHARLOTTE',0              ; 9A30↓o
981D a5raleigh:              .ascii '#5RALEIGH',0                ; 9A32↓o
9827 a4richmond:             .ascii '#4RICHMOND',0               ; 9A34↓o 9A94↓o
9832 a2charleston:           .ascii '#2CHARLESTON',0             ; 9A36↓o 9A92↓o
983F a3knoxville:            .ascii '#3KNOXVILLE',0              ; 9A38↓o
984B a1chattanooga:          .ascii '#1CHATTANOOGA',0            ; 9A3A↓o
9859 a5atlanta:              .ascii '#5ATLANTA',0                ; 9A3C↓o 9A3E↓o
9863 a2tuscaloosa:           .ascii '#2TUSCALOOSA',0             ; 9A40↓o
9870 a5memphis:              .ascii '#5MEMPHIS',0                ; 9A42↓o 9A44↓o
987A a3nashville:            .ascii '#3NASHVILLE',0              ; 9A46↓o 9A48↓o
9886 a2louisville:           .ascii '#2LOUISVILLE',0             ; 9A4A↓o
9893 a3lexington:            .ascii '#3LEXINGTON',0              ; 9A4C↓o
989F a2cincinnati:           .ascii '#2CINCINNATI',0             ; 9A4E↓o 9A50↓o
98AC aIndianapolis:          .ascii 'INDIANAPOLIS',0             ; 9A52↓o
98B9 a3stLouis:              .ascii '#3ST. LOUIS',0              ; 9A54↓o 9A56↓o
98C5 a1littleRock:           .ascii '#1LITTLE ROCK',0            ; 9A58↓o
98D3 a7tulsa:                .ascii '#7TULSA',0                  ; 9A5A↓o
98DB a5wichita:              .ascii '#5WICHITA',0                ; 9A5C↓o
98E5 a1kansasCity:           .ascii '#1KANSAS CITY',0            ; 9A5E↓o 9A60↓o
98F3 a2desMoines:            .ascii '#2DES MOINES',0             ; 9A62↓o
9900 a7omaha:                .ascii '#7OMAHA',0                  ; 9A64↓o
9908 a5lincoln:              .ascii '#5LINCOLN',0                ; 9A66↓o
9912 a5boulder:              .ascii '#5BOULDER',0                ; 9A68↓o
991C a6denver:               .ascii '#6DENVER',0                 ; 9A6A↓o 9A6C↓o
9925 a4cheyenne:             .ascii '#4CHEYENNE',0               ; 9A6E↓o
9930 a3saltLake:             .ascii '#3SALT LAKE',0              ; 9A70↓o 9A72↓o
993C a8reno:                 .ascii '#8RENO',0                   ; 9A74↓o
9943 a4sanJose:              .ascii '#4SAN JOSE',0               ; 9A76↓o
994E a1losAngeles:           .ascii '#1LOS ANGELES',0            ; 9A78↓o 9A7A↓o
995C a4honolulu:             .ascii '#4HONOLULU',0               ; 9A7C↓o
9967 a8maui:                 .ascii '#8MAUI',0                   ; 9A7E↓o
996E a3anchorage:            .ascii '#3ANCHORAGE',0              ; 9A80↓o
997A a8nome:                 .ascii '#8NOME',0                   ; 9A82↓o
9981 a3fairbanks:            .ascii '#3FAIRBANKS',0              ; 9A84↓o
998D a4homewood:             .ascii '#4HOMEWOOD',0               ; 9AA8↓o
9998 a6aurora:               .ascii '#6AURORA',0                 ; 9AAA↓o
99A1 a2planoIll:             .ascii '#2PLANO ILL.',0             ; 9AAC↓o
99AE level_names:            dw a6peoria                         ; 67AB↑o
99AE                                                             ; "#6PEORIA"
99B0                         dw a6joliet                         ; "#6JOLIET"
99B2                         dw a5chicago                        ; "#5CHICAGO"
99B4                         dw a5chicago                        ; "#5CHICAGO"
99B6                         dw a3kalamazoo                      ; "#3KALAMAZOO"
99B8                         dw a5detroit                        ; "#5DETROIT"
99BA                         dw a5detroit                        ; "#5DETROIT"
99BC                         dw a3cleveland                      ; "#3CLEVELAND"
99BE                         dw a3cleveland                      ; "#3CLEVELAND"
99C0                         dw a2pittsburgh                     ; "#2PITTSBURGH"
99C2                         dw a2pittsburgh                     ; "#2PITTSBURGH"
99C4                         dw a3baltimore                      ; "#3BALTIMORE"
99C6                         dw a3baltimore                      ; "#3BALTIMORE"
99C8                         dw aPhiladelphia                    ; "PHILADELPHIA"
99CA                         dw aPhiladelphia                    ; "PHILADELPHIA"
99CC                         dw a6newark                         ; "#6NEWARK"
99CE                         dw a3manhattan                      ; "#3MANHATTAN"
99D0                         dw a3manhattan                      ; "#3MANHATTAN"
99D2                         dw a6boston                         ; "#6BOSTON"
99D4                         dw a6boston                         ; "#6BOSTON"
99D6                         dw a6bangor                         ; "#6BANGOR"
99D8                         dw a6quebec                         ; "#6QUEBEC"
99DA                         dw a4montreal                       ; "#4MONTREAL"
99DC                         dw a6ottawa                         ; "#6OTTAWA"
99DE                         dw a5toronto                        ; "#5TORONTO"
99E0                         dw a4mackinaw                       ; "#4MACKINAW"
99E2                         dw a3greenBay                       ; "#3GREEN BAY"
99E4                         dw a3milwaukee                      ; "#3MILWAUKEE"
99E6                         dw a3milwaukee                      ; "#3MILWAUKEE"
99E8                         dw a3laCrosse                       ; "#3LA CROSSE"
99EA                         dw a4stPaul                         ; "#4ST. PAUL"
99EC                         dw a6duluth                         ; "#6DULUTH"
99EE                         dw a4bismarck                       ; "#4BISMARCK"
99F0                         dw a6custer                         ; "#6CUSTER"
99F2                         dw a4billings                       ; "#4BILLINGS"
99F4                         dw a7boise                          ; "#7BOISE"
99F6                         dw a5spokane                        ; "#5SPOKANE"
99F8                         dw a5seattle                        ; "#5SEATTLE"
99FA                         dw a5seattle                        ; "#5SEATTLE"
99FC                         dw a4portland                       ; "#4PORTLAND"
99FE                         dw a4portland                       ; "#4PORTLAND"
9A00                         dw a2sacramento                     ; "#2SACRAMENTO"
9A02                         dw a2sacramento                     ; "#2SACRAMENTO"
9A04                         dw a6fresno                         ; "#6FRESNO"
9A06                         dw a5burbank                        ; "#5BURBANK"
9A08                         dw a3sanDiego                       ; "#3SAN DIEGO"
9A0A                         dw a3sanDiego                       ; "#3SAN DIEGO"
9A0C                         dw a3lasVegas                       ; "#3LAS VEGAS"
9A0E                         dw a5phoenix                        ; "#5PHOENIX"
9A10                         dw a1albuquerque                    ; "#1ALBUQUERQUE"
9A12                         dw a4amarillo                       ; "#4AMARILLO"
9A14                         dw a5lubbock                        ; "#5LUBBOCK"
9A16                         dw a6dallas                         ; "#6DALLAS"
9A18                         dw a6dallas                         ; "#6DALLAS"
9A1A                         dw a5houston                        ; "#5HOUSTON"
9A1C                         dw a5houston                        ; "#5HOUSTON"
9A1E                         dw a1batonRouge                     ; "#1BATON ROUGE"
9A20                         dw a1newOrleans                     ; "#1NEW ORLEANS"
9A22                         dw a1newOrleans                     ; "#1NEW ORLEANS"
9A24                         dw a6mobile                         ; "#6MOBILE"
9A26                         dw a3tampaBay                       ; "#3TAMPA BAY"
9A28                         dw a7miami                          ; "#7MIAMI"
9A2A                         dw a7miami                          ; "#7MIAMI"
9A2C                         dw a5daytona                        ; "#5DAYTONA"
9A2E                         dw a4savannah                       ; "#4SAVANNAH"
9A30                         dw a3charlotte                      ; "#3CHARLOTTE"
9A32                         dw a5raleigh                        ; "#5RALEIGH"
9A34                         dw a4richmond                       ; "#4RICHMOND"
9A36                         dw a2charleston                     ; "#2CHARLESTON"
9A38                         dw a3knoxville                      ; "#3KNOXVILLE"
9A3A                         dw a1chattanooga                    ; "#1CHATTANOOGA"
9A3C                         dw a5atlanta                        ; "#5ATLANTA"
9A3E                         dw a5atlanta                        ; "#5ATLANTA"
9A40                         dw a2tuscaloosa                     ; "#2TUSCALOOSA"
9A42                         dw a5memphis                        ; "#5MEMPHIS"
9A44                         dw a5memphis                        ; "#5MEMPHIS"
9A46                         dw a3nashville                      ; "#3NASHVILLE"
9A48                         dw a3nashville                      ; "#3NASHVILLE"
9A4A                         dw a2louisville                     ; "#2LOUISVILLE"
9A4C                         dw a3lexington                      ; "#3LEXINGTON"
9A4E                         dw a2cincinnati                     ; "#2CINCINNATI"
9A50                         dw a2cincinnati                     ; "#2CINCINNATI"
9A52                         dw aIndianapolis                    ; "INDIANAPOLIS"
9A54                         dw a3stLouis                        ; "#3ST. LOUIS"
9A56                         dw a3stLouis                        ; "#3ST. LOUIS"
9A58                         dw a1littleRock                     ; "#1LITTLE ROCK"
9A5A                         dw a7tulsa                          ; "#7TULSA"
9A5C                         dw a5wichita                        ; "#5WICHITA"
9A5E                         dw a1kansasCity                     ; "#1KANSAS CITY"
9A60                         dw a1kansasCity                     ; "#1KANSAS CITY"
9A62                         dw a2desMoines                      ; "#2DES MOINES"
9A64                         dw a7omaha                          ; "#7OMAHA"
9A66                         dw a5lincoln                        ; "#5LINCOLN"
9A68                         dw a5boulder                        ; "#5BOULDER"
9A6A                         dw a6denver                         ; "#6DENVER"
9A6C                         dw a6denver                         ; "#6DENVER"
9A6E                         dw a4cheyenne                       ; "#4CHEYENNE"
9A70                         dw a3saltLake                       ; "#3SALT LAKE"
9A72                         dw a3saltLake                       ; "#3SALT LAKE"
9A74                         dw a8reno                           ; "#8RENO"
9A76                         dw a4sanJose                        ; "#4SAN JOSE"
9A78                         dw a1losAngeles                     ; "#1LOS ANGELES"
9A7A                         dw a1losAngeles                     ; "#1LOS ANGELES"
9A7C                         dw a4honolulu                       ; "#4HONOLULU"
9A7E                         dw a8maui                           ; "#8MAUI"
9A80                         dw a3anchorage                      ; "#3ANCHORAGE"
9A82                         dw a8nome                           ; "#8NOME"
9A84                         dw a3fairbanks                      ; "#3FAIRBANKS"
9A86                         dw a5seattle                        ; "#5SEATTLE"
9A88                         dw a3sanDiego                       ; "#3SAN DIEGO"
9A8A                         dw a1newOrleans                     ; "#1NEW ORLEANS"
9A8C                         dw a3tampaBay                       ; "#3TAMPA BAY"
9A8E                         dw a7miami                          ; "#7MIAMI"
9A90                         dw a4savannah                       ; "#4SAVANNAH"
9A92                         dw a2charleston                     ; "#2CHARLESTON"
9A94                         dw a4richmond                       ; "#4RICHMOND"
9A96                         dw aPhiladelphia                    ; "PHILADELPHIA"
9A98                         dw a3manhattan                      ; "#3MANHATTAN"
9A9A                         dw a6boston                         ; "#6BOSTON"
9A9C                         dw a4montreal                       ; "#4MONTREAL"
9A9E                         dw a5toronto                        ; "#5TORONTO"
9AA0                         dw a5detroit                        ; "#5DETROIT"
9AA2                         dw a3greenBay                       ; "#3GREEN BAY"
9AA4                         dw a3milwaukee                      ; "#3MILWAUKEE"
9AA6                         dw a5chicago                        ; "#5CHICAGO"
9AA8                         dw a4homewood                       ; "#4HOMEWOOD"
9AAA                         dw a6aurora                         ; "#6AURORA"
9AAC                         dw a2planoIll                       ; "#2PLANO ILL."
9AAE trees_and_grass:        dw  300Ah, 31E6h, 31E7h, 300Ah, 300Ah, 300Ah, 300Ah, 31E7h
9AAE                                                             ; foilage_table↑o
9AAE                                                             ; 95AC↑o
9ABE                         dw  300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 31E7h, 300Ah, 300Ah ; This graphic is 3 rows high
9ACE                         dw  35E4h, 35E6h, 300Ah, 300Ah, 31E7h, 35E6h, 300Ah, 31E7h
9ADE                         dw  300Ah, 300Ah, 300Ah, 31E6h, 31E4h, 300Ah, 35E6h, 300Ah
9AEE                         dw  35E4h, 35E3h, 35E3h, 31E6h, 300Ah, 31E5h, 35E4h, 35E3h
9AFE                         dw  35E6h, 300Ah, 300Ah, 300Ah, 300Ah, 31E3h, 31E4h, 31E5h
9B0E                         dw  31E6h, 31E3h, 300Ah, 31E6h, 35E3h, 31E3h, 35E4h, 35E3h
9B1E                         dw  35E6h, 300Ah, 35E4h, 35E3h, 35E6h, 35E5h, 31E3h, 300Ah
9B2E                         dw  31E9h, 35E0h, 35E0h, 31E0h, 35DFh, 31EAh, 35DFh, 35E0h
9B3E                         dw  31EAh, 35DFh, 31DFh, 35E9h, 31E9h, 31E0h, 31DFh, 31DEh
9B4E                         dw  31DDh, 31E0h, 35E9h, 31E0h, 35E0h, 31E0h, 35DFh, 35E0h
9B5E                         dw  31EAh, 35E9h, 31E9h, 35E0h, 35DDh, 35DEh, 31E0h, 35E9h
9B6E trees_and_grass2:       dw  300Ah, 31E6h, 300Ah, 35E4h, 35E6h, 300Ah, 300Ah, 31E7h
9B6E                                                             ; 95AE↑o
9B7E                         dw  300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 31E6h, 300Ah
9B8E                         dw  31E7h, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah
9B9E                         dw  300Ah, 31E7h, 300Ah, 300Ah, 300Ah, 35E7h, 35E6h, 300Ah
9BAE                         dw  300Ah, 35E3h, 31E5h, 31E6h, 31E3h, 300Ah, 31E6h, 35E3h
9BBE                         dw  300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 35E3h, 35E4h
9BCE                         dw  35E3h, 35E6h, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah
9BDE                         dw  35E4h, 35E3h, 35E5h, 300Ah, 35E6h, 31E3h, 31E3h, 31E4h
9BEE                         dw  31E9h, 35E0h, 31DEh, 31DDh, 31E0h, 35E9h, 31E0h, 35E0h
9BFE                         dw  35E9h, 300Ah, 300Ah, 300Ah, 300Ah, 31E9h, 35E0h, 35DFh
9C0E                         dw  35E0h, 31EAh, 35E9h, 300Ah, 300Ah, 300Ah, 300Ah, 31E9h
9C1E                         dw  35DFh, 35E0h, 35EAh, 31DFh, 35E0h, 31E0h, 31E0h, 35E9h
9C2E trees_and_snow:         dw  35FCh, 35FCh, 35FCh, 31FCh, 31FCh, 300Ah, 300Ah, 300Ah
9C2E                                                             ; 95B0↑o
9C3E                         dw  300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 31FCh, 300Ah
9C4E                         dw  300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah, 31FCh
9C5E                         dw  300Ah, 31FCh, 31FCh, 300Ah, 300Ah, 300Ah, 300Ah, 31FCh
9C6E                         dw  35FFh, 35FFh, 35FFh, 31FFh, 31FFh, 31FEh, 35FAh, 31FEh
9C7E                         dw  35F9h, 31F9h, 35FAh, 31FAh, 31F9h, 31FEh, 31FFh, 31F9h
9C8E                         dw  31FEh, 31F9h, 31FAh, 31FEh, 31FAh, 31F9h, 31FEh, 31FFh
9C9E                         dw  31FEh, 31FFh, 31FFh, 31F9h, 31FAh, 31F9h, 31FEh, 31FFh
9CAE cactus_and_desert:      dw  300Ah, 347Ah, 300Ah, 300Ah, 307Ah, 300Ah, 300Ah, 300Ah
9CAE                                                             ; 95B2↑o
9CBE                         dw  300Ah, 300Ah, 307Ah, 300Ah, 300Ah, 300Ah, 300Ah, 300Ah
9CCE                         dw  300Ah, 300Ah, 300Ah, 307Ah, 300Ah, 300Ah, 300Ah, 300Ah
9CDE                         dw  300Ah, 300Ah, 347Ah, 300Ah, 300Ah, 347Ah, 300Ah, 300Ah
9CEE                         dw  3100h, 35FBh, 35FBh, 3101h, 31FBh, 3100h, 3101h, 3100h
9CFE                         dw  3101h, 35FBh, 31FBh, 3100h, 3101h, 31FDh, 31FDh, 3100h
9D0E                         dw  35FBh, 3100h, 31FDh, 31FBh, 3101h, 31FDh, 3100h, 3101h
9D1E                         dw  3101h, 31FDh, 35FBh, 35FBh, 3101h, 35FBh, 3100h, 3101h
9D2E building1_ch:           db    5, 0Eh,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
9D2E                                                             ; building_characters_table↑o
9D2E                                                             ; 95B6↑o
9D39                         db  2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 71h, 71h, 71h ; ; Offset  Description
9D44                         db  2Eh, 2Eh, 2Eh, 34h, 2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh ; ;   +0    Width in tiles (X)
9D4F                         db  2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh ; ;   +1    Height in tiles (Y)
9D5A                         db  2Eh, 2Eh, 2Eh, 34h, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 2Fh ; ;   +2    Tile mode: High byte or $FF for word mode
9D65                         db  2Fh, 2Fh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 2Eh, 2Eh ; ;   +3    Tile data:
9D70                         db  2Eh, 2Eh, 70h, 6Fh, 6Fh, 6Fh, 70h ; ;          - Normal: 1 byte per tile (low byte only)
9D70                                                             ; ;          - $FF: 2 bytes per tile (full word)
9D77 building2_ch:           db    5, 11h,   1, 2Eh, 2Eh, 34h, 2Eh, 2Eh, 2Eh, 2Eh, 34h
9D77                                                             ; 95B8↑o
9D82                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h
9D8D                         db  2Eh, 2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 34h, 35h, 2Eh, 35h, 2Eh
9D98                         db  2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh
9DA3                         db  2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh, 2Fh
9DAE                         db  2Eh, 30h, 2Eh, 2Eh, 35h, 38h, 36h, 2Eh, 2Eh, 2Fh, 2Eh
9DB9                         db  2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh, 2Fh, 2Eh, 2Fh
9DC4                         db  2Eh, 34h, 35h, 2Eh, 35h, 2Eh, 33h, 33h, 33h, 33h, 33h
9DCF building3_ch:           db    5,   9,   1, 2Eh, 2Eh, 34h, 2Eh, 2Eh, 2Eh, 2Eh, 34h
9DCF                                                             ; 95BA↑o
9DDA                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h
9DE5                         db  2Eh, 2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 34h, 35h, 2Eh, 35h, 2Eh
9DF0                         db  2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 33h
9DFB                         db  33h, 33h, 33h, 33h
9DFF building4_ch:           db    5,   9,   1, 2Eh, 2Eh, 34h, 2Eh, 32h, 2Eh, 2Eh, 2Eh
9DFF                                                             ; 95BC↑o
9E0A                         db  2Eh, 2Eh, 34h, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 30h, 30h, 2Fh
9E15                         db  2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 2Fh, 2Fh, 30h, 2Eh
9E20                         db  2Eh, 35h, 35h, 36h, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 34h, 70h
9E2B                         db  6Fh, 6Fh, 6Fh, 70h
9E2F building5_ch:           db    5, 0Ch,   1, 2Eh, 2Eh, 2Eh, 2Eh, 38h, 2Eh, 32h, 2Eh
9E2F                                                             ; 95BE↑o
9E3A                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h
9E45                         db  2Eh, 38h, 35h, 35h, 35h, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh
9E50                         db  2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh
9E5B                         db  30h, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 35h
9E66                         db  35h, 35h, 34h, 70h, 6Fh, 6Fh, 6Fh, 70h
9E6E building6_ch:           db    5, 12h,   1, 2Eh, 2Eh, 2Eh, 2Eh, 38h, 2Eh, 32h, 2Eh
9E6E                                                             ; 95C0↑o
9E79                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h
9E84                         db  2Eh, 34h, 35h, 35h, 35h, 2Eh, 2Eh, 2Fh, 30h, 2Fh, 2Eh
9E8F                         db  2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh
9E9A                         db  2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 38h, 35h
9EA5                         db  35h, 35h, 2Eh, 2Eh, 30h, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h
9EB0                         db  35h, 2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh
9EBB                         db  2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 35h, 35h, 35h, 34h
9EC6                         db  70h, 6Fh, 6Fh, 6Fh, 70h
9ECB building7_ch:           db    5, 14h,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
9ECB                                                             ; 95C2↑o
9ED6                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 38h, 35h, 35h, 35h
9EE1                         db  2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 38h
9EEC                         db  2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh
9EF7                         db  2Fh, 2Fh, 2Fh, 2Eh, 38h, 35h, 35h, 35h, 2Eh, 2Eh, 30h
9F02                         db  2Fh, 2Fh, 2Eh, 2Eh, 36h, 35h, 35h, 2Eh, 2Eh, 2Fh, 2Fh
9F0D                         db  2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 38h, 2Eh, 2Fh, 2Fh, 2Fh
9F18                         db  2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh
9F23                         db  2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 2Eh, 2Eh, 32h, 2Eh, 6Eh
9F2E                         db  6Eh, 6Dh, 6Eh, 6Eh
9F32 building8_ch:           db    5, 0Ah,   1, 2Eh, 2Eh, 2Eh, 32h, 2Eh, 2Eh, 2Eh, 2Eh
9F32                                                             ; 95C4↑o
9F3D                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h
9F48                         db  2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 38h
9F53                         db  2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh
9F5E                         db  2Eh, 32h, 2Eh, 2Eh, 6Eh, 6Eh, 6Dh, 6Eh, 6Eh
9F67 building9_ch:           db    5,   8,   1, 2Eh, 2Eh, 2Eh, 32h, 2Eh, 2Eh, 2Eh, 2Eh
9F67                                                             ; 95C6↑o
9F72                         db  2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh
9F7D                         db  2Eh, 2Eh, 35h, 35h, 35h, 38h, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh
9F88                         db  2Eh, 35h, 35h, 35h, 2Eh, 6Eh, 6Eh, 6Dh, 6Eh, 6Eh
9F92 building10_ch:          db    5, 13h,   1, 2Eh, 2Eh, 2Eh, 2Eh, 32h, 2Eh, 2Eh, 2Eh
9F92                                                             ; 95C8↑o
9F9D                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h
9FA8                         db  2Eh, 2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 38h, 35h, 2Eh
9FB3                         db  2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh
9FBE                         db  2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh, 2Fh
9FC9                         db  2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh, 2Fh, 2Eh
9FD4                         db  2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh, 2Fh, 2Eh, 2Fh
9FDF                         db  2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh, 2Eh, 2Eh, 38h, 2Eh
9FEA                         db  2Eh, 35h, 35h, 35h, 2Eh, 6Dh, 6Eh, 6Dh, 6Eh, 6Dh
9FF4 building11_ch:          db    5, 0Fh,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 32h, 2Eh
9FF4                                                             ; 95CA↑o
9FFF                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h
A00A                         db  2Eh, 2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh
A015                         db  2Eh, 2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 38h
A020                         db  2Fh, 2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh, 2Fh
A02B                         db  2Eh, 2Fh, 2Eh, 2Eh, 35h, 2Eh, 35h, 2Eh, 2Eh, 2Eh, 2Eh
A036                         db  2Eh, 38h, 2Eh, 71h, 71h, 71h, 2Eh, 6Dh, 6Eh, 6Dh, 6Eh
A041                         db  6Dh
A042 building12_ch:          db    4, 0Dh,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
A042                                                             ; 95CC↑o
A04D                         db  2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 2Eh, 2Eh, 2Fh, 2Fh
A058                         db  2Eh, 2Eh, 35h, 35h, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 35h
A063                         db  35h, 2Eh, 2Eh, 30h, 2Fh, 2Eh, 2Eh, 36h, 35h, 2Eh, 2Eh
A06E                         db  2Fh, 2Fh, 2Eh, 71h, 35h, 35h, 71h, 6Eh, 6Eh, 6Eh, 6Eh
A079 building13_ch:          db    4, 0Ah,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
A079                                                             ; 95CE↑o
A084                         db  71h, 2Eh, 2Eh, 71h, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h
A08F                         db  2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 2Eh, 2Eh, 2Fh
A09A                         db  2Fh, 2Eh, 71h, 35h, 35h, 71h, 6Eh, 6Eh, 6Eh, 6Eh
A0A4 building14_ch:          db    4, 14h,   1, 2Eh, 2Eh, 34h, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
A0A4                                                             ; 95D0↑o
A0AF                         db  2Eh, 2Fh, 2Fh, 34h, 2Eh, 36h, 36h, 2Eh, 2Eh, 2Fh, 2Fh
A0BA                         db  2Eh, 2Eh, 36h, 36h, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 36h
A0C5                         db  36h, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 34h, 36h, 36h, 2Eh, 2Eh
A0D0                         db  2Fh, 2Fh, 2Eh, 2Eh, 36h, 36h, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh
A0DB                         db  2Eh, 36h, 36h, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 36h, 36h
A0E6                         db  2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 36h, 36h, 2Eh, 2Eh, 2Eh
A0F1                         db  32h, 2Eh, 6Dh, 33h, 33h, 6Dh
A0F7 building15_ch:          db    4, 0Ch,   1, 2Eh, 2Eh, 34h, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
A0F7                                                             ; 95D2↑o
A102                         db  2Eh, 2Fh, 2Fh, 34h, 2Eh, 36h, 36h, 2Eh, 2Eh, 2Fh, 2Fh
A10D                         db  2Eh, 2Eh, 36h, 36h, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 36h
A118                         db  36h, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 36h, 36h, 2Eh, 2Eh
A123                         db  2Eh, 32h, 2Eh, 6Dh, 33h, 33h, 6Dh
A12A building16_ch:          db    4,   7,   1, 2Eh, 2Eh, 34h, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
A12A                                                             ; 95D4↑o
A135                         db  2Eh, 2Fh, 2Fh, 34h, 2Eh, 36h, 36h, 2Eh, 2Eh, 2Fh, 2Fh
A140                         db  2Eh, 2Eh, 36h, 36h, 2Eh, 6Dh, 33h, 33h, 6Dh
A149 building17_ch:          db    4, 12h,   1, 2Eh, 2Eh, 2Eh, 38h, 2Eh, 2Eh, 2Eh, 2Eh
A149                                                             ; 95D6↑o
A154                         db  35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h
A15F                         db  35h, 2Eh, 2Eh, 2Eh, 2Eh, 35h, 35h, 35h, 35h, 35h, 35h
A16A                         db  35h, 35h, 35h, 35h, 35h, 35h, 2Eh, 2Eh, 32h, 2Eh, 35h
A175                         db  35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h
A180                         db  2Eh, 2Eh, 2Eh, 2Eh, 35h, 35h, 35h, 35h, 35h, 35h, 35h
A18B                         db  35h, 35h, 35h, 35h, 35h, 6Fh, 6Fh, 6Fh, 6Fh
A194 building18_ch:          db    4, 0Eh,   1, 2Eh, 2Eh, 2Eh, 38h, 2Eh, 2Eh, 2Eh, 2Eh
A194                                                             ; 95D8↑o
A19F                         db  35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h
A1AA                         db  35h, 2Eh, 2Eh, 32h, 2Eh, 35h, 35h, 35h, 35h, 35h, 35h
A1B5                         db  35h, 35h, 35h, 35h, 35h, 35h, 2Eh, 2Eh, 2Eh, 2Eh, 35h
A1C0                         db  35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h
A1CB                         db  6Fh, 6Fh, 6Fh, 6Fh
A1CF building19_ch:          db    6, 0Bh,0FFh, 5Fh,   1, 5Fh,   1, 5Fh,   1, 5Fh,   1
A1CF                                                             ; 95DA↑o
A1DA                         db  9Fh,   1,0A0h,   1,0A0h,   1, 5Fh,   1, 5Fh,   1, 5Fh ; Word Character sized.
A1E5                         db    1, 5Fh,   1, 5Fh,   1, 97h,   1, 97h,   1, 99h,   1
A1F0                         db  99h,   1, 97h,   1, 97h,   1, 88h,   1, 88h,   1, 9Ah
A1FB                         db    5, 9Ah,   5, 88h,   1, 88h,   1, 97h,   1, 97h,   1
A206                         db  99h,   1, 99h,   1, 97h,   1, 97h,   1, 88h,   1, 88h
A211                         db    1, 9Ah,   5, 9Ah,   5, 88h,   1, 88h,   1, 97h,   1
A21C                         db  97h,   1, 99h,   1, 99h,   1, 97h,   1, 97h,   1, 88h
A227                         db    1, 88h,   1, 9Ah,   5, 9Ah,   5, 88h,   1, 88h,   1
A232                         db  97h,   1, 97h,   1, 99h,   1, 99h,   1, 97h,   1, 97h
A23D                         db    1, 88h,   1, 88h,   1, 9Ah,   5, 9Ah,   5, 88h,   1
A248                         db  88h,   1,0A7h,   1,0A7h,   1,0A7h,   1,0A7h,   1,0A7h
A253                         db    1,0A7h,   1
A256 building20_ch:          db    6, 10h,0FFh, 5Fh,   1, 5Fh,   1, 5Fh,   1, 5Fh,   1
A256                                                             ; 95DC↑o
A261                         db  9Fh,   1,0A0h,   1,0A0h,   5, 5Fh,   5, 5Fh,   5, 5Fh ; Word Character sized.
A26C                         db    5, 5Fh,   5, 5Fh,   5, 97h,   1, 97h,   1, 99h,   1
A277                         db  99h,   1, 97h,   1, 97h,   1, 88h,   1, 88h,   1, 97h
A282                         db    1, 97h,   1, 88h,   1, 88h,   1, 97h,   1, 97h,   1
A28D                         db  99h,   1, 99h,   1, 97h,   1, 97h,   1, 88h,   1, 88h
A298                         db    1, 97h,   1, 97h,   1, 88h,   1, 88h,   1, 97h,   1
A2A3                         db  97h,   1, 99h,   1, 99h,   1, 97h,   1, 97h,   1, 88h
A2AE                         db    1, 88h,   1, 97h,   1, 97h,   1, 88h,   1, 88h,   1
A2B9                         db  97h,   1, 97h,   1, 99h,   1, 99h,   1, 97h,   1, 97h
A2C4                         db    1, 88h,   1, 88h,   1, 97h,   1, 97h,   1, 88h,   1
A2CF                         db  88h,   1, 97h,   1, 97h,   1, 99h,   1, 99h,   1, 97h
A2DA                         db    1, 97h,   1, 88h,   1, 88h,   1, 97h,   1, 97h,   1
A2E5                         db  88h,   1, 88h,   1, 97h,   1, 97h,   1, 99h,   1, 99h
A2F0                         db    1, 97h,   1, 97h,   1, 88h,   1, 88h,   1, 97h,   1
A2FB                         db  97h,   1, 88h,   1, 88h,   1, 9Ah,   5,0A0h, 0Dh, 9Ah
A306                         db    5, 9Ah,   5, 5Fh,   1, 9Ah,   5,0A6h,   1,0A6h,   1
A311                         db 0A7h,   1,0A7h,   1,0A6h,   1,0A6h,   1
A319 building21_ch:          db    6,   7,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 92h
A319                                                             ; 95DE↑o
A324                         db  93h, 93h,0AAh, 2Eh, 35h, 46h,0ADh,0ADh, 94h, 35h, 35h
A32F                         db  35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h
A33A                         db  35h, 35h, 35h, 35h, 35h, 35h, 70h, 6Fh, 6Fh, 6Fh, 6Fh
A345                         db  70h
A346 building22_ch:          db    6, 0Ch,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
A346                                                             ; 95E0↑o
A351                         db  2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 35h, 2Eh, 2Eh, 35h, 2Eh, 2Eh
A35C                         db  36h, 36h, 36h, 36h, 2Eh, 2Eh, 35h, 35h, 35h, 35h, 2Eh
A367                         db  2Eh, 36h, 36h, 36h, 36h, 2Eh, 2Eh, 35h, 35h, 35h, 35h
A372                         db  2Eh, 2Eh, 36h, 36h, 36h, 36h, 2Eh, 2Eh, 35h, 35h, 35h
A37D                         db  35h, 2Eh, 2Eh, 36h, 36h, 36h, 36h, 2Eh, 2Eh, 35h, 35h
A388                         db  35h, 35h, 2Eh, 33h, 6Eh, 33h, 33h, 6Eh, 33h
A391 building23_ch:          db    6,   6,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
A391                                                             ; 95E2↑o
A39C                         db  2Eh, 2Eh, 34h, 2Eh, 2Eh, 36h, 36h, 36h, 36h, 2Eh, 2Eh
A3A7                         db  35h, 35h, 35h, 35h, 2Eh, 2Eh, 35h, 35h, 35h, 35h, 2Eh
A3B2                         db  33h, 6Eh, 33h, 33h, 6Eh, 33h
A3B8 building24_ch:          db    4, 10h,   1, 32h,0ABh, 2Eh, 2Eh, 2Eh,0ABh, 92h,0AAh
A3B8                                                             ; 95E4↑o
A3C3                         db  2Eh,0ACh, 46h, 94h, 2Eh, 2Eh, 38h, 2Eh, 2Eh, 71h, 71h
A3CE                         db  2Eh, 2Eh, 2Fh, 2Fh, 32h, 2Eh, 35h, 35h, 2Eh, 38h, 31h
A3D9                         db  2Fh, 2Eh, 2Eh, 37h, 35h, 2Eh, 2Eh, 71h, 71h, 2Eh, 2Eh
A3E4                         db  2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 2Eh, 2Eh, 2Fh, 30h, 2Eh
A3EF                         db  2Eh, 35h, 36h, 2Eh, 2Eh, 71h, 71h, 32h, 6Dh, 33h, 33h
A3FA                         db  6Dh
A3FB building25_ch:          db    4, 0Dh,   1, 2Eh, 38h, 2Eh, 2Eh, 92h,0AAh, 92h,0AAh
A3FB                                                             ; 95E6↑o
A406                         db  46h, 94h, 46h, 94h, 2Fh, 2Fh, 30h, 2Fh, 35h, 35h, 36h
A411                         db  35h, 2Fh, 2Fh, 2Fh, 2Fh, 35h, 35h, 35h, 35h, 30h, 31h
A41C                         db  2Fh, 2Fh, 36h, 37h, 35h, 35h, 2Fh, 2Fh, 2Fh, 2Fh, 35h
A427                         db  35h, 35h, 35h, 37h, 37h, 37h, 37h, 6Eh, 6Dh, 6Dh, 6Eh
A432 building26_ch:          db    4, 0Bh,   1, 2Eh, 38h, 2Eh, 2Eh, 92h,0AAh, 92h,0AAh
A432                                                             ; 95E8↑o
A43D                         db  46h, 94h, 46h, 94h, 2Eh, 2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh
A448                         db  2Fh, 35h, 35h, 35h, 35h, 2Fh, 2Fh, 2Fh, 2Fh, 35h, 35h
A453                         db  35h, 35h, 2Fh, 2Fh, 2Fh, 2Fh, 35h, 35h, 35h, 35h, 6Eh
A45E                         db  6Dh, 6Dh, 6Eh
A461 building27_ch:          db    6,   9,   1, 32h, 2Eh, 2Eh, 2Eh,0ABh, 2Eh, 2Eh, 92h
A461                                                             ; 95EA↑o
A46C                         db 0AAh, 2Eh,0ABh, 2Eh, 2Eh, 46h, 94h, 2Eh,0ACh, 2Eh, 2Eh
A477                         db  2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 31h, 2Fh, 30h, 2Fh, 2Eh
A482                         db  2Eh, 37h, 35h, 36h, 35h, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 31h
A48D                         db  2Eh, 2Eh, 35h, 35h, 35h, 37h, 2Eh, 6Eh, 6Eh, 6Eh, 6Eh
A498                         db  6Eh, 6Eh
A49A building28_ch:          db    5, 0Bh,   1, 2Eh, 2Eh, 2Eh,0ABh, 34h, 2Eh, 92h,0AAh
A49A                                                             ; 95EC↑o
A4A5                         db 0ABh, 2Eh, 38h, 46h, 94h,0ACh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh
A4B0                         db  2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 2Eh, 2Fh, 30h, 31h, 2Eh
A4BB                         db  2Eh, 35h, 36h, 37h, 2Eh, 34h, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh
A4C6                         db  35h, 35h, 35h, 2Eh, 2Eh, 37h, 37h, 37h, 2Eh, 6Fh, 6Fh
A4D1                         db  6Fh, 6Fh, 6Fh
A4D4 building29_ch:          db    5, 0Dh,0FFh, 2Eh,   1, 2Eh,   1,0ABh,   1, 2Eh,   1
A4D4                                                             ; 95EE↑o
A4DF                         db  34h,   1, 2Eh,   1, 2Eh,   1,0ABh,   1, 2Eh,   1, 2Eh
A4EA                         db    1, 38h,   1, 2Eh,   1,0ACh,   1, 2Eh,   1, 2Eh,   1
A4F5                         db  2Eh,   1, 35h,   1, 35h,   1, 35h,   1, 2Eh,   1, 2Eh
A500                         db    1, 35h,   1, 35h,   1, 35h,   1, 2Eh,   1, 2Eh,   1
A50B                         db  35h,   1, 35h,   1, 35h,   1, 2Eh,   1, 2Eh,   1, 2Eh
A516                         db    1, 2Eh,   1, 2Eh,   1, 2Eh,   1, 34h, 0Dh, 2Fh,   1
A521                         db  2Fh,   1, 2Fh,   1, 2Eh,   1, 2Eh,   1, 35h,   1, 35h
A52C                         db    1, 35h,   1, 2Eh,   1, 2Eh,   1, 2Fh,   1, 2Fh,   1
A537                         db  2Fh,   1, 2Eh,   1, 2Eh,   1, 35h,   1, 35h,   1, 35h
A542                         db    1, 2Eh,   1, 71h,   1, 2Eh,   1, 71h,   1, 2Eh,   1
A54D                         db  71h,   1, 70h,   1, 6Fh,   1, 70h,   1, 6Fh,   1, 70h
A558                         db    1
A559 building30_ch:          db    6, 12h,0FFh, 2Eh,   1, 2Eh,   1,0ABh,   1,0ABh,   5
A559                                                             ; 95F0↑o
A564                         db  2Eh,   1, 2Eh,   1, 2Eh,   1, 32h,   9,0ABh,   1,0ABh
A56F                         db    5, 2Eh,   1, 2Eh,   1, 38h,   1, 2Fh,   1,0ACh,   1
A57A                         db 0ACh,   5, 2Fh,   1, 2Eh,   1, 35h,   1, 35h,   1, 38h
A585                         db    1, 2Eh,   1, 35h,   1, 35h,   1, 2Eh,   1, 2Fh,   1
A590                         db  2Eh,   1, 2Eh,   1, 2Fh,   1, 2Eh,   1, 35h,   1, 35h
A59B                         db    1, 2Eh,   1, 2Eh,   1, 35h,   1, 35h,   1, 2Eh,   1
A5A6                         db  2Fh,   1, 2Eh,   1, 2Eh,   1, 2Fh,   1, 2Eh,   1, 35h
A5B1                         db    1, 35h,   1, 2Eh,   1, 2Eh,   1, 35h,   1, 35h,   1
A5BC                         db  32h,   1, 2Fh,   1, 2Eh,   1, 2Eh,   1, 2Fh,   1, 2Eh
A5C7                         db    1, 35h,   1, 35h,   1, 2Eh,   1, 38h,   1, 35h,   1
A5D2                         db  35h,   1, 2Eh,   1, 2Fh,   1, 2Eh,   1, 2Eh,   1, 2Fh
A5DD                         db    1, 2Eh,   1, 35h,   1, 35h,   1, 2Eh,   1, 2Eh,   1
A5E8                         db  35h,   1, 35h,   1, 2Eh,   1, 2Fh,   1, 2Eh,   1, 2Eh
A5F3                         db    1, 2Fh,   1, 2Eh,   1, 35h,   1, 35h,   1, 2Eh,   1
A5FE                         db  2Eh,   1, 35h,   1, 35h,   1, 2Eh,   1, 2Fh,   1, 2Eh
A609                         db  0Dh, 2Eh, 0Dh, 2Fh,   1, 38h,   5, 35h,   1, 35h,   1
A614                         db  2Eh, 0Dh, 38h, 0Dh, 35h,   1, 35h,   1, 2Eh,   1, 2Eh
A61F                         db    1, 32h, 0Dh, 2Eh, 0Dh, 2Eh,   1, 38h,   1, 70h,   1
A62A                         db  6Fh,   1, 6Fh,   1, 6Fh,   1, 6Fh,   1, 70h,   1
A634 building31_ch:          db    6, 0Ah,0FFh, 2Eh,   1, 2Eh,   1,0ABh,   1,0ABh,   5
A634                                                             ; 95F2↑o
A63F                         db  2Eh,   1, 2Eh,   1, 2Eh,   1, 32h,   9,0ABh,   1,0ABh
A64A                         db    5, 2Eh,   1, 2Eh,   1, 38h,   1, 2Fh,   1,0ACh,   1
A655                         db 0ACh,   5, 2Fh,   1, 2Eh,   1, 35h,   1, 35h,   1, 38h
A660                         db    1, 2Eh,   1, 35h,   1, 35h,   1, 2Eh,   1, 2Fh,   1
A66B                         db  2Eh,   1, 2Eh,   1, 2Fh,   1, 2Eh,   1, 35h,   1, 35h
A676                         db    1, 2Eh,   1, 2Eh,   1, 35h,   1, 35h,   1, 2Eh,   1
A681                         db  2Fh,   1, 2Eh, 0Dh, 2Eh, 0Dh, 2Fh,   1, 38h,   5, 35h
A68C                         db    1, 35h,   1, 2Eh, 0Dh, 38h, 0Dh, 35h,   1, 35h,   1
A697                         db  2Eh,   1, 2Eh,   1, 32h, 0Dh, 2Eh, 0Dh, 2Eh,   1, 38h
A6A2                         db    1, 70h,   1, 6Fh,   1, 6Fh,   1, 6Fh,   1, 6Fh,   1
A6AD                         db  70h,   1
A6AF building32_ch:          db    4, 11h,   1, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh
A6AF                                                             ; 95F4↑o
A6BA                         db  2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h
A6C5                         db  2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 2Eh, 2Eh, 2Fh
A6D0                         db  2Fh, 2Eh, 2Eh, 35h, 35h, 2Eh, 2Eh, 2Fh, 2Fh, 2Eh, 2Eh
A6DB                         db  35h, 35h, 2Eh, 2Eh, 30h, 2Fh, 2Eh, 2Eh, 36h, 35h, 2Eh
A6E6                         db  2Eh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 2Eh, 2Eh, 2Eh, 2Eh
A6F1                         db  2Eh, 6Dh, 6Fh, 6Fh, 6Dh
A6F6 building33_ch:          db    6, 0Eh,   1, 32h, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 2Eh, 92h
A6F6                                                             ; 95F6↑o
A701                         db  93h, 93h,0AAh, 2Eh, 2Eh, 46h,0ADh,0ADh, 94h, 38h, 35h
A70C                         db  35h, 35h, 35h, 35h, 35h, 35h, 35h, 34h, 2Eh, 35h, 35h
A717                         db  35h, 35h, 2Eh, 2Eh, 35h, 35h, 35h, 35h, 35h, 35h, 35h
A722                         db  35h, 35h, 35h, 2Eh, 2Eh, 35h, 35h, 35h, 35h, 2Eh, 2Eh
A72D                         db  35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 35h, 2Eh
A738                         db  32h, 35h, 35h, 35h, 35h, 2Eh, 2Eh, 35h, 35h, 35h, 35h
A743                         db  35h, 35h, 35h, 35h, 33h, 6Eh, 33h, 33h, 6Eh, 33h
A74D building34_ch:          db    5, 10h,   1, 2Eh, 2Eh, 2Eh, 2Eh, 34h, 34h, 2Eh, 2Eh
A74D                                                             ; 95F8↑o
A758                         db  2Eh, 2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h
A763                         db  2Eh, 2Eh, 2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 32h
A76E                         db  2Eh, 31h, 2Fh, 2Fh, 2Eh, 2Eh, 37h, 35h, 35h, 2Eh, 2Eh
A779                         db  2Fh, 2Fh, 2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 38h, 2Eh, 2Fh
A784                         db  30h, 2Fh, 2Eh, 2Eh, 35h, 36h, 35h, 2Eh, 2Eh, 2Fh, 2Fh
A78F                         db  2Fh, 2Eh, 2Eh, 35h, 35h, 35h, 2Eh, 71h, 32h, 71h, 2Eh
A79A                         db  71h, 6Eh, 6Eh, 6Dh, 6Eh, 6Eh
A7A0 building35_ch:          db    4, 13h,0FFh, 38h,   1,0ABh,   1,0ABh,   5, 2Eh,   1
A7A0                                                             ; 95FA↑o
A7AB                         db  2Eh,   1,0ABh,   1,0ABh,   5, 2Eh,   1, 2Eh,   1,0ACh
A7B6                         db    1,0ACh,   5, 2Eh,   1, 2Eh,   1, 2Fh,   1, 2Fh,   1
A7C1                         db  2Eh,   1, 37h,   1, 35h,   1, 35h,   1, 37h,   1, 2Eh
A7CC                         db    1, 2Fh,   1, 2Fh,   1, 2Eh,   1, 37h,   1, 35h,   1
A7D7                         db  35h,   1, 37h,   1, 2Eh,   1, 2Fh,   1, 2Fh,   1, 2Eh
A7E2                         db    1, 37h,   1, 35h,   1, 35h,   1, 37h,   1, 2Eh,   1
A7ED                         db  2Fh,   1, 2Fh,   1, 38h,   1, 37h,   1, 35h,   1, 35h
A7F8                         db    1, 37h,   1, 2Eh,   1, 2Fh,   1, 2Fh,   1, 2Eh,   1
A803                         db  37h,   1, 35h,   1, 35h,   1, 37h,   1, 2Eh,   1, 30h
A80E                         db    1, 2Fh,   1, 2Eh,   1, 37h,   1, 36h,   1, 35h,   1
A819                         db  37h,   1, 2Eh,   1, 2Fh,   1, 31h,   1, 2Eh,   1, 37h
A824                         db    1, 35h,   1, 37h,   1, 37h,   1, 32h,   5, 2Eh,   1
A82F                         db  2Eh,   1, 2Eh,   1, 70h,   1, 6Fh,   1, 6Fh,   1, 70h
A83A                         db    1
A83B building36_ch:          db    5, 0Eh,0FFh, 5Fh,   1, 5Fh,   1, 5Fh,   1, 5Fh,   1
A83B                                                             ; 95FC↑o
A846                         db  5Fh,   1, 5Fh,   1, 5Fh,   1, 5Fh,   1, 5Fh,   1, 5Fh
A851                         db    1, 5Fh,   1, 9Ah,   5, 9Ah,   5, 9Ah,   5, 5Fh,   1
A85C                         db  5Fh,   1, 9Ch,   1, 9Dh,   1, 9Eh,   1, 5Fh,   1, 5Fh
A867                         db    1, 97h,   1, 97h,   1, 97h,   1, 5Fh,   1, 5Fh,   1
A872                         db  97h,   1, 97h,   1, 97h,   1, 5Fh,   1, 5Fh,   1, 99h
A87D                         db    1, 99h,   1, 99h,   1, 5Fh,   1, 5Fh,   1, 97h,   1
A888                         db  97h,   1, 97h,   1, 5Fh,   1, 5Fh,   1, 97h,   1, 97h
A893                         db    1, 97h,   1, 5Fh,   1, 5Fh,   1, 99h,   1, 99h,   1
A89E                         db  99h,   1, 5Fh,   1, 5Fh,   1, 97h,   1, 97h,   1, 97h
A8A9                         db    1, 5Fh,   1, 5Fh,   1, 97h,   1, 97h,   1, 97h,   1
A8B4                         db  5Fh,   1, 5Fh,   1, 99h,   1, 99h,   1, 99h,   1, 5Fh
A8BF                         db    1,0A5h,   1,0A5h,   1,0A5h,   1,0A5h,   1,0A5h,   1
A8CA building37_ch:          db    5, 11h,0FFh,0A1h,   1,0A2h,   1,0A0h,   9,0A1h,   1
A8CA                                                             ; 95FE↑o
A8D5                         db 0A2h,   1,0A1h,   1,0A2h,   1, 5Fh,   1,0A1h,   1,0A2h
A8E0                         db    1,0A3h,   1,0A4h,   1, 9Ah,   5,0A3h,   1,0A4h,   1
A8EB                         db  5Fh,   1, 97h,   1, 97h,   1, 97h,   1, 5Fh,   1, 5Fh
A8F6                         db    1, 9Bh,   1, 9Bh,   1, 9Bh,   1, 5Fh,   1, 5Fh,   1
A901                         db 0D5h,   1,0D6h,   1,0D7h,   1, 5Fh,   1, 97h,   1, 97h
A90C                         db    1, 5Fh,   1, 97h,   1, 97h,   1, 97h,   1, 97h,   1
A917                         db  5Fh,   1, 97h,   1, 97h,   1, 97h,   1, 97h,   1, 5Fh
A922                         db    1, 97h,   1, 97h,   1, 97h,   1, 97h,   1, 5Fh,   1
A92D                         db  97h,   1, 97h,   1, 97h,   1, 97h,   1, 5Fh,   1, 97h
A938                         db    1, 97h,   1, 97h,   1, 97h,   1, 5Fh,   1, 97h,   1
A943                         db  97h,   1, 97h,   1, 97h,   1, 5Fh,   1, 97h,   1, 97h
A94E                         db    1, 97h,   1, 97h,   1, 5Fh,   1, 97h,   1, 97h,   1
A959                         db  97h,   1, 97h,   1, 5Fh,   1, 97h,   1, 97h,   1, 5Fh
A964                         db    1, 99h,   1, 99h,   1, 99h,   1, 5Fh,   1,0A5h,   1
A96F                         db 0A5h,   1,0A5h,   1,0A5h,   1,0A5h,   1
A977 building38_ch:          db    6,   8,   1, 9Fh,0A0h,0A1h,0A2h, 5Fh, 5Fh, 5Fh, 97h
A977                                                             ; 9600↑o
A982                         db 0A1h,0A2h, 97h, 5Fh, 5Fh, 5Fh,0A3h,0A4h, 5Fh, 5Fh, 5Fh
A98D                         db  96h, 96h, 96h, 96h, 5Fh, 5Fh, 9Bh, 9Bh, 9Bh, 9Bh, 5Fh
A998                         db  5Fh, 96h, 96h, 96h, 96h, 5Fh, 5Fh, 9Bh, 9Bh, 9Bh, 9Bh
A9A3                         db  5Fh,0A6h,0A6h,0A7h,0A7h,0A6h,0A6h
A9AA building39_ch:          db    6, 0Dh,   1, 9Fh,0A0h,0A1h,0A2h, 5Fh, 5Fh, 5Fh, 96h
A9AA                                                             ; 9602↑o
A9B5                         db 0A1h,0A2h, 96h, 5Fh, 5Fh, 88h,0A3h,0A4h, 88h, 5Fh, 5Fh
A9C0                         db  5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 96h, 96h, 96h, 96h, 5Fh
A9CB                         db  5Fh, 88h, 88h, 88h, 88h, 5Fh, 5Fh, 88h, 88h, 88h, 88h
A9D6                         db  5Fh,0A0h, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 96h, 96h, 96h
A9E1                         db  96h, 5Fh, 5Fh, 88h, 88h, 88h, 88h, 5Fh, 5Fh, 88h, 88h
A9EC                         db  88h, 88h, 5Fh, 5Fh, 99h, 99h, 99h, 99h, 5Fh,0A5h,0A5h
A9F7                         db 0A5h,0A5h,0A5h,0A5h
A9FB building40_ch:          db    6, 14h,   1, 9Fh,0A0h, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh
A9FB                                                             ; 9604↑o
AA06                         db  5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 97h, 97h, 97h, 97h, 5Fh, 5Fh
AA11                         db  88h, 88h, 88h, 88h, 5Fh, 5Fh, 97h, 97h, 97h, 97h, 5Fh
AA1C                         db  5Fh, 88h, 88h, 88h, 88h, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh,0A0h
AA27                         db  5Fh, 88h, 5Fh, 9Fh, 5Fh, 5Fh, 88h, 88h, 88h, 5Fh, 5Fh
AA32                         db  88h, 88h, 88h, 88h, 5Fh, 5Fh, 88h, 88h, 88h, 88h, 5Fh
AA3D                         db  5Fh, 88h, 88h, 88h, 88h, 5Fh, 5Fh, 88h, 88h, 88h, 88h
AA48                         db  5Fh, 5Fh, 88h, 88h, 88h, 88h, 5Fh, 9Fh, 88h, 88h, 88h
AA53                         db  88h, 5Fh, 5Fh, 88h, 88h, 88h, 88h, 5Fh, 5Fh, 88h, 88h
AA5E                         db  88h, 88h, 9Fh, 5Fh, 88h, 88h, 88h, 88h, 5Fh, 5Fh, 88h
AA69                         db  88h, 5Fh, 99h, 99h, 99h, 99h, 5Fh,0A5h,0A5h,0A5h,0A5h
AA74                         db 0A5h,0A5h
AA76 building41_ch:          db    6, 11h,0FFh, 5Fh,   1, 5Fh,   9, 9Fh,   9, 5Fh,   9
AA76                                                             ; 9606↑o
AA81                         db  5Fh,   9, 5Fh,   1, 5Fh,   1, 5Fh,   9, 5Fh,   9, 5Fh
AA8C                         db    9,0A0h,   9, 5Fh,   1, 5Fh,   5,0A0h, 0Dh, 5Fh, 0Dh
AA97                         db  5Fh, 0Dh, 5Fh, 0Dh, 5Fh,   5, 97h,   1, 97h,   1, 5Fh
AAA2                         db    9, 98h,   1, 97h,   1, 97h,   1, 88h,   1, 88h,   1
AAAD                         db  98h,   1, 99h,   1, 88h,   1, 88h,   1, 97h,   1, 97h
AAB8                         db    1, 99h,   1, 98h,   1, 97h,   1, 97h,   1, 88h,   1
AAC3                         db  88h,   1, 98h,   1, 99h,   1, 88h,   1, 88h,   1, 97h
AACE                         db    1, 97h,   1, 99h,   1, 98h,   1, 97h,   1, 97h,   1
AAD9                         db  88h,   1, 88h,   1, 98h,   1, 99h,   1, 88h,   1, 88h
AAE4                         db    1, 97h,   1, 97h,   1, 99h,   1, 98h,   1, 97h,   1
AAEF                         db  97h,   1, 88h,   1, 88h,   1, 98h,   1, 99h,   1, 88h
AAFA                         db    1, 88h,   1, 97h,   1, 97h,   1, 99h,   1, 98h,   1
AB05                         db  97h,   1, 97h,   1, 88h,   1, 88h,   1, 98h,   1, 99h
AB10                         db    1, 88h,   1, 88h,   1, 97h,   1, 97h,   1, 99h,   1
AB1B                         db  98h,   1, 97h,   1, 97h,   1, 88h,   1, 88h,   1, 98h
AB26                         db    1, 5Fh,   9, 88h,   1, 88h,   1, 5Fh,   1, 5Fh,   9
AB31                         db  5Fh,   9, 5Fh,   9,0A0h,   9, 5Fh,   1,0A6h,   1,0A6h
AB3C                         db    1,0A6h,   1,0A6h,   1,0A6h,   1,0A6h,   1
AB45 building42_ch:          db    5, 0Bh,   1, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh
AB45                                                             ; 9608↑o
AB50                         db  5Fh,0A0h, 5Fh, 97h, 5Fh, 97h, 5Fh, 9Fh, 88h, 5Fh, 88h
AB5B                         db  5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 97h, 5Fh, 97h, 5Fh
AB66                         db  5Fh, 88h, 5Fh, 88h, 5Fh, 5Fh,0D5h,0D6h,0D7h, 5Fh, 5Fh
AB71                         db  97h, 5Fh, 97h, 5Fh, 5Fh, 88h, 5Fh, 88h, 5Fh,0A7h,0A7h
AB7C                         db 0A7h,0A7h,0A7h
AB7F building43_ch:          db    4,   9,0FFh, 5Fh,   1,0A1h,   1,0A2h,   1, 5Fh,   1
AB7F                                                             ; 960A↑o
AB8A                         db  5Fh,   1,0A1h,   1,0A2h,   1, 5Fh,   1, 9Ah,   5,0A3h
AB95                         db    1,0A4h,   1, 9Ah,   5, 5Fh,   1, 96h,   1, 96h,   1
ABA0                         db  5Fh,   1, 5Fh,   1, 88h,   1, 88h,   1,0A0h,   9, 5Fh
ABAB                         db    1, 88h,   1, 88h,   1, 5Fh,   1, 5Fh,   1, 97h,   1
ABB6                         db  97h,   1, 5Fh,   1, 5Fh,   1, 9Bh,   1, 9Bh,   1, 5Fh
ABC1                         db    1,0A5h,   1,0A5h,   1,0A5h,   1,0A5h,   1
ABCA building44_ch:          db    4, 0Fh,   1, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh, 5Fh
ABCA                                                             ; 960C↑o
ABD5                         db  96h, 96h, 96h, 96h, 9Bh, 9Bh, 9Bh, 9Bh, 96h, 96h, 96h
ABE0                         db  96h, 9Bh, 9Bh, 9Bh, 9Bh, 96h, 96h, 96h, 96h, 9Bh, 9Bh
ABEB                         db  9Bh, 9Bh, 96h, 96h, 96h, 96h, 9Bh, 9Bh, 9Bh, 9Bh, 96h
ABF6                         db  96h, 96h, 96h, 9Bh, 9Bh, 9Bh, 9Bh, 96h, 96h, 96h, 96h
AC01                         db  9Bh, 9Bh, 9Bh, 9Bh,0A7h,0A6h,0A6h,0A7h
AC09 building45_ch:          db    5, 13h,0FFh, 5Fh,   1, 5Fh,   1, 5Fh,   1, 5Fh,   1
AC09                                                             ; 960E↑o B320↓o
AC14                         db  5Fh,   1, 5Fh,   1, 98h,   1, 98h,   1, 98h,   1, 5Fh
AC1F                         db    1, 97h,   1, 97h,   1, 5Fh,   1, 97h,   1, 97h,   1
AC2A                         db  9Bh,   1, 9Bh,   1, 5Fh,   1, 9Bh,   1, 9Bh,   1, 5Fh
AC35                         db    1,0D5h,   1,0D6h,   1,0D7h,   1, 5Fh,   1, 97h,   1
AC40                         db  97h,   1, 5Fh,   1, 97h,   1, 97h,   1, 88h,   1, 88h
AC4B                         db    1, 5Fh,   1, 88h,   1, 88h,   1, 97h,   1, 97h,   1
AC56                         db  5Fh,   1, 97h,   1, 97h,   1, 88h,   1, 88h,   1, 5Fh
AC61                         db    1, 88h,   1, 88h,   1, 97h,   1, 97h,   1, 5Fh,   1
AC6C                         db  97h,   1, 97h,   1, 88h,   1, 88h,   1, 5Fh,   1, 88h
AC77                         db    1, 88h,   1, 97h,   1, 97h,   1, 5Fh,   1, 97h,   1
AC82                         db  97h,   1, 88h,   1, 88h,   1, 5Fh,   1, 88h,   1, 88h
AC8D                         db    1, 97h,   1, 97h,   1, 5Fh,   1, 97h,   1, 97h,   1
AC98                         db  88h,   1, 88h,   1, 5Fh,   1, 88h,   1, 88h,   1, 97h
ACA3                         db    1, 97h,   1, 5Fh,   1, 97h,   1, 97h,   1, 88h,   1
ACAE                         db  88h,   1, 5Fh,   1, 88h,   1, 88h,   1, 5Fh,   1, 9Ch
ACB9                         db    1, 9Dh,   1, 9Eh,   1, 5Fh,   1,0A7h,   1,0A7h,   1
ACC4                         db 0A7h,   1,0A7h,   1,0A7h,   1, 2Ah,   2,   8, 10h, 0Ch
ACCF                         db    2, 26h,   1,   4, 10h,   8,   8,   4, 10h,   8,   8
ACDA                         db  10h,   1,   8, 10h, 20h,   0,   2, 20h, 30h,   0, 50h
ACE5                         db    2, 20h,   1,   8, 10h,   4,   0, 10h,   1, 30h,   2
ACF0                         db  68h,   0,   1,   8, 30h,   1, 18h,   8, 20h,   1,   8
ACFB                         db    8,   8,   0,   8,   2,   8,   8,   8, 14h,0FFh,   0
AD06                         db  42h,   0, 24h,   8, 30h,   1, 10h, 11h, 10h,   0, 10h
AD11                         db    1,   2, 20h, 40h,   0, 28h,   8,   8, 14h, 30h,   0
AD1C                         db  10h,   8, 30h,   1,   8,   2,   4, 22h, 20h,   0, 40h
AD27                         db    8,   8,   1,   8, 10h,   8,   0,   8, 10h, 10h,   2
AD32                         db  0Eh,   1,   8, 10h,   8,   0,   8, 10h,0FFh,   0, 18h
AD3D                         db    4,   8,   2, 10h,   1,   8, 10h, 10h,   8,   8, 10h
AD48                         db  18h,   0, 0Ah,   1,   8, 10h, 10h,   8,   8, 10h, 18h
AD53                         db    0, 20h,   1,   4,   8,   8, 28h, 18h,   1,   4,   8
AD5E                         db    4, 28h, 20h,   1, 20h,   4,   8, 12h, 10h,   2, 20h
AD69                         db    4,   8, 14h, 24h,   1,   4,   2,   4, 22h, 20h,   1
AD74                         db    8, 10h, 0Ch,   2,   8, 14h,   8,   2,   6,   4,   8
AD7F                         db  10h, 0Ch,   2,   6, 10h,   6,   0,   6,   4,   8, 10h
AD8A                         db    8,   2,   6,   4,   8, 10h, 0Ch,   2,   6,   4,   8
AD95                         db  10h,   8,   2,   6,   4,   8, 10h, 0Ch,   2, 24h,   1
ADA0                         db    4, 10h,   4, 20h, 20h,   0, 10h,   8, 60h,   1
ADAA
ADAA ; =============== S U B R O U T I N E =======================================
ADAA
ADAA ; Advance the display action pages when game has credit(s)
ADAA
ADAA actions_with_credits:                                       ; 0D50↑p
ADAA                         xor     a
ADAB                         ld      (unk_E010), a
ADAE                         ld      (unk_E009), a
ADB1                         ld      (ticker_countup), a
ADB4                         call    clear_sprites
ADB7                         call    clear_sprites_and_screen
ADBA                         ld      hl, action_table
ADBD                         ld      a, (rotate_action)
ADC0                         inc     a
ADC1                         and     7
ADC3                         ld      (rotate_action), a
ADC6                         add     a, a
ADC7                         rst     HL_plus_A
ADC8                         ld      e, (hl)
ADC9                         inc     hl
ADCA                         ld      d, (hl)
ADCB                         ex      de, hl
ADCC                         jp      (hl)
ADCC ; End of function actions_with_credits
ADCC
ADCC ; ---------------------------------------------------------------------------
ADCD action_table:           dw title_page                       ; ADBA↑o
ADCF                         dw building_page
ADD1                         dw punch_items_display
ADD3                         dw title_screen
ADD5                         dw credits_screen
ADD7                         dw building_page
ADD9                         dw punch_items_display
ADDB                         dw title_screen
ADDD
ADDD ; =============== S U B R O U T I N E =======================================
ADDD
ADDD ; Auto action of system when no credits in game
ADDD
ADDD advance_auto_action:                                        ; 0BD2↑p
ADDD                         xor     a
ADDE                         ld      (ticker_countup), a
ADE1                         ld      (unk_E009), a
ADE4                         ld      (unk_E010), a
ADE7                         call    clear_sprites
ADEA                         call    clear_sprites_and_screen
ADED                         ld      hl, auto_action_table
ADF0                         ld      a, (rotate_action)
ADF3                         inc     a
ADF4                         and     7
ADF6                         ld      (rotate_action), a
ADF9                         add     a, a
ADFA                         rst     HL_plus_A
ADFB                         ld      e, (hl)
ADFC                         inc     hl
ADFD                         ld      d, (hl)
ADFE                         ex      de, hl
ADFF                         jp      (hl)
ADFF ; End of function advance_auto_action
ADFF
ADFF ; ---------------------------------------------------------------------------
AE00 auto_action_table:      dw punch_items_display              ; ADED↑o
AE02                         dw title_screen
AE04                         dw todays_top_scores
AE06                         dw building_page
AE08                         dw punch_items_display
AE0A                         dw development_team
AE0C                         dw todays_top_scores
AE0E                         dw building_page
AE10
AE10 ; =============== S U B R O U T I N E =======================================
AE10
AE10
AE10 sub_AE10:                                                   ; AE49↓p
AE10                         ld      hl, ticker_countup
AE13                         inc     (hl)
AE14                         jr      z, loc_AE21
AE16                         ld      a, (sound_enable)
AE19                         or      a
AE1A                         jr      z, loc_AE27
AE1C                         ld      a, (game_credits)
AE1F                         or      a
AE20                         ret     z
AE21
AE21 loc_AE21:                                                   ; AE14 AE30↓j 
AE21                         ld      a, 1
AE23                         ld      (unk_E010), a
AE26                         ret
AE27 ; ---------------------------------------------------------------------------
AE27
AE27 loc_AE27:                                                   ; AE1A
AE27                         call    ready_players
AE2A                         ld      a, (byte_E606)
AE2D                         or      a
AE2E                         jr      z, loc_AE32
AE30                         jr      loc_AE21
AE32 ; ---------------------------------------------------------------------------
AE32
AE32 loc_AE32:                                                   ; AE2E
AE32                         ld      a, (ticker_countup)
AE35                         cp      16
AE37                         ret     c
AE38                         call    check_player_start
AE3B                         or      a
AE3C                         ret     z
AE3D                         jr      loc_AE21
AE3D ; End of function sub_AE10
AE3D
AE3F ; ---------------------------------------------------------------------------
AE3F ; START OF FUNCTION CHUNK FOR title_page
AE3F ;   ADDITIONAL PARENT FUNCTION sub_AEF1
AE3F
AE3F main_attract_loop:                                          ; AE51↓j AE8B↓j 
AE3F                         call    watchdog_reset
AE42                         ld      a, (unk_E009)
AE45                         or      a
AE46                         call    nz, animate_girls_hair
AE49                         call    sub_AE10
AE4C                         ld      a, (unk_E010)
AE4F                         or      a
AE50                         ret     nz
AE51                         jr      main_attract_loop
AE51 ; END OF FUNCTION CHUNK FOR title_page
AE53
AE53 ; =============== S U B R O U T I N E =======================================
AE53
AE53
AE53 animate_girls_hair:                                         ; AE46↑p
AE53                         ld      iy, sprite57_y
AE57                         ld      a, (ticker_countup)         ; Get ticker counter
AE5A                         and     4
AE5C                         jr      z, swap_hair_sprite         ; Every 4th frame change animation
AE5E                         ld      (iy+2), 0CBh                ; Girls hair animation1
AE62                         ret
AE63 ; ---------------------------------------------------------------------------
AE63
AE63 swap_hair_sprite:                                           ; AE5C
AE63                         ld      (iy+2), 0CFh                ; Girls hair animation 2
AE67                         ret
AE67 ; End of function animate_girls_hair
AE67
AE68
AE68 ; =============== S U B R O U T I N E =======================================
AE68
AE68
AE68 title_page:                                                 ; 0BC4↑p
AE68                                                             ; action_table↑o
AE68
AE68 ; FUNCTION CHUNK AT AE3F SIZE 00000014 BYTES
AE68
AE68                         ld      a, 1
AE6A                         ld      (unk_E009), a
AE6D                         call    setup_palett4
AE70                         ld      hl, title_screen_papcked_data
AE73                         call    unpack_fullscreen_data      ; decompressed from start top of screen
AE76                         ld      a, 79h ; 'y'                ; TM Character graphic
AE78                         ld      hl,  bg_row20+38h
AE7B                         ld      (hl), a                     ; Display the TM on title page
AE7C                         inc     hl
AE7D                         ld      (hl), 10h                   ; set colour for character
AE7F                         ld      iy, sprite57_y
AE83                         ld      hl, title_spriteset
AE86                         ld      b, 24h ; '$'                ; 36 bytes which is 9 sprites of data on title page
AE88                         call    sprite_block_setup          ; Sprite block copy hl - iy * 4 bytes
AE8B                         jp      main_attract_loop
AE8B ; End of function title_page
AE8B
AE8B ; ---------------------------------------------------------------------------
AE8E title_spriteset:        db 0BCh,   1,0CBh, 98h              ; AE83↑o
AE92                         db 0BCh,   1,0CCh,0A8h
AE96                         db 0ACh,   1,0CDh, 98h
AE9A                         db 0ACh,   1,0CEh,0A8h
AE9E                         db 0E4h,   1, 73h, 7Eh
AEA2                         db 0D4h,   1,0BDh, 7Eh
AEA6                         db  5Dh, 11h, 7Fh, 36h
AEAA                         db 0B7h,   1,0D4h,0D6h
AEAE                         db 0BDh,   1,0D4h,0DCh
AEB2 ; ---------------------------------------------------------------------------
AEB2
AEB2 credits_screen:                                             ; ADD5↑o
AEB2                         ld      c, 34                       ; Low rubble roar sound FX for credits
AEB4                         call    inject_sound                ; Called with c as the sound number
AEB4                                                             ; Sound codes
AEB4                                                             ; 18 Helicopter
AEB4                                                             ; 27 Siren start
AEB4                                                             ; 34 Select Growl (George)
AEB4                                                             ; 37 Sounds like a lower roar
AEB4                                                             ; 38 Sounds like a high roar
AEB4                                                             ; 50 Eating something
AEB4                                                             ; 56 Landing thud
AEB4                                                             ; 59 Little bullets
AEB4                                                             ; 62 sounds like space ship lasers
AEB4                                                             ; 78 Explosion
AEB4                                                             ; 79 Dynamite explodes
AEB4                                                             ; 92 die 1
AEB4                                                             ; 93 die 2
AEB4                                                             ; 104 News Flash
AEB4                                                             ; 108 Train sound
AEB7                         ld      hl, george_lizzie_ralf_image
AEBA                         call    unpack_fullscreen_data      ; decompressed from start top of screen
AEBD                         ld      de, a5rampage6alias         ; "@5RAMPAGE//@6ALIAS/CREATURE CREATORS."
AEC0                         ld      hl,  bg_row04+10h
AEC3                         ld      c, 0
AEC5                         call    message_print               ; Print string c=colour hl=screen, source=de
AEC8                         ld      hl,  bg_row04+10h
AECB                         ld      de, aGameDesigners          ; "/  GAME DESIGNERS"
AECE                         ld      c, 20h ; ' '
AED0                         call    message_print               ; Print string c=colour hl=screen, source=de
AED3                         ld      de, aArtistBrianCol         ; "ARTIST//BRIAN/COLIN"
AED6                         ld      hl,  bg_row09+8
AED9                         ld      c, 0
AEDB                         call    message_print               ; Print string c=colour hl=screen, source=de
AEDE                         ld      de, aSoundsMichaelB         ; "SOUNDS//MICHAEL/BARTLOW"
AEE1                         ld      hl,  bg_row09+1Ch
AEE4                         ld      c, 10h
AEE6                         call    message_print               ; Print string c=colour hl=screen, source=de
AEE9                         ld      de, aSoftwareJeffNa         ; "SOFTWARE//  JEFF/ NAUMAN"
AEEC                         ld      hl,  bg_row09+2Eh
AEEF                         ld      c, 20h ; ' '
AEF1
AEF1 ; =============== S U B R O U T I N E =======================================
AEF1
AEF1
AEF1 sub_AEF1:
AEF1
AEF1 ; FUNCTION CHUNK AT AE3F SIZE 00000014 BYTES
AEF1
AEF1                         call    message_print               ; Print string c=colour hl=screen, source=de
AEF4                         ld      iy, sprite5_y
AEF8                         ld      b, 24h ; '$'
AEFA                         ld      hl, credit_sprite_list
AEFD                         call    sprite_block_setup          ; Sprite block copy hl - iy * 4 bytes
AF00                         ld      hl,  bg_row04+28h
AF03                         ld      a, 78h ; 'x'
AF05                         ld      (hl), a
AF06                         inc     hl
AF07                         ld      (hl), 30h ; '0'
AF09                         jp      main_attract_loop
AF09 ; End of function sub_AEF1
AF09
AF09 ; ---------------------------------------------------------------------------
AF0C credit_sprite_list:     db 0D2h,   3, 67h, 24h              ; AEFA↑o
AF10                         db 0D2h,   3, 68h, 34h
AF14                         db 0C2h,   3, 69h, 24h
AF18                         db 0C2h,   3, 6Ah, 34h
AF1C                         db 0D2h, 1Bh,0E8h,0CEh
AF20                         db 0D2h, 1Bh,0E7h,0DEh
AF24                         db 0C2h, 1Bh,0EAh,0CEh
AF28                         db 0C2h, 1Bh,0E9h,0DEh
AF2C                         db 0C0h, 13h, 74h, 7Eh
AF30 aArtistBrianCol:        .ascii 'ARTIST//BRIAN/COLIN',0      ; AED3↑o
AF44 aSoundsMichaelB:        .ascii 'SOUNDS//MICHAEL/BARTLOW',0  ; AEDE↑o
AF5C aSoftwareJeffNa:        .ascii 'SOFTWARE//  JEFF/ NAUMAN',0 ; AEE9↑o
AF75 a5rampage6alias:        .ascii '@5RAMPAGE//@6ALIAS/CREATURE CREATORS.',0
AF75                                                             ; AEBD↑o
AF9B aGameDesigners:         .ascii '/  GAME DESIGNERS',0        ; AECB↑o
AFAD
AFAD ; =============== S U B R O U T I N E =======================================
AFAD
AFAD ; Sprite block copy hl - iy * 4 bytes
AFAD
AFAD sprite_block_setup:                                         ; AE88↑p AEFD↑p 
AFAD                         ld      de, 4
AFB0
AFB0 sp_setup_loop:                                              ; AFB7↓j
AFB0                         ld      a, (hl)                     ; Anyone wonder what de is 4 for?
AFB1                         inc     hl                          ; advance pointer
AFB2                         ld      (iy+0), a                   ; write to sprite table
AFB5                         inc     iy                          ; advance sprite table pointer
AFB7                         djnz    sp_setup_loop               ; loop b times for x y number and flip
AFB9                         ret
AFB9 ; End of function sprite_block_setup
AFB9
AFBA ; ---------------------------------------------------------------------------
AFBA
AFBA development_team:                                           ; AE0A↑o
AFBA                         ld      hl, george_lizzie_ralf_image
AFBD                         call    unpack_fullscreen_data      ; decompressed from start top of screen
AFC0                         ld      de, a5developmentTe         ; "@5DEVELOPMENT TEAM//M.BARTLOW@8T.LEON/J"
AFC3                         ld      hl,  bg_row04+8
AFC6                         ld      c, 40h ; '@'
AFC8                         call    message_print               ; Print string c=colour hl=screen, source=de
AFCB                         jp      main_attract_loop
AFCB ; ---------------------------------------------------------------------------
AFCE a5developmentTe:        .ascii '@5DEVELOPMENT TEAM//M.BARTLOW@8T.LEON/J.BELT  @9B.LIBBE/B.COLIN @9S.LOH'
AFCE                                                             ; AFC0↑o
B015                         .ascii 'SE/N.FALCONER@7C.MEDNICK/W.GODLEWSKI@6J.NAUMAN/J.KETZA @9G.OGLESBY/J.KU'
B05C                         .ascii 'BIK @9S.PERRY',0
B06A ; ---------------------------------------------------------------------------
B06A
B06A title_screen:                                               ; ADD3↑o ADDB↑o 
B06A                         ld      hl, george_lizzie_ralf_image
B06D                         call    unpack_fullscreen_data      ; decompressed from start top of screen
B070                         ld      de, aRAMPAGECopyrig         ; "  R A M P A G E//COPYRIGHT MCMLXXXVI//B"
B073                         ld      hl,  bg_row05+0Eh
B076                         ld      c, 40h ; '@'
B078                         call    message_print               ; Print string c=colour hl=screen, source=de
B07B                         ld      hl,  bg_row05+2Eh
B07E                         ld      (hl), 78h ; 'x'
B080                         inc     hl
B081                         ld      (hl), 30h ; '0'
B083                         jp      main_attract_loop
B083 ; ---------------------------------------------------------------------------
B086 aRAMPAGECopyrig:        .ascii '  R A M P A G E//COPYRIGHT MCMLXXXVI//BALLY MIDWAY MFG CO//ALL RIGHTS R'
B086                                                             ; B070↑o
B0CD                         .ascii 'ESERVED',0
B0D5 ; ---------------------------------------------------------------------------
B0D5
B0D5 todays_top_scores:                                          ; AE04↑o AE0C↑o
B0D5                         ld      hl, george_lizzie_ralf_image
B0D8                         call    unpack_fullscreen_data      ; decompressed from start top of screen
B0DB                         ld      de, a3insertCoinsTo         ; "#3INSERT  COINS/// TODAYS TOP SCORES"
B0DE                         ld      hl,  bg_row05+0Eh
B0E1                         ld      c, 40h ; '@'
B0E3                         call    message_print               ; Print string c=colour hl=screen, source=de
B0E6                         ld      de, word_B125
B0E9                         ld      hl,  bg_row11+6
B0EC                         ld      c, 40h ; '@'
B0EE                         call    message_print               ; Print string c=colour hl=screen, source=de
B0F1                         ld      de, word_B125
B0F4                         ld      hl,  bg_row11+1Ah
B0F7                         ld      c, 50h ; 'P'
B0F9                         call    message_print               ; Print string c=colour hl=screen, source=de
B0FC                         ld      de, word_B125
B0FF                         ld      hl,  bg_row11+2Eh
B102                         ld      c, 60h ; '`'
B104                         call    message_print               ; Print string c=colour hl=screen, source=de
B107                         ld      hl,  bg_row11+6
B10A                         ld      de, unk_E638
B10D                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
B10D                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
B10D                                                             ; HL = destination address for output (usually a screen buffer)
B10D                                                             ;
B110                         ld      hl,  bg_row11+1Ah
B113                         ld      de, unk_E63F
B116                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
B116                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
B116                                                             ; HL = destination address for output (usually a screen buffer)
B116                                                             ;
B119                         ld      hl,  bg_row11+2Eh
B11C                         ld      de, unk_E646
B11F                         call    print_decimal               ; Print a 7-digit decimal value (BCD) from (DE) to (HL)
B11F                                                             ; DE = pointer to 7-byte BCD value (1 digit per byte, MSD first)
B11F                                                             ; HL = destination address for output (usually a screen buffer)
B11F                                                             ;
B122                         jp      main_attract_loop
B122 ; ---------------------------------------------------------------------------
B125 word_B125:              dw 3740h                            ; B0E6↑o B0F1↑o 
B127                         db    0
B128 a3insertCoinsTo:        .ascii '#3INSERT  COINS/// TODAYS TOP SCORES',0
B128                                                             ; B0DB↑o
B14D
B14D ; =============== S U B R O U T I N E =======================================
B14D
B14D
B14D player_select_start:                                        ; 0D0C↑p 0D61↑p
B14D                         call    clear_sprites
B150                         call    clear_sprites_and_screen
B153                         call    setup_palette1
B156                         ld      hl, george_lizzie_ralf_image
B159                         call    unpack_fullscreen_data      ; decompressed from start top of screen
B15C                         ld      de, aPressJumpButto         ; "PRESS JUMP BUTTON TO/START THE GAME.//P"
B15F                         ld      hl,  bg_row05+8
B162                         ld      c, 40h ; '@'
B164                         call    message_print               ; Print string c=colour hl=screen, source=de
B167                         ld      de, aCredits                ; "CREDITS  "
B16A                         ld      hl,  bg_row11+28h
B16D                         ld      a, (free_play)              ; Check if we got free play mode DIP settings
B170                         or      a
B171                         jr      z, not_free_game
B173                         ld      a, (easy_hard_normal)       ; And other DIP settings are 0 for free game
B176                         or      a
B177                         jr      z, not_free_game
B179                         ld      de, aFreePlay               ; "FREE-PLAY"
B17C                         jp      message_print               ; Print string c=colour hl=screen, source=de
B17F ; ---------------------------------------------------------------------------
B17F
B17F not_free_game:                                              ; B171 B177
B17F                         ld      c, 40h ; '@'
B181                         call    message_print               ; Print string c=colour hl=screen, source=de
B184                         ld      a, (game_credits)
B187                         add     a, 30h ; '0'
B189                         ld      (bg_row11+38h), a
B18C                         ret
B18C ; End of function player_select_start
B18C
B18C ; ---------------------------------------------------------------------------
B18D aFreePlay:              .ascii 'FREE-PLAY',0                ; B179↑o
B197 aCredits:               .ascii 'CREDITS  ',0                ; B167↑o
B1A1 aPressJumpButto:        .ascii 'PRESS JUMP BUTTON TO/START THE GAME.//PRESS PUNCH BUTTON FOR/DIRECTIONS'
B1A1                                                             ; B15C↑o
B1E8                         .ascii '.',0
B1EA ; ---------------------------------------------------------------------------
B1EA
B1EA punch_items_display:                                        ; ADD1↑o ADD9↑o 
B1EA                         ld      a, 0
B1EC                         ld      (byte_EC22), a
B1EF                         ld      (byte_EC42), a
B1F2                         ld      (byte_EC62), a
B1F5                         ld      de, aSomeOfTheFoodI         ; "SOME OF THE FOOD ITEMS////////SOME HAZA"
B1F8                         ld      hl,  bg_row04+8
B1FB                         ld      c, 40h ; '@'
B1FD                         call    message_print               ; Print string c=colour hl=screen, source=de
B200                         ld      de, aMilkTurkeyHotT         ; "MILK//TURKEY//HOT TOAST////CACTUS//POIS"
B203                         ld      hl,  bg_row06+8
B206                         ld      c, 60h ; '`'
B208                         call    message_print               ; Print string c=colour hl=screen, source=de
B20B                         ld      de, aPunchItemsToGr         ; "PUNCH ITEMS TO GRAB THEM!"
B20E                         ld      hl,  bg_row29+8
B211                         ld      c, 50h ; 'P'
B213                         call    message_print               ; Print string c=colour hl=screen, source=de
B216                         ld      iy, sprite5_y               ; start from sprite5 for the images
B21A                         ld      de, 4                       ; Sprite add / sprite set
B21D                         ld      b, 9
B21F                         ld      hl, sprite_items
B222                         ld      c, 40h ; '@'
B224
B224 punch_sprite_loop:                                          ; B238↓j
B224                         ld      (iy+3), 0C0h                ; All at same x position
B228                         ld      (iy+1), 3                   ; Palette 3 for all sprites
B22C                         ld      a, (hl)
B22D                         ld      (iy+2), a                   ; Sprite Code
B230                         inc     hl
B231                         ld      a, (hl)
B232                         ld      (iy+0), a                   ; Y position
B235                         inc     hl
B236                         add     iy, de                      ; Advance sprite base 4 bytes
B238                         djnz    punch_sprite_loop           ; Do all sprites 9 of them
B23A                         jp      main_attract_loop
B23A ; ---------------------------------------------------------------------------
B23D sprite_items:           db  93h,0CCh                        ; B21F↑o
B23F                         db  94h,0BCh                        ; All item sprite codes and y positions
B241                         db  9Ch,0ACh
B243                         db  97h, 8Ch
B245                         db  98h, 7Ch
B247                         db  9Bh, 6Ch
B249                         db 0A8h, 4Ch
B24B                         db 0E2h, 3Ch
B24D                         db 0A5h, 2Ch
B24F aPunchItemsToGr:        .ascii 'PUNCH ITEMS TO GRAB THEM!',0 ; B20B↑o
B269 aSomeOfTheFoodI:        .ascii 'SOME OF THE FOOD ITEMS////////SOME HAZARDOUS ITEMS////////SOME OF THE B'
B269                                                             ; B1F5↑o
B2B0                         .ascii 'ONUS ITEMS',0
B2BB aMilkTurkeyHotT:        .ascii 'MILK//TURKEY//HOT TOAST////CACTUS//POISON//TOASTER////MONEY BAG ???//FL'
B2BB                                                             ; B200↑o
B302                         .ascii 'OWER POT//T.V. OFF',0
B315 ; ---------------------------------------------------------------------------
B315
B315 building_page:                                              ; ADCF↑o ADD7↑o 
B315                         ld      a, 0
B317                         ld      (byte_EC22), a
B31A                         ld      (byte_EC42), a
B31D                         ld      (byte_EC62), a
B320                         ld      hl,  building45_ch+3
B323                         ld      de,  bg_row27+32h
B326                         ld      c, 19                       ; This building is 19 heigh
B328
B328 next_building_row:                                          ; B345↓j
B328                         push    de
B329                         ld      b, 5                        ; And 5 characters wide
B32B
B32B do_one_row:                                                 ; B335↓j
B32B                         ld      a, (hl)                     ; Read character data
B32C                         ld      (de), a                     ; Straight to screen RAM
B32D                         inc     hl
B32E                         inc     de                          ; Advance source and destination
B32F                         ld      a, (hl)                     ; Include the high byte of character code
B330                         or      10h                         ; Set the palette for building
B332                         ld      (de), a                     ; Write the high byte and palette / flip bits
B333                         inc     hl
B334                         inc     de
B335                         djnz    do_one_row                  ; brick / brick we can build it
B337                         dec     c                           ; Draw all of Nakatomi Plaza ;-)
B338                         pop     de                          ; Only Die Hard fans will get that one
B339                         jp      z, building_errected
B33C                         ld      ix, 0FFC0h                  ; buildings are stored bottom up reversed
B340                         add     ix, de                      ; No subtract in Z80, so we add -$40
B342                         push    ix
B344                         pop     de
B345                         jr      next_building_row
B347 ; ---------------------------------------------------------------------------
B347
B347 building_errected:                                          ; B339
B347                         ld      de, road_characters         ; Little snippet of road surface & pavment
B34A                         ld      hl,  bg_row28+2Eh
B34D                         ld      c, 41h ; 'A'
B34F                         call    message_print               ; Print string c=colour hl=screen, source=de
B352                         ld      de, aYouMustEatFood         ; "YOU MUST EAT FOOD//TO SURVIVE.//////CLI"
B355                         ld      hl,  bg_row04+6
B358                         ld      c, 40h ; '@'
B35A                         call    message_print               ; Print string c=colour hl=screen, source=de
B35D                         ld      iy, sprite5_y               ; Start from the sprite5 base
B361                         ld      de, 4
B364                         ld      b, 64                       ; Setup 16 sprites count is * 4 for sprite block setup
B366                         ld      hl, building_sprites        ; On the building we add a lizzie, some picksup and a car etc.
B369                         call    sprite_block_setup          ; Sprite block copy hl - iy * 4 bytes
B36C                         ld      hl, building_cracks         ; Wack some cracks into the building just for good measure
B36F                         ld      de,  bg_row11+36h
B372                         ld      bc, 6
B375                         ldir
B377                         ld      de,  bg_row12+36h
B37A                         ld      bc, 6
B37D                         ldir
B37F                         ld      de,  bg_row13+36h
B382                         ld      bc, 6
B385                         ldir
B387                         jp      main_attract_loop
B387 ; ---------------------------------------------------------------------------
B38A road_characters:        db  65h, 65h, 65h, 65h, 65h, 65h    ; building_errected↑o
B390                         db  65h, 65h, 65h, 2Fh, 63h, 64h
B396                         db  63h, 64h, 63h, 64h, 63h, 64h
B39C                         db  63h ; c
B39D                         db    0
B39E building_sprites:       db 0AFh,   3,0ECh,0BAh              ; B366↑o
B3A2                         db  52h,   3, 76h,0DFh
B3A6                         db  72h,   3, 76h,0CFh
B3AA                         db  91h,   3, 87h,0CFh
B3AE                         db  72h,   3, 8Ch,0DFh
B3B2                         db  66h, 1Bh,0AEh,0B0h
B3B6                         db  66h, 1Bh,0ADh,0C0h
B3BA                         db  56h, 1Bh,0B0h,0B0h
B3BE                         db  56h, 1Bh,0AFh,0C0h
B3C2                         db  76h, 1Bh, 86h,0B0h
B3C6                         db  76h, 1Bh, 85h,0C0h
B3CA                         db  66h, 1Bh, 88h,0B0h
B3CE                         db  66h, 1Bh, 87h,0C0h
B3D2                         db  9Dh,   3, 94h,0DFh
B3D6                         db  1Eh,   3,0B8h,0D7h
B3DA                         db  1Eh,   3,0B9h,0E7h
B3DE building_cracks:        db 0BBh, 15h,0CDh, 11h,0C0h, 11h    ; B36C↑o
B3E4                         db 0B2h, 11h, 84h, 31h,0C6h, 15h
B3EA                         db  5Fh, 11h,0C4h, 11h,0C1h, 11h
B3F0 aYouMustEatFood:        .ascii 'YOU MUST EAT FOOD//TO SURVIVE.//////CLIMB BUILDINGS AND//PUNCH OPEN WIN'
B3F0                                                             ; B352↑o
B437                         .ascii 'DOWS//TO FIND FOOD.//////DESTROY ALL BUILDINGS//TO ADVANCE TO//NEXT CIT'
B47E                         .ascii 'Y.',0
B481
B481 ; =============== S U B R O U T I N E =======================================
B481
B481
B481 score_add_saveREGs:                                         ; 1AF2↑p 593E↑p 
B481                         push    ix
B483                         push    iy
B485                         pop     ix
B487                         call    add_to_score
B48A                         pop     ix
B48C                         ret
B48C ; End of function score_add_saveREGs
B48C
B48C ; ---------------------------------------------------------------------------
B48D score_5:                db    5,   0,   0,   0,   0         ; Score unused in game, I guess they changed and keep data in table
B492 score_10:               db    0,   1,   0,   0,   0         ; Another score not used in game
B497 score_15:               db    5,   1,   0,   0,   0         ; 1B0F↑o
B49C score_25:               db    5,   2,   0,   0,   0         ; 0F02↑o 45EC↑o
B4A1 score_50:               db    0,   5,   0,   0,   0         ; 5169↑o 6122↑o 
B4A6 score_75:               db    5,   7,   0,   0,   0         ; loc_4600↑o
B4AB score_100:              db    0,   0,   1,   0,   0         ; 55BF↑o 6129↑o 
B4B0 score_125:              db    5,   2,   1,   0,   0         ; Seems this score value is not used in game also.
B4B5 score_150:              db    0,   5,   1,   0,   0         ; B647↓o
B4BA score_175:              db    5,   7,   1,   0,   0         ; 60F0↑o
B4BF score_200:              db    0,   0,   2,   0,   0         ; B9E1↓o C87B↓o
B4C4 score_225:              db    5,   2,   2,   0,   0         ; loc_45F6↑o
B4C4                                                             ; 7460↑o
B4C9 score_250:              db    0,   5,   2,   0,   0         ; 3697↑o 48AA↑o 
B4CE score_350:              db    0,   5,   3,   0,   0         ; 6130↑o
B4D3 score_500:              db    0,   0,   5,   0,   0         ; 593B↑o 6137↑o 
B4D8 score_750:              db    0,   5,   7,   0,   0         ; loc_61BF↑o
B4D8                                                             ; 61E4↑o 
B4DD score_1000:             db    0,   0,   0,   1,   0         ; 1AEF↑o 4899↑o 
B4E2 score_2500:             db    0,   0,   5,   2,   0         ; loc_369D↑o
B4E2                                                             ; 480B↑o
B4E7 ; ---------------------------------------------------------------------------
B4E7 ; START OF FUNCTION CHUNK FOR sub_B663
B4E7
B4E7 loc_B4E7:                                                   ; B675↓j B67A↓j
B4E7                         ld      ix, object_action_table
B4EB                         ld      a, (ix+0)
B4EE                         or      a
B4EF                         ret     z
B4F0                         cp      1
B4F2                         jr      z, loc_B50C
B4F4                         cp      2
B4F6                         jr      z, loc_B528
B4F8                         cp      3
B4FA                         jr      z, loc_B53D
B4FC                         ld      a, (ix+1)
B4FF                         inc     a
B500                         ld      (ix+1), a
B503                         cp      10h
B505                         jp      z, loc_B5F4
B508                         call    sub_B5B8
B50B                         ret
B50C ; ---------------------------------------------------------------------------
B50C
B50C loc_B50C:                                                   ; B4F2
B50C                         ld      a, (ix+2)
B50F                         cp      (ix+7)
B512                         jr      nz, loc_B53D
B514                         call    sub_B622
B517                         call    sub_B547
B51A                         ld      a, (loc_0)
B51D                         or      a
B51E                         ret     z
B51F                         ld      (ix+0), 2
B523                         ld      (ix+1), 0
B527                         ret
B528 ; ---------------------------------------------------------------------------
B528
B528 loc_B528:                                                   ; B4F6
B528                         call    sub_B622
B52B                         call    sub_B547
B52E                         ld      a, (ix+1)
B531                         inc     a
B532                         ld      (ix+1), a
B535                         cp      5Ah ; 'Z'
B537                         ret     c
B538                         ld      (ix+0), 3
B53C                         ret
B53D ; ---------------------------------------------------------------------------
B53D
B53D loc_B53D:                                                   ; B4FA B512
B53D                         call    sub_B603
B540                         call    sub_B622
B543                         call    sub_B547
B546                         ret
B546 ; END OF FUNCTION CHUNK FOR sub_B663
B547
B547 ; =============== S U B R O U T I N E =======================================
B547
B547
B547 sub_B547:                                                   ; B517↑p B52B↑p 
B547                         ld      a, (ix+0)
B54A                         or      a
B54B                         jp      z, loc_B5F4
B54E                         ld      iy, sprite105_y
B552                         call    sub_B573
B555                         call    sub_B562
B558                         ld      a, (ix+2)
B55B                         call    sub_B57C
B55E                         call    sub_B585
B561                         ret
B561 ; End of function sub_B547
B561
B562
B562 ; =============== S U B R O U T I N E =======================================
B562
B562
B562 sub_B562:                                                   ; B555↑p
B562                         ld      a, (ix+5)
B565                         or      a
B566                         ld      a, 3
B568                         jr      nz, loc_B56C
B56A                         ld      a, 13h
B56C
B56C loc_B56C:                                                   ; B568
B56C                         ld      (iy+1), a
B56F                         ld      (iy+5), a
B572                         ret
B572 ; End of function sub_B562
B572
B573
B573 ; =============== S U B R O U T I N E =======================================
B573
B573
B573 sub_B573:                                                   ; B552↑p B5C3↓p
B573                         ld      (iy+0), 10h
B577                         ld      (iy+4), 10h
B57B                         ret
B57B ; End of function sub_B573
B57B
B57C
B57C ; =============== S U B R O U T I N E =======================================
B57C
B57C
B57C sub_B57C:                                                   ; B55B↑p B5C9↓p
B57C                         ld      (iy+7), a
B57F                         sub     10h
B581                         ld      (iy+3), a
B584                         ret
B584 ; End of function sub_B57C
B584
B585
B585 ; =============== S U B R O U T I N E =======================================
B585
B585
B585 sub_B585:                                                   ; B55E↑p
B585                         ld      d, 0
B587                         ld      a, (ix+0)
B58A                         cp      3
B58C                         jr      nz, loc_B590
B58E                         ld      d, 0E0h
B590
B590 loc_B590:                                                   ; B58C
B590                         ld      b, 0B4h
B592                         ld      c, 0B5h
B594                         ld      a, (ix+5)
B597                         or      a
B598                         jr      nz, loc_B5A9
B59A                         ld      b, 0B5h
B59C                         ld      a, d
B59D                         or      a
B59E                         jr      z, loc_B5A1
B5A0                         ld      b, a
B5A1
B5A1 loc_B5A1:                                                   ; B59E
B5A1                         ld      (iy+2), b
B5A4                         ld      (iy+6), 0B4h
B5A8                         ret
B5A9 ; ---------------------------------------------------------------------------
B5A9
B5A9 loc_B5A9:                                                   ; B598
B5A9                         ld      c, 0B5h
B5AB                         ld      a, d
B5AC                         or      a
B5AD                         jr      z, loc_B5B0
B5AF                         ld      c, a
B5B0
B5B0 loc_B5B0:                                                   ; B5AD
B5B0                         ld      (iy+2), 0B4h
B5B4                         ld      (iy+6), c
B5B7                         ret
B5B7 ; End of function sub_B585
B5B7
B5B8
B5B8 ; =============== S U B R O U T I N E =======================================
B5B8
B5B8
B5B8 sub_B5B8:                                                   ; B508↑p
B5B8                         ld      a, (ix+0)
B5BB                         or      a
B5BC                         jp      z, loc_B5F4
B5BF                         ld      iy, sprite105_y
B5C3                         call    sub_B573
B5C6                         ld      a, (ix+2)
B5C9                         call    sub_B57C
B5CC                         ld      a, (ix+1)
B5CF                         cp      4
B5D1                         ld      bc, 0C5C6h                  ; Large Splash
B5D4                         ld      (iy+1), 1                   ; Palette 1 for both splashes
B5D8                         ld      (iy+5), 1
B5DC                         jp      c, set_splash_codes
B5DF                         ld      bc, 0C7C7h                  ; Medium Splash
B5E2                         ld      (iy+5), 11h
B5E6                         cp      8
B5E8                         jr      c, set_splash_codes
B5EA                         ld      bc, 0C8C8h                  ; Small Splash
B5ED
B5ED set_splash_codes:                                           ; B5DC B5E8
B5ED                         ld      (iy+2), b
B5F0                         ld      (iy+6), c
B5F3                         ret
B5F4 ; ---------------------------------------------------------------------------
B5F4
B5F4 loc_B5F4:                                                   ; B505 B54B 
B5F4                         ld      iy, sprite105_y
B5F8                         ld      b, 2
B5FA                         rst     do_sprite_clear_loop
B5FB                         ld      (ix+0), 0
B5FF                         call    sub_B964
B602                         ret
B602 ; End of function sub_B5B8
B602
B603
B603 ; =============== S U B R O U T I N E =======================================
B603
B603
B603 sub_B603:                                                   ; loc_B53D↑p
B603                         ld      a, (ix+6)
B606                         or      a
B607                         ld      bc, 40h ; '@'
B60A                         jr      z, loc_B60F
B60C                         ld      bc, 0FFC0h
B60F
B60F loc_B60F:                                                   ; B60A
B60F                         ld      h, (ix+2)
B612                         ld      l, (ix+3)
B615                         add     hl, bc
B616                         ld      (ix+2), h
B619                         ld      (ix+3), l
B61C                         ld      a, h
B61D                         cp      8
B61F                         ret     nc
B620                         jr      loc_B5F4
B620 ; End of function sub_B603
B620
B622
B622 ; =============== S U B R O U T I N E =======================================
B622
B622
B622 sub_B622:                                                   ; B514↑p
B622                                                             ; loc_B528↑p 
B622                         ld      a, (ix+0)
B625                         cp      59h ; 'Y'
B627                         ret     z
B628                         ld      de, 0FFFFh
B62B                         ld      b, (ix+2)
B62E                         ld      c, 0Eh
B630                         call    sub_1354
B633                         ld      a, (byte_E025)
B636                         or      a
B637                         ret     z
B638                         ld      (ix+4), 1
B63C                         ld      (ix+1), 0
B640                         ld      c, 77
B642                         rst     dispatch_sound
B643                         ld      (iy+2Bh), 51h ; 'Q'
B647                         ld      hl, score_150
B64A                         ld      a, (ix+0)
B64D                         cp      3
B64F                         ld      b, 2
B651                         jr      nz, loc_B658
B653                         ld      b, 6
B655                         ld      hl, score_750
B658
B658 loc_B658:                                                   ; B651
B658                         call    score_add_saveREGs
B65B                         call    sub_53C7
B65E                         ld      (ix+0), 59h ; 'Y'
B662                         ret
B662 ; End of function sub_B622
B662
B663
B663 ; =============== S U B R O U T I N E =======================================
B663
B663
B663 sub_B663:                                                   ; 09B5↑p
B663
B663 ; FUNCTION CHUNK AT B4E7 SIZE 00000060 BYTES
B663 ; FUNCTION CHUNK AT B780 SIZE 00000068 BYTES
B663 ; FUNCTION CHUNK AT B801 SIZE 000000BF BYTES
B663 ; FUNCTION CHUNK AT B96F SIZE 00000038 BYTES
B663 ; FUNCTION CHUNK AT B9F3 SIZE 00000089 BYTES
B663 ; FUNCTION CHUNK AT BAC2 SIZE 0000003C BYTES
B663 ; FUNCTION CHUNK AT BB2A SIZE 00000022 BYTES
B663 ; FUNCTION CHUNK AT BBDA SIZE 00000026 BYTES
B663
B663                         call    sub_CCB7
B666                         ld      a, (base_strip_number)
B669                         cp      2
B66B                         jp      z, loc_B9F3
B66E                         cp      0
B670                         jp      z, loc_B801
B673                         cp      8
B675                         jp      z, loc_B4E7
B678                         cp      0Ah
B67A                         jp      z, loc_B4E7
B67D                         ld      ix, object_action_table
B681                         ld      a, (ix+0)
B684                         or      a
B685                         ret     z
B686                         cp      1
B688                         jr      z, loc_B6AB
B68A                         cp      2
B68C                         jr      nz, loc_B6A6
B68E                         ld      a, (ix+1)
B691                         inc     a
B692                         ld      (ix+1), a
B695                         cp      0Fh
B697                         jr      c, loc_B6BF
B699                         ld      (ix+0), 59h ; 'Y'
B69D                         ld      (ix+1), 0
B6A1                         ld      c, 77
B6A3                         rst     dispatch_sound
B6A4                         jr      loc_B6BF
B6A6 ; ---------------------------------------------------------------------------
B6A6
B6A6 loc_B6A6:                                                   ; B68C
B6A6                         inc     (ix+1)
B6A9                         jr      loc_B6BF
B6AB ; ---------------------------------------------------------------------------
B6AB
B6AB loc_B6AB:                                                   ; B688
B6AB                         ld      a, (ix+3)
B6AE                         or      a
B6AF                         jr      nz, loc_B6BF
B6B1                         ld      (ix+0), 2
B6B5                         ld      (ix+1), 0
B6B9                         ld      (ix+3), 0
B6BD                         jr      loc_B6BF
B6BF ; ---------------------------------------------------------------------------
B6BF
B6BF loc_B6BF:                                                   ; B697 B6A4 
B6BF                         ld      a, (ix+0)
B6C2                         cp      59h ; 'Y'
B6C4                         jp      z, loc_B796
B6C7                         ld      iy, sprite23_y
B6CB                         ld      a, (ix+2)
B6CE                         call    set_3sprites_x
B6D1                         ld      iy, sprite105_y
B6D5                         ld      a, (ix+2)
B6D8                         call    set_3sprites_x
B6DB                         ld      iy, sprite23_y
B6DF                         ld      a, 18h
B6E1                         call    set_3sprites_y
B6E4                         ld      iy, sprite105_y
B6E8                         sub     2
B6EA                         call    set_3sprites_y
B6ED                         ld      iy, sprite23_y
B6F1                         call    set_3sprites_flags
B6F4                         ld      iy, sprite105_y
B6F8                         call    set_3sprites_flags
B6FB                         ld      hl, pier_table
B6FE                         ld      a, (ix+0)
B701                         cp      1
B703                         jr      z, loc_B708
B705                         ld      hl, broken_pier
B708
B708 loc_B708:                                                   ; B703 B7D2↓j 
B708                         ld      iy, sprite23_y
B70C                         call    set_3sprites_code
B70F                         ld      iy, sprite105_y
B713                         call    set_3sprites_code
B716                         ret
B716 ; End of function sub_B663
B716
B716 ; ---------------------------------------------------------------------------
B717 pier_table:             db 0F5h,0F6h,0F5h                   ; B6FB↑o
B71A                         db 0F3h,0F4h,0F3h                   ; Bridge sprite table
B71D broken_pier:            db 0F5h,0F8h,0F5h                   ; B705↑o
B71D                                                             ; Broken pier sprites
B720                         db 0F7h,   0,0F7h
B723 splash_table:           db 0C5h,0C6h,   0                   ; B7CA↓o
B726                         db 0C5h,0C6h,   0
B729 splash_table1:          db 0C7h,   0,0C7h                   ; B7D5↓o
B72C                         db 0C7h,   0,0C7h
B72F splash_table2:          db 0C8h,   0,0C8h                   ; B7DD↓o
B732                         db 0C8h,   0,0C8h
B735
B735 ; =============== S U B R O U T I N E =======================================
B735
B735
B735 set_3sprites_flags:                                         ; B6F1↑p B6F8↑p
B735                         ld      (iy+1), 0Bh                 ; First sprite flag
B739                         ld      (iy+5), 0Bh                 ; Second sprite flag
B73D                         ld      (iy+9), 1Bh                 ; Third sprite is reversed in x
B741                         ret
B741 ; End of function set_3sprites_flags
B741
B742
B742 ; =============== S U B R O U T I N E =======================================
B742
B742
B742 set_3sprites_y:                                             ; B6E1↑p B6EA↑p 
B742                         ld      (iy+0), a
B745                         ld      (iy+4), a
B748                         ld      (iy+8), a
B74B                         ret
B74B ; End of function set_3sprites_y
B74B
B74C
B74C ; =============== S U B R O U T I N E =======================================
B74C
B74C
B74C set_3sprites_x:                                             ; B6CE↑p B6D8↑p
B74C                         sub     6
B74E                         ld      (iy+3), a
B751                         add     a, 10h
B753                         ld      (iy+7), a
B756                         add     a, 10h
B758                         ld      (iy+0Bh), a
B75B                         ret
B75B ; End of function set_3sprites_x
B75B
B75C
B75C ; =============== S U B R O U T I N E =======================================
B75C
B75C
B75C set_3sprites_code:                                          ; B70C↑p B713↑p
B75C                         ld      a, (hl)
B75D                         inc     hl
B75E                         ld      (iy+2), a
B761                         or      a
B762                         jr      nz, loc_B768
B764                         ld      (iy+1), 0
B768
B768 loc_B768:                                                   ; B762
B768                         ld      a, (hl)
B769                         inc     hl
B76A                         ld      (iy+6), a
B76D                         or      a
B76E                         jr      nz, loc_B774
B770                         ld      (iy+5), 0
B774
B774 loc_B774:                                                   ; B76E
B774                         ld      a, (hl)
B775                         inc     hl
B776                         ld      (iy+0Ah), a
B779                         or      a
B77A                         ret     nz
B77B                         ld      (iy+9), 0
B77F                         ret
B77F ; End of function set_3sprites_code
B77F
B780 ; ---------------------------------------------------------------------------
B780 ; START OF FUNCTION CHUNK FOR sub_B663
B780
B780 loc_B780:                                                   ; B7E5↓j
B780                         ld      iy, sprite23_y
B784                         ld      b, 3
B786                         rst     do_sprite_clear_loop
B787                         ld      iy, sprite105_y
B78B                         ld      b, 3
B78D                         rst     do_sprite_clear_loop
B78E                         ld      (ix+0), 0
B792                         call    sub_B964
B795                         ret
B796 ; ---------------------------------------------------------------------------
B796
B796 loc_B796:                                                   ; B6C4
B796                         ld      iy, sprite23_y
B79A                         ld      a, (ix+2)
B79D                         call    sub_B7F5
B7A0                         ld      iy, sprite105_y
B7A4                         ld      a, (ix+2)
B7A7                         add     a, 8
B7A9                         call    sub_B7F5
B7AC                         ld      iy, sprite23_y
B7B0                         ld      a, 18h
B7B2                         call    set_3sprites_y
B7B5                         ld      iy, sprite105_y
B7B9                         call    set_3sprites_y
B7BC                         ld      iy, sprite23_y
B7C0                         call    sub_B7E8
B7C3                         ld      iy, sprite105_y
B7C7                         call    sub_B7E8
B7CA                         ld      hl, splash_table
B7CD                         ld      a, (ix+1)
B7D0                         cp      4
B7D2                         jp      c, loc_B708
B7D5                         ld      hl, splash_table1
B7D8                         cp      8
B7DA                         jp      c, loc_B708
B7DD                         ld      hl, splash_table2
B7E0                         cp      0Bh
B7E2                         jp      c, loc_B708
B7E5                         jp      loc_B780
B7E5 ; END OF FUNCTION CHUNK FOR sub_B663
B7E8
B7E8 ; =============== S U B R O U T I N E =======================================
B7E8
B7E8
B7E8 sub_B7E8:                                                   ; B7C0↑p B7C7↑p
B7E8                         ld      (iy+1), 1
B7EC                         ld      (iy+5), 1
B7F0                         ld      (iy+9), 11h
B7F4                         ret
B7F4 ; End of function sub_B7E8
B7F4
B7F5
B7F5 ; =============== S U B R O U T I N E =======================================
B7F5
B7F5
B7F5 sub_B7F5:                                                   ; B79D↑p B7A9↑p
B7F5                         ld      (iy+3), a
B7F8                         add     a, 10h
B7FA                         ld      (iy+7), a
B7FD                         ld      (iy+0Bh), a
B800                         ret
B800 ; End of function sub_B7F5
B800
B801 ; ---------------------------------------------------------------------------
B801 ; START OF FUNCTION CHUNK FOR sub_B663
B801
B801 loc_B801:                                                   ; B670
B801                         ld      ix, object_action_table
B805                         ld      a, (ix+0)
B808                         or      a
B809                         ret     z
B80A                         cp      89
B80C                         jr      z, loc_B825
B80E                         call    sub_B9B7
B811                         ld      a, (ix+0)
B814                         cp      1
B816                         jr      z, loc_B85F
B818                         cp      2
B81A                         jr      z, loc_B835
B81C                         cp      3
B81E                         jr      z, loc_B876
B820                         cp      4
B822                         jr      z, loc_B893
B824                         ret
B825 ; ---------------------------------------------------------------------------
B825
B825 loc_B825:                                                   ; B80C
B825                         ld      a, (ix+1)
B828                         inc     a
B829                         ld      (ix+1), a
B82C                         cp      16
B82E                         jp      z, sub_B952
B831                         call    sub_B91D
B834                         ret
B835 ; ---------------------------------------------------------------------------
B835
B835 loc_B835:                                                   ; B81A
B835                         call    sub_B8C0
B838                         ld      a, (ix+7)
B83B                         or      a
B83C                         jr      nz, loc_B8B6
B83E                         ld      a, (ticker_countup)
B841                         and     1
B843                         ret     nz
B844                         ld      a, (ix+1)
B847                         inc     a
B848                         ld      (ix+1), a
B84B                         cp      96
B84D                         ret     nz
B84E                         ld      a, (ix+0)
B851                         or      a
B852                         ret     z
B853                         ld      (ix+0), 3
B857                         ld      (ix+1), 0
B85B                         ld      c, 26
B85D                         rst     dispatch_sound
B85E                         ret
B85F ; ---------------------------------------------------------------------------
B85F
B85F loc_B85F:                                                   ; B816
B85F                         ld      a, (ix+2)
B862                         or      a
B863                         jr      nz, loc_B876
B865                         ld      (ix+8), 0
B869                         ld      a, (ix+5)
B86C                         ld      b, 0Ah
B86E                         or      a
B86F                         jr      z, loc_B873
B871                         ld      b, 0FCh
B873
B873 loc_B873:                                                   ; B86F
B873                         ld      (ix+2), b
B876
B876 loc_B876:                                                   ; B81E B863
B876                         ld      a, (ix+2)
B879                         cp      40h ; '@'
B87B                         jr      c, loc_B885
B87D                         cp      0C0h
B87F                         jr      nc, loc_B885
B881                         ld      (ix+8), 1
B885
B885 loc_B885:                                                   ; B87B B87F
B885                         call    sub_B8C0
B888                         ld      a, (ix+0)
B88B                         cp      3
B88D                         jp      z, loc_B974
B890                         jp      loc_B96F
B893 ; ---------------------------------------------------------------------------
B893
B893 loc_B893:                                                   ; B822
B893                         ld      a, (ticker_countup)
B896                         cp      116
B898                         ret     nz
B899                         ld      a, (ix+7)
B89C                         inc     a
B89D                         cp      3
B89F                         ld      (ix+7), a
B8A2                         ret     c
B8A3                         ld      a, (ix+5)
B8A6                         xor     1
B8A8                         ld      (ix+5), a
B8AB                         ld      (ix+6), a
B8AE                         ld      (ix+0), 1
B8B2                         ld      c, 18
B8B4                         rst     dispatch_sound
B8B5                         ret
B8B6 ; ---------------------------------------------------------------------------
B8B6
B8B6 loc_B8B6:                                                   ; B83C
B8B6                         ld      a, (ticker_countup)
B8B9                         and     0FFh
B8BB                         ret     nz
B8BC                         dec     (ix+7)
B8BF                         ret
B8BF ; END OF FUNCTION CHUNK FOR sub_B663
B8C0
B8C0 ; =============== S U B R O U T I N E =======================================
B8C0
B8C0
B8C0 sub_B8C0:                                                   ; loc_B835↑p
B8C0                                                             ; loc_B885↑p
B8C0                         ld      a, (ix+0)
B8C3                         or      a
B8C4                         jp      z, sub_B952
B8C7                         ld      iy, sprite105_y
B8CB                         call    sub_B8EC
B8CE                         call    sub_B8DB
B8D1                         ld      a, (ix+2)
B8D4                         call    sub_B8F5
B8D7                         call    sub_B8FE
B8DA                         ret
B8DA ; End of function sub_B8C0
B8DA
B8DB
B8DB ; =============== S U B R O U T I N E =======================================
B8DB
B8DB
B8DB sub_B8DB:                                                   ; B8CE↑p
B8DB                         ld      a, (ix+5)
B8DE                         or      a
B8DF                         ld      a, 3
B8E1                         jr      nz, loc_B8E5
B8E3                         ld      a, 13h
B8E5
B8E5 loc_B8E5:                                                   ; B8E1
B8E5                         ld      (iy+1), a
B8E8                         ld      (iy+5), a
B8EB                         ret
B8EB ; End of function sub_B8DB
B8EB
B8EC
B8EC ; =============== S U B R O U T I N E =======================================
B8EC
B8EC
B8EC sub_B8EC:                                                   ; B8CB↑p B928↓p
B8EC                         ld      (iy+0), 12h
B8F0                         ld      (iy+4), 12h
B8F4                         ret
B8F4 ; End of function sub_B8EC
B8F4
B8F5
B8F5 ; =============== S U B R O U T I N E =======================================
B8F5
B8F5
B8F5 sub_B8F5:                                                   ; B8D4↑p B92E↓p
B8F5                         ld      (iy+7), a
B8F8                         sub     10h
B8FA                         ld      (iy+3), a
B8FD                         ret
B8FD ; End of function sub_B8F5
B8FD
B8FE
B8FE ; =============== S U B R O U T I N E =======================================
B8FE
B8FE
B8FE sub_B8FE:                                                   ; B8D7↑p
B8FE                         ld      b, 0B6h
B900                         ld      c, 0B7h
B902                         ld      a, (ix+5)
B905                         or      a
B906                         jr      nz, loc_B90C
B908                         ld      b, 0B7h
B90A                         ld      c, 0B6h
B90C
B90C loc_B90C:                                                   ; B906
B90C                         ld      a, (game_level)
B90F                         or      a
B910                         jr      z, loc_B916
B912                         inc     b
B913                         inc     b
B914                         inc     c
B915                         inc     c
B916
B916 loc_B916:                                                   ; B910
B916                         ld      (iy+2), b
B919                         ld      (iy+6), c
B91C                         ret
B91C ; End of function sub_B8FE
B91C
B91D
B91D ; =============== S U B R O U T I N E =======================================
B91D
B91D
B91D sub_B91D:                                                   ; B831↑p
B91D                         ld      a, (ix+0)
B920                         or      a
B921                         jp      z, sub_B952
B924                         ld      iy, sprite105_y
B928                         call    sub_B8EC
B92B                         ld      a, (ix+2)
B92E                         call    sub_B8F5
B931                         ld      a, (ix+1)
B934                         cp      4
B936                         ld      b, 0F7h
B938                         ld      (iy+1), 3
B93C                         ld      (iy+5), 13h
B940                         jp      c, loc_B94B
B943                         cp      8
B945                         ld      b, 0F8h
B947                         jr      c, loc_B94B
B949                         ld      b, 0F9h
B94B
B94B loc_B94B:                                                   ; B940 B947
B94B                         ld      (iy+2), b
B94E                         ld      (iy+6), b
B951                         ret
B951 ; End of function sub_B91D
B951
B952
B952 ; =============== S U B R O U T I N E =======================================
B952
B952
B952 sub_B952:                                                   ; B82E B8C4 
B952                         ld      iy, sprite105_y
B956                         ld      b, 2
B958                         rst     do_sprite_clear_loop
B959                         ld      (ix+0), 0
B95D                         ld      (ix+8), 0
B961                         ld      c, 5
B963                         rst     dispatch_sound
B963 ; End of function sub_B952
B963
B964
B964 ; =============== S U B R O U T I N E =======================================
B964
B964
B964 sub_B964:                                                   ; 89BF↑p B5FF↑p 
B964                         ld      a, 1
B966                         ld      (unk_E3A9), a
B969                         ld      a, 5
B96B                         ld      (unk_E3B0), a
B96E                         ret
B96E ; End of function sub_B964
B96E
B96F ; ---------------------------------------------------------------------------
B96F ; START OF FUNCTION CHUNK FOR sub_B663
B96F
B96F loc_B96F:                                                   ; B890
B96F                         ld      hl, 100h
B972                         jr      loc_B977
B974 ; ---------------------------------------------------------------------------
B974
B974 loc_B974:                                                   ; B88D
B974                         ld      hl, 300h
B977
B977 loc_B977:                                                   ; B972
B977                         ld      a, (ix+6)
B97A                         or      a
B97B                         call    nz, negate_hl
B97E                         ld      b, (ix+2)
B981                         ld      c, (ix+3)
B984                         add     hl, bc
B985                         ld      (ix+2), h
B988                         ld      (ix+3), l
B98B                         ld      a, (ix+8)
B98E                         or      a
B98F                         ret     z
B990                         ld      a, (ix+0)
B993                         cp      1
B995                         jr      z, loc_B99A
B997                         cp      3
B999                         ret     nz
B99A
B99A loc_B99A:                                                   ; B995
B99A                         ld      a, h
B99B                         cp      0Ch
B99D                         jp      c, sub_B952
B9A0                         cp      0FCh
B9A2                         ret     c
B9A3                         call    sub_B952
B9A6                         ret
B9A6 ; END OF FUNCTION CHUNK FOR sub_B663
B9A7 ; ---------------------------------------------------------------------------
B9A7                         ld      a, h
B9A8                         cp      60h ; '`'
B9AA                         jr      z, loc_B9AF
B9AC                         cp      0A0h
B9AE                         ret     nz
B9AF
B9AF loc_B9AF:                                                   ; B9AA
B9AF                         ld      (ix+0), 2
B9B3                         ld      c, 5
B9B5                         rst     dispatch_sound
B9B6                         ret
B9B7
B9B7 ; =============== S U B R O U T I N E =======================================
B9B7
B9B7
B9B7 sub_B9B7:                                                   ; B80E↑p
B9B7                         ld      a, (ix+4)
B9BA                         or      a
B9BB                         ret     nz
B9BC                         ld      de, 0FFFFh
B9BF                         ld      b, (ix+2)
B9C2                         ld      c, 0Eh
B9C4                         call    sub_1354
B9C7                         ld      a, (byte_E025)
B9CA                         or      a
B9CB                         ret     z
B9CC                         ld      (ix+4), 1
B9D0                         ld      hl, score_750
B9D3                         ld      a, (ix+0)
B9D6                         cp      3
B9D8                         jr      z, loc_B9E4
B9DA                         ld      hl, score_100
B9DD                         cp      2
B9DF                         jr      z, loc_B9E4
B9E1                         ld      hl, score_200
B9E4
B9E4 loc_B9E4:                                                   ; B9D8 B9DF
B9E4                         call    score_add_saveREGs
B9E7                         ld      (ix+0), 59h ; 'Y'
B9EB                         ld      (ix+1), 0
B9EF                         ld      c, 78
B9F1                         rst     dispatch_sound
B9F2                         ret
B9F2 ; End of function sub_B9B7
B9F2
B9F3 ; ---------------------------------------------------------------------------
B9F3 ; START OF FUNCTION CHUNK FOR sub_B663
B9F3
B9F3 loc_B9F3:                                                   ; B66B
B9F3                         ld      ix, object_action_table
B9F7                         ld      a, (ix+0)
B9FA                         or      a
B9FB                         ret     z
B9FC                         cp      1
B9FE                         jr      z, loc_BA11
BA00                         cp      59h ; 'Y'
BA02                         jp      z, loc_BAC2
BA05                         jr      loc_BA58
BA07 ; ---------------------------------------------------------------------------
BA07
BA07 loc_BA07:                                                   ; BA17↓j
BA07                         ld      a, (ticker_countup)
BA0A                         and     0FFh
BA0C                         ret     nz
BA0D                         inc     (ix+6)
BA10                         ret
BA11 ; ---------------------------------------------------------------------------
BA11
BA11 loc_BA11:                                                   ; B9FE
BA11                         ld      a, (ix+6)
BA14                         cp      (ix+7)
BA17                         jr      c, loc_BA07
BA19                         ld      a, (ticker_countup)
BA1C                         and     3
BA1E                         ret     nz
BA1F                         ld      a, (ix+1)
BA22                         inc     a
BA23                         ld      (ix+1), a
BA26                         ld      c, 6Dh ; 'm'
BA28                         cp      54h ; 'T'
BA2A                         jp      z, do_sound
BA2D                         cp      5Ah ; 'Z'
BA2F                         jp      z, do_sound
BA32                         cp      60h ; '`'
BA34                         ret     nz
BA35                         ld      c, 20
BA37                         rst     dispatch_sound
BA38                         ld      (ix+0), 2
BA3C                         ld      (ix+1), 0
BA40                         ld      (ix+2), 0F9h
BA44                         rst     random_number
BA45                         and     1
BA47                         ld      (ix+5), a
BA4A                         ld      (ix+3), a
BA4D                         or      a
BA4E                         jp      z, loc_BB2A
BA51                         ld      (ix+2), 14h
BA55                         jp      loc_BB2A
BA58 ; ---------------------------------------------------------------------------
BA58
BA58 loc_BA58:                                                   ; BA05
BA58                         ld      a, (ix+4)
BA5B                         cp      2
BA5D                         ld      b, 1
BA5F                         jr      c, loc_BA69
BA61                         dec     a
BA62                         ld      b, a
BA63                         cp      7
BA65                         jr      c, loc_BA69
BA67                         ld      b, 7
BA69
BA69 loc_BA69:                                                   ; BA5F BA65
BA69                         ld      a, (ix+5)
BA6C                         or      a
BA6D                         jr      z, loc_BA73
BA6F                         ld      a, b
BA70                         neg
BA72                         ld      b, a
BA73
BA73 loc_BA73:                                                   ; BA6D
BA73                         call    sub_BA7C
BA76                         call    sub_BC60
BA79                         jp      loc_BB2A
BA79 ; END OF FUNCTION CHUNK FOR sub_B663
BA7C
BA7C ; =============== S U B R O U T I N E =======================================
BA7C
BA7C
BA7C sub_BA7C:                                                   ; loc_BA73↑p
BA7C
BA7C ; FUNCTION CHUNK AT BBDA SIZE 00000026 BYTES
BA7C
BA7C                         ld      a, (ix+2)
BA7F                         add     a, b
BA80                         ld      (ix+2), a
BA83                         ld      b, a
BA84                         ld      a, (ix+3)
BA87                         or      a
BA88                         jr      z, loc_BAA6
BA8A                         ld      a, (ix+5)
BA8D                         or      a
BA8E                         jr      nz, loc_BA9A
BA90                         ld      a, b
BA91                         cp      40h ; '@'
BA93                         ret     nc
BA94                         cp      11h
BA96                         ret     c
BA97                         jp      loc_BBDA
BA9A ; ---------------------------------------------------------------------------
BA9A
BA9A loc_BA9A:                                                   ; BA8E
BA9A                         ld      a, b
BA9B                         cp      7Ch ; '|'
BA9D                         ret     nc
BA9E                         cp      40h ; '@'
BAA0                         ret     c
BAA1                         ld      (ix+3), 0
BAA5                         ret
BAA6 ; ---------------------------------------------------------------------------
BAA6
BAA6 loc_BAA6:                                                   ; BA88
BAA6                         ld      a, (ix+5)
BAA9                         or      a
BAAA                         jr      z, loc_BAB6
BAAC                         ld      a, b
BAAD                         cp      0C0h
BAAF                         ret     c
BAB0                         cp      0E8h
BAB2                         ret     nc
BAB3                         jp      loc_BBDA
BAB6 ; ---------------------------------------------------------------------------
BAB6
BAB6 loc_BAB6:                                                   ; BAAA
BAB6                         ld      a, b
BAB7                         cp      84h
BAB9                         ret     c
BABA                         cp      0C0h
BABC                         ret     nc
BABD                         ld      (ix+3), 1
BAC1                         ret
BAC1 ; End of function sub_BA7C
BAC1
BAC2 ; ---------------------------------------------------------------------------
BAC2 ; START OF FUNCTION CHUNK FOR sub_B663
BAC2
BAC2 loc_BAC2:                                                   ; BA02
BAC2                         ld      a, (ix+1)
BAC5                         inc     a
BAC6                         ld      (ix+1), a
BAC9                         cp      15h
BACB                         jp      z, loc_BBDA
BACE                         jp      loc_BAD1
BAD1 ; ---------------------------------------------------------------------------
BAD1
BAD1 loc_BAD1:                                                   ; BACE
BAD1                         ld      iy, sprite105_y
BAD5                         ld      de, 4
BAD8                         ld      a, (ix+5)
BADB                         or      a
BADC                         jr      nz, loc_BAE5
BADE                         ld      de, 0FFFCh                  ; -4 for back one sprite
BAE1                         ld      iy, sprite107_y
BAE5
BAE5 loc_BAE5:                                                   ; BADC
BAE5                         ld      a, (ix+1)
BAE8                         call    sub_BAFE
BAEB                         ld      a, (ix+1)
BAEE                         sub     3
BAF0                         ret     c
BAF1                         add     iy, de
BAF3                         call    sub_BAFE
BAF6                         ld      a, (ix+1)
BAF9                         sub     6
BAFB                         ret     c
BAFC                         add     iy, de
BAFC ; END OF FUNCTION CHUNK FOR sub_B663
BAFE
BAFE ; =============== S U B R O U T I N E =======================================
BAFE
BAFE
BAFE sub_BAFE:                                                   ; BAE8↑p BAF3↑p
BAFE                         cp      4
BB00                         ld      b, 0F7h
BB02                         ld      (iy+1), 3
BB06                         ld      (iy+0Dh), 13h
BB0A                         ld      (iy+0), 14h
BB0E                         ld      (iy+0Ch), 14h
BB12                         jp      c, loc_BB23
BB15                         cp      8
BB17                         ld      b, 0F8h
BB19                         jr      c, loc_BB23
BB1B                         ld      b, 0F9h
BB1D                         cp      0Fh
BB1F                         jr      c, loc_BB23
BB21                         ld      b, 0
BB23
BB23 loc_BB23:                                                   ; BB12 BB19 
BB23                         ld      (iy+2), b
BB26                         ld      (iy+0Eh), b
BB29                         ret
BB29 ; End of function sub_BAFE
BB29
BB2A ; ---------------------------------------------------------------------------
BB2A ; START OF FUNCTION CHUNK FOR sub_B663
BB2A
BB2A loc_BB2A:                                                   ; BA4E BA55 
BB2A                         ld      a, (ix+0)
BB2D                         or      a
BB2E                         jp      z, loc_BBDA
BB31                         cp      1
BB33                         jp      z, loc_BBDA
BB36                         ld      iy, sprite105_y
BB3A                         ld      a, 26h ; '&'
BB3C                         call    sub_BB65
BB3F                         call    sub_BB4C
BB42                         ld      a, (ix+2)
BB45                         call    sub_BB7E
BB48                         call    sub_BB9A
BB4B                         ret
BB4B ; END OF FUNCTION CHUNK FOR sub_B663
BB4C
BB4C ; =============== S U B R O U T I N E =======================================
BB4C
BB4C
BB4C sub_BB4C:                                                   ; BB3F↑p
BB4C                         ld      (iy+1), 13h
BB50                         ld      (iy+5), 3
BB54                         ld      (iy+9), 3
BB58                         ld      (iy+0Dh), 13h
BB5C                         ld      (iy+11h), 3
BB60                         ld      (iy+15h), 3
BB64                         ret
BB64 ; End of function sub_BB4C
BB64
BB65
BB65 ; =============== S U B R O U T I N E =======================================
BB65
BB65
BB65 sub_BB65:                                                   ; BB3C↑p
BB65                         ld      (iy+0), 26h ; '&'
BB69                         ld      (iy+4), 26h ; '&'
BB6D                         ld      (iy+8), 26h ; '&'
BB71                         ld      (iy+0Ch), 16h
BB75                         ld      (iy+10h), 16h
BB79                         ld      (iy+14h), 16h
BB7D                         ret
BB7D ; End of function sub_BB65
BB7D
BB7E
BB7E ; =============== S U B R O U T I N E =======================================
BB7E
BB7E
BB7E sub_BB7E:                                                   ; BB45↑p
BB7E                         sub     8
BB80                         ld      (iy+7), a
BB83                         ld      (iy+13h), a
BB86                         sub     10h
BB88                         ld      (iy+3), a
BB8B                         ld      (iy+0Fh), a
BB8E                         add     a, 20h ; ' '
BB90                         ld      (iy+0Bh), a
BB93                         ld      (iy+17h), a
BB96                         ret
BB96 ; End of function sub_BB7E
BB96
BB97 ; ---------------------------------------------------------------------------
BB97                         sub     10h
BB99                         ret
BB9A
BB9A ; =============== S U B R O U T I N E =======================================
BB9A
BB9A
BB9A sub_BB9A:                                                   ; BB48↑p
BB9A                         call    sub_BC00
BB9D                         jr      z, loc_BBAC
BB9F                         ld      b, 0BFh
BBA1                         ld      c, 0C1h
BBA3                         ld      a, (ix+8)
BBA6                         bit     0, a
BBA8                         jr      z, loc_BBAC
BBAA                         ld      c, 0D3h
BBAC
BBAC loc_BBAC:                                                   ; BB9D BBA8
BBAC                         ld      (iy+2), b
BBAF                         ld      (iy+0Eh), c
BBB2                         call    sub_BC26
BBB5                         jr      z, loc_BBBB
BBB7                         ld      b, 0BEh
BBB9                         ld      c, 0C0h
BBBB
BBBB loc_BBBB:                                                   ; BBB5
BBBB                         ld      (iy+6), b
BBBE                         ld      (iy+12h), c
BBC1                         call    sub_BC43
BBC4                         jr      z, loc_BBD3
BBC6                         ld      b, 0BFh
BBC8                         ld      c, 0C1h
BBCA                         ld      a, (ix+8)
BBCD                         bit     1, a
BBCF                         jr      z, loc_BBD3
BBD1                         ld      c, 0D3h
BBD3
BBD3 loc_BBD3:                                                   ; BBC4 BBCF
BBD3                         ld      (iy+0Ah), b
BBD6                         ld      (iy+16h), c
BBD9                         ret
BBD9 ; End of function sub_BB9A
BBD9
BBDA ; ---------------------------------------------------------------------------
BBDA ; START OF FUNCTION CHUNK FOR sub_BA7C
BBDA ;   ADDITIONAL PARENT FUNCTION sub_B663
BBDA
BBDA loc_BBDA:                                                   ; BA97 BAB3 
BBDA                         ld      c, 4
BBDC                         rst     dispatch_sound
BBDD                         ld      iy, sprite105_y
BBE1                         ld      b, 6
BBE3                         rst     do_sprite_clear_loop
BBE4                         ld      (ix+0), 1
BBE8                         ld      (ix+1), 0
BBEC                         ld      (ix+6), 0
BBF0                         rst     random_number
BBF1                         and     1
BBF3                         add     a, 2
BBF5                         ld      (ix+7), a
BBF8                         ld      (ix+0), 0
BBFC                         call    sub_B964
BBFF                         ret
BBFF ; END OF FUNCTION CHUNK FOR sub_BA7C
BC00
BC00 ; =============== S U B R O U T I N E =======================================
BC00
BC00
BC00 sub_BC00:                                                   ; sub_BB9A↑p
BC00                         ld      a, (ix+3)
BC03                         or      a
BC04                         ld      a, (ix+2)
BC07                         jr      z, loc_BC13
BC09                         cp      18h
BC0B                         jr      c, loc_BC1D
BC0D                         cp      40h ; '@'
BC0F                         jr      nc, loc_BC1D
BC11                         jr      loc_BC21
BC13 ; ---------------------------------------------------------------------------
BC13
BC13 loc_BC13:                                                   ; BC07
BC13                         cp      90h
BC15                         jr      nc, loc_BC21
BC17                         cp      14h
BC19                         jr      c, loc_BC21
BC1B                         jr      loc_BC1D
BC1D ; ---------------------------------------------------------------------------
BC1D
BC1D loc_BC1D:                                                   ; BC0B BC0F 
BC1D                         ld      a, 1
BC1F                         or      a
BC20                         ret
BC21 ; ---------------------------------------------------------------------------
BC21
BC21 loc_BC21:                                                   ; BC11 BC15 
BC21                         ld      bc, 0
BC24                         xor     a
BC25                         ret
BC25 ; End of function sub_BC00
BC25
BC26
BC26 ; =============== S U B R O U T I N E =======================================
BC26
BC26
BC26 sub_BC26:                                                   ; BBB2↑p
BC26                         ld      a, (ix+3)
BC29                         or      a
BC2A                         ld      a, (ix+2)
BC2D                         jr      z, loc_BC39
BC2F                         cp      40h ; '@'
BC31                         jr      nc, loc_BC1D
BC33                         cp      8
BC35                         jr      c, loc_BC1D
BC37                         jr      loc_BC21
BC39 ; ---------------------------------------------------------------------------
BC39
BC39 loc_BC39:                                                   ; BC2D
BC39                         cp      8
BC3B                         jr      c, loc_BC21
BC3D                         cp      0A0h
BC3F                         jr      c, loc_BC1D
BC41                         jr      loc_BC21
BC41 ; End of function sub_BC26
BC41
BC43
BC43 ; =============== S U B R O U T I N E =======================================
BC43
BC43
BC43 sub_BC43:                                                   ; BBC1↑p
BC43                         ld      a, (ix+3)
BC46                         or      a
BC47                         ld      a, (ix+2)
BC4A                         jr      z, loc_BC56
BC4C                         cp      0F8h
BC4E                         jr      nc, loc_BC21
BC50                         cp      30h ; '0'
BC52                         jr      nc, loc_BC1D
BC54                         jr      loc_BC21
BC56 ; ---------------------------------------------------------------------------
BC56
BC56 loc_BC56:                                                   ; BC4A
BC56                         cp      0F8h
BC58                         jr      nc, loc_BC1D
BC5A                         cp      0A0h
BC5C                         jr      c, loc_BC1D
BC5E                         jr      loc_BC21
BC5E ; End of function sub_BC43
BC5E
BC60
BC60 ; =============== S U B R O U T I N E =======================================
BC60
BC60
BC60 sub_BC60:                                                   ; BA76↑p
BC60                         ld      iy, Ralph_data
BC64                         call    sub_BC80
BC67                         ld      a, (byte_E025)
BC6A                         or      a
BC6B                         ret     nz
BC6C                         ld      iy, Lizzie_data
BC70                         call    sub_BC80
BC73                         ld      a, (byte_E025)
BC76                         or      a
BC77                         ret     nz
BC78                         ld      iy, George_data
BC7C                         call    sub_BC80
BC7F                         ret
BC7F ; End of function sub_BC60
BC7F
BC80
BC80 ; =============== S U B R O U T I N E =======================================
BC80
BC80
BC80 sub_BC80:                                                   ; BC64↑p BC70↑p 
BC80                         xor     a
BC81                         ld      (byte_E025), a
BC84                         ld      a, (iy+1)
BC87                         cp      2
BC89                         ret     nz
BC8A                         ld      a, (iy+21h)
BC8D                         cp      2
BC8F                         ret     c
BC90                         ld      a, (iy+33h)
BC93                         cp      1Ch
BC95                         ret     nc
BC96                         ld      a, (iy+1Dh)
BC99                         or      a
BC9A                         ld      b, 0
BC9C                         ld      a, (iy+32h)
BC9F                         sub     (ix+2)
BCA2                         jr      nc, loc_BCA8
BCA4                         ld      b, 1
BCA6                         neg
BCA8
BCA8 loc_BCA8:                                                   ; BCA2
BCA8                         cp      18h
BCAA                         ret     nc
BCAB                         ld      a, b
BCAC                         or      a
BCAD                         ld      a, (ix+8)
BCB0                         jr      nz, loc_BCB6
BCB2                         set     1, a
BCB4                         jr      loc_BCB8
BCB6 ; ---------------------------------------------------------------------------
BCB6
BCB6 loc_BCB6:                                                   ; BCB0
BCB6                         set     0, a
BCB8
BCB8 loc_BCB8:                                                   ; BCB4
BCB8                         ld      (ix+8), a
BCBB                         ld      a, (ix+4)
BCBE                         cp      9
BCC0                         jr      c, loc_BCD4
BCC2                         ld      (ix+0), 59h ; 'Y'
BCC6                         ld      (iy+21h), 2
BCCA                         ld      hl, score_1000
BCCD                         call    score_add_saveREGs
BCD0                         ld      c, 78
BCD2                         rst     dispatch_sound
BCD3                         ret
BCD4 ; ---------------------------------------------------------------------------
BCD4
BCD4 loc_BCD4:                                                   ; BCC0
BCD4                         ld      (iy+21h), 1
BCD8                         ld      a, 1
BCDA                         ld      (byte_E025), a
BCDD                         ld      hl, score_500
BCE0                         call    score_add_saveREGs
BCE3                         ld      a, (iy+1Dh)
BCE6                         cp      (ix+5)
BCE9                         jr      nz, loc_BD18
BCEB                         ld      a, (ix+4)
BCEE                         add     a, 2
BCF0                         ld      (ix+4), a
BCF3
BCF3 loc_BCF3:                                                   ; BD22↓j
BCF3                         ld      c, 4
BCF5                         rst     dispatch_sound
BCF6                         ld      c, 64
BCF8                         rst     dispatch_sound
BCF9                         ld      c, 20
BCFB                         ld      a, (ix+4)
BCFE                         cp      2
BD00                         jp      c, do_sound
BD03                         inc     c
BD04                         cp      3
BD06                         jp      c, do_sound
BD09                         inc     c
BD0A                         cp      4
BD0C                         jp      c, do_sound
BD0F                         inc     c
BD10                         cp      5
BD12                         jp      c, do_sound
BD15                         inc     c
BD16                         rst     dispatch_sound
BD17                         ret
BD18 ; ---------------------------------------------------------------------------
BD18
BD18 loc_BD18:                                                   ; BCE9
BD18                         ld      (ix+5), a
BD1B                         ld      a, (ix+4)
BD1E                         inc     a
BD1F                         ld      (ix+4), a
BD22                         jr      loc_BCF3
BD22 ; End of function sub_BC80
BD22
BD24
BD24 ; =============== S U B R O U T I N E =======================================
BD24
BD24
BD24 sub_BD24:                                                   ; 09AF↑p
BD24                         ld      a, (unk_E037)
BD27                         cp      3
BD29                         call    c, sub_C2BB
BD2C                         ld      ix, unk_E361
BD30                         ld      b, 3
BD32
BD32 loc_BD32:                                                   ; BD46↓j
BD32                         push    bc
BD33                         push    ix
BD35                         ld      a, 3
BD37                         sub     b
BD38                         ld      (ix+0Ch), a
BD3B                         call    sub_BD7E
BD3E                         pop     ix
BD40                         ld      de, 18h
BD43                         add     ix, de
BD45                         pop     bc
BD46                         djnz    loc_BD32
BD48                         ld      ix, unk_E361
BD4C                         ld      b, 3
BD4E                         ld      de, 18h
BD51
BD51 loc_BD51:                                                   ; BD61↓j
BD51                         ld      a, (ix+0)
BD54                         or      a
BD55                         jr      z, loc_BD5F
BD57                         cp      11h
BD59                         jr      z, loc_BD5F
BD5B                         cp      12h
BD5D                         jr      nz, loc_BD70
BD5F
BD5F loc_BD5F:                                                   ; BD55 BD59
BD5F                         add     ix, de
BD61                         djnz    loc_BD51
BD63                         ld      a, (unk_E012)
BD66                         or      a
BD67                         ret     z
BD68                         xor     a
BD69                         ld      (unk_E012), a
BD6C                         ld      c, 1
BD6E                         rst     dispatch_sound
BD6F                         ret
BD70 ; ---------------------------------------------------------------------------
BD70
BD70 loc_BD70:                                                   ; BD5D
BD70                         ld      a, (unk_E012)
BD73                         or      a
BD74                         ret     nz
BD75                         ld      a, 1
BD77                         ld      (unk_E012), a
BD7A                         ld      c, 16
BD7C                         rst     dispatch_sound
BD7D                         ret
BD7D ; End of function sub_BD24
BD7D
BD7E
BD7E ; =============== S U B R O U T I N E =======================================
BD7E
BD7E
BD7E sub_BD7E:                                                   ; BD3B↑p
BD7E                         call    sub_C434
BD81                         call    sub_C112
BD84                         ld      a, (ix+0)
BD87                         cp      0
BD89                         ret     z
BD8A                         call    sub_BD91
BD8D                         call    sub_C368
BD90                         ret
BD90 ; End of function sub_BD7E
BD90
BD91
BD91 ; =============== S U B R O U T I N E =======================================
BD91
BD91
BD91 sub_BD91:                                                   ; BD8A↑p
BD91
BD91 ; FUNCTION CHUNK AT BF6A SIZE 0000000D BYTES
BD91 ; FUNCTION CHUNK AT BFB0 SIZE 00000029 BYTES
BD91 ; FUNCTION CHUNK AT C036 SIZE 0000001A BYTES
BD91 ; FUNCTION CHUNK AT C054 SIZE 0000002C BYTES
BD91 ; FUNCTION CHUNK AT C0C0 SIZE 0000001E BYTES
BD91 ; FUNCTION CHUNK AT C0DF SIZE 00000022 BYTES
BD91 ; FUNCTION CHUNK AT C102 SIZE 00000010 BYTES
BD91
BD91                         ld      a, (ix+1)
BD94                         cp      5
BD96                         jr      z, loc_BDCB
BD98                         jr      loc_BD9A
BD9A ; ---------------------------------------------------------------------------
BD9A
BD9A loc_BD9A:                                                   ; BD98
BD9A                         ld      a, (ix+0)
BD9D                         cp      11h
BD9F                         jp      z, loc_BDFD
BDA2                         cp      21h ; '!'
BDA4                         jp      z, locret_BDFC
BDA7                         cp      12h
BDA9                         jp      z, loc_BE1D
BDAC                         cp      22h ; '"'
BDAE                         jp      z, locret_BDFC
BDB1                         cp      13h
BDB3                         jp      z, loc_BE7D
BDB6                         cp      14h
BDB8                         jp      z, loc_BFC4
BDBB                         cp      15h
BDBD                         jp      z, loc_C054
BDC0                         cp      16h
BDC2                         jp      z, loc_C0E9
BDC5                         cp      0FFh
BDC7                         jp      z, loc_C102
BDCA                         ret
BDCB ; ---------------------------------------------------------------------------
BDCB
BDCB loc_BDCB:                                                   ; BD96
BDCB                         ld      a, (ix+0)
BDCE                         cp      11h
BDD0                         jp      z, loc_BDFD
BDD3                         cp      21h ; '!'
BDD5                         jp      z, locret_BDFC
BDD8                         cp      12h
BDDA                         jp      z, loc_BE1D
BDDD                         cp      22h ; '"'
BDDF                         jp      z, locret_BDFC
BDE2                         cp      13h
BDE4                         jp      z, loc_BEDF
BDE7                         cp      14h
BDE9                         jp      z, loc_BFB0
BDEC                         cp      15h
BDEE                         jp      z, loc_C036
BDF1                         cp      16h
BDF3                         jp      z, loc_C0C0
BDF6                         cp      0FFh
BDF8                         jp      z, loc_C102
BDFB                         ret
BDFC ; ---------------------------------------------------------------------------
BDFC
BDFC locret_BDFC:                                                ; BDA4 BDAE 
BDFC                         ret
BDFD ; ---------------------------------------------------------------------------
BDFD
BDFD loc_BDFD:                                                   ; BD9F BDD0
BDFD                         ld      a, (ix+3)
BE00                         or      a
BE01                         ld      a, (ix+4)
BE04                         jr      z, loc_BE15
BE06                         or      a
BE07                         ret     nz
BE08                         ld      (ix+0), 12h
BE0C                         ld      (ix+8), 0
BE10                         ld      (ix+9), 0
BE14                         ret
BE15 ; ---------------------------------------------------------------------------
BE15
BE15 loc_BE15:                                                   ; BE04
BE15                         cp      80h
BE17                         ret     nz
BE18                         ld      (ix+3), 1
BE1C                         ret
BE1D ; ---------------------------------------------------------------------------
BE1D
BE1D loc_BE1D:                                                   ; BDA9 BDDA
BE1D                         ld      a, (byte_E021)
BE20                         or      a
BE21                         ret     nz
BE22                         ld      a, (ix+2)
BE25                         dec     a
BE26                         ld      (ix+2), a
BE29                         ret     nz
BE2A                         ld      a, (ix+10h)
BE2D                         xor     1
BE2F                         ld      (ix+10h), a
BE32                         ld      (ix+0), 13h
BE36                         ld      (ix+3), 0
BE3A                         ld      (ix+13h), 0
BE3E                         ld      (ix+0Dh), 0
BE42                         call    sub_C3C5
BE45                         ld      b, 8
BE47                         ld      a, (ix+0Ch)
BE4A                         or      a
BE4B                         jr      nz, loc_BE4F
BE4D                         ld      b, 20h ; ' '
BE4F
BE4F loc_BE4F:                                                   ; BE4B
BE4F                         ld      a, (ix+0Fh)
BE52                         add     a, b
BE53                         ld      (ix+6), a
BE56                         ld      a, (ix+1)
BE59                         cp      5
BE5B                         jr      z, loc_BE6E
BE5D                         ld      a, (unk_E004)
BE60                         inc     a
BE61                         and     3
BE63                         ld      (unk_E004), a
BE66                         ret     nz
BE67                         ld      a, (unk_E011)
BE6A                         ld      (ix+6), a
BE6D                         ret
BE6E ; ---------------------------------------------------------------------------
BE6E
BE6E loc_BE6E:                                                   ; BE5B
BE6E                         ld      a, (unk_E011)
BE71                         add     a, 30h ; '0'
BE73                         cp      0D0h
BE75                         jr      c, loc_BE79
BE77                         ld      a, 0D0h
BE79
BE79 loc_BE79:                                                   ; BE75
BE79                         ld      (ix+6), a
BE7C                         ret
BE7D ; ---------------------------------------------------------------------------
BE7D
BE7D loc_BE7D:                                                   ; BDB3
BE7D                         ld      a, (ix+14h)
BE80                         or      a
BE81                         jr      nz, loc_BEAC
BE83                         call    sub_BF7C
BE86                         ld      a, (ix+3)
BE89                         or      a
BE8A                         jp      z, loc_BF6A
BE8D                         call    sub_BF46
BE90                         ld      a, (ix+13h)
BE93                         or      a
BE94                         jp      z, loc_BF19
BE97                         ld      a, (ix+0Eh)
BE9A                         and     0FEh
BE9C                         ld      b, a
BE9D                         ld      a, (ix+4)
BEA0                         and     0FEh
BEA2                         sub     b
BEA3                         cp      40h ; '@'
BEA5                         jr      z, loc_BECF
BEA7                         cp      0C0h
BEA9                         jr      z, loc_BECF
BEAB                         ret
BEAC ; ---------------------------------------------------------------------------
BEAC
BEAC loc_BEAC:                                                   ; BE81 BEE3↓j 
BEAC                         ld      a, (ix+14h)
BEAF                         bit     7, a
BEB1                         jr      nz, loc_BEB8
BEB3                         dec     a
BEB4                         ld      (ix+14h), a
BEB7                         ret
BEB8 ; ---------------------------------------------------------------------------
BEB8
BEB8 loc_BEB8:                                                   ; BEB1
BEB8                         dec     a
BEB9                         ld      (ix+14h), a
BEBC                         and     0Fh
BEBE                         ret     nz
BEBF                         ld      (ix+14h), 8
BEC3                         ld      a, (ix+10h)
BEC6                         xor     1
BEC8                         ld      (ix+10h), a
BECB                         call    sub_BF77
BECE                         ret
BECF ; ---------------------------------------------------------------------------
BECF
BECF loc_BECF:                                                   ; BEA5 BEA9
BECF                         ld      (ix+0Dh), 0Fh
BED3                         ld      (ix+0), 14h
BED7                         ld      (ix+14h), 8
BEDB                         call    sub_C3D6
BEDE                         ret
BEDF ; ---------------------------------------------------------------------------
BEDF
BEDF loc_BEDF:                                                   ; BDE4
BEDF                         ld      a, (ix+14h)
BEE2                         or      a
BEE3                         jr      nz, loc_BEAC
BEE5                         call    sub_BF81
BEE8                         ld      a, (ix+3)
BEEB                         or      a
BEEC                         jp      z, loc_BF6A
BEEF                         call    sub_BF46
BEF2                         ld      a, (ix+13h)
BEF5                         or      a
BEF6                         jp      z, loc_BF19
BEF9                         call    sub_C3D6
BEFC                         ld      a, (ix+0Eh)
BEFF                         and     0FEh
BF01                         ld      b, a
BF02                         ld      a, (ix+4)
BF05                         and     0FEh
BF07                         sub     b
BF08                         ret     nz
BF09                         ld      (ix+0Dh), 5
BF0D                         ld      (ix+0), 14h
BF11                         ld      (ix+14h), 8
BF15                         call    sub_BF77
BF18                         ret
BF19 ; ---------------------------------------------------------------------------
BF19
BF19 loc_BF19:                                                   ; BE94 BEF6
BF19                         ld      a, (ix+0Dh)
BF1C                         or      a
BF1D                         jr      nz, loc_BF41
BF1F                         ld      a, (ix+0Eh)
BF22                         and     0FCh
BF24                         ld      b, a
BF25                         ld      a, (ix+4)
BF28                         and     0FCh
BF2A                         sub     b
BF2B                         jp      z, loc_BF39
BF2E                         ld      a, (ix+10h)
BF31                         jr      c, loc_BF37
BF33                         or      a
BF34                         ret     nz
BF35                         jr      loc_BF39
BF37 ; ---------------------------------------------------------------------------
BF37
BF37 loc_BF37:                                                   ; BF31
BF37                         or      a
BF38                         ret     z
BF39
BF39 loc_BF39:                                                   ; BF2B BF35
BF39                         ld      (ix+13h), 0FFh
BF3D                         call    sub_C3D6
BF40                         ret
BF41 ; ---------------------------------------------------------------------------
BF41
BF41 loc_BF41:                                                   ; BF1D BFBE↓j 
BF41                         dec     a
BF42                         ld      (ix+0Dh), a
BF45                         ret
BF45 ; End of function sub_BD91
BF45
BF46
BF46 ; =============== S U B R O U T I N E =======================================
BF46
BF46
BF46 sub_BF46:                                                   ; BE8D↑p BEEF↑p
BF46                         ld      a, (ix+4)
BF49                         cp      2Ch ; ','
BF4B                         jr      c, loc_BF5D
BF4D                         cp      0ECh
BF4F                         ret     c
BF50                         ld      a, (ix+10h)
BF53                         or      a
BF54                         ret     nz
BF55                         ld      (ix+14h), 88h
BF59                         call    sub_BF86
BF5C                         ret
BF5D ; ---------------------------------------------------------------------------
BF5D
BF5D loc_BF5D:                                                   ; BF4B
BF5D                         ld      a, (ix+10h)
BF60                         or      a
BF61                         ret     z
BF62                         ld      (ix+14h), 88h
BF66                         call    sub_BF86
BF69                         ret
BF69 ; End of function sub_BF46
BF69
BF6A ; ---------------------------------------------------------------------------
BF6A ; START OF FUNCTION CHUNK FOR sub_BD91
BF6A
BF6A loc_BF6A:                                                   ; BE8A BEEC
BF6A                         ld      a, (ix+4)
BF6D                         cp      20h ; ' '
BF6F                         ret     c
BF70                         cp      0E0h
BF72                         ret     nc
BF73                         ld      (ix+3), a
BF76                         ret
BF76 ; END OF FUNCTION CHUNK FOR sub_BD91
BF77
BF77 ; =============== S U B R O U T I N E =======================================
BF77
BF77
BF77 sub_BF77:                                                   ; BECB↑p BF15↑p 
BF77                         ld      hl, 0
BF7A                         jr      loc_BF90
BF7A ; End of function sub_BF77
BF7A
BF7C
BF7C ; =============== S U B R O U T I N E =======================================
BF7C
BF7C
BF7C sub_BF7C:                                                   ; BE83↑p C0CD↓p 
BF7C                         ld      hl, 200h
BF7F                         jr      loc_BF89
BF7F ; End of function sub_BF7C
BF7F
BF81
BF81 ; =============== S U B R O U T I N E =======================================
BF81
BF81
BF81 sub_BF81:                                                   ; BEE5↑p C062↓p
BF81                         ld      hl, 200h
BF84                         jr      loc_BF89
BF84 ; End of function sub_BF81
BF84
BF86
BF86 ; =============== S U B R O U T I N E =======================================
BF86
BF86
BF86 sub_BF86:                                                   ; BF59↑p BF66↑p
BF86                         ld      hl, 100h
BF89
BF89 loc_BF89:                                                   ; BF7F BF84
BF89                         ld      a, (ix+10h)
BF8C                         or      a
BF8D                         call    nz, negate_hl
BF90
BF90 loc_BF90:                                                   ; BF7A
BF90                         ld      (ix+8), h
BF93                         ld      (ix+9), l
BF96                         ret
BF96 ; End of function sub_BF86
BF96
BF97
BF97 ; =============== S U B R O U T I N E =======================================
BF97
BF97
BF97 sub_BF97:                                                   ; C019↓p C02F↓p 
BF97                         ld      hl, 0
BF9A                         jr      loc_BFA9
BF9A ; End of function sub_BF97
BF9A
BF9C ; ---------------------------------------------------------------------------
BF9C ; START OF FUNCTION CHUNK FOR sub_BFD9
BF9C ;   ADDITIONAL PARENT FUNCTION sub_C01D
BF9C
BF9C loc_BF9C:                                                   ; BFF9↓j C024↓j
BF9C                         ld      hl, 100h
BF9F                         jr      loc_BFA9
BF9F ; END OF FUNCTION CHUNK FOR sub_BFD9
BFA1
BFA1 ; =============== S U B R O U T I N E =======================================
BFA1
BFA1
BFA1 sub_BFA1:                                                   ; C065↓p
BFA1                         ld      hl, 0FF00h
BFA4                         jr      loc_BFA9
BFA6 ; ---------------------------------------------------------------------------
BFA6
BFA6 loc_BFA6:                                                   ; C000↓j
BFA6                         ld      hl, 0FF00h
BFA9
BFA9 loc_BFA9:                                                   ; BF9A BF9F 
BFA9                         ld      (ix+0Ah), h
BFAC                         ld      (ix+0Bh), l
BFAF                         ret
BFAF ; End of function sub_BFA1
BFAF
BFB0 ; ---------------------------------------------------------------------------
BFB0 ; START OF FUNCTION CHUNK FOR sub_BD91
BFB0
BFB0 loc_BFB0:                                                   ; BDE9
BFB0                         ld      a, (ix+14h)
BFB3                         or      a
BFB4                         jp      nz, loc_BEAC
BFB7                         call    sub_BF77
BFBA                         ld      a, (ix+0Dh)
BFBD                         or      a
BFBE                         jr      nz, loc_BF41
BFC0                         call    sub_C01D
BFC3                         ret
BFC4 ; ---------------------------------------------------------------------------
BFC4
BFC4 loc_BFC4:                                                   ; BDB8
BFC4                         ld      a, (ix+14h)
BFC7                         or      a
BFC8                         jp      nz, loc_BEAC
BFCB                         call    sub_BF77
BFCE                         ld      a, (ix+0Dh)
BFD1                         or      a
BFD2                         jp      nz, loc_BF41
BFD5                         call    sub_BFD9
BFD8                         ret
BFD8 ; END OF FUNCTION CHUNK FOR sub_BD91
BFD9
BFD9 ; =============== S U B R O U T I N E =======================================
BFD9
BFD9
BFD9 sub_BFD9:                                                   ; BFD5↑p
BFD9
BFD9 ; FUNCTION CHUNK AT BF9C SIZE 00000005 BYTES
BFD9
BFD9                         ld      a, (ticker_countup)
BFDC                         and     7
BFDE                         call    z, sub_C3D6
BFE1                         ld      a, (ix+0Fh)
BFE4                         add     a, 30h ; '0'
BFE6                         jr      c, loc_BFEC
BFE8                         cp      0ECh
BFEA                         jr      c, loc_BFEE
BFEC
BFEC loc_BFEC:                                                   ; BFE6
BFEC                         ld      a, 0ECh
BFEE
BFEE loc_BFEE:                                                   ; BFEA
BFEE                         ld      b, a
BFEF                         ld      a, (ix+6)
BFF2                         sub     b
BFF3                         jr      nc, loc_BFFC
BFF5                         and     0FCh
BFF7                         jr      z, loc_C003
BFF9                         jp      loc_BF9C
BFFC ; ---------------------------------------------------------------------------
BFFC
BFFC loc_BFFC:                                                   ; BFF3
BFFC                         and     0FCh
BFFE                         jr      z, loc_C003
C000                         jp      loc_BFA6
C003 ; ---------------------------------------------------------------------------
C003
C003 loc_C003:                                                   ; BFF7 BFFE
C003                         ld      (ix+0), 15h
C007                         ld      a, (ix+4)
C00A                         sub     (ix+0Eh)
C00D                         ld      a, 1
C00F                         jr      nc, loc_C012
C011                         xor     a
C012
C012 loc_C012:                                                   ; C00F
C012                         ld      (ix+10h), a
C015                         ld      (ix+14h), 8
C019                         call    sub_BF97
C01C                         ret
C01C ; End of function sub_BFD9
C01C
C01D
C01D ; =============== S U B R O U T I N E =======================================
C01D
C01D
C01D sub_C01D:                                                   ; BFC0↑p
C01D
C01D ; FUNCTION CHUNK AT BF9C SIZE 00000005 BYTES
C01D
C01D                         ld      a, (ix+6)
C020                         sub     0E0h
C022                         jr      nc, loc_C027
C024                         jp      loc_BF9C
C027 ; ---------------------------------------------------------------------------
C027
C027 loc_C027:                                                   ; C022
C027                         ld      (ix+0), 15h
C02B                         ld      (ix+0Dh), 1Eh
C02F                         call    sub_BF97
C032                         call    sub_BF77
C035                         ret
C035 ; End of function sub_C01D
C035
C036 ; ---------------------------------------------------------------------------
C036 ; START OF FUNCTION CHUNK FOR sub_BD91
C036
C036 loc_C036:                                                   ; BDEE
C036                         ld      a, (byte_E021)
C039                         or      a
C03A                         jp      nz, loc_C047
C03D                         ld      a, (ix+0Dh)
C040                         or      a
C041                         jp      nz, loc_BF41
C044                         call    sub_C050
C047
C047 loc_C047:                                                   ; C03A
C047                         ld      (ix+0Dh), 1Eh
C04B                         ld      (ix+0), 16h
C04F                         ret
C04F ; END OF FUNCTION CHUNK FOR sub_BD91
C050
C050 ; =============== S U B R O U T I N E =======================================
C050
C050
C050 sub_C050:                                                   ; C044↑p
C050                         call    sub_3FE8
C053                         ret
C053 ; End of function sub_C050
C053
C054 ; ---------------------------------------------------------------------------
C054 ; START OF FUNCTION CHUNK FOR sub_BD91
C054
C054 loc_C054:                                                   ; BDBD
C054                         ld      a, (byte_E021)
C057                         or      a
C058                         jp      nz, sub_C080
C05B                         ld      a, (ix+14h)
C05E                         or      a
C05F                         jp      nz, loc_BEAC
C062                         call    sub_BF81
C065                         call    sub_BFA1
C068                         call    sub_C088
C06B                         ld      a, (ix+6)
C06E                         cp      2Ch ; ','
C070                         jr      c, sub_C080
C072                         ld      a, (ix+4)
C075                         cp      3
C077                         jp      c, loc_C13F
C07A                         cp      0FDh
C07C                         ret     c
C07D                         jp      loc_C13F
C07D ; END OF FUNCTION CHUNK FOR sub_BD91
C080
C080 ; =============== S U B R O U T I N E =======================================
C080
C080
C080 sub_C080:                                                   ; C058 C070 
C080                         ld      (ix+0), 16h
C084                         call    sub_BF97
C087                         ret
C087 ; End of function sub_C080
C087
C088
C088 ; =============== S U B R O U T I N E =======================================
C088
C088
C088 sub_C088:                                                   ; C068↑p
C088
C088 ; FUNCTION CHUNK AT 3F9E SIZE 0000004A BYTES
C088
C088                         ld      a, (ticker_countup)
C08B                         and     3
C08D                         ret     nz
C08E                         call    sub_C3D6
C091                         ld      a, (ix+4)
C094                         cp      (ix+0Eh)
C097                         ld      a, (ix+10h)
C09A                         jr      nc, loc_C0BA
C09C                         or      a
C09D                         jr      nz, loc_C0A2
C09F                         jp      loc_3F9E
C0A2 ; ---------------------------------------------------------------------------
C0A2
C0A2 loc_C0A2:                                                   ; C09D C0BB↓j
C0A2                         ld      a, (ix+4)
C0A5                         sub     (ix+0Eh)
C0A8                         and     10h
C0AA                         jp      c, loc_3F9E
C0AD                         ld      b, (ix+4)
C0B0                         ld      c, (ix+0Eh)
C0B3                         ld      d, (ix+10h)
C0B6                         call    sub_C080
C0B9                         ret
C0BA ; ---------------------------------------------------------------------------
C0BA
C0BA loc_C0BA:                                                   ; C09A
C0BA                         or      a
C0BB                         jr      z, loc_C0A2
C0BD                         jp      loc_3F9E
C0BD ; End of function sub_C088
C0BD
C0C0 ; ---------------------------------------------------------------------------
C0C0 ; START OF FUNCTION CHUNK FOR sub_BD91
C0C0
C0C0 loc_C0C0:                                                   ; BDF3
C0C0                         ld      a, (ix+14h)
C0C3                         or      a
C0C4                         jp      nz, loc_BEAC
C0C7                         ld      a, (ix+0Dh)
C0CA                         or      a
C0CB                         jr      nz, loc_C0DF
C0CD                         call    sub_BF7C
C0D0                         ld      a, (ix+4)
C0D3                         cp      0Ch
C0D5                         jp      c, loc_C13F
C0D8                         cp      0FCh
C0DA                         ret     c
C0DB                         jp      loc_C13F
C0DB ; END OF FUNCTION CHUNK FOR sub_BD91
C0DE ; ---------------------------------------------------------------------------
C0DE                         ret
C0DF ; ---------------------------------------------------------------------------
C0DF ; START OF FUNCTION CHUNK FOR sub_BD91
C0DF
C0DF loc_C0DF:                                                   ; C0CB
C0DF                         dec     a
C0E0                         ld      (ix+0Dh), a
C0E3                         ret     nz
C0E4                         ld      (ix+14h), 8
C0E8                         ret
C0E9 ; ---------------------------------------------------------------------------
C0E9
C0E9 loc_C0E9:                                                   ; BDC2
C0E9                         ld      a, (ix+14h)
C0EC                         or      a
C0ED                         jp      nz, loc_BEAC
C0F0                         call    sub_BF7C
C0F3                         ld      a, (ix+4)
C0F6                         cp      0Ch
C0F8                         jp      c, loc_C13F
C0FB                         cp      0FCh
C0FD                         ret     c
C0FE                         jp      loc_C13F
C0FE ; END OF FUNCTION CHUNK FOR sub_BD91
C101 ; ---------------------------------------------------------------------------
C101                         ret
C102 ; ---------------------------------------------------------------------------
C102 ; START OF FUNCTION CHUNK FOR sub_BD91
C102
C102 loc_C102:                                                   ; BDC7 BDF8
C102                         ld      a, (ix+0Dh)
C105                         dec     a
C106                         ld      (ix+0Dh), a
C109                         jr      z, loc_C13F
C10B                         call    sub_BF77
C10E                         call    sub_BF97
C111                         ret
C111 ; END OF FUNCTION CHUNK FOR sub_BD91
C112
C112 ; =============== S U B R O U T I N E =======================================
C112
C112
C112 sub_C112:                                                   ; BD81↑p
C112
C112 ; FUNCTION CHUNK AT C3BE SIZE 00000007 BYTES
C112
C112                         ld      a, (ix+0Ch)
C115                         call    sub_C38F
C118                         ld      a, (ix+0)
C11B                         or      a
C11C                         jr      z, loc_C13F
C11E                         cp      11h
C120                         jr      z, loc_C155
C122                         cp      12h
C124                         jr      z, loc_C14D
C126                         cp      13h
C128                         jp      z, loc_C1BA
C12B                         cp      14h
C12D                         jp      z, loc_C17B
C130                         cp      15h
C132                         jp      z, loc_C1EC
C135                         cp      0FFh
C137                         jp      z, loc_C226
C13A                         cp      16h
C13C                         jr      z, loc_C1AC
C13E                         ret
C13F ; ---------------------------------------------------------------------------
C13F
C13F loc_C13F:                                                   ; C077 C07D 
C13F                         ld      a, (ix+0)
C142                         or      a
C143                         jr      z, loc_C14D
C145                         ld      hl, unk_E037
C148                         dec     (hl)
C149                         ld      (ix+0), 0
C14D
C14D loc_C14D:                                                   ; C124 C143
C14D                         ld      b, 2
C14F                         rst     do_sprite_clear_loop
C150                         call    sub_C3AA
C153                         rst     clear_all_sprite
C154                         ret
C155 ; ---------------------------------------------------------------------------
C155
C155 loc_C155:                                                   ; C120
C155                         ld      a, (ix+4)
C158                         sub     8
C15A                         ld      (iy+3), a
C15D                         ld      a, (ix+6)
C160                         add     a, 8
C162                         ld      (iy+0), a
C165                         ld      (iy+2), 0D4h
C169                         ld      a, (ix+10h)
C16C                         ld      (iy+1), 3
C170                         or      a
C171                         jp      nz, loc_C3BE
C174                         ld      (iy+1), 13h
C178                         jp      loc_C3BE
C17B ; ---------------------------------------------------------------------------
C17B
C17B loc_C17B:                                                   ; C12D C1B7↓j 
C17B                         ld      a, (ix+14h)
C17E                         or      a
C17F                         jp      nz, loc_C256
C182                         ld      a, (ix+4)
C185                         sub     8
C187                         ld      (iy+3), a
C18A                         ld      a, (ix+6)
C18D                         add     a, 8
C18F                         ld      (iy+0), a
C192                         ld      (iy+1), 3
C196                         ld      a, (ticker_countup)
C199                         and     4
C19B                         ld      (iy+2), 0B2h
C19F                         jr      z, loc_C1A5
C1A1                         ld      (iy+2), 0B3h
C1A5
C1A5 loc_C1A5:                                                   ; C19F C27A↓j
C1A5                         ld      de, 4
C1A8                         add     iy, de
C1AA                         rst     clear_all_sprite
C1AB                         ret
C1AC ; ---------------------------------------------------------------------------
C1AC
C1AC loc_C1AC:                                                   ; C13C
C1AC                         ld      a, (ix+1)
C1AF                         cp      5
C1B1                         jr      nz, loc_C1BA
C1B3                         ld      a, (ix+0Dh)
C1B6                         or      a
C1B7                         jp      nz, loc_C17B
C1BA
C1BA loc_C1BA:                                                   ; C128 C1B1
C1BA                         ld      a, (ix+14h)
C1BD                         or      a
C1BE                         jp      nz, loc_C256
C1C1                         call    sub_C295
C1C4                         ld      b, 3
C1C6                         ld      c, 0
C1C8                         ld      a, (ix+10h)
C1CB                         or      a
C1CC                         jr      nz, loc_C1D2
C1CE                         ld      b, 13h
C1D0                         ld      c, 2
C1D2
C1D2 loc_C1D2:                                                   ; C1CC
C1D2                         ld      (iy+1), b
C1D5                         ld      (iy+5), b
C1D8                         ld      hl, byte_C27D
C1DB                         ld      a, (ticker_countup)
C1DE                         and     4
C1E0                         add     a, c
C1E1                         rst     HL_plus_A
C1E2                         ld      a, (hl)
C1E3                         ld      (iy+2), a
C1E6                         inc     hl
C1E7                         ld      a, (hl)
C1E8                         ld      (iy+6), a
C1EB                         ret
C1EC ; ---------------------------------------------------------------------------
C1EC
C1EC loc_C1EC:                                                   ; C132
C1EC                         ld      a, (ix+1)
C1EF                         cp      5
C1F1                         jp      z, loc_C17B
C1F4                         ld      a, (ix+14h)
C1F7                         or      a
C1F8                         jp      nz, loc_C256
C1FB                         call    sub_C295
C1FE                         ld      b, 3
C200                         ld      c, 0
C202                         ld      a, (ix+10h)
C205                         or      a
C206                         jr      nz, loc_C20C
C208                         ld      b, 13h
C20A                         ld      c, 2
C20C
C20C loc_C20C:                                                   ; C206
C20C                         ld      (iy+1), b
C20F                         ld      (iy+5), b
C212                         ld      hl, byte_C285
C215                         ld      a, (ticker_countup)
C218                         and     4
C21A                         add     a, c
C21B                         rst     HL_plus_A
C21C                         ld      a, (hl)
C21D                         ld      (iy+2), a
C220                         inc     hl
C221                         ld      a, (hl)
C222                         ld      (iy+6), a
C225                         ret
C226 ; ---------------------------------------------------------------------------
C226
C226 loc_C226:                                                   ; C137
C226                         call    sub_C295
C229                         ld      b, 3
C22B                         ld      c, 0
C22D                         ld      a, (ix+10h)
C230                         or      a
C231                         jr      nz, loc_C237
C233                         ld      b, 13h
C235                         ld      c, 2
C237
C237 loc_C237:                                                   ; C231
C237                         ld      (iy+1), b
C23A                         ld      (iy+5), b
C23D                         ld      hl, byte_C28D
C240                         ld      a, (ix+0Dh)
C243                         cp      8
C245                         jr      nc, loc_C24A
C247                         ld      hl, byte_C291
C24A
C24A loc_C24A:                                                   ; C245
C24A                         ld      a, c
C24B                         rst     HL_plus_A
C24C                         ld      a, (hl)
C24D                         ld      (iy+2), a
C250                         inc     hl
C251                         ld      a, (hl)
C252                         ld      (iy+6), a
C255                         ret
C256 ; ---------------------------------------------------------------------------
C256
C256 loc_C256:                                                   ; C17F C1BE 
C256                         ld      a, (ix+14h)
C259                         ld      a, (ix+4)
C25C                         sub     8
C25E                         ld      (iy+3), a
C261                         ld      a, (ix+6)
C264                         add     a, 8
C266                         ld      (iy+0), a
C269                         ld      b, 3
C26B                         ld      a, (ix+10h)
C26E                         or      a
C26F                         jr      nz, loc_C273
C271                         ld      b, 13h
C273
C273 loc_C273:                                                   ; C26F
C273                         ld      (iy+1), b
C276                         ld      (iy+2), 0A9h
C27A                         jp      loc_C1A5
C27A ; End of function sub_C112
C27A
C27A ; ---------------------------------------------------------------------------
C27D byte_C27D:              db 0AAh,0ABh                        ; C1D8↑o
C27F                         db 0ABh,0AAh
C281                         db 0ACh,0ADh
C283                         db 0ADh,0ACh
C285 byte_C285:              db 0AEh,0AFh                        ; C212↑o
C287                         db 0AFh,0AEh
C289                         db 0B0h,0B1h
C28B                         db 0B1h,0B0h
C28D byte_C28D:              db 0D5h,0D6h                        ; C23D↑o
C28F                         db 0D6h,0D5h
C291 byte_C291:              db 0D7h,0D8h                        ; C247↑o
C293                         db 0D8h,0D7h
C295
C295 ; =============== S U B R O U T I N E =======================================
C295
C295
C295 sub_C295:                                                   ; C1C1↑p C1FB↑p 
C295                         ld      a, (ix+6)
C298                         add     a, 8
C29A                         ld      (iy+0), a
C29D                         ld      (iy+4), a
C2A0                         ld      a, (ix+4)
C2A3                         ld      (iy+7), a
C2A6                         sub     10h
C2A8                         ld      (iy+3), a
C2AB                         ld      a, (ix+10h)
C2AE                         or      a
C2AF                         ret     nz
C2B0                         ld      a, (ix+4)
C2B3                         cp      0Ch
C2B5                         ret     nc
C2B6                         ld      (iy+3), 0
C2BA                         ret
C2BA ; End of function sub_C295
C2BA
C2BB
C2BB ; =============== S U B R O U T I N E =======================================
C2BB
C2BB
C2BB sub_C2BB:                                                   ; BD29↑p
C2BB                         ld      a, (ticker_countup)
C2BE                         and     3Fh ; '?'
C2C0                         ret     nz
C2C1                         rst     random_number
C2C2                         and     2
C2C4                         ld      c, a
C2C5                         ld      de, 18h
C2C8                         ld      b, 3
C2CA                         ld      ix, unk_E361
C2CE
C2CE loc_C2CE:                                                   ; C2DD↓j
C2CE                         ld      a, (unk_E037)
C2D1                         cp      3
C2D3                         ret     nc
C2D4                         ld      a, (ix+0)
C2D7                         or      a
C2D8                         call    z, sub_C2E0
C2DB                         add     ix, de
C2DD                         djnz    loc_C2CE
C2DF                         ret
C2DF ; End of function sub_C2BB
C2DF
C2E0
C2E0 ; =============== S U B R O U T I N E =======================================
C2E0
C2E0
C2E0 sub_C2E0:                                                   ; C2D8↑p
C2E0                         ld      hl, unk_E037
C2E3                         inc     (hl)
C2E4                         ld      (ix+0), 11h
C2E8                         ld      (ix+3), 0
C2EC                         ld      (ix+14h), 0
C2F0                         ld      hl, 80h
C2F3                         ld      (ix+10h), 0
C2F7                         ld      a, c
C2F8                         or      a
C2F9                         jr      z, loc_C302
C2FB                         ld      (ix+10h), 1
C2FF                         call    negate_hl
C302
C302 loc_C302:                                                   ; C2F9
C302                         ld      (ix+8), h
C305                         ld      (ix+9), l
C308                         ld      (ix+0Ah), 0
C30C                         ld      (ix+0Bh), 0
C310                         ld      hl, word_C35C
C313                         ld      a, (ix+0Ch)
C316                         sla     a
C318                         sla     a
C31A                         add     a, c
C31B                         rst     HL_plus_A
C31C                         ld      a, (hl)
C31D                         inc     hl
C31E                         ld      (ix+4), a
C321                         ld      a, (hl)
C322                         ld      (ix+6), a
C325                         ld      a, (ix+0Ch)
C328                         ld      (ix+2), 10h
C32C                         or      a
C32D                         jr      z, loc_C347
C32F                         cp      1
C331                         ld      (ix+2), 18h
C335                         jr      z, loc_C347
C337                         ld      (ix+2), 20h ; ' '
C33B                         ld      a, (ix+1)
C33E                         cp      7
C340                         jr      nz, loc_C347
C342                         ld      (ix+1), 5
C346                         ret
C347 ; ---------------------------------------------------------------------------
C347
C347 loc_C347:                                                   ; C32D C335 
C347                         ld      (ix+1), 7
C34B                         ret
C34B ; End of function sub_C2E0
C34B
C34B ; ---------------------------------------------------------------------------
C34C byte_C34C:              db    2,   1,   0,   2,   0,   1,   0,   2
C34C                                                             ; sub_C3C5↓o
C354                         db    0,   1,   2,   1,   0,   2,   1,   0
C35C word_C35C:              dw 0D008h                           ; C310↑o
C35E                         dw 0D0F8h
C360                         dw 0D602h
C362                         dw 0D6FEh
C364                         dw 0D0FCh
C366                         dw 0D004h
C368
C368 ; =============== S U B R O U T I N E =======================================
C368
C368
C368 sub_C368:                                                   ; BD8D↑p
C368                         ld      h, (ix+4)
C36B                         ld      l, (ix+5)
C36E                         ld      b, (ix+8)
C371                         ld      c, (ix+9)
C374                         add     hl, bc
C375                         ld      (ix+4), h
C378                         ld      (ix+5), l
C37B                         ld      h, (ix+6)
C37E                         ld      l, (ix+7)
C381                         ld      b, (ix+0Ah)
C384                         ld      c, (ix+0Bh)
C387                         add     hl, bc
C388                         ld      (ix+6), h
C38B                         ld      (ix+7), l
C38E                         ret
C38E ; End of function sub_C368
C38E
C38F
C38F ; =============== S U B R O U T I N E =======================================
C38F
C38F
C38F sub_C38F:                                                   ; C115↑p
C38F                         ld      a, (ix+0)
C392                         cp      11h
C394                         jr      z, sub_C3AA
C394 ; End of function sub_C38F
C394
C396
C396 ; =============== S U B R O U T I N E =======================================
C396
C396
C396 sub_C396:                                                   ; loc_C3BE↓p
C396                         ld      iy, sprite111_y
C39A                         ld      a, (ix+0Ch)
C39D                         or      a
C39E                         ret     z
C39F                         ld      de, 8
C3A2                         add     iy, de
C3A4                         cp      1
C3A6                         ret     z
C3A7                         add     iy, de
C3A9                         ret
C3A9 ; End of function sub_C396
C3A9
C3AA
C3AA ; =============== S U B R O U T I N E =======================================
C3AA
C3AA
C3AA sub_C3AA:                                                   ; C150↑p C394
C3AA                         ld      iy, sprite1_y
C3AE                         ld      a, (ix+0Ch)
C3B1                         or      a
C3B2                         ret     z
C3B3                         ld      de, 4
C3B6                         add     iy, de
C3B8                         cp      1
C3BA                         ret     z
C3BB                         add     iy, de
C3BD                         ret
C3BD ; End of function sub_C3AA
C3BD
C3BE ; ---------------------------------------------------------------------------
C3BE ; START OF FUNCTION CHUNK FOR sub_C112
C3BE
C3BE loc_C3BE:                                                   ; C171 C178
C3BE                         call    sub_C396
C3C1                         ld      b, 2
C3C3                         rst     do_sprite_clear_loop
C3C4                         ret
C3C4 ; END OF FUNCTION CHUNK FOR sub_C112
C3C5
C3C5 ; =============== S U B R O U T I N E =======================================
C3C5
C3C5
C3C5 sub_C3C5:                                                   ; BE42↑p
C3C5                         ld      hl, byte_C34C
C3C8                         ld      a, (unk_E600)
C3CB                         inc     a
C3CC                         and     0Fh
C3CE                         ld      (unk_E600), a
C3D1                         rst     HL_plus_A
C3D2                         ld      a, (hl)
C3D3                         ld      (ix+12h), a
C3D3 ; End of function sub_C3C5
C3D3
C3D6
C3D6 ; =============== S U B R O U T I N E =======================================
C3D6
C3D6
C3D6 sub_C3D6:                                                   ; BEDB↑p BEF9↑p 
C3D6                         ld      a, (ix+12h)
C3D9                         call    sub_C3ED
C3DC                         call    sub_C425
C3DF                         ret
C3DF ; End of function sub_C3D6
C3DF
C3E0
C3E0 ; =============== S U B R O U T I N E =======================================
C3E0
C3E0
C3E0 sub_C3E0:                                                   ; C3F2↓p C3FA↓p
C3E0                         ld      a, (ix+12h)
C3E3                         inc     a
C3E4                         cp      3
C3E6                         jr      c, loc_C3E9
C3E8                         xor     a
C3E9
C3E9 loc_C3E9:                                                   ; C3E6
C3E9                         ld      (ix+12h), a
C3EC                         ret
C3EC ; End of function sub_C3E0
C3EC
C3ED
C3ED ; =============== S U B R O U T I N E =======================================
C3ED
C3ED
C3ED sub_C3ED:                                                   ; C3D9↑p
C3ED                         call    sub_C401
C3F0                         or      a
C3F1                         ret     nz
C3F2                         call    sub_C3E0
C3F5                         call    sub_C401
C3F8                         or      a
C3F9                         ret     nz
C3FA                         call    sub_C3E0
C3FD                         call    sub_C401
C400                         ret
C400 ; End of function sub_C3ED
C400
C401
C401 ; =============== S U B R O U T I N E =======================================
C401
C401
C401 sub_C401:                                                   ; sub_C3ED↑p
C401                                                             ; C3F5↑p 
C401                         or      a
C402                         jr      z, loc_C40A
C404                         cp      1
C406                         jr      z, loc_C410
C408                         jr      loc_C416
C40A ; ---------------------------------------------------------------------------
C40A
C40A loc_C40A:                                                   ; C402
C40A                         ld      iy, George_data
C40E                         jr      loc_C41A
C410 ; ---------------------------------------------------------------------------
C410
C410 loc_C410:                                                   ; C406
C410                         ld      iy, Lizzie_data
C414                         jr      loc_C41A
C416 ; ---------------------------------------------------------------------------
C416
C416 loc_C416:                                                   ; C408
C416                         ld      iy, Ralph_data
C41A
C41A loc_C41A:                                                   ; C40E C414
C41A                         ld      a, (iy+1)
C41D                         cp      2
C41F                         jr      nz, loc_C423
C421                         or      a
C422                         ret
C423 ; ---------------------------------------------------------------------------
C423
C423 loc_C423:                                                   ; C41F
C423                         xor     a
C424                         ret
C424 ; End of function sub_C401
C424
C425
C425 ; =============== S U B R O U T I N E =======================================
C425
C425
C425 sub_C425:                                                   ; C3DC↑p
C425                         ld      a, (iy+8)
C428                         ld      (ix+0Eh), a
C42B                         ld      a, (iy+0Ah)
C42E                         add     a, 0Ch
C430                         ld      (ix+0Fh), a
C433                         ret
C433 ; End of function sub_C425
C433
C434
C434 ; =============== S U B R O U T I N E =======================================
C434
C434
C434 sub_C434:                                                   ; sub_BD7E↑p
C434                         ld      a, (ix+0)
C437                         or      a
C438                         ret     z
C439                         cp      11h
C43B                         ret     z
C43C                         cp      12h
C43E                         ret     z
C43F                         cp      0FFh
C441                         ret     z
C442                         ld      b, (ix+4)
C445                         ld      c, 0Ch
C447                         ld      a, (ix+6)
C44A                         sub     5
C44C                         ld      d, a
C44D                         ld      e, 7
C44F                         call    sub_1354
C452                         ld      a, (byte_E025)
C455                         or      a
C456                         ret     z
C457                         ld      (ix+0), 0FFh
C45B                         ld      (ix+0Dh), 10h
C45F                         ld      hl, score_750
C462                         call    score_add_saveREGs
C465                         ld      c, 94
C467                         rst     dispatch_sound
C468                         ret
C468 ; End of function sub_C434
C468
C469
C469 ; =============== S U B R O U T I N E =======================================
C469
C469
C469 sub_C469:                                                   ; 09C7↑p
C469
C469 ; FUNCTION CHUNK AT C63A SIZE 00000047 BYTES
C469 ; FUNCTION CHUNK AT C80A SIZE 0000000C BYTES
C469
C469                         ld      ix, unk_E3A9
C46D                         ld      a, (ix+0)
C470                         or      a
C471                         ret     z
C472                         cp      59h ; 'Y'
C474                         jp      z, loc_C4B9
C477                         cp      99h
C479                         jp      z, loc_C4C9
C47C                         cp      1
C47E                         jp      z, loc_C63A
C481                         ld      a, (ix+9)
C484                         or      a
C485                         jr      z, loc_C4A0
C487                         ld      a, (ix+2)
C48A                         cp      8
C48C                         jr      nc, loc_C4A0
C48E                         call    sub_C7CC
C491                         ld      (ix+7), 5
C495                         ld      a, (ix+0Ch)
C498                         cp      40h ; '@'
C49A                         ret     nz
C49B                         ld      (ix+7), 1
C49F                         ret
C4A0 ; ---------------------------------------------------------------------------
C4A0
C4A0 loc_C4A0:                                                   ; C485 C48C
C4A0                         call    sub_C6BA
C4A3                         call    sub_C816
C4A6                         ld      a, (ix+0Ch)
C4A9                         cp      40h ; '@'
C4AB                         jp      z, loc_C564
C4AE                         ld      a, (ix+0)
C4B1                         cp      3
C4B3                         jp      z, loc_C4D9
C4B6                         jp      loc_C538
C4B9 ; ---------------------------------------------------------------------------
C4B9
C4B9 loc_C4B9:                                                   ; C474
C4B9                         ld      a, (ix+1)
C4BC                         inc     a
C4BD                         ld      (ix+1), a
C4C0                         cp      10h
C4C2                         jp      z, sub_C7CC
C4C5                         call    sub_C72D
C4C8                         ret
C4C9 ; ---------------------------------------------------------------------------
C4C9
C4C9 loc_C4C9:                                                   ; C479
C4C9                         ld      a, (ix+1)
C4CC                         inc     a
C4CD                         ld      (ix+1), a
C4D0                         cp      10h
C4D2                         jp      z, sub_C7CC
C4D5                         call    sub_C762
C4D8                         ret
C4D9 ; ---------------------------------------------------------------------------
C4D9
C4D9 loc_C4D9:                                                   ; C4B3
C4D9                         ld      b, 0F8h
C4DB                         ld      a, (ix+5)
C4DE                         or      a
C4DF                         jr      z, loc_C4E3
C4E1                         ld      b, 8
C4E3
C4E3 loc_C4E3:                                                   ; C4DF
C4E3                         ld      a, (ix+2)
C4E6                         add     a, b
C4E7                         ld      b, a
C4E8                         call    sub_CC73
C4EB                         ld      a, c
C4EC                         or      a
C4ED                         jr      nz, loc_C507
C4EF                         call    sub_C7F2
C4F2                         ld      a, (ix+1)
C4F5                         inc     a
C4F6                         cp      5Bh ; '['
C4F8                         jr      z, loc_C500
C4FA                         jr      nc, loc_C51A
C4FC                         ld      (ix+1), a
C4FF                         ret
C500 ; ---------------------------------------------------------------------------
C500
C500 loc_C500:                                                   ; C4F8
C500                         ld      (ix+1), a
C503                         ld      c, 17
C505                         rst     dispatch_sound
C506                         ret
C507 ; ---------------------------------------------------------------------------
C507
C507 loc_C507:                                                   ; C4ED
C507                         ld      (ix+0), 99h
C50B                         ld      (ix+1), 0
C50F                         ld      a, (ix+0Ah)
C512                         dec     a
C513                         ld      (ix+0Ah), a
C516                         ld      c, 77
C518                         rst     dispatch_sound
C519                         ret
C51A ; ---------------------------------------------------------------------------
C51A
C51A loc_C51A:                                                   ; C4FA
C51A                         xor     a
C51B                         ld      (unk_E00D), a
C51E                         call    sub_C58D
C521                         ld      a, (unk_E00D)
C524                         or      a
C525                         ret     z
C526                         call    sub_4021
C529                         ld      c, 2
C52B                         rst     dispatch_sound
C52C                         ld      c, 101
C52E                         rst     dispatch_sound
C52F                         ld      (ix+1), 2Dh ; '-'
C533                         ld      (ix+0), 4
C537                         ret
C538 ; ---------------------------------------------------------------------------
C538
C538 loc_C538:                                                   ; C4B6
C538                         ld      a, (ix+1)
C53B                         dec     a
C53C                         ld      (ix+1), a
C53F                         cp      2Bh ; '+'
C541                         ret     nc
C542                         cp      1Eh
C544                         jp      nc, loc_C80A
C547                         or      a
C548                         ret     nz
C549                         ld      (ix+0), 3
C54D                         ld      a, (ix+0Bh)
C550                         inc     a
C551                         cp      3
C553                         jr      c, loc_C556
C555                         xor     a
C556
C556 loc_C556:                                                   ; C553
C556                         ld      (ix+0Bh), a
C559                         ld      (ix+1), 5Ah ; 'Z'
C55D                         or      a
C55E                         ret     nz
C55F                         ld      (ix+1), 0
C563                         ret
C564 ; ---------------------------------------------------------------------------
C564
C564 loc_C564:                                                   ; C4AB
C564                         ld      hl, 100h
C567                         call    sub_C7F5
C56A                         ld      a, (ix+1)
C56D                         inc     a
C56E                         cp      5Bh ; '['
C570                         jr      nc, loc_C576
C572                         ld      (ix+1), a
C575                         ret
C576 ; ---------------------------------------------------------------------------
C576
C576 loc_C576:                                                   ; C570
C576                         xor     a
C577                         ld      (unk_E00D), a
C57A                         call    sub_C58D
C57D                         ld      a, (unk_E00D)
C580                         or      a
C581                         ret     z
C582                         call    sub_4021
C585                         ld      c, 59
C587                         rst     dispatch_sound
C588                         ld      (ix+1), 3Ch ; '<'
C58C                         ret
C58C ; End of function sub_C469
C58C
C58D
C58D ; =============== S U B R O U T I N E =======================================
C58D
C58D
C58D sub_C58D:                                                   ; C51E↑p C57A↑p
C58D                         ld      a, (ix+2)
C590                         cp      20h ; ' '
C592                         ret     c
C593                         cp      0E0h
C595                         ret     nc
C596                         ld      (ix+9), a
C599                         ld      iy, George_data
C59D                         call    sub_C5B9
C5A0                         ld      a, (unk_E00D)
C5A3                         or      a
C5A4                         ret     nz
C5A5                         ld      iy, Lizzie_data
C5A9                         call    sub_C5B9
C5AC                         ld      a, (unk_E00D)
C5AF                         or      a
C5B0                         ret     nz
C5B1                         ld      iy, Ralph_data
C5B5                         call    sub_C5B9
C5B8                         ret
C5B8 ; End of function sub_C58D
C5B8
C5B9
C5B9 ; =============== S U B R O U T I N E =======================================
C5B9
C5B9
C5B9 sub_C5B9:                                                   ; C59D↑p C5A9↑p 
C5B9
C5B9 ; FUNCTION CHUNK AT C633 SIZE 00000007 BYTES
C5B9
C5B9                         ld      a, (iy+1)
C5BC                         cp      2
C5BE                         ret     nz
C5BF                         ld      b, (iy+8)
C5C2                         ld      c, (iy+0Ah)
C5C5                         ld      a, (ix+5)
C5C8                         or      a
C5C9                         jr      z, loc_C633
C5CB                         ld      a, b
C5CC                         sub     (ix+2)
C5CF                         ret     nc
C5D0                         neg
C5D2
C5D2 loc_C5D2:                                                   ; C638↓j
C5D2                         ld      b, a
C5D3                         cp      14h
C5D5                         ret     c
C5D6                         cp      0A0h
C5D8                         ret     nc
C5D9                         call    sub_C5E7
C5DC                         ld      a, c
C5DD                         cp      d
C5DE                         ret     c
C5DF                         cp      e
C5E0                         ret     nc
C5E1                         ld      a, 1
C5E3                         ld      (unk_E00D), a
C5E6                         ret
C5E6 ; End of function sub_C5B9
C5E6
C5E7
C5E7 ; =============== S U B R O U T I N E =======================================
C5E7
C5E7
C5E7 sub_C5E7:                                                   ; C5D9↑p
C5E7                         ld      hl, unk_C5F4
C5EA
C5EA loc_C5EA:                                                   ; C5F2↓j
C5EA                         ld      a, (hl)
C5EB                         inc     hl
C5EC                         ld      d, (hl)
C5ED                         inc     hl
C5EE                         ld      e, (hl)
C5EF                         inc     hl
C5F0                         cp      b
C5F1                         ret     nc
C5F2                         jr      loc_C5EA
C5F2 ; End of function sub_C5E7
C5F2
C5F2 ; ---------------------------------------------------------------------------
C5F4 unk_C5F4:               db  18h                             ; sub_C5E7↑o
C5F5                         db    0
C5F6                         db  1Ch
C5F7                         db  20h
C5F8                         db    0
C5F9                         db  21h ; !
C5FA                         db  28h ; (
C5FB                         db    0
C5FC                         db  26h ; &
C5FD                         db  30h ; 0
C5FE                         db    0
C5FF                         db  2Ah ; *
C600                         db  38h ; 8
C601                         db    0
C602                         db  31h ; 1
C603                         db  40h ; @
C604                         db    0
C605                         db  34h ; 4
C606                         db  48h ; H
C607                         db    0
C608                         db  38h ; 8
C609                         db  50h ; P
C60A                         db  1Ch
C60B                         db  3Ch ; <
C60C                         db  58h ; X
C60D                         db  1Ch
C60E                         db  40h ; @
C60F                         db  60h ; `
C610                         db  20h
C611                         db  44h ; D
C612                         db  68h ; h
C613                         db  24h ; $
C614                         db  48h ; H
C615                         db  70h ; p
C616                         db  28h ; (
C617                         db  4Eh ; N
C618                         db  78h ; x
C619                         db  2Ch ; ,
C61A                         db  52h ; R
C61B                         db  80h
C61C                         db  31h ; 1
C61D                         db  58h ; X
C61E                         db  88h
C61F                         db  36h ; 6
C620                         db  5Ch ; \
C621                         db  90h
C622                         db  3Ch ; <
C623                         db  60h ; `
C624                         db 0C0h
C625                         db  40h ; @
C626                         db  6Ch ; l
C627                         db  79h ; y
C628                         db 0FEh
C629                         db  1Fh
C62A                         db 0D8h
C62B                         db  4Fh ; O
C62C                         db  78h ; x
C62D                         db 0C6h
C62E                         db    8
C62F                         db  91h
C630                         db 0D8h
C631                         db  18h
C632                         db 0AEh
C633 ; ---------------------------------------------------------------------------
C633 ; START OF FUNCTION CHUNK FOR sub_C5B9
C633
C633 loc_C633:                                                   ; C5C9
C633                         ld      a, b
C634                         sub     (ix+2)
C637                         ret     c
C638                         jr      loc_C5D2
C638 ; END OF FUNCTION CHUNK FOR sub_C5B9
C63A ; ---------------------------------------------------------------------------
C63A ; START OF FUNCTION CHUNK FOR sub_C469
C63A
C63A loc_C63A:                                                   ; C47E
C63A                         ld      a, (ticker_countup)
C63D                         and     3Fh ; '?'
C63F                         ret     nz
C640                         ld      a, (ix+0Ah)
C643                         or      a
C644                         ret     z
C645                         bit     7, a
C647                         ret     nz
C648                         ld      c, 9
C64A                         rst     dispatch_sound
C64B                         ld      a, (ix+7)
C64E                         inc     a
C64F                         cp      6
C651                         ld      (ix+7), a
C654                         ret     c
C655                         call    sub_C681
C658                         ld      (ix+5), a
C65B                         ld      (ix+6), a
C65E                         ld      b, a
C65F                         ld      a, (ix+0Ch)
C662                         cp      40h ; '@'
C664                         ld      c, 1Bh
C666                         call    z, do_sound
C669                         ld      (ix+2), 0
C66D                         ld      (ix+4), 0
C671                         ld      (ix+1), 5Ah ; 'Z'
C675                         ld      (ix+0), 3
C679                         ld      a, b
C67A                         or      a
C67B                         ret     nz
C67C                         ld      (ix+2), 0Ch
C680                         ret
C680 ; END OF FUNCTION CHUNK FOR sub_C469
C681
C681 ; =============== S U B R O U T I N E =======================================
C681
C681
C681 sub_C681:                                                   ; C655↑p
C681                         ld      b, 0FFh
C683                         ld      c, 0
C685                         ld      iy, George_data
C689                         call    sub_C6A6
C68C                         ld      iy, Lizzie_data
C690                         call    sub_C6A6
C693                         ld      iy, Ralph_data
C697                         call    sub_C6A6
C69A                         xor     a
C69B                         sub     c
C69C                         ld      c, a
C69D                         ld      a, b
C69E                         sub     c
C69F                         jr      c, loc_C6A3
C6A1                         xor     a
C6A2                         ret
C6A3 ; ---------------------------------------------------------------------------
C6A3
C6A3 loc_C6A3:                                                   ; C69F
C6A3                         ld      a, 1
C6A5                         ret
C6A5 ; End of function sub_C681
C6A5
C6A6
C6A6 ; =============== S U B R O U T I N E =======================================
C6A6
C6A6
C6A6 sub_C6A6:                                                   ; C689↑p C690↑p 
C6A6                         ld      a, (iy+1)
C6A9                         cp      2
C6AB                         ret     nz
C6AC                         ld      a, (iy+8)
C6AF                         cp      b
C6B0                         jr      nc, loc_C6B3
C6B2                         ld      b, a
C6B3
C6B3 loc_C6B3:                                                   ; C6B0
C6B3                         ld      a, (iy+8)
C6B6                         cp      c
C6B7                         ret     c
C6B8                         ld      c, a
C6B9                         ret
C6B9 ; End of function sub_C6A6
C6B9
C6BA
C6BA ; =============== S U B R O U T I N E =======================================
C6BA
C6BA
C6BA sub_C6BA:                                                   ; loc_C4A0↑p
C6BA                         ld      a, (ix+0)
C6BD                         or      a
C6BE                         jp      z, sub_C7CC
C6C1                         ld      iy, sprite108_y
C6C5                         call    sub_C6E6
C6C8                         call    sub_C6D5
C6CB                         ld      a, (ix+2)
C6CE                         call    sub_C6F8
C6D1                         call    sub_C701
C6D4                         ret
C6D4 ; End of function sub_C6BA
C6D4
C6D5
C6D5 ; =============== S U B R O U T I N E =======================================
C6D5
C6D5
C6D5 sub_C6D5:                                                   ; C6C8↑p
C6D5                         ld      a, (ix+5)
C6D8                         or      a
C6D9                         ld      a, 3
C6DB                         jr      nz, loc_C6DF
C6DD                         ld      a, 13h
C6DF
C6DF loc_C6DF:                                                   ; C6DB
C6DF                         ld      (iy+1), a
C6E2                         ld      (iy+5), a
C6E5                         ret
C6E5 ; End of function sub_C6D5
C6E5
C6E6
C6E6 ; =============== S U B R O U T I N E =======================================
C6E6
C6E6
C6E6 sub_C6E6:                                                   ; C6C5↑p C738↓p 
C6E6                         ld      b, 13h
C6E8                         ld      a, (base_strip_number)
C6EB                         cp      4
C6ED                         jr      c, loc_C6F1
C6EF                         ld      b, 16h
C6F1
C6F1 loc_C6F1:                                                   ; C6ED
C6F1                         ld      (iy+0), b
C6F4                         ld      (iy+4), b
C6F7                         ret
C6F7 ; End of function sub_C6E6
C6F7
C6F8
C6F8 ; =============== S U B R O U T I N E =======================================
C6F8
C6F8
C6F8 sub_C6F8:                                                   ; C6CE↑p C73E↓p 
C6F8                         ld      (iy+7), a
C6FB                         sub     10h
C6FD                         ld      (iy+3), a
C700                         ret
C700 ; End of function sub_C6F8
C700
C701
C701 ; =============== S U B R O U T I N E =======================================
C701
C701
C701 sub_C701:                                                   ; C6D1↑p
C701                         ld      b, 0E4h
C703                         ld      c, 0E5h
C705                         ld      a, (ix+0Ch)
C708                         cp      40h ; '@'
C70A                         jr      nz, loc_C719
C70C                         ld      b, 0E6h
C70E                         ld      c, 0E7h
C710                         ld      a, (ticker_countup)
C713                         and     4
C715                         jr      z, loc_C719
C717                         ld      b, 0E8h
C719
C719 loc_C719:                                                   ; C70A C715
C719                         ld      a, (ix+5)
C71C                         or      a
C71D                         jr      nz, loc_C726
C71F                         ld      (iy+2), c
C722                         ld      (iy+6), b
C725                         ret
C726 ; ---------------------------------------------------------------------------
C726
C726 loc_C726:                                                   ; C71D
C726                         ld      (iy+2), b
C729                         ld      (iy+6), c
C72C                         ret
C72C ; End of function sub_C701
C72C
C72D
C72D ; =============== S U B R O U T I N E =======================================
C72D
C72D
C72D sub_C72D:                                                   ; C4C5↑p
C72D                         ld      a, (ix+0)
C730                         or      a
C731                         jp      z, sub_C7CC
C734                         ld      iy, sprite108_y
C738                         call    sub_C6E6
C73B                         ld      a, (ix+2)
C73E                         call    sub_C6F8
C741                         ld      a, (ix+1)
C744                         cp      4
C746                         ld      b, 0F7h
C748                         ld      (iy+1), 3
C74C                         ld      (iy+5), 13h
C750                         jp      c, loc_C75B
C753                         cp      8
C755                         ld      b, 0F8h
C757                         jr      c, loc_C75B
C759                         ld      b, 0F9h
C75B
C75B loc_C75B:                                                   ; C750 C757
C75B                         ld      (iy+2), b
C75E                         ld      (iy+6), b
C761                         ret
C761 ; End of function sub_C72D
C761
C762
C762 ; =============== S U B R O U T I N E =======================================
C762
C762
C762 sub_C762:                                                   ; C4D5↑p
C762                         ld      a, (ix+0)
C765                         or      a
C766                         jp      z, sub_C7CC
C769                         ld      iy, sprite108_y
C76D                         call    sub_C6E6
C770                         ld      a, (ix+2)
C773                         call    sub_C6F8
C776                         ld      a, (ix+1)
C779                         cp      4
C77B                         jr      c, loc_C7A3
C77D                         cp      8
C77F                         jr      c, loc_C799
C781                         cp      0Ch
C783                         jr      c, loc_C78F
C785                         ld      a, 0C5h
C787                         ld      b, 0C6h
C789                         ld      c, 1
C78B                         ld      d, 1
C78D                         jr      loc_C7BF
C78F ; ---------------------------------------------------------------------------
C78F
C78F loc_C78F:                                                   ; C783
C78F                         ld      a, 0C6h
C791                         ld      b, 0C5h
C793                         ld      c, 11h
C795                         ld      d, 11h
C797                         jr      loc_C7BF
C799 ; ---------------------------------------------------------------------------
C799
C799 loc_C799:                                                   ; C77F
C799                         ld      a, 0C7h
C79B                         ld      b, 0C7h
C79D                         ld      c, 1
C79F                         ld      d, 11h
C7A1                         jr      loc_C7BF
C7A3 ; ---------------------------------------------------------------------------
C7A3
C7A3 loc_C7A3:                                                   ; C77B
C7A3                         ld      a, (ix+8)
C7A6                         sub     8
C7A8                         ld      (iy+3), a
C7AB                         ld      a, 19h
C7AD                         ld      (iy+0), a
C7B0                         ld      (iy+2), 0C8h
C7B4                         ld      (iy+1), 1
C7B8                         ld      de, 4
C7BB                         add     iy, de
C7BD                         rst     clear_all_sprite
C7BE                         ret
C7BF ; ---------------------------------------------------------------------------
C7BF
C7BF loc_C7BF:                                                   ; C78D C797 
C7BF                         ld      (iy+2), a
C7C2                         ld      (iy+6), b
C7C5                         ld      (iy+1), c
C7C8                         ld      (iy+5), d
C7CB                         ret
C7CB ; End of function sub_C762
C7CB
C7CC
C7CC ; =============== S U B R O U T I N E =======================================
C7CC
C7CC
C7CC sub_C7CC:                                                   ; C48E↑p C4C2 
C7CC                         ld      iy, sprite108_y
C7D0                         ld      b, 2
C7D2                         rst     do_sprite_clear_loop
C7D3                         ld      (ix+0), 1
C7D7                         ld      (ix+9), 0
C7DB                         ld      (ix+7), 1
C7DF                         ld      (ix+2), 0
C7E3                         ld      a, (ix+0Ch)
C7E6                         cp      40h ; '@'
C7E8                         jr      z, loc_C7EE
C7EA                         ld      c, 2
C7EC                         rst     dispatch_sound
C7ED                         ret
C7EE ; ---------------------------------------------------------------------------
C7EE
C7EE loc_C7EE:                                                   ; C7E8
C7EE                         ld      c, 9
C7F0                         rst     dispatch_sound
C7F1                         ret
C7F1 ; End of function sub_C7CC
C7F1
C7F2
C7F2 ; =============== S U B R O U T I N E =======================================
C7F2
C7F2
C7F2 sub_C7F2:                                                   ; C4EF↑p
C7F2                         ld      hl, 80h
C7F2 ; End of function sub_C7F2
C7F2
C7F5
C7F5 ; =============== S U B R O U T I N E =======================================
C7F5
C7F5
C7F5 sub_C7F5:                                                   ; C567↑p
C7F5                         ld      a, (ix+6)
C7F8                         or      a
C7F9                         call    nz, negate_hl
C7FC
C7FC loc_C7FC:                                                   ; C814↓j
C7FC                         ld      b, (ix+2)
C7FF                         ld      c, (ix+3)
C802
C802 INPUT_PORT_2:                                               ; Second Input Port
C802                         add     hl, bc
C803                         ld      (ix+2), h
C806
C806 DIP_SWITCH_2:                                               ; Second DIP Switch
C806                         ld      (ix+3), l
C809                         ret
C809 ; End of function sub_C7F5
C809
C80A ; ---------------------------------------------------------------------------
C80A ; START OF FUNCTION CHUNK FOR sub_C469
C80A
C80A loc_C80A:                                                   ; C544
C80A                         ld      hl, 40h ; '@'
C80D                         ld      a, (ix+6)
C810                         or      a
C811                         call    z, negate_hl
C814                         jr      loc_C7FC
C814 ; END OF FUNCTION CHUNK FOR sub_C469
C816
C816 ; =============== S U B R O U T I N E =======================================
C816
C816
C816 sub_C816:                                                   ; C4A3↑p
C816                         ld      iy, Ralph_data
C81A                         call    sub_C836
C81D                         ld      a, (byte_E025)
C820                         or      a
C821                         ret     nz
C822                         ld      iy, Lizzie_data
C826                         call    sub_C836
C829                         ld      a, (byte_E025)
C82C                         or      a
C82D                         ret     nz
C82E                         ld      iy, George_data
C832                         call    sub_C836
C835                         ret
C835 ; End of function sub_C816
C835
C836
C836 ; =============== S U B R O U T I N E =======================================
C836
C836
C836 sub_C836:                                                   ; C81A↑p C826↑p 
C836                         ld      a, (ix+4)
C839                         or      a
C83A                         ret     nz
C83B                         xor     a
C83C                         ld      (byte_E025), a
C83F                         ld      a, (iy+1)
C842                         cp      2
C844                         ret     nz
C845                         ld      a, (iy+21h)
C848                         cp      2
C84A                         ret     c
C84B                         ld      a, (iy+33h)
C84E                         cp      10h
C850                         ret     nc
C851                         ld      a, (iy+32h)
C854                         sub     (ix+2)
C857                         jr      nc, loc_C85B
C859                         neg
C85B
C85B loc_C85B:                                                   ; C857
C85B                         cp      10h
C85D                         ret     nc
C85E                         ld      (iy+21h), 1
C862                         ld      a, 1
C864                         ld      (ix+4), a
C867                         ld      (byte_E025), a
C86A                         ld      hl, score_750
C86D                         ld      a, (ix+0)
C870                         cp      3
C872                         jr      z, loc_C87E
C874                         ld      hl, score_100
C877                         cp      2
C879                         jr      z, loc_C87E
C87B                         ld      hl, score_200
C87E
C87E loc_C87E:                                                   ; C872 C879
C87E                         call    score_add_saveREGs
C881                         ld      (ix+0), 59h ; 'Y'
C885                         ld      (ix+1), 0
C889                         ld      c, 95
C88B                         rst     dispatch_sound
C88C                         ld      a, (ix+0Ah)
C88F                         dec     a
C890                         ld      (ix+0Ah), a
C893                         ret
C893 ; End of function sub_C836
C893
C894
C894 ; =============== S U B R O U T I N E =======================================
C894
C894
C894 sub_C894:                                                   ; 09CA↑p
C894                         ld      ix, unk_E3D1
C898                         ld      (ix+0Bh), 0
C89C                         call    sub_C8A0
C89F                         ret
C89F ; End of function sub_C894
C89F
C8A0
C8A0 ; =============== S U B R O U T I N E =======================================
C8A0
C8A0
C8A0 sub_C8A0:                                                   ; C89C↑p
C8A0
C8A0 ; FUNCTION CHUNK AT CB03 SIZE 0000001F BYTES
C8A0
C8A0                         ld      a, (ix+0)
C8A3                         or      a
C8A4                         ret     z
C8A5                         cp      59h ; 'Y'
C8A7                         jp      z, loc_C92A
C8AA                         cp      0FFh
C8AC                         jp      z, loc_CB03
C8AF                         cp      10h
C8B1                         jp      z, loc_C959
C8B4                         call    sub_C9C5
C8B7                         ld      a, (ix+0)
C8BA                         cp      11h
C8BC                         jp      z, loc_C8CF
C8BF                         cp      12h
C8C1                         jp      z, loc_C8EE
C8C4                         cp      13h
C8C6                         jp      z, loc_C914
C8C9                         cp      14h
C8CB                         jp      z, loc_C93A
C8CE                         ret
C8CF ; ---------------------------------------------------------------------------
C8CF
C8CF loc_C8CF:                                                   ; C8BC
C8CF                         call    sub_CB22
C8D2                         call    sub_CB3A
C8D5                         call    sub_CB56
C8D8                         ld      a, (ix+0)
C8DB                         cp      11h
C8DD                         ret     nz
C8DE                         ld      a, (ix+2)
C8E1                         cp      (ix+8)
C8E4                         ret     nz
C8E5                         ld      (ix+0), 12h
C8E9                         ld      (ix+0Ah), 1Ch
C8ED                         ret
C8EE ; ---------------------------------------------------------------------------
C8EE
C8EE loc_C8EE:                                                   ; C8C1
C8EE                         call    sub_CB22
C8F1                         call    sub_CB7A
C8F4                         ld      a, (ix+0)
C8F7                         cp      12h
C8F9                         ret     nz
C8FA                         call    sub_CB56
C8FD                         ld      a, (ix+0)
C900                         cp      12h
C902                         ret     nz
C903                         ld      a, (ix+2)
C906                         or      a
C907                         ret     nz
C908                         ld      (ix+0), 59h ; 'Y'
C90C                         call    sub_CABB
C90F                         ld      (ix+1), 0
C913                         ret
C914 ; ---------------------------------------------------------------------------
C914
C914 loc_C914:                                                   ; C8C6
C914                         call    sub_CB22
C917                         call    sub_CB56
C91A                         ld      a, (ix+0)
C91D                         cp      13h
C91F                         ret     nz
C920                         ld      a, (ix+2)
C923                         or      a
C924                         ret     nz
C925                         ld      (ix+0), 0FFh
C929                         ret
C92A ; ---------------------------------------------------------------------------
C92A
C92A loc_C92A:                                                   ; C8A7
C92A                         ld      a, (ix+1)
C92D                         inc     a
C92E                         ld      (ix+1), a
C931                         cp      12h
C933                         jp      z, loc_CB03
C936                         call    sub_CA7B
C939                         ret
C93A ; ---------------------------------------------------------------------------
C93A
C93A loc_C93A:                                                   ; C8CB
C93A                         call    sub_CB7A
C93D                         ld      a, (ix+0)
C940                         cp      14h
C942                         ret     nz
C943                         ld      a, (ix+1)
C946                         inc     a
C947                         ld      (ix+1), a
C94A                         cp      10h
C94C                         ret     c
C94D                         ld      (ix+0), 59h ; 'Y'
C951                         call    sub_CABB
C954                         ld      (ix+1), 0
C958                         ret
C959 ; ---------------------------------------------------------------------------
C959
C959 loc_C959:                                                   ; C8B1
C959                         ld      a, (byte_E601)
C95C                         or      a
C95D                         ret     z
C95E                         ld      a, (ticker_countup)
C961                         and     3Fh ; '?'
C963                         ret     nz
C964                         ld      a, (ix+7)
C967                         inc     a
C968                         ld      (ix+7), a
C96B                         cp      3Ch ; '<'
C96D                         ret     c
C96E                         ld      a, (ix+5)
C971                         xor     1
C973                         ld      (ix+5), a
C976                         ld      (ix+0), 11h
C97A                         ld      (ix+2), 0
C97E                         ld      (ix+4), 0
C982                         ld      a, (ix+0Dh)
C985                         inc     a
C986                         ld      (ix+0Dh), a
C989                         ld      (ix+9), 0
C98D                         call    sub_C994
C990                         ld      (ix+8), a
C993                         ret
C993 ; End of function sub_C8A0
C993
C994
C994 ; =============== S U B R O U T I N E =======================================
C994
C994
C994 sub_C994:                                                   ; C98D↑p
C994                         ld      b, 6
C996                         ld      de, 0FFE8h                  ; -24 for addition.
C999                         ld      iy, Building6_data
C99D
C99D loc_C99D:                                                   ; C9C0↓j
C99D                         ld      a, (iy+0)
C9A0                         cp      0FFh
C9A2                         jr      z, loc_C9BE
C9A4                         or      a
C9A5                         jr      z, loc_C9BE
C9A7                         ld      a, (iy+9)
C9AA                         cp      0FFh
C9AC                         jr      z, loc_C9BE
C9AE                         ld      a, (iy+8)
C9B1                         cp      28h ; '('
C9B3                         jr      c, loc_C9BE
C9B5                         ld      a, (iy+6)
C9B8                         or      a
C9B9                         jr      z, loc_C9BE
C9BB                         add     a, 10h
C9BD                         ret
C9BE ; ---------------------------------------------------------------------------
C9BE
C9BE loc_C9BE:                                                   ; C9A2 C9A5 
C9BE                         add     iy, de
C9C0                         djnz    loc_C99D
C9C2                         ld      a, 80h
C9C4                         ret
C9C4 ; End of function sub_C994
C9C4
C9C5
C9C5 ; =============== S U B R O U T I N E =======================================
C9C5
C9C5
C9C5 sub_C9C5:                                                   ; C8B4↑p
C9C5
C9C5 ; FUNCTION CHUNK AT CB03 SIZE 0000001F BYTES
C9C5
C9C5                         ld      iy, sprite50_y
C9C9                         ld      a, (ix+0)
C9CC                         or      a
C9CD                         jp      z, loc_CB03
C9D0                         cp      14h
C9D2                         jr      z, loc_C9F4
C9D4                         call    sub_CA42
C9D7                         call    sub_CA09
C9DA                         call    sub_C9F6
C9DD                         call    sub_CA14
C9E0                         call    sub_CA25
C9E3                         ld      a, (ix+0)
C9E6                         cp      13h
C9E8                         ret     nz
C9E9                         ld      iy, sprite50_y
C9ED                         ld      de, 4
C9F0                         add     iy, de
C9F2                         rst     clear_all_sprite
C9F3                         ret
C9F4 ; ---------------------------------------------------------------------------
C9F4
C9F4 loc_C9F4:                                                   ; C9D2
C9F4                         rst     clear_all_sprite
C9F5                         ret
C9F5 ; End of function sub_C9C5
C9F5
C9F6
C9F6 ; =============== S U B R O U T I N E =======================================
C9F6
C9F6
C9F6 sub_C9F6:                                                   ; C9DA↑p
C9F6                         ld      a, (ix+5)
C9F9                         or      a
C9FA                         ld      a, 3
C9FC                         jr      nz, loc_CA00
C9FE                         ld      a, 13h
CA00
CA00 loc_CA00:                                                   ; C9FC
CA00                         ld      (iy+1), a
CA03                         xor     10h
CA05                         ld      (iy+5), a
CA08                         ret
CA08 ; End of function sub_C9F6
CA08
CA09
CA09 ; =============== S U B R O U T I N E =======================================
CA09
CA09
CA09 sub_CA09:                                                   ; C9D7↑p
CA09                         ld      (iy+0), 1Ch
CA0D                         ld      a, (ix+0Ah)
CA10                         ld      (iy+4), a
CA13                         ret
CA13 ; End of function sub_CA09
CA13
CA14
CA14 ; =============== S U B R O U T I N E =======================================
CA14
CA14
CA14 sub_CA14:                                                   ; C9DD↑p
CA14                         ld      a, (ix+2)
CA17                         sub     8
CA19                         ld      (iy+3), a
CA1C                         ld      a, (ix+9)
CA1F                         sub     8
CA21                         ld      (iy+7), a
CA24                         ret
CA24 ; End of function sub_CA14
CA24
CA25
CA25 ; =============== S U B R O U T I N E =======================================
CA25
CA25
CA25 sub_CA25:                                                   ; C9E0↑p
CA25                         ld      a, (ix+0Eh)
CA28                         or      a
CA29                         jr      z, loc_CA2F
CA2B                         ld      b, 0CAh
CA2D                         jr      loc_CA3A
CA2F ; ---------------------------------------------------------------------------
CA2F
CA2F loc_CA2F:                                                   ; CA29
CA2F                         ld      b, 82h
CA31                         ld      a, (ticker_countup)
CA34                         and     4
CA36                         jr      z, loc_CA3A
CA38                         ld      b, 83h
CA3A
CA3A loc_CA3A:                                                   ; CA2D CA36
CA3A                         ld      (iy+2), b
CA3D                         ld      (iy+6), 84h
CA41                         ret
CA41 ; End of function sub_CA25
CA41
CA42
CA42 ; =============== S U B R O U T I N E =======================================
CA42
CA42
CA42 sub_CA42:                                                   ; C9D4↑p
CA42                         push    iy
CA44                         ld      a, (ix+0Eh)
CA47                         or      a
CA48                         jr      z, loc_CA64
CA4A                         ld      b, (ix+2)
CA4D                         ld      a, (ix+0Fh)
CA50                         call    sub_CC54
CA53                         ld      a, c
CA54                         or      a
CA55                         jr      nz, loc_CA78
CA57                         ld      c, 102
CA59                         rst     dispatch_sound
CA5A                         ld      (ix+0Eh), 0
CA5E                         ld      (ix+0Fh), 0
CA62                         jr      loc_CA78
CA64 ; ---------------------------------------------------------------------------
CA64
CA64 loc_CA64:                                                   ; CA48
CA64                         ld      b, (ix+2)
CA67                         call    sub_CC73
CA6A                         ld      a, c
CA6B                         or      a
CA6C                         jr      z, loc_CA78
CA6E                         ld      c, 102
CA70                         rst     dispatch_sound
CA71                         ld      (ix+0Eh), 1
CA75                         ld      (ix+0Fh), d
CA78
CA78 loc_CA78:                                                   ; CA55 CA62 
CA78                         pop     iy
CA7A                         ret
CA7A ; End of function sub_CA42
CA7A
CA7B
CA7B ; =============== S U B R O U T I N E =======================================
CA7B
CA7B
CA7B sub_CA7B:                                                   ; C936↑p
CA7B
CA7B ; FUNCTION CHUNK AT CB03 SIZE 0000001F BYTES
CA7B
CA7B                         ld      a, (ix+0)
CA7E                         or      a
CA7F                         jp      z, loc_CB03
CA82                         ld      iy, sprite50_y
CA86                         ld      a, (ix+0Ah)
CA89                         ld      (iy+0), a
CA8C                         ld      (iy+4), a
CA8F                         ld      a, (ix+9)
CA92                         ld      (iy+7), a
CA95                         sub     10h
CA97                         ld      (iy+3), a
CA9A                         ld      a, (ix+1)
CA9D                         cp      6
CA9F                         ld      b, 0F7h
CAA1                         ld      (iy+1), 3
CAA5                         ld      (iy+5), 13h
CAA9                         jp      c, loc_CAB4
CAAC                         cp      0Ah
CAAE                         ld      b, 0F8h
CAB0                         jr      c, loc_CAB4
CAB2                         ld      b, 0F9h
CAB4
CAB4 loc_CAB4:                                                   ; CAA9 CAB0
CAB4                         ld      (iy+2), b
CAB7                         ld      (iy+6), b
CABA                         ret
CABA ; End of function sub_CA7B
CABA
CABB
CABB ; =============== S U B R O U T I N E =======================================
CABB
CABB
CABB sub_CABB:                                                   ; C90C↑p C951↑p
CABB                         push    iy
CABD                         ld      c, 78
CABF                         rst     dispatch_sound
CAC0                         call    sub_CAC6
CAC3                         pop     iy
CAC5                         ret
CAC5 ; End of function sub_CABB
CAC5
CAC6
CAC6 ; =============== S U B R O U T I N E =======================================
CAC6
CAC6
CAC6 sub_CAC6:                                                   ; CAC0↑p
CAC6
CAC6 ; FUNCTION CHUNK AT 4813 SIZE 0000000F BYTES
CAC6
CAC6                         call    sub_CADE
CAC9                         or      a
CACA                         ret     nz
CACB                         ld      a, (iy+9)
CACE                         cp      0
CAD0                         ret     nz
CAD1                         ld      a, (iy+3)
CAD4                         cp      3
CAD6                         ret     c
CAD7                         ld      (ix+0Ch), 0
CADB                         jp      loc_4813
CADB ; End of function sub_CAC6
CADB
CADE
CADE ; =============== S U B R O U T I N E =======================================
CADE
CADE
CADE sub_CADE:                                                   ; sub_CAC6↑p
CADE                         ld      a, (ix+9)
CAE1                         ld      c, a
CAE2                         ld      de, 0FFE8h                  ; -24 for addition.
CAE5                         ld      iy, Building6_data
CAE9                         ld      b, 6
CAEB
CAEB loc_CAEB:                                                   ; CAFD↓j
CAEB                         ld      a, (iy+6)
CAEE                         cp      c
CAEF                         jr      z, loc_CAF9
CAF1                         jr      nc, loc_CAFB
CAF3                         ld      a, (iy+7)
CAF6                         cp      c
CAF7                         jr      c, loc_CAFB
CAF9
CAF9 loc_CAF9:                                                   ; CAEF
CAF9                         xor     a
CAFA                         ret
CAFB ; ---------------------------------------------------------------------------
CAFB
CAFB loc_CAFB:                                                   ; CAF1 CAF7
CAFB                         add     iy, de
CAFD                         djnz    loc_CAEB
CAFF                         ld      a, 1
CB01                         or      a
CB02                         ret
CB02 ; End of function sub_CADE
CB02
CB03 ; ---------------------------------------------------------------------------
CB03 ; START OF FUNCTION CHUNK FOR sub_C8A0
CB03 ;   ADDITIONAL PARENT FUNCTION sub_C9C5
CB03 ;   ADDITIONAL PARENT FUNCTION sub_CA7B
CB03
CB03 loc_CB03:                                                   ; C8AC C933 
CB03                         ld      iy, sprite50_y
CB07                         ld      b, 2
CB09                         rst     do_sprite_clear_loop
CB0A                         ld      (ix+0), 10h
CB0E                         ld      a, (ix+0Dh)
CB11                         or      a
CB12                         jr      nz, loc_CB1D
CB14                         ld      (ix+7), 33h ; '3'
CB18                         ld      a, (ix+0Ch)
CB1B                         or      a
CB1C                         ret     z
CB1D
CB1D loc_CB1D:                                                   ; CB12
CB1D                         ld      (ix+7), 36h ; '6'
CB21                         ret
CB21 ; END OF FUNCTION CHUNK FOR sub_C8A0
CB22
CB22 ; =============== S U B R O U T I N E =======================================
CB22
CB22
CB22 sub_CB22:                                                   ; loc_C8CF↑p
CB22                                                             ; loc_C8EE↑p 
CB22                         ld      hl, 100h
CB25                         ld      a, (ix+5)
CB28                         or      a
CB29                         call    nz, negate_hl
CB2C                         ld      b, (ix+2)
CB2F                         ld      c, (ix+3)
CB32                         add     hl, bc
CB33                         ld      (ix+2), h
CB36                         ld      (ix+3), l
CB39                         ret
CB39 ; End of function sub_CB22
CB39
CB3A
CB3A ; =============== S U B R O U T I N E =======================================
CB3A
CB3A
CB3A sub_CB3A:                                                   ; C8D2↑p
CB3A                         ld      b, 0
CB3C                         ld      a, (ticker_countup)
CB3F                         and     4
CB41                         jr      z, loc_CB49
CB43                         ld      a, (ix+5)
CB46                         or      a
CB47                         jr      z, loc_CB49
CB49
CB49 loc_CB49:                                                   ; CB41 CB47
CB49                         ld      a, (ix+2)
CB4C                         inc     b
CB4D                         add     a, b
CB4E                         ld      (ix+9), a
CB51                         ld      (ix+0Ah), 1Ah
CB55                         ret
CB55 ; End of function sub_CB3A
CB55
CB56
CB56 ; =============== S U B R O U T I N E =======================================
CB56
CB56
CB56 sub_CB56:                                                   ; C8D5↑p C8FA↑p 
CB56                         xor     a
CB57                         ld      (byte_E025), a
CB5A                         ld      iy, Ralph_data
CB5E                         call    sub_CBCD
CB61                         ld      a, (byte_E025)
CB64                         or      a
CB65                         ret     nz
CB66                         ld      iy, Lizzie_data
CB6A                         call    sub_CBCD
CB6D                         ld      a, (byte_E025)
CB70                         or      a
CB71                         ret     nz
CB72                         ld      iy, George_data
CB76                         call    sub_CBCD
CB79                         ret
CB79 ; End of function sub_CB56
CB79
CB7A
CB7A ; =============== S U B R O U T I N E =======================================
CB7A
CB7A
CB7A sub_CB7A:                                                   ; C8F1↑p
CB7A                                                             ; loc_C93A↑p
CB7A                         xor     a
CB7B                         ld      (byte_E025), a
CB7E                         ld      iy, Ralph_data
CB82                         call    sub_CB9E
CB85                         ld      a, (byte_E025)
CB88                         or      a
CB89                         ret     nz
CB8A                         ld      iy, Lizzie_data
CB8E                         call    sub_CB9E
CB91                         ld      a, (byte_E025)
CB94                         or      a
CB95                         ret     nz
CB96                         ld      iy, George_data
CB9A                         call    sub_CB9E
CB9D                         ret
CB9D ; End of function sub_CB7A
CB9D
CB9E
CB9E ; =============== S U B R O U T I N E =======================================
CB9E
CB9E
CB9E sub_CB9E:                                                   ; CB82↑p CB8E↑p 
CB9E                         ld      a, (ix+4)
CBA1                         and     0F0h
CBA3                         cp      0F0h
CBA5                         ret     z
CBA6                         ld      b, (ix+9)
CBA9                         call    sub_CC23
CBAC                         ld      a, (byte_E025)
CBAF                         or      a
CBB0                         ret     z
CBB1                         ld      a, (ix+4)
CBB4                         or      0F0h
CBB6                         ld      (ix+4), a
CBB9                         ld      (iy+2Bh), 0FFh
CBBD                         ld      (iy+47h), 40h ; '@'
CBC1                         ld      (ix+0Ch), 1
CBC5                         call    sub_52DE
CBC8                         ld      (ix+0), 13h
CBCC                         ret
CBCC ; End of function sub_CB9E
CBCC
CBCD
CBCD ; =============== S U B R O U T I N E =======================================
CBCD
CBCD
CBCD sub_CBCD:                                                   ; CB5E↑p CB6A↑p 
CBCD                         ld      a, (ix+4)
CBD0                         and     0Fh
CBD2                         cp      0Fh
CBD4                         ret     z
CBD5                         ld      b, (ix+2)
CBD8                         call    sub_CC23
CBDB                         ld      a, (byte_E025)
CBDE                         or      a
CBDF                         ret     z
CBE0                         ld      a, (ix+4)
CBE3                         or      0Fh
CBE5                         ld      (ix+4), a
CBE8                         ld      a, (ix+0)
CBEB                         cp      11h
CBED                         jr      z, loc_CC0F
CBEF                         cp      13h
CBF1                         jr      nz, loc_CBF9
CBF3                         ld      (ix+0), 0FFh
CBF7                         jr      loc_CC01
CBF9 ; ---------------------------------------------------------------------------
CBF9
CBF9 loc_CBF9:                                                   ; CBF1
CBF9                         ld      (ix+0), 14h
CBFD                         ld      (ix+1), 0
CC01
CC01 loc_CC01:                                                   ; CBF7
CC01                         ld      (iy+2Bh), 51h ; 'Q'
CC05                         ld      (ix+0Ch), 0
CC09                         ld      b, 6
CC0B                         call    sub_53C7
CC0E                         ret
CC0F ; ---------------------------------------------------------------------------
CC0F
CC0F loc_CC0F:                                                   ; CBED
CC0F                         ld      (ix+0), 0FFh
CC13                         ld      (iy+2Bh), 0FFh
CC17                         ld      (iy+47h), 40h ; '@'
CC1B                         ld      (ix+0Ch), 1
CC1F                         call    sub_52DE
CC22                         ret
CC22 ; End of function sub_CBCD
CC22
CC23
CC23 ; =============== S U B R O U T I N E =======================================
CC23
CC23
CC23 sub_CC23:                                                   ; CBA9↑p CBD8↑p
CC23                         ld      a, (ix+4)
CC26                         cp      0FFh
CC28                         ret     z
CC29                         xor     a
CC2A                         ld      (byte_E025), a
CC2D                         ld      a, (iy+1)
CC30                         cp      2
CC32                         ret     nz
CC33                         ld      a, (iy+21h)
CC36                         cp      2
CC38                         ret     c
CC39                         ld      a, (iy+33h)
CC3C                         cp      10h
CC3E                         ret     nc
CC3F                         ld      a, (iy+32h)
CC42                         sub     b
CC43                         jr      nc, loc_CC47
CC45                         neg
CC47
CC47 loc_CC47:                                                   ; CC43
CC47                         cp      8
CC49                         ret     nc
CC4A                         ld      (iy+21h), 1
CC4E                         ld      a, 1
CC50                         ld      (byte_E025), a
CC53                         ret
CC53 ; End of function sub_CC23
CC53
CC54
CC54 ; =============== S U B R O U T I N E =======================================
CC54
CC54
CC54 sub_CC54:                                                   ; 57BB↑p CA50↑p
CC54                         ld      c, 1
CC56                         ld      iy, unk_E355
CC5A                         ld      de, 6
CC5D                         cp      1
CC5F                         jr      z, loc_CC63
CC61                         add     iy, de
CC63
CC63 loc_CC63:                                                   ; CC5F
CC63                         ld      a, (iy+1)
CC66                         cp      b
CC67                         jr      nc, loc_CC70
CC69                         ld      a, (iy+2)
CC6C                         cp      b
CC6D                         jr      c, loc_CC70
CC6F                         ret
CC70 ; ---------------------------------------------------------------------------
CC70
CC70 loc_CC70:                                                   ; CC67 CC6D
CC70                         ld      c, 0
CC72                         ret
CC72 ; End of function sub_CC54
CC72
CC73
CC73 ; =============== S U B R O U T I N E =======================================
CC73
CC73
CC73 sub_CC73:                                                   ; 579F↑p C4E8↑p 
CC73                         ld      c, 0
CC75                         ld      a, (base_strip_number)
CC78                         cp      8
CC7A                         jr      nc, loc_CC8F
CC7C                         ld      a, (base_strip_number)
CC7F                         cp      4
CC81                         ret     c
CC82                         ld      iy, object_action_table
CC86                         ld      a, (iy+0)
CC89                         cp      1
CC8B                         ret     z
CC8C                         cp      2
CC8E                         ret     z
CC8F
CC8F loc_CC8F:                                                   ; CC7A
CC8F                         ld      iy, unk_E355
CC93                         call    sub_CCA2
CC96                         ld      a, c
CC97                         or      a
CC98                         ret     nz
CC99                         ld      de, 6
CC9C                         add     iy, de
CC9E                         call    sub_CCA2
CCA1                         ret
CCA1 ; End of function sub_CC73
CCA1
CCA2
CCA2 ; =============== S U B R O U T I N E =======================================
CCA2
CCA2
CCA2 sub_CCA2:                                                   ; CC93↑p CC9E↑p
CCA2                         ld      a, (iy+1)
CCA5                         or      a
CCA6                         ret     z
CCA7                         ld      a, b
CCA8                         sub     (iy+1)
CCAB                         ret     c
CCAC                         ld      a, b
CCAD                         sub     (iy+2)
CCB0                         ret     nc
CCB1                         ld      d, (iy+0)
CCB4                         ld      c, 1
CCB6                         ret
CCB6 ; End of function sub_CCA2
CCB6
CCB7
CCB7 ; =============== S U B R O U T I N E =======================================
CCB7
CCB7
CCB7 sub_CCB7:                                                   ; sub_B663↑p
CCB7
CCB7 ; FUNCTION CHUNK AT 3F57 SIZE 00000047 BYTES
CCB7 ; FUNCTION CHUNK AT CE94 SIZE 0000007A BYTES
CCB7 ; FUNCTION CHUNK AT D1C2 SIZE 0000005F BYTES
CCB7 ; FUNCTION CHUNK AT D22E SIZE 00000060 BYTES
CCB7 ; FUNCTION CHUNK AT D2A0 SIZE 000000AE BYTES
CCB7
CCB7                         ld      ix, unk_E3B9
CCBB                         ld      a, (ix+0)
CCBE                         or      a
CCBF                         ret     z
CCC0                         ld      a, (ix+1)
CCC3                         cp      2
CCC5                         jp      z, loc_D1C2
CCC8                         cp      3
CCCA                         jp      z, loc_CE94
CCCD                         cp      1
CCCF                         ret     nz
CCD0                         ld      a, (ix+2)
CCD3                         or      a
CCD4                         jr      z, loc_CCDB
CCD6                         dec     a
CCD7                         ld      (ix+2), a
CCDA                         ret
CCDB ; ---------------------------------------------------------------------------
CCDB
CCDB loc_CCDB:                                                   ; CCD4
CCDB                         call    sub_CD41
CCDE                         call    sub_CCE5
CCE1                         call    sub_CDDC
CCE4                         ret
CCE4 ; End of function sub_CCB7
CCE4
CCE5
CCE5 ; =============== S U B R O U T I N E =======================================
CCE5
CCE5
CCE5 sub_CCE5:                                                   ; CCDE↑p
CCE5                         ld      a, (ix+0)
CCE8                         or      a
CCE9                         jp      z, loc_CD35
CCEC                         ld      iy, sprite118_y
CCF0                         ld      (iy+1), 3
CCF4                         ld      (iy+5), 3
CCF8                         ld      a, (ix+6)
CCFB                         ld      (iy+0), a
CCFE                         ld      (iy+4), a
CD01                         ld      a, (ix+4)
CD04                         ld      (iy+7), a
CD07                         sub     10h
CD09                         ld      (iy+3), a
CD0C                         ld      a, (ix+12h)
CD0F                         or      a
CD10                         jr      z, loc_CD1A
CD12                         cp      1
CD14                         jr      z, loc_CD23
CD16                         cp      2
CD18                         jr      z, loc_CD2C
CD1A
CD1A loc_CD1A:                                                   ; CD10
CD1A                         ld      (iy+2), 0D9h
CD1E                         ld      (iy+6), 0DAh
CD22                         ret
CD23 ; ---------------------------------------------------------------------------
CD23
CD23 loc_CD23:                                                   ; CD14
CD23                         ld      (iy+2), 0
CD27                         ld      (iy+6), 0DAh
CD2B                         ret
CD2C ; ---------------------------------------------------------------------------
CD2C
CD2C loc_CD2C:                                                   ; CD18
CD2C                         ld      (iy+2), 0D9h
CD30                         ld      (iy+6), 0
CD34                         ret
CD35 ; ---------------------------------------------------------------------------
CD35
CD35 loc_CD35:                                                   ; CCE9
CD35                         ld      iy, sprite118_y
CD39                         ld      b, 2
CD3B                         rst     do_sprite_clear_loop
CD3C                         ld      (ix+0), 0
CD40                         ret
CD40 ; End of function sub_CCE5
CD40
CD41
CD41 ; =============== S U B R O U T I N E =======================================
CD41
CD41
CD41 sub_CD41:                                                   ; loc_CCDB↑p
CD41                         ld      (ix+12h), 0
CD45                         ld      hl, 60h ; '`'
CD48                         ld      a, (ix+10h)
CD4B                         or      a
CD4C                         call    nz, negate_hl
CD4F                         ld      b, (ix+4)
CD52                         ld      c, (ix+5)
CD55                         add     hl, bc
CD56                         ld      (ix+4), h
CD59                         ld      (ix+5), l
CD5C                         ld      a, h
CD5D                         cp      8
CD5F                         jr      nc, loc_CD6D
CD61                         rst     random_number
CD62                         and     7Fh
CD64                         add     a, 30h ; '0'
CD66                         ld      (ix+14h), a
CD69                         ld      (ix+15h), 0
CD6D
CD6D loc_CD6D:                                                   ; CD5F
CD6D                         ld      a, (ix+10h)
CD70                         or      a
CD71                         jr      z, loc_CD74
CD73                         ret
CD74 ; ---------------------------------------------------------------------------
CD74
CD74 loc_CD74:                                                   ; CD71
CD74                         ld      a, h
CD75                         cp      0Eh
CD77                         ret     nc
CD78                         ld      (ix+12h), 1
CD7C                         ret
CD7C ; End of function sub_CD41
CD7C
CD7D
CD7D ; =============== S U B R O U T I N E =======================================
CD7D
CD7D
CD7D sub_CD7D:                                                   ; 08FB↑p
CD7D
CD7D ; FUNCTION CHUNK AT CFF3 SIZE 00000033 BYTES
CD7D ; FUNCTION CHUNK AT D40F SIZE 00000044 BYTES
CD7D
CD7D                         ld      ix, unk_E3B9
CD81                         ld      (ix+0), 0
CD85                         ld      a, (background_number)
CD88                         or      a
CD89                         ret     z
CD8A                         bit     3, a
CD8C                         jr      z, loc_CD9A
CD8E                         ld      a, (byte_E58C)
CD91                         or      a
CD92                         jr      nz, loc_CD9A
CD94                         ld      a, (game_level)
CD97                         cp      7Fh
CD99                         ret     c
CD9A
CD9A loc_CD9A:                                                   ; CD8C CD92
CD9A                         ld      a, (background_number)
CD9D                         and     7
CD9F                         cp      1
CDA1                         jr      z, loc_CDB0
CDA3                         cp      3
CDA5                         jp      z, loc_CFF3
CDA8                         cp      2
CDAA                         jp      z, loc_D40F
CDAD                         jp      loc_CFF3
CDB0 ; ---------------------------------------------------------------------------
CDB0
CDB0 loc_CDB0:                                                   ; CDA1
CDB0                         ld      ix, unk_E3B9
CDB4                         ld      (ix+0), 1
CDB8                         ld      (ix+1), 1
CDBC                         ld      (ix+2), 96h
CDC0                         rst     random_number
CDC1                         and     8Fh
CDC3                         add     a, 30h ; '0'
CDC5                         ld      (ix+14h), a
CDC8                         ld      a, (unk_E671)
CDCB                         and     1
CDCD                         ld      (ix+10h), a
CDD0                         ld      (ix+0Ch), a
CDD3                         ld      (ix+4), 0
CDD7                         ld      (ix+6), 0D8h
CDDB                         ret
CDDB ; End of function sub_CD7D
CDDB
CDDC
CDDC ; =============== S U B R O U T I N E =======================================
CDDC
CDDC
CDDC sub_CDDC:                                                   ; CCE1↑p
CDDC                         ld      a, (ix+15h)
CDDF                         cp      2
CDE1                         ret     nc
CDE2                         ld      a, (ix+4)
CDE5                         cp      10h
CDE7                         ret     c
CDE8                         cp      0E8h
CDEA                         ret     nc
CDEB                         ld      a, (ix+15h)
CDEE                         or      a
CDEF                         jr      nz, loc_CE01
CDF1                         ld      a, (ix+4)
CDF4                         cp      (ix+14h)
CDF7                         jr      nz, loc_CE01
CDF9                         ld      (ix+0Dh), 5Ah ; 'Z'
CDFD                         call    sub_406D
CE00                         ret
CE01 ; ---------------------------------------------------------------------------
CE01
CE01 loc_CE01:                                                   ; CDEF CDF7
CE01                         xor     a
CE02                         ld      (byte_E025), a
CE05                         ld      a, (ix+0Dh)
CE08                         or      a
CE09                         jr      z, loc_CE10
CE0B                         dec     a
CE0C                         ld      (ix+0Dh), a
CE0F                         ret
CE10 ; ---------------------------------------------------------------------------
CE10
CE10 loc_CE10:                                                   ; CE09
CE10                         call    sub_CE1C
CE13                         ld      a, (byte_E025)
CE16                         or      a
CE17                         ret     z
CE18                         call    sub_406D
CE1B                         ret
CE1B ; End of function sub_CDDC
CE1B
CE1C
CE1C ; =============== S U B R O U T I N E =======================================
CE1C
CE1C
CE1C sub_CE1C:                                                   ; loc_CE10↑p
CE1C                         ld      b, (ix+4)
CE1F                         ld      de, 50h ; 'P'
CE22                         ld      iy, George_data
CE26                         call    sub_CE34
CE29                         add     iy, de
CE2B                         call    sub_CE34
CE2E                         add     iy, de
CE30                         call    sub_CE34
CE33                         ret
CE33 ; End of function sub_CE1C
CE33
CE34
CE34 ; =============== S U B R O U T I N E =======================================
CE34
CE34
CE34 sub_CE34:                                                   ; CE26↑p CE2B↑p 
CE34                         ld      a, (byte_E025)
CE37                         or      a
CE38                         ret     nz
CE39                         ld      a, (iy+1)
CE3C                         cp      2
CE3E                         ret     nz
CE3F                         ld      a, (iy+0Ah)
CE42                         cp      80h
CE44                         ret     c
CE45                         ld      a, (ix+4)
CE48                         cp      80h
CE4A                         jr      c, loc_CE5A
CE4C                         ld      (ix+0Ch), 1
CE50                         ld      a, b
CE51                         sub     (iy+8)
CE54                         ret     c
CE55                         cp      80h
CE57                         ret     nc
CE58                         jr      loc_CE68
CE5A ; ---------------------------------------------------------------------------
CE5A
CE5A loc_CE5A:                                                   ; CE4A
CE5A                         ld      (ix+0Ch), 0
CE5E                         ld      a, b
CE5F                         sub     (iy+8)
CE62                         ret     nc
CE63                         neg
CE65                         cp      7Ch ; '|'
CE67                         ret     nc
CE68
CE68 loc_CE68:                                                   ; CE58
CE68                         push    bc
CE69                         sla     a
CE6B                         ld      c, a
CE6C                         call    sub_CE71
CE6F                         pop     bc
CE70                         ret
CE70 ; End of function sub_CE34
CE70
CE71
CE71 ; =============== S U B R O U T I N E =======================================
CE71
CE71
CE71 sub_CE71:                                                   ; CE6C↑p
CE71                         ld      a, 0C0h
CE73                         sub     (iy+0Ah)
CE76                         jr      c, loc_CE8E
CE78                         ld      b, a
CE79                         sub     c
CE7A                         jr      nc, loc_CE7E
CE7C                         neg
CE7E
CE7E loc_CE7E:                                                   ; CE7A
CE7E                         cp      6
CE80                         ret     nc
CE81
CE81 loc_CE81:                                                   ; CE92↓j
CE81                         ld      a, 1
CE83                         ld      (byte_E025), a
CE86                         ld      (ix+0Dh), 78h ; 'x'
CE8A                         inc     (ix+15h)
CE8D                         ret
CE8E ; ---------------------------------------------------------------------------
CE8E
CE8E loc_CE8E:                                                   ; CE76
CE8E                         ld      a, c
CE8F                         cp      40h ; '@'
CE91                         ret     nc
CE92                         jr      loc_CE81
CE92 ; End of function sub_CE71
CE92
CE94 ; ---------------------------------------------------------------------------
CE94 ; START OF FUNCTION CHUNK FOR sub_CCB7
CE94
CE94 loc_CE94:                                                   ; CCCA
CE94                         ld      ix, unk_E3B9
CE98                         ld      a, (ix+0)
CE9B                         or      a
CE9C                         ret     z
CE9D                         ld      a, (ix+1)
CEA0                         cp      3
CEA2                         ret     nz
CEA3                         ld      a, (ix+0)
CEA6                         cp      3
CEA8                         jr      z, loc_CEC6
CEAA                         cp      6
CEAC                         jr      z, loc_CEEB
CEAE                         cp      9
CEB0                         jr      z, loc_CEB3
CEB2                         ret
CEB3 ; ---------------------------------------------------------------------------
CEB3
CEB3 loc_CEB3:                                                   ; CEB0
CEB3                         call    sub_CF8A
CEB6                         call    sub_CF12
CEB9                         call    sub_D10D
CEBC                         ld      a, (ix+0)
CEBF                         cp      9
CEC1                         ret     nz
CEC2                         call    sub_D036
CEC5                         ret
CEC6 ; ---------------------------------------------------------------------------
CEC6
CEC6 loc_CEC6:                                                   ; CEA8
CEC6                         call    sub_CF12
CEC9                         ld      a, (ix+2)
CECC                         dec     a
CECD                         jr      z, loc_CED3
CECF                         ld      (ix+2), a
CED2                         ret
CED3 ; ---------------------------------------------------------------------------
CED3
CED3 loc_CED3:                                                   ; CECD
CED3                         ld      a, (ix+10h)
CED6                         xor     1
CED8                         ld      (ix+10h), a
CEDB                         ld      (ix+0), 6
CEDF                         rst     random_number
CEE0                         and     3Fh ; '?'
CEE2                         add     a, 3Fh ; '?'
CEE4                         ld      (ix+2), a
CEE7                         call    sub_D026
CEEA                         ret
CEEB ; ---------------------------------------------------------------------------
CEEB
CEEB loc_CEEB:                                                   ; CEAC
CEEB                         call    sub_CF12
CEEE                         call    sub_D036
CEF1                         ld      a, (ix+0)
CEF4                         cp      6
CEF6                         ret     nz
CEF7                         ld      a, (ix+2)
CEFA                         dec     a
CEFB                         jr      z, loc_CF01
CEFD                         ld      (ix+2), a
CF00                         ret
CF01 ; ---------------------------------------------------------------------------
CF01
CF01 loc_CF01:                                                   ; CEFB
CF01                         ld      (ix+0), 3
CF05                         rst     random_number
CF06                         and     7Fh
CF08                         add     a, 40h ; '@'
CF0A                         ld      (ix+2), a
CF0D                         ret
CF0D ; END OF FUNCTION CHUNK FOR sub_CCB7
CF0D ; ---------------------------------------------------------------------------
CF0E                         db 0CDh
CF0F                         db  12h
CF10                         db 0CFh
CF11                         db 0C9h
CF12
CF12 ; =============== S U B R O U T I N E =======================================
CF12
CF12
CF12 sub_CF12:                                                   ; CEB6↑p
CF12                                                             ; loc_CEC6↑p 
CF12
CF12 ; FUNCTION CHUNK AT CF58 SIZE 00000032 BYTES
CF12
CF12                         ld      a, (ix+0)
CF15                         or      a
CF16                         jp      z, loc_CF79
CF19                         ld      iy, sprite4_y
CF1D                         ld      a, (ix+0)
CF20                         cp      3
CF22                         jr      z, loc_CF6D
CF24                         cp      6
CF26                         jr      z, loc_CF58
CF28                         ld      iy, sprite4_y
CF2C                         rst     clear_all_sprite
CF2D                         ld      iy, sprite118_y
CF31                         call    sub_CF47
CF34                         ld      (iy+2), 75h ; 'u'
CF38                         ld      (iy+1), 3
CF3C                         ld      a, (ticker_countup)
CF3F                         and     4
CF41                         ret     z
CF42                         ld      (iy+1), 13h
CF46                         ret
CF46 ; End of function sub_CF12
CF46
CF47
CF47 ; =============== S U B R O U T I N E =======================================
CF47
CF47
CF47 sub_CF47:                                                   ; CF31↑p
CF47                                                             ; loc_CF58↓p 
CF47                         ld      a, (ix+6)
CF4A                         add     a, 8
CF4C                         ld      (iy+0), a
CF4F                         ld      a, (ix+4)
CF52                         sub     8
CF54                         ld      (iy+3), a
CF57                         ret
CF57 ; End of function sub_CF47
CF57
CF58 ; ---------------------------------------------------------------------------
CF58 ; START OF FUNCTION CHUNK FOR sub_CF12
CF58
CF58 loc_CF58:                                                   ; CF26
CF58                         call    sub_CF47
CF5B                         ld      (iy+2), 72h ; 'r'
CF5F                         ld      (iy+1), 3
CF63                         ld      a, (ix+10h)
CF66                         or      a
CF67                         ret     z
CF68                         ld      (iy+1), 13h
CF6C                         ret
CF6D ; ---------------------------------------------------------------------------
CF6D
CF6D loc_CF6D:                                                   ; CF22
CF6D                         call    sub_CF47
CF70                         ld      (iy+1), 3
CF74                         ld      (iy+2), 71h ; 'q'
CF78                         ret
CF79 ; ---------------------------------------------------------------------------
CF79
CF79 loc_CF79:                                                   ; CF16 CFAA↓j 
CF79                         ld      iy, sprite4_y
CF7D                         rst     clear_all_sprite
CF7E                         ld      iy, sprite118_y
CF82                         ld      b, 2
CF84                         rst     do_sprite_clear_loop
CF85                         ld      (ix+0), 0
CF89                         ret
CF89 ; END OF FUNCTION CHUNK FOR sub_CF12
CF8A
CF8A ; =============== S U B R O U T I N E =======================================
CF8A
CF8A
CF8A sub_CF8A:                                                   ; loc_CEB3↑p
CF8A                         ld      h, (ix+0Ah)
CF8D                         ld      l, (ix+0Bh)
CF90                         ld      bc, 0FF88h
CF93                         add     hl, bc
CF94                         ld      (ix+0Ah), h
CF97                         ld      (ix+0Bh), l
CF9A                         ld      b, (ix+6)
CF9D                         ld      c, (ix+7)
CFA0                         add     hl, bc
CFA1                         ld      (ix+6), h
CFA4                         ld      (ix+7), l
CFA7                         ld      a, h
CFA8                         cp      0F8h
CFAA                         jp      nc, loc_CF79
CFAD                         cp      0Dh
CFAF                         jr      nc, loc_CFDA
CFB1                         ld      a, (ix+0Ah)
CFB4                         bit     7, a
CFB6                         jr      z, loc_CFDA
CFB8                         ld      h, (ix+16h)
CFBB                         ld      l, (ix+17h)
CFBE                         ld      a, h
CFBF                         or      a
CFC0                         jr      nz, loc_CFC7
CFC2                         ld      hl, 100h
CFC5                         jr      loc_CFCB
CFC7 ; ---------------------------------------------------------------------------
CFC7
CFC7 loc_CFC7:                                                   ; CFC0
CFC7                         ld      bc, 0FF60h
CFCA                         add     hl, bc
CFCB
CFCB loc_CFCB:                                                   ; CFC5
CFCB                         ld      (ix+16h), h
CFCE                         ld      (ix+17h), l
CFD1                         ld      (ix+0Ah), h
CFD4                         ld      (ix+0Bh), l
CFD7                         ld      c, 112
CFD9                         rst     dispatch_sound
CFDA
CFDA loc_CFDA:                                                   ; CFAF CFB6
CFDA                         ld      b, (ix+4)
CFDD                         ld      c, (ix+5)
CFE0                         ld      h, (ix+8)
CFE3                         ld      l, (ix+9)
CFE6                         add     hl, bc
CFE7                         ld      (ix+4), h
CFEA                         ld      (ix+5), l
CFED                         ld      a, h
CFEE                         cp      8
CFF0                         jr      c, loc_CF79
CFF2                         ret
CFF2 ; End of function sub_CF8A
CFF2
CFF3 ; ---------------------------------------------------------------------------
CFF3 ; START OF FUNCTION CHUNK FOR sub_CD7D
CFF3
CFF3 loc_CFF3:                                                   ; CDA5 CDAD
CFF3                         ld      ix, unk_E3B9
CFF7                         ld      (ix+0), 3
CFFB                         ld      (ix+1), 3
CFFF                         ld      a, (unk_E671)
D002                         and     1                           ; Scroll Y Register
D004                         ld      (ix+10h), a
D007                         ld      (ix+2), 78h ; 'x'
D00B                         ld      (ix+6), 0Ah
D00F                         rst     random_number
D010                         and     70h ; 'p'
D012                         add     a, 35h ; '5'
D014                         cp      75h ; 'u'
D016                         jr      nz, loc_D01A
D018                         ld      a, 0B5h
D01A
D01A loc_D01A:                                                   ; D016
D01A                         ld      (ix+4), a
D01D                         ld      (ix+16h), 9
D021                         ld      (ix+17h), 0
D025                         ret
D025 ; END OF FUNCTION CHUNK FOR sub_CD7D
D026
D026 ; =============== S U B R O U T I N E =======================================
D026
D026
D026 sub_D026:                                                   ; CEE7↑p
D026                         ld      a, (ix+4)
D029                         ld      hl, bg_row30
D02C                         and     0F8h
D02E                         srl     a
D030                         srl     a
D032                         rst     HL_plus_A
D033                         ld      (hl), 63h ; 'c'
D035                         ret
D035 ; End of function sub_D026
D035
D036
D036 ; =============== S U B R O U T I N E =======================================
D036
D036
D036 sub_D036:                                                   ; CEC2↑p CEEE↑p
D036                         ld      a, (ix+0)
D039                         cp      9
D03B                         jr      z, loc_D096
D03D                         cp      6
D03F                         ret     nz
D040                         ld      de, 0FFFFh
D043                         ld      b, (ix+4)
D046                         ld      c, 9
D048                         call    sub_1354
D04B                         ld      a, (byte_E025)
D04E                         or      a
D04F                         ret     z
D050                         ld      (ix+0), 9
D054                         ld      hl, score_500
D057                         call    score_add_saveREGs
D05A                         ld      c, 112
D05C                         rst     dispatch_sound
D05D                         ld      b, 0
D05F                         ld      a, (ix+4)
D062                         sub     (iy+8)
D065                         jr      nc, loc_D06B
D067                         ld      b, 1
D069                         neg
D06B
D06B loc_D06B:                                                   ; D065
D06B                         ld      hl, unk_D104
D06E                         rst     HL_plus_A
D06F                         ld      l, (hl)
D070                         ld      h, 0
D072                         ld      a, (ix+4)
D075                         cp      (iy+8)
D078                         call    c, negate_hl
D07B                         ld      (ix+8), h
D07E                         ld      (ix+9), l
D081                         ld      (ix+0Ah), 9
D085                         ld      (ix+0Bh), 0
D089                         ld      a, (ix+10h)
D08C                         cp      b
D08D                         ret     z
D08E                         ld      (iy+2Bh), 51h ; 'Q'
D092                         call    sub_53C5
D095                         ret
D096 ; ---------------------------------------------------------------------------
D096
D096 loc_D096:                                                   ; D03B
D096                         ld      d, (ix+6)
D099                         ld      e, 9
D09B                         ld      b, (ix+4)
D09E                         ld      c, 9
D0A0                         call    sub_1354
D0A3                         ld      a, (byte_E025)
D0A6                         or      a
D0A7                         ret     z
D0A8                         ld      (ix+0), 9
D0AC                         ld      c, 112
D0AE                         rst     dispatch_sound
D0AF                         ld      hl, score_500
D0B2                         call    score_add_saveREGs
D0B5                         ld      a, (iy+26h)
D0B8                         cp      4
D0BA                         jr      z, loc_D0D7
D0BC                         cp      3
D0BE                         jr      z, loc_D0E5
D0C0                         ld      hl, 600h
D0C3                         call    sub_D0F4
D0C6                         ld      (ix+0Ah), 3
D0CA                         ld      (ix+0Bh), 0
D0CE                         ld      (ix+16h), 3
D0D2                         ld      (ix+17h), 0
D0D6                         ret
D0D7 ; ---------------------------------------------------------------------------
D0D7
D0D7 loc_D0D7:                                                   ; D0BA
D0D7                         ld      (ix+0Ah), 9
D0DB                         ld      (ix+16h), 9
D0DF                         ld      hl, 180h
D0E2                         jp      sub_D0F4
D0E5 ; ---------------------------------------------------------------------------
D0E5
D0E5 loc_D0E5:                                                   ; D0BE
D0E5                         ld      hl, 80h
D0E8                         call    sub_D0F4
D0EB                         ld      (ix+0Ah), 0Ah
D0EF                         ld      (ix+16h), 0Ah
D0F3                         ret
D0F3 ; End of function sub_D036
D0F3
D0F4
D0F4 ; =============== S U B R O U T I N E =======================================
D0F4
D0F4
D0F4 sub_D0F4:                                                   ; D0C3↑p D0E2 
D0F4                         ld      a, (ix+4)
D0F7                         cp      (iy+8)
D0FA                         call    c, negate_hl
D0FD                         ld      (ix+8), h
D100                         ld      (ix+9), l
D103                         ret
D103 ; End of function sub_D0F4
D103
D103 ; ---------------------------------------------------------------------------
D104 unk_D104:               db  80h                             ; loc_D06B↑o
D105                         db  90h
D106                         db 0A0h
D107                         db 0B0h
D108                         db 0C0h
D109                         db 0D0h
D10A                         db 0E0h
D10B                         db 0F0h
D10C                         db 0F0h
D10D
D10D ; =============== S U B R O U T I N E =======================================
D10D
D10D
D10D sub_D10D:                                                   ; CEB9↑p
D10D                         xor     a
D10E                         ld      (byte_E025), a
D111                         ld      iy, unk_E361
D115                         call    sub_D146
D118                         ld      iy, unk_E379
D11C                         ld      a, (byte_E025)
D11F                         or      a
D120                         jp      nz, loc_CF79
D123                         call    sub_D146
D126                         ld      iy, unk_E391
D12A                         ld      a, (byte_E025)
D12D                         or      a
D12E                         jp      nz, loc_CF79
D131                         call    sub_D146
D134                         ld      a, (byte_E025)
D137                         or      a
D138                         jp      nz, loc_CF79
D13B                         call    sub_D182
D13E                         ld      a, (byte_E025)
D141                         or      a
D142                         jp      nz, loc_CF79
D145                         ret
D145 ; End of function sub_D10D
D145
D146
D146 ; =============== S U B R O U T I N E =======================================
D146
D146
D146 sub_D146:                                                   ; D115↑p D123↑p 
D146                         ld      a, (iy+0)
D149                         or      a
D14A                         ret     z
D14B                         cp      11h
D14D                         ret     z
D14E                         cp      12h
D150                         ret     z
D151                         cp      0FFh
D153                         ret     z
D154                         ld      a, (iy+0)
D157                         ld      a, (ix+4)
D15A                         sub     (iy+4)
D15D                         jr      nc, loc_D161
D15F                         neg
D161
D161 loc_D161:                                                   ; D15D
D161                         cp      0Ch
D163                         ret     nc
D164                         ld      a, (ix+6)
D167                         sub     (iy+6)
D16A                         jr      nc, loc_D16E
D16C                         neg
D16E
D16E loc_D16E:                                                   ; D16A
D16E                         cp      7
D170                         ret     nc
D171                         ld      (iy+0), 0FFh
D175                         ld      a, 1
D177                         ld      (byte_E025), a
D17A                         ld      (iy+0Dh), 10h
D17E                         ld      c, 94
D180                         rst     dispatch_sound
D181                         ret
D181 ; End of function sub_D146
D181
D182
D182 ; =============== S U B R O U T I N E =======================================
D182
D182
D182 sub_D182:                                                   ; D13B↑p
D182                         ld      iy, unk_E3A9
D186                         ld      a, (iy+0)
D189                         or      a
D18A                         ret     z
D18B                         cp      59h ; 'Y'
D18D                         ret     z
D18E                         cp      99h
D190                         ret     z
D191                         cp      1
D193                         ret     z
D194                         ld      a, (ix+6)
D197                         cp      10h
D199                         ret     nc
D19A                         ld      a, (ix+4)
D19D                         sub     (iy+2)
D1A0                         jr      nc, loc_D1A4
D1A2                         neg
D1A4
D1A4 loc_D1A4:                                                   ; D1A0
D1A4                         cp      10h
D1A6                         ret     nc
D1A7                         ld      a, 1
D1A9                         ld      (iy+4), a
D1AC                         ld      (byte_E025), a
D1AF                         ld      (iy+0), 59h ; 'Y'
D1B3                         ld      (iy+1), 0
D1B7                         ld      c, 95
D1B9                         rst     dispatch_sound
D1BA                         ld      a, (iy+0Ah)
D1BD                         dec     a
D1BE                         ld      (iy+0Ah), a
D1C1                         ret
D1C1 ; End of function sub_D182
D1C1
D1C2 ; ---------------------------------------------------------------------------
D1C2 ; START OF FUNCTION CHUNK FOR sub_CCB7
D1C2
D1C2 loc_D1C2:                                                   ; CCC5
D1C2                         ld      ix, unk_E3B9
D1C6                         ld      a, (ix+0)
D1C9                         or      a
D1CA                         ret     z
D1CB                         cp      2
D1CD                         jr      z, loc_D1DE
D1CF                         cp      3
D1D1                         jp      z, loc_D319
D1D4                         cp      4
D1D6                         jr      z, locret_D1DD
D1D8                         cp      5
D1DA                         jr      z, loc_D22E
D1DC                         ret
D1DD ; ---------------------------------------------------------------------------
D1DD
D1DD locret_D1DD:                                                ; D1D6
D1DD                         ret
D1DE ; ---------------------------------------------------------------------------
D1DE
D1DE loc_D1DE:                                                   ; D1CD
D1DE                         call    sub_D3E8
D1E1                         call    sub_D34E
D1E4                         call    sub_D453
D1E7                         ld      a, (ix+0)
D1EA                         or      a
D1EB                         ret     z
D1EC                         ld      a, (ix+13h)
D1EF                         call    sub_1509
D1F2                         ld      a, (iy+0Dh)
D1F5                         cp      0
D1F7                         jr      nz, loc_D219
D1F9                         ld      a, (iy+8)
D1FC                         add     a, 8
D1FE                         cp      (ix+6)
D201                         jr      nz, loc_D219
D203
D203 loc_D203:                                                   ; D21F↓j
D203                         ld      (ix+0), 3
D207                         ld      bc, 0
D20A                         ld      de, 0
D20D                         call    sub_D221
D210                         ld      (ix+2), 10h
D214                         ld      (ix+16h), 0
D218                         ret
D219 ; ---------------------------------------------------------------------------
D219
D219 loc_D219:                                                   ; D1F7 D201
D219                         ld      a, (ix+6)
D21C                         cp      1Ch
D21E                         ret     nz
D21F                         jr      loc_D203
D21F ; END OF FUNCTION CHUNK FOR sub_CCB7
D221
D221 ; =============== S U B R O U T I N E =======================================
D221
D221
D221 sub_D221:                                                   ; D20D↑p D281↓p 
D221                         ld      (ix+8), b
D224                         ld      (ix+9), c
D227                         ld      (ix+0Ah), d
D22A                         ld      (ix+0Bh), e
D22D                         ret
D22D ; End of function sub_D221
D22D
D22E ; ---------------------------------------------------------------------------
D22E ; START OF FUNCTION CHUNK FOR sub_CCB7
D22E
D22E loc_D22E:                                                   ; D1DA
D22E                         ld      a, (ix+13h)
D231                         call    sub_1509
D234                         ld      a, (iy+8)
D237                         add     a, 8
D239                         cp      (ix+6)
D23C                         jp      nz, loc_D3DC
D23F                         call    sub_D453
D242                         ld      a, (ix+0)
D245                         or      a
D246                         ret     z
D247                         call    sub_D382
D24A                         ld      a, (ix+16h)
D24D                         or      a
D24E                         jp      z, loc_D2A0
D251                         cp      1
D253                         jr      z, loc_D25B
D255                         cp      0FFh
D257                         jp      z, loc_D2D2
D25A                         ret
D25B ; ---------------------------------------------------------------------------
D25B
D25B loc_D25B:                                                   ; D253
D25B                         call    sub_D3E8
D25E                         ld      a, (ix+13h)
D261                         call    sub_1509
D264                         ld      a, (ix+10h)
D267                         or      a
D268                         jr      z, loc_D285
D26A                         ld      a, (iy+7)
D26D                         add     a, 4
D26F                         cp      (ix+4)
D272                         ret     nz
D273
D273 loc_D273:                                                   ; D28C↓j
D273                         ld      (ix+16h), 0FFh
D277                         ld      (ix+2), 1Fh
D27B                         ld      bc, 0
D27E                         ld      de, 0
D281                         call    sub_D221
D284                         ret
D285 ; ---------------------------------------------------------------------------
D285
D285 loc_D285:                                                   ; D268
D285                         ld      a, (iy+6)
D288                         cp      (ix+4)
D28B                         ret     nz
D28C                         jr      loc_D273
D28C ; END OF FUNCTION CHUNK FOR sub_CCB7
D28E
D28E ; =============== S U B R O U T I N E =======================================
D28E
D28E
D28E sub_D28E:                                                   ; D2C9↓p D315↓p
D28E                         ld      hl, 80h
D291                         ld      a, (ix+10h)
D294                         or      a
D295                         call    z, negate_hl
D298                         push    hl
D299                         pop     bc
D29A                         ld      de, 0
D29D                         jp      sub_D221
D29D ; End of function sub_D28E
D29D
D2A0 ; ---------------------------------------------------------------------------
D2A0 ; START OF FUNCTION CHUNK FOR sub_CCB7
D2A0
D2A0 loc_D2A0:                                                   ; D24E
D2A0                         ld      iy, George_data
D2A4                         ld      de, 50h ; 'P'
D2A7                         ld      b, 3
D2A9
D2A9 loc_D2A9:                                                   ; D2CF↓j
D2A9                         ld      a, (iy+1)
D2AC                         cp      2
D2AE                         jr      nz, loc_D2CD
D2B0                         ld      a, (iy+17h)
D2B3                         cp      (ix+13h)
D2B6                         jr      nz, loc_D2CD
D2B8                         ld      a, (iy+16h)
D2BB                         cp      2
D2BD                         jr      nz, loc_D2CD
D2BF                         ld      a, (iy+1Dh)
D2C2                         ld      (ix+10h), a
D2C5                         ld      (ix+16h), 1
D2C9                         call    sub_D28E
D2CC                         ret
D2CD ; ---------------------------------------------------------------------------
D2CD
D2CD loc_D2CD:                                                   ; D2AE D2B6 
D2CD                         add     iy, de
D2CF                         djnz    loc_D2A9
D2D1                         ret
D2D2 ; ---------------------------------------------------------------------------
D2D2
D2D2 loc_D2D2:                                                   ; D257
D2D2                         ld      a, (ix+2)
D2D5                         dec     a
D2D6                         ld      (ix+2), a
D2D9                         jr      z, loc_D309
D2DB                         cp      15h
D2DD                         jr      z, loc_D2E6
D2DF                         cp      0Bh
D2E1                         jr      z, loc_D2E6
D2E3                         cp      1
D2E5                         ret     nz
D2E6
D2E6 loc_D2E6:                                                   ; D2DD D2E1
D2E6                         ld      iy, George_data
D2EA                         ld      de, 50h ; 'P'
D2ED                         ld      b, 3
D2EF
D2EF loc_D2EF:                                                   ; D307↓j
D2EF                         ld      a, (iy+1)
D2F2                         cp      2
D2F4                         jr      nz, loc_D305
D2F6                         ld      a, (iy+8)
D2F9                         sub     (ix+4)
D2FC                         jr      nc, loc_D300
D2FE                         neg
D300
D300 loc_D300:                                                   ; D2FC
D300                         cp      18h
D302                         jp      c, loc_3F57
D305
D305 loc_D305:                                                   ; D2F4
D305                         add     iy, de
D307                         djnz    loc_D2EF
D309
D309 loc_D309:                                                   ; D2D9
D309                         ld      a, (ix+10h)
D30C                         xor     1
D30E                         ld      (ix+10h), a
D311                         ld      (ix+16h), 1
D315                         call    sub_D28E
D318                         ret
D319 ; ---------------------------------------------------------------------------
D319
D319 loc_D319:                                                   ; D1D1
D319                         call    sub_D453
D31C                         ld      a, (ix+0)
D31F                         or      a
D320                         ret     z
D321                         ld      a, (ix+2)
D324                         dec     a
D325                         ld      (ix+2), a
D328                         ld      b, a
D329                         or      a
D32A                         jr      z, loc_D33A
D32C                         ld      iy, sprite118_y
D330                         ld      a, (ix+6)
D333                         add     a, 8
D335                         add     a, b
D336                         ld      (iy+0), a
D339                         ret
D33A ; ---------------------------------------------------------------------------
D33A
D33A loc_D33A:                                                   ; D32A
D33A                         ld      iy, sprite118_y
D33E                         rst     clear_all_sprite
D33F                         ld      (ix+0), 5
D343                         cp      (ix+6)
D346                         cp      20h ; ' '
D348                         ret     nc
D349                         ld      (ix+0), 4
D34D                         ret
D34D ; END OF FUNCTION CHUNK FOR sub_CCB7
D34E
D34E ; =============== S U B R O U T I N E =======================================
D34E
D34E
D34E sub_D34E:                                                   ; D1E1↑p
D34E                         ld      a, (ix+0)
D351                         or      a
D352                         jp      z, loc_D3DC
D355                         ld      iy, sprite118_y
D359                         ld      (iy+1), 3
D35D                         ld      (iy+5), 3
D361                         ld      a, (ix+4)
D364                         sub     8
D366                         ld      (iy+3), a
D369                         ld      (iy+7), a
D36C                         ld      a, (ix+6)
D36F                         add     a, 8
D371                         ld      (iy+4), a
D374                         add     a, 10h
D376                         ld      (iy+0), a
D379                         ld      (iy+2), 73h ; 's'
D37D                         ld      (iy+6), 0BDh
D381                         ret
D381 ; End of function sub_D34E
D381
D382
D382 ; =============== S U B R O U T I N E =======================================
D382
D382
D382 sub_D382:                                                   ; D247↑p
D382                         ld      a, (ix+0)
D385                         or      a
D386                         jp      z, loc_D3DC
D389                         ld      iy, sprite119_y
D38D                         ld      a, (ix+4)
D390                         sub     8
D392                         ld      (iy+3), a
D395                         ld      a, (ix+6)
D398                         add     a, 8
D39A                         ld      (iy+4), a
D39D                         ld      b, 3
D39F                         ld      a, (ix+10h)
D3A2                         or      a
D3A3                         jr      z, loc_D3A7
D3A5                         ld      b, 13h
D3A7
D3A7 loc_D3A7:                                                   ; D3A3
D3A7                         ld      (iy+1), b
D3AA                         ld      a, (ix+16h)
D3AD                         or      a
D3AE                         jp      z, loc_D3C9
D3B1                         cp      0FFh
D3B3                         jr      z, loc_D3C4
D3B5                         ld      b, 82h
D3B7                         ld      a, (ticker_countup)
D3BA                         and     4
D3BC                         jr      z, loc_D3C0
D3BE                         ld      b, 83h
D3C0
D3C0 loc_D3C0:                                                   ; D3BC
D3C0                         ld      (iy+2), b
D3C3                         ret
D3C4 ; ---------------------------------------------------------------------------
D3C4
D3C4 loc_D3C4:                                                   ; D3B3
D3C4                         ld      (iy+2), 74h ; 't'
D3C8                         ret
D3C9 ; ---------------------------------------------------------------------------
D3C9
D3C9 loc_D3C9:                                                   ; D3AE
D3C9                         ld      (iy+2), 87h
D3CD                         ld      (iy+1), 3
D3D1                         ld      a, (ticker_countup)
D3D4                         and     20h ; ' '
D3D6                         ret     z
D3D7                         ld      (iy+1), 13h
D3DB                         ret
D3DC ; ---------------------------------------------------------------------------
D3DC
D3DC loc_D3DC:                                                   ; D23C D352 
D3DC                         ld      iy, sprite118_y
D3E0                         ld      b, 2
D3E2                         rst     do_sprite_clear_loop
D3E3                         ld      (ix+0), 0
D3E7                         ret
D3E7 ; End of function sub_D382
D3E7
D3E8
D3E8 ; =============== S U B R O U T I N E =======================================
D3E8
D3E8
D3E8 sub_D3E8:                                                   ; loc_D1DE↑p
D3E8                                                             ; loc_D25B↑p
D3E8                         ld      b, (ix+8)
D3EB                         ld      c, (ix+9)
D3EE                         ld      h, (ix+4)
D3F1                         ld      l, (ix+5)
D3F4                         add     hl, bc
D3F5                         ld      (ix+4), h
D3F8                         ld      (ix+5), l
D3FB                         ld      b, (ix+0Ah)
D3FE                         ld      c, (ix+0Bh)
D401                         ld      h, (ix+6)
D404                         ld      l, (ix+7)
D407                         add     hl, bc
D408                         ld      (ix+6), h
D40B                         ld      (ix+7), l
D40E                         ret
D40E ; End of function sub_D3E8
D40E
D40F ; ---------------------------------------------------------------------------
D40F ; START OF FUNCTION CHUNK FOR sub_CD7D
D40F
D40F loc_D40F:                                                   ; CDAA
D40F                         ld      ix, unk_E3B9
D413                         ld      (ix+0), 2
D417                         ld      (ix+1), 2
D41B                         ld      (ix+2), 0
D41F                         ld      iy, Building1_data
D423                         ld      a, (iy+8)
D426                         cp      70h ; 'p'
D428                         jr      nc, loc_D42F
D42A                         ld      de, 18h
D42D                         add     iy, de
D42F
D42F loc_D42F:                                                   ; D428
D42F                         ld      de, 0FF00h
D432                         ld      bc, 0
D435                         call    sub_D221
D438                         ld      a, (iy+0)
D43B                         ld      (ix+13h), a
D43E                         ld      a, (iy+6)
D441                         add     a, 10h
D443                         ld      (ix+4), a
D446                         ld      (ix+6), 0E8h
D44A                         ld      a, (iy+8)
D44D                         add     a, 8
D44F                         cp      (ix+0Fh)
D452                         ret
D452 ; END OF FUNCTION CHUNK FOR sub_CD7D
D453
D453 ; =============== S U B R O U T I N E =======================================
D453
D453
D453 sub_D453:                                                   ; D1E4↑p D23F↑p 
D453                         ld      b, (ix+4)
D456                         ld      c, 8
D458                         ld      d, (ix+6)
D45B                         ld      e, 8
D45D                         call    sub_1354
D460                         ld      a, (byte_E025)
D463                         or      a
D464                         ret     z
D465                         ld      hl, score_50
D468                         call    score_add_saveREGs
D46B                         ld      (iy+2Bh), 51h ; 'Q'
D46F                         jp      loc_D3DC
D46F ; End of function sub_D453
D46F
D472 ; ---------------------------------------------------------------------------
D472                         ld      a, (ix+15h)
D475                         cp      2
D477                         ret     nc
D478                         ld      a, (ix+4)
D47B                         cp      10h
D47D                         ret     c
D47E                         cp      0E8h
D480                         ret     nc
D481                         ld      a, (ix+15h)
D484                         or      a
D485                         jr      nz, loc_D497
D487                         ld      a, (ix+4)
D48A                         cp      (ix+14h)
D48D                         jr      nz, loc_D497
D48F                         ld      (ix+0Dh), 78h ; 'x'
D493                         call    sub_406D
D496                         ret
D497 ; ---------------------------------------------------------------------------
D497
D497 loc_D497:                                                   ; D485 D48D
D497                         xor     a
D498                         ld      (byte_E025), a
D49B                         ld      a, (ix+0Dh)
D49E                         or      a
D49F                         jr      z, loc_D4A6
D4A1                         dec     a
D4A2                         ld      (ix+0Dh), a
D4A5                         ret
D4A6 ; ---------------------------------------------------------------------------
D4A6
D4A6 loc_D4A6:                                                   ; D49F
D4A6                         call    sub_D4B2
D4A9                         ld      a, (byte_E025)
D4AC                         or      a
D4AD                         ret     z
D4AE                         call    sub_406D
D4B1                         ret
D4B2
D4B2 ; =============== S U B R O U T I N E =======================================
D4B2
D4B2
D4B2 sub_D4B2:                                                   ; loc_D4A6↑p
D4B2                         ld      b, (ix+4)
D4B5                         ld      de, 50h ; 'P'
D4B8                         ld      iy, George_data
D4BC                         call    sub_D4CA
D4BF                         add     iy, de
D4C1                         call    sub_D4CA
D4C4                         add     iy, de
D4C6                         call    sub_D4CA
D4C9                         ret
D4C9 ; End of function sub_D4B2
D4C9
D4CA
D4CA ; =============== S U B R O U T I N E =======================================
D4CA
D4CA
D4CA sub_D4CA:                                                   ; D4BC↑p D4C1↑p 
D4CA                         ld      a, (byte_E025)
D4CD                         or      a
D4CE                         ret     nz
D4CF                         ld      a, (iy+1)
D4D2                         cp      2
D4D4                         ret     nz
D4D5                         ld      a, (iy+0Ah)
D4D8                         cp      80h
D4DA                         ret     c
D4DB                         ld      a, (ix+4)
D4DE                         cp      80h
D4E0                         jr      c, loc_D4F0
D4E2                         ld      (ix+0Ch), 1
D4E6                         ld      a, b
D4E7                         sub     (iy+8)
D4EA                         ret     c
D4EB                         cp      80h
D4ED                         ret     nc
D4EE                         jr      loc_D4FE
D4F0 ; ---------------------------------------------------------------------------
D4F0
D4F0 loc_D4F0:                                                   ; D4E0
D4F0                         ld      (ix+0Ch), 0
D4F4                         ld      a, b
D4F5                         sub     (iy+8)
D4F8                         ret     nc
D4F9                         neg
D4FB                         cp      7Ch ; '|'
D4FD                         ret     nc
D4FE
D4FE loc_D4FE:                                                   ; D4EE
D4FE                         push    bc
D4FF                         sla     a
D501                         ld      c, a
D502                         call    sub_D507
D505                         pop     bc
D506                         ret
D506 ; End of function sub_D4CA
D506
D507
D507 ; =============== S U B R O U T I N E =======================================
D507
D507
D507 sub_D507:                                                   ; D502↑p
D507                         ld      a, 0C0h
D509                         sub     (iy+0Ah)
D50C                         jr      c, loc_D524
D50E                         ld      b, a
D50F                         sub     c
D510                         jr      nc, loc_D514
D512                         neg
D514
D514 loc_D514:                                                   ; D510
D514                         cp      6
D516                         ret     nc
D517
D517 loc_D517:                                                   ; D528↓j
D517                         ld      a, 1
D519                         ld      (byte_E025), a
D51C                         ld      (ix+0Dh), 0B4h
D520                         inc     (ix+15h)
D523                         ret
D524 ; ---------------------------------------------------------------------------
D524
D524 loc_D524:                                                   ; D50C
D524                         ld      a, c
D525                         cp      40h ; '@'
D527                         ret     nc
D528                         jr      loc_D517
D528 ; End of function sub_D507
D528
D52A
D52A ; =============== S U B R O U T I N E =======================================
D52A
D52A
D52A sub_D52A:                                                   ; 09B2↑p
D52A                         ld      ix, unk_E337
D52E                         ld      a, (ix+0)
D531                         or      a
D532                         ret     z
D533                         ld      a, (ix+0)
D536                         cp      59h ; 'Y'
D538                         jr      z, loc_D57A
D53A                         cp      69h ; 'i'
D53C                         jr      z, loc_D58A
D53E                         call    sub_D63F
D541                         ld      a, (ix+0)
D544                         cp      59h ; 'Y'
D546                         ret     z
D547                         cp      69h ; 'i'
D549                         ret     z
D54A                         ld      a, (ix+8)
D54D                         call    sub_54A1
D550                         ld      a, (iy+9)
D553                         cp      1
D555                         jp      z, loc_D630
D558                         ld      b, 1Eh
D55A                         ld      a, (game_level)
D55D                         cp      0Ah
D55F                         jr      c, loc_D563
D561                         ld      b, 0Fh
D563
D563 loc_D563:                                                   ; D55F
D563                         ld      a, (ix+2)
D566                         inc     a
D567                         cp      b
D568                         jr      c, loc_D573
D56A                         xor     a
D56B                         ld      a, (ix+6)
D56E                         xor     1
D570                         ld      (ix+6), a
D573
D573 loc_D573:                                                   ; D568
D573                         ld      (ix+2), a
D576                         call    sub_D5A5
D579                         ret
D57A ; ---------------------------------------------------------------------------
D57A
D57A loc_D57A:                                                   ; D538
D57A                         ld      a, (ix+2)
D57D                         inc     a
D57E                         ld      (ix+2), a
D581                         cp      20h ; ' '
D583                         jp      z, loc_D630
D586                         call    sub_D5E7
D589                         ret
D58A ; ---------------------------------------------------------------------------
D58A
D58A loc_D58A:                                                   ; D53C
D58A                         ld      a, (ix+2)
D58D                         inc     a
D58E                         ld      (ix+2), a
D591                         cp      23h ; '#'
D593                         jp      z, loc_D630
D596                         ld      iy, sprite53_y
D59A                         ld      a, (ticker_countup)
D59D                         and     1
D59F                         ld      (ix+6), a
D5A2                         jp      loc_D5BD
D5A2 ; End of function sub_D52A
D5A2
D5A5
D5A5 ; =============== S U B R O U T I N E =======================================
D5A5
D5A5
D5A5 sub_D5A5:                                                   ; D576↑p
D5A5                         ld      iy, sprite53_y
D5A9                         ld      (iy+1), 3
D5AD                         ld      a, (ix+4)
D5B0                         sub     8
D5B2                         ld      (iy+3), a
D5B5                         ld      a, (ix+5)
D5B8                         add     a, 8
D5BA                         ld      (iy+0), a
D5BD
D5BD loc_D5BD:                                                   ; D5A2
D5BD                         call    sub_D5CC
D5C0                         ld      b, a
D5C1                         ld      a, (ix+6)
D5C4                         or      a
D5C5                         jr      nz, loc_D5C8
D5C7                         dec     b
D5C8
D5C8 loc_D5C8:                                                   ; D5C5
D5C8                         ld      (iy+2), b
D5CB                         ret
D5CB ; End of function sub_D5A5
D5CB
D5CC
D5CC ; =============== S U B R O U T I N E =======================================
D5CC
D5CC
D5CC sub_D5CC:                                                   ; loc_D5BD↑p
D5CC                         ld      a, (ix+1)
D5CF                         cp      0FDh
D5D1                         jr      z, loc_D5DE
D5D3                         cp      0FAh
D5D5                         jr      z, loc_D5E1
D5D7                         cp      0FCh
D5D9                         jr      z, loc_D5E4
D5DB                         ld      a, 0ECh
D5DD                         ret
D5DE ; ---------------------------------------------------------------------------
D5DE
D5DE loc_D5DE:                                                   ; D5D1
D5DE                         ld      a, 0F2h
D5E0                         ret
D5E1 ; ---------------------------------------------------------------------------
D5E1
D5E1 loc_D5E1:                                                   ; D5D5
D5E1                         ld      a, 0EEh
D5E3                         ret
D5E4 ; ---------------------------------------------------------------------------
D5E4
D5E4 loc_D5E4:                                                   ; D5D9
D5E4                         ld      a, 0F0h
D5E6                         ret
D5E6 ; End of function sub_D5CC
D5E6
D5E7
D5E7 ; =============== S U B R O U T I N E =======================================
D5E7
D5E7
D5E7 sub_D5E7:                                                   ; D586↑p
D5E7                         ld      iy, sprite53_y
D5EB                         ld      (iy+2), 0FEh
D5EF                         ld      iy, sprite55_y
D5F3                         ld      a, (ix+2)
D5F6                         cp      10h
D5F8                         jp      nc, clear_sprite_details
D5FB                         ld      a, (ix+0)
D5FE                         or      a
D5FF                         jp      z, loc_D630
D602                         ld      (iy+1), 0Bh
D606                         ld      a, (ix+4)
D609                         sub     8
D60B                         ld      (iy+3), a
D60E                         ld      a, (ix+5)
D611                         add     a, 8
D613                         ld      (iy+0), a
D616                         ld      a, (ix+2)
D619                         cp      9
D61B                         jr      c, loc_D62B
D61D                         cp      0Eh
D61F                         jr      c, loc_D626
D621                         ld      (iy+2), 73h ; 's'
D625                         ret
D626 ; ---------------------------------------------------------------------------
D626
D626 loc_D626:                                                   ; D61F
D626                         ld      (iy+2), 74h ; 't'
D62A                         ret
D62B ; ---------------------------------------------------------------------------
D62B
D62B loc_D62B:                                                   ; D61B
D62B                         ld      (iy+2), 75h ; 'u'
D62F                         ret
D630 ; ---------------------------------------------------------------------------
D630
D630 loc_D630:                                                   ; D555 D583 
D630                         ld      iy, sprite53_y
D634                         rst     clear_all_sprite
D635                         ld      iy, sprite55_y
D639                         rst     clear_all_sprite
D63A                         ld      (ix+0), 0
D63E                         ret
D63E ; End of function sub_D5E7
D63E
D63F
D63F ; =============== S U B R O U T I N E =======================================
D63F
D63F
D63F sub_D63F:                                                   ; D53E↑p
D63F                         ld      a, (ix+9)
D642                         or      a
D643                         ret     nz
D644                         ld      b, (ix+4)
D647                         ld      c, 8
D649                         ld      a, (ix+5)
D64C                         sub     2
D64E                         ld      d, a
D64F                         ld      e, 0Ah
D651                         call    sub_1354
D654                         ld      a, (byte_E025)
D657                         or      a
D658                         ret     z
D659                         ld      (ix+9), 1
D65D                         ld      a, (ix+1)
D660                         cp      0FBh
D662                         jr      z, loc_D694
D664                         ld      a, (ix+6)
D667                         or      a
D668                         jr      nz, loc_D67C
D66A
D66A loc_D66A:                                                   ; D6AA↓j
D66A                         ld      hl, score_1000
D66D                         call    score_add_saveREGs
D670                         ld      (ix+0), 59h ; 'Y'
D674                         ld      (ix+2), 0
D678                         ld      c, 78
D67A                         rst     dispatch_sound
D67B                         ret
D67C ; ---------------------------------------------------------------------------
D67C
D67C loc_D67C:                                                   ; D668 D6A2↓j 
D67C                         ld      (iy+2Bh), 0
D680                         ld      (iy+3Eh), 28h ; '('
D684                         ld      (iy+3Dh), 12h
D688                         ld      (ix+0), 69h ; 'i'
D68C                         ld      (ix+2), 0
D690                         ld      c, 62
D692                         rst     dispatch_sound
D693                         ret
D694 ; ---------------------------------------------------------------------------
D694
D694 loc_D694:                                                   ; D662
D694                         ld      b, 0
D696                         ld      a, (iy+33h)
D699                         sub     d
D69A                         jr      nc, loc_D6A0
D69C                         ld      b, 1
D69E                         neg
D6A0
D6A0 loc_D6A0:                                                   ; D69A
D6A0                         cp      3
D6A2                         jr      c, loc_D67C
D6A4                         ld      a, (ix+6)
D6A7                         cp      b
D6A8                         jr      nz, loc_D67C
D6AA                         jr      loc_D66A
D6AA ; End of function sub_D63F
D6AA
D6AC ; ---------------------------------------------------------------------------
D6AC
D6AC service_mode_menu:                                          ; 087D
D6AC                         call    clear_ram_below_players
D6AF                         ld      hl, menu_table_set          ; Set the table here, redundant code duplicated instantly below!
D6B2                         ld      (menu_table_pointer), hl
D6B5                         xor     a
D6B6                         ld      (sound_enable), a
D6B9                         ld      (byte_E60E), a
D6BC                         ld      (menu_selection_number), a  ; Menu select 0 1 2 for options
D6BF
D6BF reset_service_menu:                                         ; D6F9↓j
D6BF                         ld      hl, menu_table_set          ; o look, the same code as above just duplicated
D6C2                         ld      (menu_table_pointer), hl    ; Save menu pointer, which never changes anyhow
D6C5                         ld      c, 0                        ; 0 sound reset sound system to silence
D6C7                         rst     dispatch_sound
D6C8                         call    setup_palett2
D6CB                         call    clear_sprites_and_screen
D6CE                         ld      a, 16
D6D0                         ld      (menu_countdown), a         ; Use as a ticker countdown for checking menu movements
D6D3                         call    watchdog_reset
D6D6                         call    display_menu_text
D6D9                         ld      ix, (menu_table_pointer)
D6DD                         call    menu_sprite_position        ; Draw little man at menu selection location
D6E0
D6E0 stay_on_menu_page:                                          ; D6F4↓j
D6E0                         in      a, (0)                      ; Read DIP Switches
D6E2                         cpl
D6E3                         and     32                          ; Check if in service mode
D6E5                         jp      z, service_reset            ; If the dip switches are changed then exit the service menu
D6E8                         call    watchdog_reset
D6EB                         call    menu_selection_check
D6EE                         call    menu_sprite_position
D6F1                         call    debounce_jump_check         ; Check if we want to run the service menu option
D6F4                         jr      z, stay_on_menu_page
D6F6                         call    jump_table_run              ; Run the function as per jump table from menu selected
D6F9                         jr      reset_service_menu          ; When that is exited, reset the menu page again
D6FB
D6FB ; =============== S U B R O U T I N E =======================================
D6FB
D6FB
D6FB menu_selection_check:                                       ; D6EB↑p
D6FB                         ld      hl, menu_countdown          ; It's the final countdown!
D6FE                         dec     (hl)
D6FF                         ret     nz                          ; Only do checked ever 16 ticks
D700                         ld      (hl), 16                    ; Reset the countdown check number
D702                         ld      hl, menu_selection_number
D705                         ld      ix, (menu_table_pointer)
D709                         call    check_menu_move             ; See if we pressed up or down
D70C                         or      a
D70D                         ret     z                           ; Nothing pressed just exit
D70E                         cp      1                           ; Menu up move
D710                         jp      z, selected_up
D713                         cp      0FFh                        ; Menu down move
D715                         jp      z, selected_down
D718                         ret
D719 ; ---------------------------------------------------------------------------
D719
D719 selected_up:                                                ; D710
D719                         ld      a, (hl)                     ; Get current selection number
D71A                         or      a                           ; If it's already zero then wrap to bottom option (eventually 2)
D71B                         jr      z, wrap_to_bottom
D71D                         dec     (hl)
D71E                         ret
D71F ; ---------------------------------------------------------------------------
D71F
D71F wrap_to_bottom:                                             ; D71B
D71F                         ld      a, (ix+6)                   ; The table set the last byte was the wrap around value -1 immediate valaue
D722                         dec     a                           ; Set it back to 2 for bottom option
D723                         ld      (hl), a                     ; Save the menu selection number
D724                         ret
D725 ; ---------------------------------------------------------------------------
D725
D725 selected_down:                                              ; D715
D725                         ld      b, (ix+6)                   ; Let's read that max count number
D728                         dec     b                           ; So max is this -1, basically 2
D729                         ld      a, (hl)                     ; Read current menu choice
D72A                         cp      b                           ; are we at max already?
D72B                         jr      nc, wrap_to_top             ; Yes huston we are at bottom
D72D                         inc     (hl)                        ; Otherwise advance on one.
D72E                         ret
D72F ; ---------------------------------------------------------------------------
D72F
D72F wrap_to_top:                                                ; D72B
D72F                         ld      (hl), 0                     ; Reset position to top
D731                         ret
D731 ; End of function menu_selection_check
D731
D732
D732 ; =============== S U B R O U T I N E =======================================
D732
D732 ; Software debounce/edge detect for menu/service inputs.
D732 ; Only returns 1 on new (not held) button press.
D732 ; Guards against held, stuck, or bouncing inputs.
D732 ;
D732
D732 debounce_jump_check:                                        ; D6F1↑p D775↓p 
D732                         ld      a, (unk_E592)               ; Load previous state of the jump button
D735                         ld      c, a                        ; Save to C for later
D736                         jr      always_jump                 ; Always jump to input read (skip xor b, which is unreachable here)
D738 ; ---------------------------------------------------------------------------
D738                         xor     b                           ; Unreachable, guess someone elses code had other options!
D739
D739 always_jump:                                                ; D736
D739                         in      a, (2)                      ; Read player 2 input port (hardware port 2)
D73B                         cpl                                 ; Invert (inputs are active-low)
D73C                         and     100000b                     ; ask for bit 5 ($20): Player 2 Jump button
D73E                         ld      (unk_E592), a               ; Store current state for next call
D741                         or      a                           ; Sets flags based on new state (zero if button not pressed)
D742                         jr      z, not_pressed              ; If not pressed, go to return 0
D744                         ld      a, c                        ; Recall previous state from before
D745                         or      a
D746                         jr      z, just_pressed             ; If previous state was zero (button was up), jump to return 1
D748
D748 not_pressed:                                                ; D742
D748                         xor     a
D749                         ret                                 ; Return 0 (button not newly pressed)
D74A ; ---------------------------------------------------------------------------
D74A
D74A just_pressed:                                               ; D746
D74A                         or      1
D74C                         ret                                 ; Return 1 (button just pressed)
D74C ; End of function debounce_jump_check
D74C
D74D
D74D ; =============== S U B R O U T I N E =======================================
D74D
D74D
D74D check_menu_move:                                            ; D709↑p
D74D                         in      a, (2)                      ; Player 2 Input
D74F                         cpl
D750                         and     5                           ; Check for Up / Down
D752                         jr      z, no_waggle
D754                         ld      b, a                        ; Keep copy in b
D755                         and     4                           ; Check for Down
D757                         jr      nz, menu_down
D759                         ld      a, b
D75A                         and     1                           ; Check for up pressed
D75C                         jr      nz, menu_up
D75E
D75E no_waggle:                                                  ; D752
D75E                         xor     a
D75F                         ret
D760 ; ---------------------------------------------------------------------------
D760
D760 menu_up:                                                    ; D75C
D760                         ld      a, 1
D762                         ret
D763 ; ---------------------------------------------------------------------------
D763
D763 menu_down:                                                  ; D757
D763                         ld      a, 0FFh
D765                         ret
D765 ; End of function check_menu_move
D765
D766 ; ---------------------------------------------------------------------------
D766
D766 grid_routine:                                               ; DAA6↓o
D766                         call    clear_sprites
D769                         call    character_grid
D76C
D76C waiting_for_exit:                                           ; D778↓j
D76C                         call    watchdog_reset
D76F                         in      a, (0)                      ; Read DIP Switches
D771                         cpl
D772                         and     32                          ; Check if in service mode in DIP settings
D774                         ret     z
D775                         call    debounce_jump_check         ; Software debounce/edge detect for menu/service inputs.
D775                                                             ; Only returns 1 on new (not held) button press.
D775                                                             ; Guards against held, stuck, or bouncing inputs.
D775                                                             ;
D778                         jr      z, waiting_for_exit
D77A                         ret
D77B
D77B ; =============== S U B R O U T I N E =======================================
D77B
D77B
D77B character_grid:                                             ; D769↑p DD95↓p
D77B                         ld      hl, bg_videoram
D77E                         ld      bc, 3C0h                    ; All visable screen memory
D781
D781 draw_grid:                                                  ; D789↓j D78F↓j
D781                         ld      (hl), 10h
D783                         inc     hl
D784                         ld      (hl), 40h ; '@'
D786                         inc     hl
D787                         dec     c
D788                         ld      a, c
D789                         jr      nz, draw_grid
D78B                         ld      a, b
D78C                         or      a
D78D                         ret     z
D78E                         dec     b
D78F                         jr      draw_grid
D78F ; End of function character_grid
D78F
D791 ; ---------------------------------------------------------------------------
D791                         ret
D792
D792 ; =============== S U B R O U T I N E =======================================
D792
D792
D792 display_menu_text:                                          ; D6D6↑p
D792                         ld      ix, (menu_table_pointer)
D796                         ld      l, (ix+0)
D799                         ld      h, (ix+1)
D79C                         push    hl
D79D                         pop     ix
D79F
D79F process_all_text:                                           ; D7B6↓j D890↓p
D79F                         ld      l, (ix+0)
D7A2                         ld      h, (ix+1)
D7A5                         ld      a, h
D7A6                         or      l
D7A7                         ret     z
D7A8                         ld      e, (ix+2)
D7AB                         ld      d, (ix+3)
D7AE                         call    message_print_white
D7B1                         ld      de, 4
D7B4                         add     ix, de
D7B6                         jr      process_all_text
D7B6 ; End of function display_menu_text
D7B6
D7B8
D7B8 ; =============== S U B R O U T I N E =======================================
D7B8
D7B8
D7B8 menu_sprite_position:                                       ; D6DD↑p D6EE↑p
D7B8                         ld      ix, (menu_table_pointer)
D7BC                         ld      l, (ix+2)
D7BF                         ld      h, (ix+3)
D7C2                         ld      d, 0                        ; offset add high byte 0
D7C4                         ld      a, (menu_selection_number)  ; Get menu option number 0 - 2
D7C7                         ld      e, a
D7C8                         add     hl, de                      ; get base pointer + ( menu_selection_number * 2 )
D7C9                         add     hl, de
D7CA                         ld      ix, sprite5_y               ; We're going to display a little sprite for menu option selection
D7CE                         ld      a, (hl)                     ; First byte is x position
D7CF                         ld      (ix+3), a                   ; Update sprite X
D7D2                         inc     hl                          ; get next byte
D7D3                         ld      a, (hl)                     ; Get the Y position
D7D4                         ld      (ix+0), a                   ; Update sprite
D7D7                         ld      (ix+1), 13h                 ; We need to reverse his x as draw is facing left! menu is right
D7DB                         ld      (ix+2), 79h                 ; Man with ruffle sprite
D7DF                         ret
D7DF ; End of function menu_sprite_position
D7DF
D7E0
D7E0 ; =============== S U B R O U T I N E =======================================
D7E0
D7E0
D7E0 jump_table_run:                                             ; D6F6↑p
D7E0                         ld      ix, (menu_table_pointer)
D7E4                         ld      l, (ix+4)                   ; Get the table execution offset low byte
D7E7                         ld      h, (ix+5)                   ; Get the table execution offset high byte
D7EA                         ld      d, 0                        ; High byte always 0
D7EC                         ld      a, (menu_selection_number)  ; Menu option selected
D7EF                         ld      e, a
D7F0                         add     hl, de                      ; Like the sprite table it's menu_selection_number * 2 + base
D7F1                         add     hl, de
D7F2                         push    hl
D7F3                         pop     ix
D7F5                         ld      l, (ix+0)                   ; Now get the offset into the jump table low
D7F8                         ld      h, (ix+1)                   ; Now get the offset into the jump table high
D7FB                         jp      (hl)                        ; Excute the menu option
D7FB ; End of function jump_table_run
D7FB
D7FB ; ---------------------------------------------------------------------------
D7FC menu_table_set:         dw select_test_text                 ; D6AF↑o
D7FC                                                             ; reset_service_menu↑o
D7FC                                                             ; Select Test display page text
D7FE                         dw menu_sprite_cords
D800                         dw select_menu_jump_table           ; Code jump table for the select test option 1 2 3
D802                         db    3                             ; Number of menu items
D803 ; ---------------------------------------------------------------------------
D803
D803 loc_D803:                                                   ; D833↓p
D803                         ld      b, 3                        ; Looks like an entire routine which is unused in Rampage, left from previous title I suspect
D805                         xor     a
D806                         ld      (ix+0), a
D809                         ld      (ix+1), a
D80C                         ld      (ix+2), a
D80F
D80F loc_D80F:                                                   ; D82C↓j
D80F                         ld      e, (iy+0)
D812                         inc     iy
D814                         ld      d, (iy+0)
D817                         inc     iy
D819
D819 loc_D819:                                                   ; D827↓j
D819                         or      a
D81A                         sbc     hl, de
D81C                         jr      c, loc_D829
D81E                         ld      a, (ix+0)
D821                         add     a, 1
D823                         daa
D824                         ld      (ix+0), a
D827                         jr      loc_D819
D829 ; ---------------------------------------------------------------------------
D829
D829 loc_D829:                                                   ; D81C
D829                         add     hl, de
D82A                         inc     ix
D82C                         djnz    loc_D80F
D82E                         ret
D82F ; ---------------------------------------------------------------------------
D82F                         ld      iy, word_D837
D833                         call    loc_D803
D836                         ret
D836 ; ---------------------------------------------------------------------------
D837 word_D837:              dw 2710h                            ; D82F↑o
D839                         db 64h
D83A                         db 0
D83B                         db 1
D83C                         db    0
D83D                         db  1Eh
D83E                         db 0
D83F ; ---------------------------------------------------------------------------
D83F
D83F loc_D83F:                                                   ; D87A↓j
D83F                         ld      a, e
D840                         or      a
D841                         ld      a, (hl)
D842                         jr      z, loc_D849
D844                         ld      e, 0
D846                         inc     hl
D847                         jr      loc_D84F
D849 ; ---------------------------------------------------------------------------
D849
D849 loc_D849:                                                   ; D842
D849                         rra
D84A                         rra
D84B                         rra
D84C                         rra
D84D                         ld      e, 1
D84F
D84F loc_D84F:                                                   ; D847
D84F                         and     0Fh
D851                         dec     b
D852                         jr      nz, loc_D856
D854                         ld      c, 1
D856
D856 loc_D856:                                                   ; D852
D856                         inc     b
D857                         add     a, 30h ; '0'
D859                         cp      30h ; '0'
D85B                         jr      nz, loc_D86B
D85D                         inc     c
D85E                         dec     c
D85F                         jr      nz, loc_D86C
D861                         ld      (ix+0), 20h ; ' '
D865                         ld      (ix+1), 40h ; '@'
D869                         jr      loc_D873
D86B ; ---------------------------------------------------------------------------
D86B
D86B loc_D86B:                                                   ; D85B
D86B                         ld      c, a
D86C
D86C loc_D86C:                                                   ; D85F
D86C                         ld      (ix+0), a
D86F                         ld      (ix+1), 40h ; '@'
D873
D873 loc_D873:                                                   ; D869
D873                         push    de
D874                         ld      de, 2
D877                         add     ix, de
D879                         pop     de
D87A                         djnz    loc_D83F
D87C                         ret
D87D ; ---------------------------------------------------------------------------
D87D
D87D switches_sounds_routine:                                    ; DAA4↓o
D87D                         call    clear_sprites_and_screen
D880                         call    clear_sprites
D883                         ld      c, 0
D885                         rst     dispatch_sound
D886                         call    watchdog_reset
D889                         call    sound_setup
D88C                         ld      ix, player_inputs_menu
D890                         call    process_all_text
D893                         xor     a
D894                         ld      (byte_E596), a
D897
D897 switch_loop:                                                ; D8A3↓j
D897                         in      a, (0)                      ; Read DIP Switches
D899                         cpl
D89A                         and     32                          ; Check if in service mode in DIP settings
D89C                         ret     z
D89D                         call    watchdog_reset
D8A0                         call    input_menu_display
D8A3                         jr      switch_loop
D8A5
D8A5 ; =============== S U B R O U T I N E =======================================
D8A5
D8A5
D8A5 input_menu_display:                                         ; D8A0↑p
D8A5                         ld      ix, coin_control_table      ; All coins and control messages
D8A9                         call    get_dip_switch_settings     ; --- Rampage DIP Switches: PORT 3 (in a, (3)) ---
D8A9                                                             ;  Bit(s)  Mask   Description
D8A9                                                             ;  0-1     0x03   Difficulty:
D8A9                                                             ;                   0 = Free Play
D8A9                                                             ;                   1 = Hard
D8A9                                                             ;                   2 = Easy
D8A9                                                             ;                   3 = Normal
D8A9                                                             ;  2       0x04   Score Option:
D8A9                                                             ;                   0 = Lose score when continuing
D8A9                                                             ;                   1 = Keep score when continuing
D8A9                                                             ;  3       0x08   Coin A:
D8A9                                                             ;                   0 = 2C/1C
D8A9                                                             ;                   1 = 1C/1C
D8A9                                                             ;  4-6     0x70   Coin B:
D8A9                                                             ;                   0x00 = 3C/1C
D8A9                                                             ;                   0x10 = 2C/1C
D8A9                                                             ;                   0x70 = 1C/1C
D8A9                                                             ;                   0x60 = 1C/2C
D8A9                                                             ;                   0x50 = 1C/3C
D8A9                                                             ;                   0x40 = 1C/4C
D8A9                                                             ;                   0x30 = 1C/5C
D8A9                                                             ;                   0x20 = 1C/6C
D8A9                                                             ;  7       0x80   Rack Advance (Cheat, F1):
D8A9                                                             ;                   0 = On
D8A9                                                             ;                   1 = Off
D8A9                                                             ;
D8AC                         call    difficult_level_menu
D8AF                         call    display_coin_credits
D8B2                         ld      iy, unk_E597
D8B6
D8B6 process_all_entries:                                        ; D9A8↓j
D8B6                         ld      a, (ix+0)                   ; Read first table entry.
D8B9                         or      a                           ; $ff is the delimeter for all entries
D8BA                         jp      m, end_of_entries
D8BD                         cp      5
D8BF                         jr      nc, loc_D917
D8C1                         ld      c, (ix+1)                   ; 2nd table entry is the IO input port
D8C4                         in      a, (c)                      ; Read the port from table
D8C6                         cpl                                 ; All bits are active low so invert
D8C7                         and     (ix+2)                      ; 3rd table entry is bit mask for IO input
D8CA                         ld      b, a                        ; Save mask to B
D8CB                         cp      (iy+0)                      ; Check this offset with current entry
D8CE                         jr      nz, new_value_set
D8D0                         ld      a, (byte_E596)
D8D3                         or      a
D8D4                         jp      nz, next_table_entry
D8D7
D8D7 new_value_set:                                              ; D8CE
D8D7                         ld      (iy+0), b                   ; Save the bit value into tableset
D8DA                         ld      a, (ix+0)                   ; First byte is control type value
D8DD                         or      a                           ; when it's 1 that means it's direction controls
D8DE                         jr      nz, loc_D917
D8E0                         ld      a, b
D8E1                         ld      l, (ix+4)
D8E4                         ld      h, (ix+5)
D8E7                         ld      c, (hl)                     ; Message string pointer low
D8E8                         inc     hl
D8E9                         ld      b, (hl)                     ; Message string pointer high
D8EA                         inc     hl
D8EB                         or      a
D8EC                         jr      z, loc_D90B
D8EE                         ex      de, hl
D8EF                         call    message_print_white_swap
D8F2                         ld      a, (byte_E596)
D8F5                         or      a
D8F6                         jp      z, next_table_entry
D8F9                         push    bc
D8FA                         ld      a, (ix+1)
D8FD                         ld      b, a
D8FE                         ld      a, (ix+2)
D901                         ld      c, a
D902                         nop
D903                         pop     bc
D904                         ld      c, (ix+3)                   ; 3rd table entry is the sound byte
D907                         rst     dispatch_sound              ; Do this sound
D908                         jp      next_table_entry            ; Now goto next entry
D90B ; ---------------------------------------------------------------------------
D90B
D90B loc_D90B:                                                   ; D8EC
D90B                         ld      e, (ix+6)
D90E                         ld      d, (ix+7)
D911                         call    message_print_white_swap
D914                         jp      next_table_entry
D917 ; ---------------------------------------------------------------------------
D917
D917 loc_D917:                                                   ; D8BF D8DE
D917                         ld      b, a
D918                         ld      a, (byte_E596)
D91B                         or      a
D91C                         jr      nz, joystick_values
D91E                         push    bc
D91F                         ld      l, (ix+4)                   ; Get message pointer low byte
D922                         ld      h, (ix+5)                   ; Get message pointer low high
D925                         ld      c, (hl)
D926                         inc     hl
D927                         ld      b, (hl)
D928                         inc     hl
D929                         ex      de, hl                      ; Message print is pointed from de so change over from hl
D92A                         call    message_print_white_swap
D92D                         pop     bc
D92E
D92E joystick_values:                                            ; D91C
D92E                         ld      a, (iy+0)                   ; get the saved bit value
D931                         bit     0, a
D933                         jr      nz, pressed_up
D935                         bit     1, a
D937                         jr      nz, pressed_right
D939                         bit     2, a
D93B                         jr      nz, pressed_down
D93D                         bit     3, a
D93F                         jr      nz, pressed_left
D941                         ld      de, aNeutral                ; "NEUTRAL"
D944                         jr      get_controller_position
D946 ; ---------------------------------------------------------------------------
D946
D946 pressed_up:                                                 ; D933
D946                         ld      de, aUp                     ; "  UP   "
D949                         jr      get_controller_position
D94B ; ---------------------------------------------------------------------------
D94B
D94B pressed_right:                                              ; D937
D94B                         ld      de, aRight                  ; " RIGHT "
D94E                         jr      get_controller_position
D950 ; ---------------------------------------------------------------------------
D950
D950 pressed_down:                                               ; D93B
D950                         ld      de, aDown                   ; " DOWN  "
D953                         jr      get_controller_position
D955 ; ---------------------------------------------------------------------------
D955
D955 pressed_left:                                               ; D93F
D955                         ld      de, aLeft                   ; " LEFT  "
D958
D958 get_controller_position:                                    ; D944 D949 
D958                         ld      a, (ix+0)                   ; Get the player number 1 2 or 3 for the input message.
D95B                         cp      1                           ; Player 1 George controls
D95D                         jr      z, left_controller
D95F                         cp      2                           ; Player 2 Lizzie controls
D961                         jr      z, middle_controller
D963                         cp      3                           ; Player 3 Ralph controls
D965                         jr      z, right_controller
D967
D967 right_controller:                                           ; D965
D967                         ld      hl,  bg_row16+2Ah
D96A                         jr      message_process
D96C ; ---------------------------------------------------------------------------
D96C
D96C middle_controller:                                          ; D961
D96C                         ld      hl,  bg_row12+2Ah
D96F                         jr      message_process
D971 ; ---------------------------------------------------------------------------
D971
D971 left_controller:                                            ; D95D
D971                         ld      hl,  bg_row08+2Ah
D974                         jr      message_process
D974 ; ---------------------------------------------------------------------------
D976 aNeutral:               .ascii 'NEUTRAL',0                  ; D941↑o
D97E aUp:                    .ascii '  UP   ',0                  ; pressed_up↑o
D986 aRight:                 .ascii ' RIGHT ',0                  ; pressed_right↑o
D98E aDown:                  .ascii ' DOWN  ',0                  ; pressed_down↑o
D996 aLeft:                  .ascii ' LEFT  ',0                  ; pressed_left↑o
D99E ; ---------------------------------------------------------------------------
D99E
D99E message_process:                                            ; D96A D96F 
D99E                         call    message_print_white
D9A1
D9A1 next_table_entry:                                           ; D8D4 D8F6 
D9A1                         ld      de, 8                       ; Each table entry is 8 bytes long
D9A4                         add     ix, de                      ; add base index
D9A6                         inc     iy                          ; increase results table
D9A8                         jp      process_all_entries
D9AB ; ---------------------------------------------------------------------------
D9AB
D9AB end_of_entries:                                             ; D8BA
D9AB                         ld      (byte_E596), a
D9AE                         ret
D9AE ; End of function input_menu_display
D9AE
D9AF
D9AF ; =============== S U B R O U T I N E =======================================
D9AF
D9AF
D9AF display_coin_credits:                                       ; D8AF↑p
D9AF                         ld      hl,  bg_row25+0Ch
D9B2                         ld      de, a1CoinFor1Credi         ; "1 COIN  FOR 1 CREDIT."
D9B5                         ld      a, (keep_score_when_continue)
D9B8                         or      a
D9B9                         jr      z, one_coin_credit
D9BB                         ld      de, a2CoinsFor1Cred         ; "2 COINS FOR 1 CREDIT."
D9BE
D9BE one_coin_credit:                                            ; D9B9
D9BE                         ld      c, 32
D9C0                         call    message_print               ; Print string c=colour hl=screen, source=de
D9C3                         ld      hl,  bg_row28+0Ch
D9C6                         ld      de, a1CoinFor1Credi         ; "1 COIN  FOR 1 CREDIT."
D9C9                         ld      a, (coin_count)
D9CC                         cp      1
D9CE                         jr      z, coin_count_one
D9D0                         ld      de, a2CoinsFor1Cred         ; "2 COINS FOR 1 CREDIT."
D9D3
D9D3 coin_count_one:                                             ; D9CE
D9D3                         call    message_print               ; Print string c=colour hl=screen, source=de
D9D6                         ld      a, (coin_count)
D9D9                         cp      3
D9DB                         jr      nz, coin_number_not_three
D9DD                         ld      (hl), 33h ; '3'
D9DF
D9DF coin_number_not_three:                                      ; D9DB
D9DF                         ld      a, (credits_per_coin)
D9E2                         cp      1
D9E4                         ret     z
D9E5                         ld      de, 18h
D9E8                         add     hl, de
D9E9                         add     a, 30h ; '0'
D9EB                         ld      (hl), a
D9EC                         ld      de, 10h
D9EF                         add     hl, de
D9F0                         ld      (hl), 53h ; 'S'             ; Add the S on coin so it's coins
D9F2                         ret
D9F2 ; End of function display_coin_credits
D9F2
D9F3
D9F3 ; =============== S U B R O U T I N E =======================================
D9F3
D9F3
D9F3 difficult_level_menu:                                       ; D8AC↑p
D9F3                         ld      hl,  bg_row22+8
D9F6                         ld      a, (free_play)
D9F9                         or      a
D9FA                         jr      z, level_options
D9FC                         ld      a, (easy_hard_normal)
D9FF                         or      a
DA00                         jr      z, level_options
DA02                         ld      de, aDifLevel               ; "DIF. LEVEL"
DA05                         ld      c, 32
DA07                         call    message_print               ; Print string c=colour hl=screen, source=de
DA0A                         ld      hl,  bg_row22+1Eh
DA0D                         ld      de, a1Freeplay              ; "1 - FREEPLAY"
DA10                         jp      message_print               ; Print string c=colour hl=screen, source=de
DA13 ; ---------------------------------------------------------------------------
DA13
DA13 level_options:                                              ; D9FA DA00
DA13                         ld      de, aDifLevel               ; "DIF. LEVEL"
DA16                         ld      c, 0
DA18                         call    message_print               ; Print string c=colour hl=screen, source=de
DA1B                         ld      hl, off_DA2F                ; "- 1 NORMAL@2"
DA1E                         ld      a, (game_difficulty)
DA21                         sla     a
DA23                         call    get_HL_plus_A               ; HL = [HL+a] + [HL+a+1]
DA26                         ld      de,  bg_row22+1Eh
DA29                         ex      de, hl
DA2A                         ld      c, 0
DA2C                         jp      message_print               ; Print string c=colour hl=screen, source=de
DA2C ; End of function difficult_level_menu
DA2C
DA2C ; ---------------------------------------------------------------------------
DA2F off_DA2F:               dw a1Normal2                        ; DA1B↑o
DA2F                                                             ; "- 1 NORMAL@2"
DA31                         dw a0Easy4                          ; "- 0 EASY@4"
DA33                         dw a2Hard4                          ; "- 2 HARD@4"
DA35 aDifLevel:              .ascii 'DIF. LEVEL',0               ; DA02↑o
DA35                                                             ; level_options↑o
DA40 a1Normal2:              .ascii '- 1 NORMAL@2',0             ; off_DA2F↑o
DA4D a0Easy4:                .ascii '- 0 EASY@4',0               ; DA31↑o
DA58 a2Hard4:                .ascii '- 2 HARD@4',0               ; DA33↑o
DA63 a1Freeplay:             .ascii '1 - FREEPLAY',0             ; DA0D↑o
DA70 a1CoinFor1Credi:        .ascii '1 COIN  FOR 1 CREDIT.',0    ; D9B2↑o D9C6↑o
DA86 a2CoinsFor1Cred:        .ascii '2 COINS FOR 1 CREDIT.',0    ; D9BB↑o D9D0↑o
DA9C menu_sprite_cords:      dw 0D730h                           ; D7FE↑o
DA9C                                                             ; Man with riffle sprite Y & X position for each menu selection
DA9E                         dw 0C730h
DAA0                         dw 0B730h
DAA2 select_menu_jump_table: dw self_test_routine                ; D800↑o
DAA4                         dw switches_sounds_routine
DAA6                         dw grid_routine
DAA8 select_test_text:       dw bg_row03+0Ch                     ; menu_table_set↑o
DAAA                         dw aSelectTest                      ; "SELECT TEST"
DAAC                         dw bg_row05+10h
DAAE                         dw a1SelfTest                       ; "1 SELF TEST"
DAB0                         dw bg_row07+10h
DAB2                         dw a2SwitchesSound                  ; "2 SWITCHES-SOUNDS"
DAB4                         dw bg_row09+10h
DAB6                         dw a3GridV382786                    ; "3 GRID///V.3 8-27-86"
DAB8                         dw bg_row17+8
DABA                         dw aToPositionCurs                  ; "TO POSITION CURSOR MOVE"
DABC                         dw bg_row19+8
DABE                         dw a3middleJoystic                  ; "@3MIDDLE JOYSTICK"
DAC0                         dw bg_row21+8
DAC2                         dw a5upOrDown                       ; "@5UP OR DOWN"
DAC4                         dw bg_row24+8
DAC6                         dw aPressMiddleJum                  ; "PRESS MIDDLE JUMP BUTTON"
DAC8                         dw bg_row26+8
DACA                         dw a7forTest                        ; "@7FOR TEST"
DACC                         db    0
DACD                         db 0
DACE player_inputs_menu:     dw bg_row02+12h                     ; D88C↑o
DAD0                         dw aPlayerInputs                    ; "PLAYER INPUTS"
DAD2                         dw bg_row24+8
DAD4                         dw a6coinChute1                     ; "#6COIN CHUTE 1"
DAD6                         dw bg_row27+8
DAD8                         dw a6coinChute2                     ; "#6COIN CHUTE 2"
DADA                         dw bg_row30+10h
DADC                         dw aHitTiltToExit                   ; "HIT TILT TO EXIT"
DADE                         db    0
DADF                         db    0
DAE0 coin_control_table:     db 0                                ; input_menu_display↑o
DAE0                                                             ; Table set 8 bytes / control
DAE0                                                             ; Byte 0 is value
DAE0                                                             ; Byte 1 is IO input memory location
DAE0                                                             ; Byte 2 is Bitmask for Input
DAE0                                                             ; Byte 3 is Sound Number to execute
DAE0                                                             ; Word 4/5 For text displayed
DAE0                                                             ; Word 6/7 Is detail infomation as settings
DAE1                         db 0
DAE2                         db 1
DAE3                         db  6Ah ; j
DAE4                         dw coin_chute_1
DAE6                         dw a993_0                           ; "@9@9@3"
DAE8                         db 0
DAE9                         db 0
DAEA                         db 2
DAEB                         db  69h ; i
DAEC                         dw coin_chute_2
DAEE                         dw a993_0                           ; "@9@9@3"
DAF0                         db 0
DAF1                         db 0
DAF2                         db 40h
DAF3                         db  3Bh ; ;
DAF4                         dw service_button
DAF6                         dw a993_0                           ; "@9@9@3"
DAF8                         db 0
DAF9                         db 1
DAFA                         db  20h
DAFB                         db  32h ; 2
DAFC                         dw left_jump_text
DAFE                         dw a993_0                           ; "@9@9@3"
DB00                         db 0
DB01                         db 2
DB02                         db 20h
DB03                         db  26h ; &
DB04                         dw middle_jump_text
DB06                         dw a993_0                           ; "@9@9@3"
DB08                         db 0
DB09                         db 4
DB0A                         db 20h
DB0B                         db  25h ; %
DB0C                         dw right_jump_text
DB0E                         dw a993_0                           ; "@9@9@3"
DB10                         db 0
DB11                         db 1
DB12                         db  10h
DB13                         db  4Eh ; N
DB14                         dw left_punch_text
DB16                         dw a993_0                           ; "@9@9@3"
DB18                         db 0
DB19                         db 2
DB1A                         db 10h
DB1B                         db  6Dh ; m
DB1C                         dw middle_punch_text
DB1E                         dw a993_0                           ; "@9@9@3"
DB20                         db 0
DB21                         db 4
DB22                         db 10h
DB23                         db  3Eh ; >
DB24                         dw right_punch_test
DB26                         dw a993_0                           ; "@9@9@3"
DB28                         db 1
DB29                         db    1
DB2A                         db  0Fh
DB2B                         db 0
DB2C                         dw left_joystick_text
DB2E                         dw a993_0                           ; "@9@9@3"
DB30                         db 2
DB31                         db 2
DB32                         db 0Fh
DB33                         db 0
DB34                         dw middle_joystick_text
DB36                         dw a993_0                           ; "@9@9@3"
DB38                         db 3
DB39                         db 4
DB3A                         db 0Fh
DB3B                         db 0
DB3C                         dw right_joystick_text
DB3E                         dw a993_0                           ; "@9@9@3"
DB40                         db    0
DB41                         db 3
DB42                         db 4
DB43                         db 0
DB44                         dw score_option_off_text
DB46                         dw aScoreOptionOn                   ; "SCORE OPTION-ON "
DB48                         db    0
DB49                         db    3
DB4A                         db  80h
DB4B                         db    0
DB4C                         dw off_DCE3
DB4E                         dw a993_0                           ; "@9@9@3"
DB50                         db 0FFh
DB51 aSelectTest:            .ascii 'SELECT TEST',0              ; DAAA↑o
DB5D a1SelfTest:             .ascii '1 SELF TEST',0              ; DAAE↑o
DB69 a2SwitchesSound:        .ascii '2 SWITCHES-SOUNDS',0        ; DAB2↑o
DB7B a3GridV382786:          .ascii '3 GRID///V.3 8-27-86',0     ; DAB6↑o
DB90 aToPositionCurs:        .ascii 'TO POSITION CURSOR MOVE',0  ; DABA↑o
DBA8 a3middleJoystic:        .ascii '@3MIDDLE JOYSTICK',0        ; DABE↑o
DBBA a5upOrDown:             .ascii '@5UP OR DOWN',0             ; DAC2↑o
DBC7 aPressMiddleJum:        .ascii 'PRESS MIDDLE JUMP BUTTON',0 ; DAC6↑o
DBE0 a7forTest:              .ascii '@7FOR TEST',0               ; DACA↑o
DBEB aPlayerInputs:          .ascii 'PLAYER INPUTS',0            ; DAD0↑o
DBF9 a6coinChute1:           .ascii '#6COIN CHUTE 1',0           ; DAD4↑o
DC08 a6coinChute2:           .ascii '#6COIN CHUTE 2',0           ; DAD8↑o
DC17 aHitTiltToExit:         .ascii 'HIT TILT TO EXIT',0         ; DADC↑o
DC28 coin_chute_1:           dw bg_row04+8                       ; DAE4↑o
DC2A aCoinChute1:            .ascii 'COIN CHUTE 1',0
DC37 coin_chute_2:           dw bg_row05+8                       ; DAEC↑o
DC39 aCoinChute2:            .ascii 'COIN CHUTE 2',0
DC46 service_button:         dw bg_row06+8                       ; DAF4↑o
DC48 aServiceButton:         .ascii 'SERVICE BUTTON',0
DC57 left_jump_text:         dw bg_row09+8                       ; DAFC↑o
DC59 aLeftJump:              .ascii 'LEFT  JUMP',0
DC64 middle_jump_text:       dw bg_row13+8                       ; DB04↑o
DC66 aMiddleJump:            .ascii 'MIDDLE JUMP',0
DC72 right_jump_text:        dw bg_row17+8                       ; DB0C↑o
DC74 aRightJump:             .ascii 'RIGHT JUMP',0
DC7F left_punch_text:        dw bg_row10+8                       ; DB14↑o
DC81 aLeftPunch:             .ascii 'LEFT PUNCH',0
DC8C middle_punch_text:      dw bg_row14+8                       ; DB1C↑o
DC8E aMiddlePunch:           .ascii 'MIDDLE PUNCH',0
DC9B right_punch_test:       dw bg_row18+8                       ; DB24↑o
DC9D aRightPunch:            .ascii 'RIGHT PUNCH',0
DCA9 left_joystick_text:     dw bg_row08+8                       ; DB2C↑o
DCAB aLeftJoystick:          .ascii 'LEFT JOYSTICK',0
DCB9 middle_joystick_text:   dw bg_row12+8                       ; DB34↑o
DCBB aMiddleJoystick:        .ascii 'MIDDLE JOYSTICK',0
DCCB right_joystick_text:    dw bg_row16+8                       ; DB3C↑o
DCCD aRightJoystick:         .ascii 'RIGHT JOYSTICK',0
DCDC a993_0:                 .ascii '@9@9@3',0                   ; DAE6↑o DAEE↑o 
DCE3 off_DCE3:               dw bg_row19+8                       ; DB4C↑o
DCE5 aRackAdvance:           .ascii 'RACK ADVANCE',0
DCF2 score_option_off_text:  dw bg_row20+8                       ; DB44↑o
DCF4 aScoreOptionOff:        .ascii 'SCORE OPTION-OFF',0
DD05 aScoreOptionOn:         .ascii 'SCORE OPTION-ON ',0         ; DB46↑o
DD16 ; ---------------------------------------------------------------------------
DD16
DD16 self_test_routine:                                          ; select_menu_jump_table↑o
DD16                         di
DD17                         call    system_init
DD1A                         push    af
DD1B                         ld      hl, random_seed
DD1E                         call    clear_memory
DD21                         pop     af
DD22                         ei
DD23                         jr      z, start_system
DD25                         ld      hl,  bg_row06+8
DD28                         ld      de, aHitMiddleJumpB         ; "HIT MIDDLE JUMP BUTTON//TO CONTINUE TES"
DD2B                         call    message_print_text_only
DD2E
DD2E loc_DD2E:                                                   ; DD3A↓j
DD2E                         call    debounce_jump_check         ; Software debounce/edge detect for menu/service inputs.
DD2E                                                             ; Only returns 1 on new (not held) button press.
DD2E                                                             ; Guards against held, stuck, or bouncing inputs.
DD2E                                                             ;
DD31                         jr      nz, start_system
DD33                         in      a, (0)                      ; Read DIP Switches
DD35                         and     32                          ; Check if in service mode in DIP settings
DD37                         ret     nz                          ; Return if so
DD38                         out     (OUT7_WATCHDOG_RESET), a
DD3A                         jr      loc_DD2E
DD3C ; ---------------------------------------------------------------------------
DD3C
DD3C start_system:                                               ; DD23 DD31
DD3C                         jp      init_system
DD3C ; ---------------------------------------------------------------------------
DD3F aHitMiddleJumpB:        .ascii 'HIT MIDDLE JUMP BUTTON//TO CONTINUE TEST.',0
DD3F                                                             ; DD28↑o
DD69
DD69 ; =============== S U B R O U T I N E =======================================
DD69
DD69
DD69 system_init:                                                ; 0120↑p 0142↑p 
DD69                         call    clear_sprites
DD6C                         call    clear_sprites
DD6F                         ld      ix, RAM_TABLES              ; Large chunk of RAM memory tables which are cleared
DD73                         call    table_clear
DD76                         push    af
DD77                         ld      hl, palette_data1
DD7A                         call    setup_palette1
DD7D                         call    clear_screen
DD80                         pop     af
DD81                         or      a
DD82                         jr      z, loc_DD91
DD84                         ld      ix, ram_error_message
DD88                         call    sub_DF11
DD8B                         call    rom_checksum
DD8E                         or      1
DD90                         ret
DD91 ; ---------------------------------------------------------------------------
DD91
DD91 loc_DD91:                                                   ; DD82
DD91                         call    rom_checksum
DD94                         ret     nz
DD95                         call    character_grid
DD98                         xor     a
DD99                         ret
DD99 ; End of function system_init
DD99
DD99 ; ---------------------------------------------------------------------------
DD9A ram_error_message:      dw aRamError                        ; DD84↑o
DD9A                                                             ; "RAM ERROR"
DD9C                         dw bg_row06+0Ch                     ; place to put message
DD9E                         dw bg_row08+0Ch
DDA0                         dw aB2                              ; "B2 "
DDA2                         dw aU35U36                          ; "U35 U36"
DDA4 aRamError:              .ascii 'RAM ERROR',0                ; ram_error_message↑o
DDAE aB2:                    .ascii 'B2 ',0                      ; DDA0↑o
DDB2 aU35U36:                .ascii 'U35 U36',0                  ; DDA2↑o
DDBA ; ---------------------------------------------------------------------------
DDBA
DDBA init_system:                                                ; start_system
DDBA                         ld      e, 70h ; 'p'
DDBC                         di
DDBD                         ld      iy, PALETTE_RAM_BASE
DDC1                         ld      ix, palette_data1
DDC5
DDC5 loc_DDC5:                                                   ; DE1C↓j
DDC5                         ld      hl, bg_videoram
DDC8                         ld      (unk_E002), iy
DDCC                         ld      d, 0
DDCE                         ld      bc, 1Eh
DDD1
DDD1 loc_DDD1:                                                   ; DDDD↓j DDE4↓j
DDD1                         ld      (hl), d
DDD2                         inc     hl
DDD3                         ld      (hl), e
DDD4                         inc     hl
DDD5                         ld      (hl), d
DDD6                         inc     hl
DDD7                         ld      (hl), e
DDD8                         inc     hl
DDD9                         inc     d
DDDA                         ld      a, d
DDDB                         cp      10h
DDDD                         jr      c, loc_DDD1
DDDF                         ld      d, 0
DDE1                         dec     bc
DDE2                         ld      a, b
DDE3                         or      c
DDE4                         jr      nz, loc_DDD1
DDE6                         ld      c, 10h
DDE8
DDE8 loc_DDE8:                                                   ; DE14↓j
DDE8                         ld      iy, (unk_E002)
DDEC                         ld      b, 10h
DDEE
DDEE loc_DDEE:                                                   ; DE0D↓j
DDEE                         ld      a, (ix+0)
DDF1                         or      a
DDF2                         ld      a, (ix+1)
DDF5                         jr      nz, loc_DDFC
DDF7                         ld      (iy+0), a
DDFA                         jr      loc_DDFF
DDFC ; ---------------------------------------------------------------------------
DDFC
DDFC loc_DDFC:                                                   ; DDF5
DDFC                         ld      (iy+1), a
DDFF
DDFF loc_DDFF:                                                   ; DDFA
DDFF                         ld      hl, 750h
DE02
DE02 loc_DE02:                                                   ; DE07↓j
DE02                         dec     hl
DE03                         out     (OUT7_WATCHDOG_RESET), a
DE05                         ld      a, h
DE06                         or      l
DE07                         jr      nz, loc_DE02
DE09                         inc     iy
DE0B                         inc     iy
DE0D                         djnz    loc_DDEE
DE0F                         inc     ix
DE11                         inc     ix
DE13                         dec     c
DE14                         jr      nz, loc_DDE8
DE16                         ld      a, e
DE17                         sub     10h
DE19                         ld      e, a
DE1A                         cp      40h ; '@'
DE1C                         jp      nc, loc_DDC5
DE1F                         ei
DE20                         jp      setup_palette1
DE23
DE23 ; =============== S U B R O U T I N E =======================================
DE23
DE23
DE23 clear_screen:                                               ; DD7D↑p
DE23                         ld      hl, bg_videoram
DE26                         ld      bc, 780h
DE29
DE29 cls_loop:                                                   ; DE2F↓j
DE29                         ld      (hl), 20h ; ' '
DE2B                         inc     hl
DE2C                         dec     bc
DE2D                         ld      a, b
DE2E                         or      c
DE2F                         jr      nz, cls_loop
DE31                         ret
DE31 ; End of function clear_screen
DE31
DE32
DE32 ; =============== S U B R O U T I N E =======================================
DE32
DE32
DE32 table_clear:                                                ; DD73↑p
DE32                         xor     a
DE33
DE33 loc_DE33:                                                   ; DED7↓j
DE33                         push    af
DE34                         ld      l, (ix+0)                   ; get first address start
DE37                         ld      h, (ix+1)
DE3A                         ld      a, h
DE3B                         or      l
DE3C                         jr      nz, clear_more              ; double 0 ends the table list
DE3E                         pop     af
DE3F                         ret
DE40 ; ---------------------------------------------------------------------------
DE40
DE40 clear_more:                                                 ; DE3C
DE40                         ld      e, (ix+4)
DE43                         ld      d, (ix+5)
DE46                         ld      c, (ix+2)
DE49                         ld      b, (ix+3)
DE4C                         ldir
DE4E                         ld      a, (ix+7)
DE51                         ld      (0E7FFh), a
DE54                         out     (OUT7_WATCHDOG_RESET), a
DE56                         ld      l, (ix+0)
DE59                         ld      h, (ix+1)
DE5C                         ld      e, (ix+2)
DE5F                         ld      d, (ix+3)
DE62
DE62 loc_DE62:                                                   ; DE75↓j
DE62                         ld      a, d
DE63                         or      e
DE64                         jr      z, loc_DE77
DE66                         ld      b, 2
DE68                         ld      a, 0
DE6A
DE6A loc_DE6A:                                                   ; DE71↓j
DE6A                         ld      (hl), a
DE6B                         cp      (hl)
DE6C                         jp      nz, loc_DEDA
DE6F                         or      0FFh
DE71                         djnz    loc_DE6A
DE73                         inc     hl
DE74                         dec     de
DE75                         jr      loc_DE62
DE77 ; ---------------------------------------------------------------------------
DE77
DE77 loc_DE77:                                                   ; DE64
DE77                         ld      h, (ix+1)
DE7A                         ld      l, (ix+0)
DE7D                         ld      e, (ix+2)
DE80                         ld      d, (ix+3)
DE83                         out     (OUT7_WATCHDOG_RESET), a
DE85
DE85 loc_DE85:                                                   ; DE8D↓j
DE85                         ld      a, d
DE86                         or      e
DE87                         jr      z, loc_DE8F
DE89                         ld      (hl), 0
DE8B                         inc     hl
DE8C                         dec     de
DE8D                         jr      loc_DE85
DE8F ; ---------------------------------------------------------------------------
DE8F
DE8F loc_DE8F:                                                   ; DE87
DE8F                         ld      l, (ix+0)
DE92                         ld      h, (ix+1)
DE95                         ld      e, (ix+2)
DE98                         ld      d, (ix+3)
DE9B
DE9B loc_DE9B:                                                   ; DEB2↓j
DE9B                         ld      a, d
DE9C                         or      e
DE9D                         jr      z, loc_DEB4
DE9F                         ld      a, (hl)
DEA0                         cp      0
DEA2                         jp      nz, loc_DEDA
DEA5                         ld      a, 1
DEA7
DEA7 loc_DEA7:                                                   ; DEAE↓j
DEA7                         ld      (hl), a
DEA8                         cp      (hl)
DEA9                         jp      nz, loc_DEDA
DEAC                         sla     a
DEAE                         jr      nc, loc_DEA7
DEB0                         inc     hl
DEB1                         dec     de
DEB2                         jr      loc_DE9B
DEB4 ; ---------------------------------------------------------------------------
DEB4
DEB4 loc_DEB4:                                                   ; DE9D
DEB4                         xor     a
DEB5
DEB5 loc_DEB5:                                                   ; DEDD↓j
DEB5                         ld      h, (ix+5)
DEB8                         ld      l, (ix+4)
DEBB                         ld      d, (ix+1)
DEBE                         ld      e, (ix+0)
DEC1                         ld      c, (ix+2)
DEC4                         ld      b, (ix+3)
DEC7                         out     (OUT7_WATCHDOG_RESET), a
DEC9                         ldir
DECB                         xor     a
DECC                         ld      (0E7FFh), a
DECF                         ld      b, a
DED0                         pop     af
DED1                         or      b
DED2                         ld      de, 8
DED5                         add     ix, de
DED7                         jp      loc_DE33
DEDA ; ---------------------------------------------------------------------------
DEDA
DEDA loc_DEDA:                                                   ; DE6C DEA2 
DEDA                         ld      a, (ix+6)
DEDD                         jr      loc_DEB5
DEDD ; End of function table_clear
DEDD
DEDD ; ---------------------------------------------------------------------------
DEDF RAM_TABLES:             dw 0E000h                           ; DD6F↑o DFC6↓o
DEE1                         dw 200h
DEE3                         dw 0E200h
DEE5                         dw 101h
DEE7                         dw 0E200h
DEE9                         dw 200h
DEEB                         dw 0E000h
DEED                         dw 201h
DEEF                         dw 0E400h
DEF1                         dw 200h
DEF3                         dw 0E200h
DEF5                         dw 301h
DEF7                         dw 0E600h
DEF9                         dw 1FFh
DEFB                         dw 0E000h
DEFD                         dw 401h
DEFF                         dw 0F000h
DF01                         dw 400h
DF03                         dw 0E000h
DF05                         dw 520h
DF07                         dw 0F400h
DF09                         dw 400h
DF0B                         dw 0E000h
DF0D                         dw 520h
DF0F                         db    0                             ; double 0 is end of table
DF10                         db    0
DF11
DF11 ; =============== S U B R O U T I N E =======================================
DF11
DF11
DF11 sub_DF11:                                                   ; DD88↑p DF82↓p
DF11                         push    af
DF12                         ld      l, (ix+2)
DF15                         ld      h, (ix+3)
DF18                         ld      e, (ix+0)
DF1B                         ld      d, (ix+1)
DF1E                         call    message_print_text_only
DF21                         pop     af
DF22                         ld      l, (ix+4)
DF25                         ld      h, (ix+5)
DF28                         ld      de, 6
DF2B                         add     ix, de
DF2D
DF2D loc_DF2D:                                                   ; DF46↓j
DF2D                         srl     a
DF2F                         jr      nc, loc_DF3C
DF31                         ld      e, (ix+0)
DF34                         ld      d, (ix+1)
DF37                         push    af
DF38                         call    message_print_text_only
DF3B                         pop     af
DF3C
DF3C loc_DF3C:                                                   ; DF2F
DF3C                         ld      de, 2
DF3F                         add     ix, de
DF41                         ld      de, 40h ; '@'
DF44                         add     hl, de
DF45                         or      a
DF46                         jr      nz, loc_DF2D
DF48                         ret
DF48 ; End of function sub_DF11
DF48
DF49
DF49 ; =============== S U B R O U T I N E =======================================
DF49
DF49
DF49 rom_checksum:                                               ; DD8B↑p
DF49                                                             ; loc_DD91↑p
DF49                         ld      ix, word_DF88
DF4D                         ld      d, 0
DF4F
DF4F loc_DF4F:                                                   ; DF79↓j
DF4F                         ld      l, (ix+2)
DF52                         ld      h, (ix+3)
DF55                         ld      c, (ix+0)
DF58                         ld      b, (ix+1)
DF5B                         ld      a, b
DF5C                         or      c
DF5D                         jr      z, loc_DF7B
DF5F                         xor     a
DF60
DF60 loc_DF60:                                                   ; DF63↓j DF66↓j
DF60                         add     a, (hl)
DF61                         inc     hl
DF62                         dec     c
DF63                         jr      nz, loc_DF60
DF65                         dec     b
DF66                         jr      nz, loc_DF60
DF68                         cp      (ix+4)
DF6B                         jr      z, loc_DF72
DF6D                         ld      a, d
DF6E                         or      (ix+5)
DF71                         ld      d, a
DF72
DF72 loc_DF72:                                                   ; DF6B
DF72                         ld      bc, 6
DF75                         add     ix, bc
DF77                         out     (OUT7_WATCHDOG_RESET), a
DF79                         jr      loc_DF4F
DF7B ; ---------------------------------------------------------------------------
DF7B
DF7B loc_DF7B:                                                   ; DF5D
DF7B                         ld      a, d
DF7C                         or      a
DF7D                         ret     z
DF7E                         ld      ix, off_DF97                ; "ROM ERROR"
DF82                         call    sub_DF11
DF85                         or      1
DF87                         ret
DF87 ; End of function rom_checksum
DF87
DF87 ; ---------------------------------------------------------------------------
DF88 word_DF88:              dw  8000h                           ; rom_checksum↑o
DF8A                         dw 0
DF8C                         db 86h
DF8D                         db    1
DF8E                         db    0
DF8F                         db  60h ; `
DF90                         db    0
DF91                         db  80h
DF92                         db 0E4h
DF93                         db    2
DF94                         db    0
DF95                         db    0
DF96                         db  1Ch
DF97 off_DF97:               dw aRomError                        ; DF7E↑o
DF97                                                             ; "ROM ERROR"
DF99                         dw bg_row13+0Ch
DF9B                         dw bg_row15+0Ch
DF9D                         dw aPro03b                          ; "PRO.0 - 3B"
DF9F                         dw aPro15b                          ; "PRO.1 - 5B"
DFA1 aRomError:              .ascii 'ROM ERROR',0                ; off_DF97↑o
DFAB aPro03b:                .ascii 'PRO.0 - 3B',0               ; DF9D↑o
DFB6 aPro15b:                .ascii 'PRO.1 - 5B',0               ; DF9F↑o
DFC1
DFC1 ; =============== S U B R O U T I N E =======================================
DFC1
DFC1
DFC1 ram_segments_init:                                          ; 011D↑p 013F↑p
DFC1                         ld      a, (0E7FFh)
DFC4                         or      a
DFC5                         ret     z
DFC6                         ld      ix, RAM_TABLES
DFCA                         ld      de, 8
DFCD                         ld      b, a
DFCE
DFCE loc_DFCE:                                                   ; DFDC↓j
DFCE                         ld      a, (ix+7)
DFD1                         cp      b
DFD2                         jr      z, loc_DFE0
DFD4                         add     ix, de
DFD6                         ld      a, (ix+0)
DFD9                         or      (ix+1)
DFDC                         jr      nz, loc_DFCE
DFDE                         jr      loc_DFF7
DFE0 ; ---------------------------------------------------------------------------
DFE0
DFE0 loc_DFE0:                                                   ; DFD2
DFE0                         ld      h, (ix+5)
DFE3                         ld      l, (ix+4)
DFE6                         ld      d, (ix+1)
DFE9                         ld      e, (ix+0)
DFEC                         ld      c, (ix+2)
DFEF                         ld      b, (ix+3)
DFF2                         out     (OUT7_WATCHDOG_RESET), a
DFF4                         ldir
DFF6                         xor     a
DFF7
DFF7 loc_DFF7:                                                   ; DFDE
DFF7                         ld      (0E7FFh), a
DFFA                         ret
DFFA ; End of function ram_segments_init
DFFA
DFFA ; ---------------------------------------------------------------------------
DFFB aJlnv3:                 .ascii 'JLNv3'
DFFB ; end of 'ROM'
DFFB
E000 ; ===========================================================================
E000
E000 ; Segment type: Regular
E000                         segment WORK_RAM
E000                         org 0E000h
E000 nvram:                  ds 1                                ; 08EC↑w 0A0B↑r 
E001 byte_E001:              ds 1                                ; 092C↑w 0961↑r 
E002 unk_E002:               ds 1                                ; DDC8↑w
E002                                                             ; loc_DDE8↑r
E003                         ds 1
E004 unk_E004:               ds 1                                ; BE5D↑r BE63↑w
E005 unk_E005:               ds 1                                ; 65ED↑w 6653↑w 
E006 CHARACTER_HIGH_BYTE:    ds 1                                ; 4C8B↑w 4CA8↑r 
E007 level_table_offset:     ds 1                                ; 8947↑w 8970↑r 
E008 level_table_high:       ds 1                                ; 894B↑w 8990↑w 
E009 unk_E009:               ds 1                                ; ADAE↑w ADE1↑w 
E00A byte_E00A:              ds 1                                ; 08EF↑w 0A4A↑w 
E00B unk_E00B:               ds 1                                ; 51E5↑w
E00B                                                             ; loc_520C↑r 
E00C unk_E00C:               ds 1                                ; 188F↑w 2255↑w 
E00D unk_E00D:               ds 1                                ; C51B↑w C521↑r 
E00E                         ds 1
E00F byte_E00F:              ds 1                                ; 090C↑w 0A63↑r 
E010 unk_E010:               ds 1                                ; ADAB↑w ADE4↑w 
E011 unk_E011:               ds 1                                ; 89A2↑w BE67↑r 
E012 unk_E012:               ds 1                                ; BD63↑r BD69↑w 
E013 unk_E013:               ds 1                                ; 0E70↑w 0EA6↑r 
E014 unk_E014:               ds 1                                ; loc_DFC↑r
E014                                                             ; 0E07↑w 
E015 unk_E015:               ds 1                                ; 4E64↑w 4E6A↑r 
E016 unk_E016:               ds 1                                ; 5014↑w 5020↑r 
E017 unk_E017:               ds 1                                ; 5E17↑r 8D2F↑w 
E018 unk_E018:               ds 1                                ; 5E21↑r 8D45↑w
E019 unk_E019:               ds 1                                ; 5E2B↑r 8D3D↑w 
E01A                         ds 1
E01B                         ds 1
E01C unk_E01C:               ds 1                                ; 448F↑w 4498↑w 
E01D                         ds 1
E01E                         ds 1
E01F                         ds 1
E020                         ds 1
E021 byte_E021:              ds 1                                ; 0890↑w 0907↑w 
E022 byte_E022:              ds 1                                ; loc_A21↑r
E022                                                             ; 0A4E↑w
E023 unk_E023:               ds 1                                ; loc_53EF↑w
E023                                                             ; 544C↑r
E024 byte_E024:              ds 1                                ; 0AAA↑w 0B48↑r 
E025 byte_E025:              ds 1                                ; 1355↑w 135F↑r 
E026 unk_E026:               ds 1                                ; sub_4E14↑r
E026                                                             ; 4E18↑w 
E027 unk_E027:               ds 1                                ; 4E86↑r 5967↑r 
E028 unk_E028:               ds 1                                ; 4E82↑r 5ABA↑r 
E029 byte_E029:              ds 1                                ; 09DA↑r 09E1↑w 
E02A                         ds 1
E02B unused_status:          ds 1                                ; 0164↑w
E02C                         ds 1
E02D temp_counter:           ds 1                                ; 1740↑w 4EE0↑w 
E02E                         ds 1
E02F unk_E02F:               ds 1                                ; 8B6A↑w 8BD2↑o
E030 ticker_countup:         ds 1                                ; 0487↑r 0903↑w 
E031 unk_E031:               ds 1                                ; 4459↑w
E031                                                             ; sub_4538↑r 
E032 unk_E032:               ds 1                                ; 1F8B↑r 445F↑r 
E033                         ds 1
E034                         ds 1
E035                         ds 1
E036                         ds 1
E037 unk_E037:               ds 1                                ; 8D12↑w
E037                                                             ; sub_BD24↑r 
E038 object_action_table:    ds 1                                ; 216F↑o 2CC2↑o 
E039                         ds 1
E03A                         ds 1
E03B                         ds 1
E03C                         ds 1
E03D                         ds 1
E03E                         ds 1
E03F                         ds 1
E040                         ds 1
E041                         ds 1
E042                         ds 1
E043                         ds 1
E044                         ds 1
E045                         ds 1
E046                         ds 1
E047                         ds 1
E048                         ds 1
E049                         ds 1
E04A                         ds 1
E04B                         ds 1
E04C                         ds 1
E04D                         ds 1
E04E                         ds 1
E04F                         ds 1
E050                         ds 1
E051                         ds 1
E052                         ds 1
E053                         ds 1
E054                         ds 1
E055                         ds 1
E056                         ds 1
E057                         ds 1
E058 unk_E058:               ds 1                                ; 4E20↑o 4E8B↑o 
E059                         ds 1
E05A                         ds 1
E05B                         ds 1
E05C                         ds 1
E05D                         ds 1
E05E                         ds 1
E05F                         ds 1
E060                         ds 1
E061                         ds 1
E062                         ds 1
E063                         ds 1
E064                         ds 1
E065                         ds 1
E066                         ds 1
E067                         ds 1
E068                         ds 1
E069                         ds 1
E06A                         ds 1
E06B                         ds 1
E06C                         ds 1
E06D                         ds 1
E06E                         ds 1
E06F                         ds 1
E070                         ds 1
E071                         ds 1
E072                         ds 1
E073                         ds 1
E074                         ds 1
E075                         ds 1
E076                         ds 1
E077                         ds 1
E078                         ds 1
E079                         ds 1
E07A                         ds 1
E07B                         ds 1
E07C                         ds 1
E07D                         ds 1
E07E                         ds 1
E07F                         ds 1
E080                         ds 1
E081                         ds 1
E082                         ds 1
E083                         ds 1
E084                         ds 1
E085                         ds 1
E086                         ds 1
E087                         ds 1
E088                         ds 1
E089                         ds 1
E08A                         ds 1
E08B                         ds 1
E08C                         ds 1
E08D                         ds 1
E08E                         ds 1
E08F                         ds 1
E090                         ds 1
E091                         ds 1
E092                         ds 1
E093                         ds 1
E094                         ds 1
E095                         ds 1
E096                         ds 1
E097                         ds 1
E098                         ds 1
E099                         ds 1
E09A                         ds 1
E09B                         ds 1
E09C                         ds 1
E09D                         ds 1
E09E                         ds 1
E09F                         ds 1
E0A0                         ds 1
E0A1                         ds 1
E0A2                         ds 1
E0A3                         ds 1
E0A4                         ds 1
E0A5                         ds 1
E0A6                         ds 1
E0A7                         ds 1
E0A8                         ds 1
E0A9                         ds 1
E0AA                         ds 1
E0AB                         ds 1
E0AC                         ds 1
E0AD                         ds 1
E0AE                         ds 1
E0AF                         ds 1
E0B0                         ds 1
E0B1                         ds 1
E0B2                         ds 1
E0B3                         ds 1
E0B4                         ds 1
E0B5                         ds 1
E0B6                         ds 1
E0B7                         ds 1
E0B8                         ds 1
E0B9                         ds 1
E0BA                         ds 1
E0BB                         ds 1
E0BC                         ds 1
E0BD                         ds 1
E0BE                         ds 1
E0BF                         ds 1
E0C0                         ds 1
E0C1                         ds 1
E0C2                         ds 1
E0C3                         ds 1
E0C4                         ds 1
E0C5                         ds 1
E0C6                         ds 1
E0C7                         ds 1
E0C8                         ds 1
E0C9                         ds 1
E0CA                         ds 1
E0CB                         ds 1
E0CC                         ds 1
E0CD                         ds 1
E0CE                         ds 1
E0CF                         ds 1
E0D0                         ds 1
E0D1                         ds 1
E0D2                         ds 1
E0D3                         ds 1
E0D4                         ds 1
E0D5                         ds 1
E0D6                         ds 1
E0D7                         ds 1
E0D8                         ds 1
E0D9                         ds 1
E0DA                         ds 1
E0DB                         ds 1
E0DC                         ds 1
E0DD                         ds 1
E0DE                         ds 1
E0DF                         ds 1
E0E0                         ds 1
E0E1                         ds 1
E0E2                         ds 1
E0E3                         ds 1
E0E4                         ds 1
E0E5                         ds 1
E0E6                         ds 1
E0E7                         ds 1
E0E8                         ds 1
E0E9                         ds 1
E0EA                         ds 1
E0EB                         ds 1
E0EC                         ds 1
E0ED                         ds 1
E0EE                         ds 1
E0EF                         ds 1
E0F0                         ds 1
E0F1                         ds 1
E0F2                         ds 1
E0F3                         ds 1
E0F4                         ds 1
E0F5                         ds 1
E0F6                         ds 1
E0F7                         ds 1
E0F8 unk_E0F8:               ds 1                                ; sub_4E55↑o
E0F9                         ds 1
E0FA                         ds 1
E0FB                         ds 1
E0FC                         ds 1
E0FD                         ds 1
E0FE                         ds 1
E0FF                         ds 1
E100                         ds 1
E101                         ds 1
E102                         ds 1
E103                         ds 1
E104                         ds 1
E105                         ds 1
E106                         ds 1
E107                         ds 1
E108                         ds 1
E109                         ds 1
E10A                         ds 1
E10B                         ds 1
E10C unk_E10C:               ds 1                                ; 5066↑o
E10C                                                             ; sub_51AB↑o 
E10D                         ds 1
E10E                         ds 1
E10F                         ds 1
E110                         ds 1
E111                         ds 1
E112                         ds 1
E113                         ds 1
E114                         ds 1
E115                         ds 1
E116                         ds 1
E117                         ds 1
E118                         ds 1
E119                         ds 1
E11A                         ds 1
E11B                         ds 1
E11C                         ds 1
E11D                         ds 1
E11E                         ds 1
E11F                         ds 1
E120                         ds 1
E121                         ds 1
E122                         ds 1
E123                         ds 1
E124                         ds 1
E125                         ds 1
E126                         ds 1
E127                         ds 1
E128                         ds 1
E129                         ds 1
E12A                         ds 1
E12B                         ds 1
E12C                         ds 1
E12D                         ds 1
E12E                         ds 1
E12F                         ds 1
E130                         ds 1
E131                         ds 1
E132                         ds 1
E133                         ds 1
E134                         ds 1
E135                         ds 1
E136                         ds 1
E137                         ds 1
E138                         ds 1
E139                         ds 1
E13A                         ds 1
E13B                         ds 1
E13C                         ds 1
E13D                         ds 1
E13E                         ds 1
E13F                         ds 1
E140                         ds 1
E141                         ds 1
E142                         ds 1
E143                         ds 1
E144                         ds 1
E145                         ds 1
E146                         ds 1
E147                         ds 1
E148                         ds 1
E149                         ds 1
E14A                         ds 1
E14B                         ds 1
E14C                         ds 1
E14D                         ds 1
E14E                         ds 1
E14F                         ds 1
E150                         ds 1
E151                         ds 1
E152                         ds 1
E153                         ds 1
E154                         ds 1
E155                         ds 1
E156                         ds 1
E157                         ds 1
E158                         ds 1
E159                         ds 1
E15A                         ds 1
E15B                         ds 1
E15C                         ds 1
E15D                         ds 1
E15E                         ds 1
E15F                         ds 1
E160                         ds 1
E161                         ds 1
E162                         ds 1
E163                         ds 1
E164                         ds 1
E165                         ds 1
E166                         ds 1
E167                         ds 1
E168                         ds 1
E169                         ds 1
E16A                         ds 1
E16B                         ds 1
E16C                         ds 1
E16D                         ds 1
E16E                         ds 1
E16F                         ds 1
E170                         ds 1
E171                         ds 1
E172                         ds 1
E173                         ds 1
E174                         ds 1
E175                         ds 1
E176                         ds 1
E177                         ds 1
E178                         ds 1
E179                         ds 1
E17A                         ds 1
E17B                         ds 1
E17C                         ds 1
E17D                         ds 1
E17E                         ds 1
E17F                         ds 1
E180                         ds 1
E181                         ds 1
E182                         ds 1
E183                         ds 1
E184                         ds 1
E185                         ds 1
E186                         ds 1
E187                         ds 1
E188                         ds 1
E189                         ds 1
E18A                         ds 1
E18B                         ds 1
E18C                         ds 1
E18D                         ds 1
E18E                         ds 1
E18F                         ds 1
E190                         ds 1
E191                         ds 1
E192                         ds 1
E193                         ds 1
E194                         ds 1
E195                         ds 1
E196                         ds 1
E197                         ds 1
E198                         ds 1
E199                         ds 1
E19A                         ds 1
E19B                         ds 1
E19C                         ds 1
E19D                         ds 1
E19E                         ds 1
E19F                         ds 1
E1A0                         ds 1
E1A1                         ds 1
E1A2                         ds 1
E1A3                         ds 1
E1A4                         ds 1
E1A5                         ds 1
E1A6                         ds 1
E1A7                         ds 1
E1A8                         ds 1
E1A9                         ds 1
E1AA                         ds 1
E1AB                         ds 1
E1AC                         ds 1
E1AD                         ds 1
E1AE                         ds 1
E1AF                         ds 1
E1B0                         ds 1
E1B1                         ds 1
E1B2                         ds 1
E1B3                         ds 1
E1B4                         ds 1
E1B5                         ds 1
E1B6                         ds 1
E1B7                         ds 1
E1B8                         ds 1
E1B9                         ds 1
E1BA                         ds 1
E1BB                         ds 1
E1BC                         ds 1
E1BD                         ds 1
E1BE                         ds 1
E1BF                         ds 1
E1C0                         ds 1
E1C1                         ds 1
E1C2                         ds 1
E1C3                         ds 1
E1C4                         ds 1
E1C5                         ds 1
E1C6                         ds 1
E1C7                         ds 1
E1C8                         ds 1
E1C9                         ds 1
E1CA                         ds 1
E1CB                         ds 1
E1CC                         ds 1
E1CD                         ds 1
E1CE                         ds 1
E1CF unk_E1CF:               ds 1                                ; 38EB↑o 4217↑o
E1D0                         ds 1
E1D1                         ds 1
E1D2                         ds 1
E1D3                         ds 1
E1D4                         ds 1
E1D5                         ds 1
E1D6                         ds 1
E1D7                         ds 1
E1D8                         ds 1
E1D9                         ds 1
E1DA                         ds 1
E1DB                         ds 1
E1DC                         ds 1
E1DD                         ds 1
E1DE                         ds 1
E1DF                         ds 1
E1E0                         ds 1
E1E1                         ds 1
E1E2                         ds 1
E1E3                         ds 1
E1E4                         ds 1
E1E5                         ds 1
E1E6                         ds 1
E1E7                         ds 1
E1E8                         ds 1
E1E9                         ds 1
E1EA                         ds 1
E1EB                         ds 1
E1EC                         ds 1
E1ED                         ds 1
E1EE                         ds 1
E1EF                         ds 1
E1F0                         ds 1
E1F1                         ds 1
E1F2                         ds 1
E1F3                         ds 1
E1F4                         ds 1
E1F5                         ds 1
E1F6                         ds 1
E1F7                         ds 1
E1F8                         ds 1
E1F9                         ds 1
E1FA                         ds 1
E1FB                         ds 1
E1FC                         ds 1
E1FD                         ds 1
E1FE                         ds 1
E1FF                         ds 1
E200                         ds 1
E201                         ds 1
E202                         ds 1
E203                         ds 1
E204                         ds 1
E205                         ds 1
E206                         ds 1
E207                         ds 1
E208                         ds 1
E209                         ds 1
E20A                         ds 1
E20B                         ds 1
E20C                         ds 1
E20D                         ds 1
E20E                         ds 1
E20F                         ds 1
E210                         ds 1
E211                         ds 1
E212                         ds 1
E213                         ds 1
E214                         ds 1
E215                         ds 1
E216                         ds 1
E217                         ds 1
E218                         ds 1
E219                         ds 1
E21A                         ds 1
E21B                         ds 1
E21C                         ds 1
E21D                         ds 1
E21E                         ds 1
E21F                         ds 1
E220                         ds 1
E221                         ds 1
E222                         ds 1
E223                         ds 1
E224                         ds 1
E225                         ds 1
E226                         ds 1
E227                         ds 1
E228                         ds 1
E229                         ds 1
E22A                         ds 1
E22B                         ds 1
E22C                         ds 1
E22D                         ds 1
E22E                         ds 1
E22F                         ds 1
E230                         ds 1
E231                         ds 1
E232                         ds 1
E233                         ds 1
E234                         ds 1
E235                         ds 1
E236                         ds 1
E237                         ds 1
E238                         ds 1
E239                         ds 1
E23A                         ds 1
E23B                         ds 1
E23C                         ds 1
E23D                         ds 1
E23E                         ds 1
E23F                         ds 1
E240                         ds 1
E241                         ds 1
E242                         ds 1
E243                         ds 1
E244                         ds 1
E245                         ds 1
E246                         ds 1
E247                         ds 1
E248                         ds 1
E249                         ds 1
E24A                         ds 1
E24B                         ds 1
E24C                         ds 1
E24D                         ds 1
E24E                         ds 1
E24F                         ds 1
E250                         ds 1
E251                         ds 1
E252                         ds 1
E253                         ds 1
E254                         ds 1
E255                         ds 1
E256                         ds 1
E257                         ds 1
E258                         ds 1
E259                         ds 1
E25A                         ds 1
E25B                         ds 1
E25C                         ds 1
E25D                         ds 1
E25E                         ds 1
E25F                         ds 1
E260                         ds 1
E261                         ds 1
E262                         ds 1
E263                         ds 1
E264                         ds 1
E265                         ds 1
E266                         ds 1
E267                         ds 1
E268                         ds 1
E269                         ds 1
E26A                         ds 1
E26B                         ds 1
E26C                         ds 1
E26D                         ds 1
E26E                         ds 1
E26F                         ds 1
E270                         ds 1
E271                         ds 1
E272                         ds 1
E273                         ds 1
E274                         ds 1
E275                         ds 1
E276                         ds 1
E277                         ds 1
E278                         ds 1
E279                         ds 1
E27A                         ds 1
E27B                         ds 1
E27C                         ds 1
E27D                         ds 1
E27E                         ds 1
E27F                         ds 1
E280                         ds 1
E281                         ds 1
E282                         ds 1
E283                         ds 1
E284                         ds 1
E285                         ds 1
E286                         ds 1
E287                         ds 1
E288                         ds 1
E289                         ds 1
E28A                         ds 1
E28B                         ds 1
E28C                         ds 1
E28D                         ds 1
E28E                         ds 1
E28F                         ds 1
E290                         ds 1
E291                         ds 1
E292                         ds 1
E293                         ds 1
E294                         ds 1
E295                         ds 1
E296                         ds 1
E297                         ds 1
E298                         ds 1
E299                         ds 1
E29A                         ds 1
E29B                         ds 1
E29C                         ds 1
E29D                         ds 1
E29E                         ds 1
E29F                         ds 1
E2A0                         ds 1
E2A1                         ds 1
E2A2                         ds 1
E2A3                         ds 1
E2A4                         ds 1
E2A5                         ds 1
E2A6                         ds 1
E2A7                         ds 1
E2A8                         ds 1
E2A9                         ds 1
E2AA                         ds 1
E2AB                         ds 1
E2AC                         ds 1
E2AD                         ds 1
E2AE                         ds 1
E2AF                         ds 1
E2B0                         ds 1
E2B1                         ds 1
E2B2                         ds 1
E2B3                         ds 1
E2B4                         ds 1
E2B5                         ds 1
E2B6                         ds 1
E2B7                         ds 1
E2B8                         ds 1
E2B9                         ds 1
E2BA                         ds 1
E2BB                         ds 1
E2BC                         ds 1
E2BD                         ds 1
E2BE                         ds 1
E2BF                         ds 1
E2C0                         ds 1
E2C1                         ds 1
E2C2                         ds 1
E2C3                         ds 1
E2C4                         ds 1
E2C5                         ds 1
E2C6                         ds 1
E2C7                         ds 1
E2C8                         ds 1
E2C9                         ds 1
E2CA                         ds 1
E2CB                         ds 1
E2CC                         ds 1
E2CD                         ds 1
E2CE                         ds 1
E2CF                         ds 1
E2D0                         ds 1
E2D1                         ds 1
E2D2                         ds 1
E2D3                         ds 1
E2D4                         ds 1
E2D5                         ds 1
E2D6                         ds 1
E2D7                         ds 1
E2D8                         ds 1
E2D9                         ds 1
E2DA                         ds 1
E2DB                         ds 1
E2DC                         ds 1
E2DD                         ds 1
E2DE                         ds 1
E2DF                         ds 1
E2E0                         ds 1
E2E1                         ds 1
E2E2                         ds 1
E2E3                         ds 1
E2E4                         ds 1
E2E5                         ds 1
E2E6                         ds 1
E2E7                         ds 1
E2E8                         ds 1
E2E9                         ds 1
E2EA                         ds 1
E2EB                         ds 1
E2EC                         ds 1
E2ED                         ds 1
E2EE                         ds 1
E2EF                         ds 1
E2F0                         ds 1
E2F1                         ds 1
E2F2                         ds 1
E2F3                         ds 1
E2F4                         ds 1
E2F5                         ds 1
E2F6                         ds 1
E2F7                         ds 1
E2F8                         ds 1
E2F9                         ds 1
E2FA                         ds 1
E2FB                         ds 1
E2FC                         ds 1
E2FD                         ds 1
E2FE                         ds 1
E2FF                         ds 1
E300                         ds 1
E301                         ds 1
E302                         ds 1
E303                         ds 1
E304                         ds 1
E305                         ds 1
E306                         ds 1
E307                         ds 1
E308                         ds 1
E309                         ds 1
E30A                         ds 1
E30B                         ds 1
E30C                         ds 1
E30D                         ds 1
E30E                         ds 1
E30F                         ds 1
E310                         ds 1
E311                         ds 1
E312                         ds 1
E313                         ds 1
E314                         ds 1
E315                         ds 1
E316                         ds 1
E317                         ds 1
E318                         ds 1
E319                         ds 1
E31A                         ds 1
E31B                         ds 1
E31C                         ds 1
E31D                         ds 1
E31E                         ds 1
E31F                         ds 1
E320                         ds 1
E321                         ds 1
E322                         ds 1
E323                         ds 1
E324                         ds 1
E325                         ds 1
E326                         ds 1
E327                         ds 1
E328                         ds 1
E329                         ds 1
E32A                         ds 1
E32B                         ds 1
E32C                         ds 1
E32D                         ds 1
E32E                         ds 1
E32F                         ds 1
E330                         ds 1
E331                         ds 1
E332                         ds 1
E333                         ds 1
E334                         ds 1
E335                         ds 1
E336                         ds 1
E337 unk_E337:               ds 1                                ; 54BA↑o 54CD↑o 
E338                         ds 1
E339                         ds 1
E33A                         ds 1
E33B                         ds 1
E33C                         ds 1
E33D                         ds 1
E33E                         ds 1
E33F                         ds 1
E340                         ds 1
E341                         ds 1
E342                         ds 1
E343                         ds 1
E344                         ds 1
E345                         ds 1
E346                         ds 1
E347                         ds 1
E348                         ds 1
E349                         ds 1
E34A                         ds 1
E34B                         ds 1
E34C                         ds 1
E34D                         ds 1
E34E                         ds 1
E34F                         ds 1
E350                         ds 1
E351                         ds 1
E352                         ds 1
E353                         ds 1
E354                         ds 1
E355 unk_E355:               ds 1                                ; sub_2121↑o
E355                                                             ; 217E↑o 
E356                         ds 1
E357                         ds 1
E358                         ds 1
E359                         ds 1
E35A                         ds 1
E35B                         ds 1
E35C                         ds 1
E35D                         ds 1
E35E                         ds 1
E35F                         ds 1
E360                         ds 1
E361 unk_E361:               ds 1                                ; BD2C↑o BD48↑o 
E362                         ds 1
E363                         ds 1
E364                         ds 1
E365                         ds 1
E366                         ds 1
E367                         ds 1
E368                         ds 1
E369                         ds 1
E36A                         ds 1
E36B                         ds 1
E36C                         ds 1
E36D                         ds 1
E36E                         ds 1
E36F                         ds 1
E370                         ds 1
E371                         ds 1
E372                         ds 1
E373                         ds 1
E374                         ds 1
E375                         ds 1
E376                         ds 1
E377                         ds 1
E378                         ds 1
E379 unk_E379:               ds 1                                ; D118↑o
E37A                         ds 1
E37B                         ds 1
E37C                         ds 1
E37D                         ds 1
E37E                         ds 1
E37F                         ds 1
E380                         ds 1
E381                         ds 1
E382                         ds 1
E383                         ds 1
E384                         ds 1
E385                         ds 1
E386                         ds 1
E387                         ds 1
E388                         ds 1
E389                         ds 1
E38A                         ds 1
E38B                         ds 1
E38C                         ds 1
E38D                         ds 1
E38E                         ds 1
E38F                         ds 1
E390                         ds 1
E391 unk_E391:               ds 1                                ; D126↑o
E392                         ds 1
E393                         ds 1
E394                         ds 1
E395                         ds 1
E396                         ds 1
E397                         ds 1
E398                         ds 1
E399                         ds 1
E39A                         ds 1
E39B                         ds 1
E39C                         ds 1
E39D                         ds 1
E39E                         ds 1
E39F                         ds 1
E3A0                         ds 1
E3A1                         ds 1
E3A2                         ds 1
E3A3                         ds 1
E3A4                         ds 1
E3A5                         ds 1
E3A6                         ds 1
E3A7                         ds 1
E3A8                         ds 1
E3A9 unk_E3A9:               ds 1                                ; sub_8A0C↑o
E3A9                                                             ; B966↑w 
E3AA                         ds 1
E3AB                         ds 1
E3AC                         ds 1
E3AD                         ds 1
E3AE                         ds 1
E3AF                         ds 1
E3B0 unk_E3B0:               ds 1                                ; B96B↑w
E3B1                         ds 1
E3B2                         ds 1
E3B3 unk_E3B3:               ds 1                                ; 8D0D↑w
E3B4                         ds 1
E3B5 unk_E3B5:               ds 1                                ; 89A7↑w 89B3↑w
E3B6                         ds 1
E3B7                         ds 1
E3B8                         ds 1
E3B9 unk_E3B9:               ds 1                                ; sub_CCB7↑o
E3B9                                                             ; sub_CD7D↑o 
E3BA                         ds 1
E3BB                         ds 1
E3BC                         ds 1
E3BD                         ds 1
E3BE                         ds 1
E3BF                         ds 1
E3C0                         ds 1
E3C1                         ds 1
E3C2                         ds 1
E3C3                         ds 1
E3C4                         ds 1
E3C5                         ds 1
E3C6                         ds 1
E3C7                         ds 1
E3C8                         ds 1
E3C9                         ds 1
E3CA                         ds 1
E3CB                         ds 1
E3CC                         ds 1
E3CD                         ds 1
E3CE                         ds 1
E3CF                         ds 1
E3D0                         ds 1
E3D1 unk_E3D1:               ds 1                                ; 8D1C↑w
E3D1                                                             ; sub_C894↑o
E3D2                         ds 1
E3D3                         ds 1
E3D4                         ds 1
E3D5                         ds 1
E3D6                         ds 1
E3D7                         ds 1
E3D8 unk_E3D8:               ds 1                                ; 8D17↑w
E3D9                         ds 1
E3DA                         ds 1
E3DB                         ds 1
E3DC                         ds 1
E3DD                         ds 1
E3DE                         ds 1
E3DF                         ds 1
E3E0                         ds 1
E3E1                         ds 1
E3E2                         ds 1
E3E3                         ds 1
E3E4                         ds 1
E3E5                         ds 1
E3E6                         ds 1
E3E7                         ds 1
E3E8                         ds 1
E3E9                         ds 1
E3EA                         ds 1
E3EB                         ds 1
E3EC                         ds 1
E3ED                         ds 1
E3EE                         ds 1
E3EF                         ds 1
E3F0                         ds 1
E3F1 Building1_data:         ds 1                                ; 0A2F↑o
E3F1                                                             ; get_building_number↑o 
E3F2                         ds 1
E3F3                         ds 1
E3F4                         ds 1
E3F5                         ds 1
E3F6                         ds 1
E3F7                         ds 1
E3F8                         ds 1
E3F9 unk_E3F9:               ds 1                                ; 899F↑r
E3FA                         ds 1
E3FB                         ds 1
E3FC                         ds 1
E3FD                         ds 1
E3FE                         ds 1
E3FF                         ds 1
E400                         ds 1
E401                         ds 1
E402                         ds 1
E403                         ds 1
E404                         ds 1
E405                         ds 1
E406                         ds 1
E407                         ds 1
E408                         ds 1
E409 Building2_data:         ds 1
E40A                         ds 1
E40B                         ds 1
E40C                         ds 1
E40D                         ds 1
E40E                         ds 1
E40F                         ds 1
E410                         ds 1
E411                         ds 1
E412                         ds 1
E413                         ds 1
E414                         ds 1
E415                         ds 1
E416                         ds 1
E417                         ds 1
E418                         ds 1
E419                         ds 1
E41A                         ds 1
E41B                         ds 1
E41C                         ds 1
E41D                         ds 1
E41E                         ds 1
E41F                         ds 1
E420                         ds 1
E421 Building3_data:         ds 1
E422                         ds 1
E423                         ds 1
E424                         ds 1
E425                         ds 1
E426                         ds 1
E427                         ds 1
E428                         ds 1
E429                         ds 1
E42A                         ds 1
E42B                         ds 1
E42C                         ds 1
E42D                         ds 1
E42E                         ds 1
E42F                         ds 1
E430                         ds 1
E431                         ds 1
E432                         ds 1
E433                         ds 1
E434                         ds 1
E435                         ds 1
E436                         ds 1
E437                         ds 1
E438                         ds 1
E439 Building4_data:         ds 1
E43A                         ds 1
E43B                         ds 1
E43C                         ds 1
E43D                         ds 1
E43E                         ds 1
E43F                         ds 1
E440                         ds 1
E441                         ds 1
E442                         ds 1
E443                         ds 1
E444                         ds 1
E445                         ds 1
E446                         ds 1
E447                         ds 1
E448                         ds 1
E449                         ds 1
E44A                         ds 1
E44B                         ds 1
E44C                         ds 1
E44D                         ds 1
E44E                         ds 1
E44F                         ds 1
E450                         ds 1
E451 Building5_data:         ds 1
E452                         ds 1
E453                         ds 1
E454                         ds 1
E455                         ds 1
E456                         ds 1
E457                         ds 1
E458                         ds 1
E459                         ds 1
E45A                         ds 1
E45B                         ds 1
E45C                         ds 1
E45D                         ds 1
E45E                         ds 1
E45F                         ds 1
E460                         ds 1
E461                         ds 1
E462                         ds 1
E463                         ds 1
E464                         ds 1
E465                         ds 1
E466                         ds 1
E467                         ds 1
E468                         ds 1
E469 Building6_data:         ds 1                                ; C999↑o CAE5↑o
E46A                         ds 1
E46B                         ds 1
E46C                         ds 1
E46D                         ds 1
E46E                         ds 1
E46F                         ds 1
E470                         ds 1
E471                         ds 1
E472                         ds 1
E473                         ds 1
E474                         ds 1
E475                         ds 1
E476                         ds 1
E477                         ds 1
E478                         ds 1
E479                         ds 1
E47A                         ds 1
E47B                         ds 1
E47C                         ds 1
E47D                         ds 1
E47E                         ds 1
E47F                         ds 1
E480                         ds 1
E481                         ds 1
E482 unk_E482:               ds 1                                ; sub_4CED↑o
E482                                                             ; 8B23↑o
E483                         ds 1
E484                         ds 1
E485                         ds 1
E486                         ds 1
E487                         ds 1
E488                         ds 1
E489                         ds 1
E48A                         ds 1
E48B                         ds 1
E48C                         ds 1
E48D                         ds 1
E48E                         ds 1
E48F                         ds 1
E490                         ds 1
E491                         ds 1
E492                         ds 1
E493                         ds 1
E494                         ds 1
E495                         ds 1
E496                         ds 1
E497                         ds 1
E498                         ds 1
E499                         ds 1
E49A                         ds 1
E49B George_data:            ds 1                                ; 031B↑o
E49B                                                             ; loc_373↑o 
E49B                                                             ; Offset + 00
E49C unk_E49C:               ds 1                                ; 0DA4↑r
E49C                                                             ; Offset + 01
E49D                         ds 1                                ; Offset + 02
E49E unk_E49E:               ds 1                                ; 0F26↑w
E49E                                                             ; Offset + 03
E49F byte_E49F:              ds 1                                ; 0AB0↑r
E49F                                                             ; Offset + 04
E4A0                         ds 1                                ; Offset + 05
E4A1                         ds 1                                ; Offset + 06
E4A2                         ds 1                                ; Offset + 07
E4A3 George_X:               ds 1                                ; Offset + 08
E4A4                         ds 1                                ; Offset + 09
E4A5 George_Y:               ds 1                                ; 2061↑r
E4A5                                                             ; Offset + 0A
E4A6                         ds 1                                ; Offset + 0B
E4A7                         ds 1                                ; Offset + 0C
E4A7                                                             ; 01 When moving Right
E4A7                                                             ; FE When moving left
E4A8                         ds 1                                ; Offset + 0D
E4A8                                                             ; 10 When moving Right 16
E4A8                                                             ; F0 When moving left -16
E4A9                         ds 1                                ; Offset + 0E
E4A9                                                             ; 01 When climbing up
E4A9                                                             ; FE When clinging down
E4AA                         ds 1                                ; Offset + 0F
E4AA                                                             ; 80 When climbing up
E4AA                                                             ; E0 When climbing down
E4AB                         ds 1                                ; Offset + 10
E4AC                         ds 1                                ; Offset + 11
E4AD                         ds 1                                ; Offset + 12
E4AE                         ds 1                                ; Offset + 13
E4AF                         ds 1                                ; Offset + 14
E4B0                         ds 1                                ; Offset + 15
E4B0                                                             ; 0 - Look forward
E4B0                                                             ; 1 - Look Up (walk or on climbing)
E4B0                                                             ; 2 - Look Right (walking)
E4B0                                                             ; 3 - Look down angle
E4B0                                                             ; 4 - Look Left (walking)
E4B1 George_Action:          ds 1                                ; 20AD↑r
E4B1                                                             ; Offset + 16 Player Action Status
E4B1                                                             ; 1 - On Base Level
E4B1                                                             ; 2 - Climbing up/down building
E4B1                                                             ; 3 - Walking ontop of building
E4B1                                                             ; 5 - Fall off building
E4B1                                                             ; 8 - Dropping down from air baloon
E4B1                                                             ; 9 - Died transform into little man
E4B1                                                             ; B - Walking off screen as little man
E4B1                                                             ; C - Fell onto floor (ouch!)
E4B1                                                             ; D - Flying along on air baloon before dropping down
E4B1                                                             ; E - Underwater with fist showing above waterline
E4B2                         ds 1                                ; Offset + 17
E4B3 unk_E4B3:               ds 1                                ; 205A↑r
E4B3                                                             ; Offset + 18
E4B3                                                             ; Priority sprite base caculation byte
E4B3                                                             ; 03 walking, 01 when climbing
E4B4                         ds 1                                ; Offset + 19
E4B5                         ds 1                                ; Offset + 1A
E4B5                                                             ; Base start Y position of player
E4B6                         ds 1                                ; Offset + 1B
E4B7                         ds 1                                ; Offset + 1C
E4B8                         ds 1                                ; Offset + 1D
E4B8                                                             ; Player sprite direction (0,1)
E4B9                         ds 1
E4BA                         ds 1                                ; Offset + 1F
E4BA                                                             ; Jump table countdown
E4BB                         ds 1                                ; Offset + 20
E4BC                         ds 1                                ; Offset + 21
E4BC                                                             ; 01 When punching
E4BC                                                             ; 02 For animation frame
E4BD                         ds 1                                ; Offset + 22
E4BE                         ds 1                                ; Offset + 23
E4BF                         ds 1                                ; Offset + 24
E4BF                                                             ; Y Character Heigh when climbing
E4BF                                                             ; (0) at ground
E4C0                         ds 1
E4C1                         ds 1
E4C2                         ds 1
E4C3                         ds 1
E4C4                         ds 1
E4C5                         ds 1
E4C6                         ds 1
E4C7                         ds 1
E4C8                         ds 1
E4C9                         ds 1
E4CA byte_E4CA:              ds 1                                ; 0988↑w
E4CB                         ds 1
E4CC                         ds 1
E4CD                         ds 1
E4CE                         ds 1
E4CF                         ds 1
E4D0                         ds 1
E4D1                         ds 1
E4D2                         ds 1
E4D3                         ds 1
E4D4                         ds 1
E4D5                         ds 1
E4D6                         ds 1
E4D7                         ds 1
E4D8                         ds 1
E4D9                         ds 1
E4DA                         ds 1
E4DB                         ds 1
E4DC                         ds 1
E4DD                         ds 1
E4DE                         ds 1
E4DF                         ds 1
E4E0                         ds 1
E4E1                         ds 1
E4E2                         ds 1
E4E3                         ds 1
E4E4                         ds 1
E4E5                         ds 1
E4E6                         ds 1
E4E7                         ds 1
E4E8                         ds 1
E4E9 unk_E4E9:               ds 1                                ; 5843↑w 5876↑w
E4EA                         ds 1
E4EB Lizzie_data:            ds 1                                ; 033C↑o
E4EB                                                             ; loc_3AC↑o 
E4EC unk_E4EC:               ds 1                                ; 0DAB↑r
E4ED                         ds 1
E4EE unk_E4EE:               ds 1                                ; 0F2C↑w
E4EF byte_E4EF:              ds 1                                ; 0AB7↑r
E4F0                         ds 1
E4F1                         ds 1
E4F2                         ds 1
E4F3 Lizzie_X:               ds 1
E4F4                         ds 1
E4F5 Lizzie_Y:               ds 1                                ; 206C↑r
E4F6                         ds 1
E4F7                         ds 1
E4F8                         ds 1
E4F9                         ds 1
E4FA                         ds 1
E4FB                         ds 1
E4FC                         ds 1
E4FD                         ds 1
E4FE                         ds 1
E4FF                         ds 1
E500                         ds 1
E501                         ds 1
E502                         ds 1
E503 Lizzie_Action:          ds 1                                ; 2065↑r
E504                         ds 1
E505                         ds 1
E506                         ds 1
E507                         ds 1
E508                         ds 1
E509                         ds 1
E50A                         ds 1
E50B                         ds 1
E50C                         ds 1
E50D                         ds 1
E50E                         ds 1
E50F                         ds 1
E510                         ds 1
E511                         ds 1
E512                         ds 1
E513                         ds 1
E514                         ds 1
E515                         ds 1
E516                         ds 1
E517                         ds 1
E518                         ds 1
E519                         ds 1
E51A byte_E51A:              ds 1                                ; 098B↑w
E51B                         ds 1
E51C                         ds 1
E51D                         ds 1
E51E                         ds 1
E51F                         ds 1
E520                         ds 1
E521                         ds 1
E522                         ds 1
E523                         ds 1
E524                         ds 1
E525                         ds 1
E526                         ds 1
E527                         ds 1
E528                         ds 1
E529                         ds 1
E52A                         ds 1
E52B                         ds 1
E52C                         ds 1
E52D                         ds 1
E52E                         ds 1
E52F                         ds 1
E530                         ds 1
E531                         ds 1
E532                         ds 1
E533                         ds 1
E534                         ds 1
E535                         ds 1
E536                         ds 1
E537                         ds 1
E538                         ds 1
E539 unk_E539:               ds 1                                ; 5846↑w 5879↑w
E53A                         ds 1
E53B Ralph_data:             ds 1                                ; 035D↑o
E53B                                                             ; loc_3E5↑o 
E53C unk_E53C:               ds 1                                ; 0DB3↑r
E53D                         ds 1
E53E unk_E53E:               ds 1                                ; 0F29↑w
E53F byte_E53F:              ds 1                                ; 0ABE↑r
E540                         ds 1
E541                         ds 1
E542                         ds 1
E543 Ralph_X:                ds 1
E544                         ds 1
E545 Ralph_Y:                ds 1
E546                         ds 1
E547                         ds 1
E548                         ds 1
E549                         ds 1
E54A                         ds 1
E54B                         ds 1
E54C                         ds 1
E54D                         ds 1
E54E                         ds 1
E54F                         ds 1
E550                         ds 1
E551                         ds 1
E552                         ds 1
E553                         ds 1
E554                         ds 1
E555                         ds 1
E556                         ds 1
E557                         ds 1
E558                         ds 1
E559                         ds 1
E55A                         ds 1
E55B                         ds 1
E55C                         ds 1
E55D                         ds 1
E55E                         ds 1
E55F                         ds 1
E560                         ds 1
E561                         ds 1
E562                         ds 1
E563                         ds 1
E564                         ds 1
E565                         ds 1
E566                         ds 1
E567                         ds 1
E568                         ds 1
E569                         ds 1
E56A byte_E56A:              ds 1                                ; 098E↑w
E56B                         ds 1
E56C                         ds 1
E56D                         ds 1
E56E                         ds 1
E56F                         ds 1
E570                         ds 1
E571                         ds 1
E572                         ds 1
E573                         ds 1
E574                         ds 1
E575                         ds 1
E576                         ds 1
E577                         ds 1
E578                         ds 1
E579                         ds 1
E57A                         ds 1
E57B                         ds 1
E57C                         ds 1
E57D                         ds 1
E57E                         ds 1
E57F                         ds 1
E580                         ds 1
E581                         ds 1
E582                         ds 1
E583                         ds 1
E584                         ds 1
E585                         ds 1
E586                         ds 1
E587                         ds 1
E588                         ds 1
E589 unk_E589:               ds 1                                ; 5849↑w 587C↑w
E58A                         ds 1
E58B game_level:             ds 1                                ; 0893↑w 0921↑r 
E58C byte_E58C:              ds 1                                ; 0896↑w 0AE9↑r 
E58D base_strip_number:      ds 1                                ; sub_2162↑r
E58D                                                             ; 2169↑r 
E58E menu_table_pointer:     ds 2                                ; clear_ram_below_here↑o
E58E                                                             ; D6B2↑w 
E590 menu_countdown:         ds 1                                ; D6D0↑w
E590                                                             ; menu_selection_check↑o
E591 menu_selection_number:  ds 1                                ; D6BC↑w D702↑o 
E592 unk_E592:               ds 1                                ; debounce_jump_check↑r
E592                                                             ; D73E↑w
E593                         ds 1
E594                         ds 1
E595                         ds 1
E596 byte_E596:              ds 1                                ; D894↑w D8D0↑r 
E597 unk_E597:               ds 1                                ; D8B2↑o
E598                         ds 1
E599                         ds 1
E59A                         ds 1
E59B                         ds 1
E59C                         ds 1
E59D                         ds 1
E59E                         ds 1
E59F                         ds 1
E5A0                         ds 1
E5A1                         ds 1
E5A2                         ds 1
E5A3                         ds 1
E5A4                         ds 1
E5A5                         ds 1
E5A6                         ds 1
E5A7                         ds 1
E5A8                         ds 1
E5A9                         ds 1
E5AA                         ds 1
E5AB                         ds 1
E5AC                         ds 1
E5AD                         ds 1
E5AE                         ds 1
E5AF                         ds 1
E5B0                         ds 1
E5B1                         ds 1
E5B2                         ds 1
E5B3                         ds 1
E5B4                         ds 1
E5B5                         ds 1
E5B6                         ds 1
E5B7                         ds 1
E5B8                         ds 1
E5B9                         ds 1
E5BA                         ds 1
E5BB                         ds 1
E5BC                         ds 1
E5BD                         ds 1
E5BE                         ds 1
E5BF                         ds 1
E5C0                         ds 1
E5C1                         ds 1
E5C2                         ds 1
E5C3                         ds 1
E5C4                         ds 1
E5C5                         ds 1
E5C6                         ds 1
E5C7                         ds 1
E5C8                         ds 1
E5C9                         ds 1
E5CA                         ds 1
E5CB                         ds 1
E5CC                         ds 1
E5CD                         ds 1
E5CE                         ds 1
E5CF                         ds 1
E5D0                         ds 1
E5D1                         ds 1
E5D2                         ds 1
E5D3                         ds 1
E5D4                         ds 1
E5D5                         ds 1
E5D6                         ds 1
E5D7                         ds 1
E5D8                         ds 1
E5D9                         ds 1
E5DA                         ds 1
E5DB                         ds 1
E5DC                         ds 1
E5DD                         ds 1
E5DE                         ds 1
E5DF                         ds 1
E5E0                         ds 1
E5E1                         ds 1
E5E2                         ds 1
E5E3                         ds 1
E5E4                         ds 1
E5E5                         ds 1
E5E6                         ds 1
E5E7                         ds 1
E5E8                         ds 1
E5E9                         ds 1
E5EA                         ds 1
E5EB                         ds 1
E5EC                         ds 1
E5ED                         ds 1
E5EE                         ds 1
E5EF                         ds 1
E5F0                         ds 1
E5F1                         ds 1
E5F2                         ds 1
E5F3                         ds 1
E5F4                         ds 1
E5F5                         ds 1
E5F6                         ds 1
E5F7                         ds 1
E5F8                         ds 1
E5F9                         ds 1
E5FA                         ds 1
E5FB                         ds 1
E5FC                         ds 1
E5FD                         ds 1
E5FE                         ds 1
E5FF                         ds 1
E600 unk_E600:               ds 1                                ; C3C8↑r C3CE↑w
E601 byte_E601:              ds 1                                ; 0887↑w 0A28↑r 
E602 byte_E602:              ds 1                                ; 088A↑w 0DBA↑w 
E603 unk_E603:               ds 1                                ; 5D4C↑w 5D97↑r 
E604                         ds 1
E605                         ds 1
E606 byte_E606:              ds 1                                ; 0B5A↑r 0B66↑r 
E607 rotate_action:          ds 1                                ; 08DE↑w ADBD↑r 
E608                         ds 1
E609                         ds 1
E60A                         ds 1
E60B                         ds 1
E60C irq_handshake_flag:     ds 1                                ; 01C2↑w
E60C                                                             ; irq_handshake_wait↑r 
E60D sound_timer_count:      ds 1                                ; 056F↑r 05A4↑o 
E60E byte_E60E:              ds 1                                ; sub_306↑r
E60E                                                             ; 030B↑r 
E60F unk_E60F:               ds 1                                ; loc_6FC↑r
E60F                                                             ; 0701↑w 
E610                         ds 1
E611 unk_E611:               ds 1                                ; loc_6E4↑r
E611                                                             ; 06EB↑w 
E612                         ds 1
E613 unk_E613:               ds 1                                ; sub_67E↑o
E614 unk_E614:               ds 1                                ; sub_714↑o
E615 unk_E615:               ds 1                                ; sub_75A↑o
E616 unk_E616:               ds 1                                ; 06F1↑r 06F8↑w 
E617 unk_E617:               ds 1                                ; loc_68B↑o
E617                                                             ; 0839↑w
E618 unk_E618:               ds 1                                ; loc_720↑o
E618                                                             ; 083E↑w
E619 unk_E619:               ds 1                                ; loc_766↑o
E619                                                             ; 0843↑w
E61A random_seed:            ds 1                                ; 0825↑o 082D↑w 
E61B sound_enable:           ds 1                                ; 08AD↑w 08BD↑w 
E61B                                                             ; 0 during normal game player, 1 when in demo mode so no sounds are processed
E61C active_sound_channels:  ds 1                                ; 0214↑w 0575↑r 
E61D pending_soundFX:        ds 1                                ; 0583↑w 0596↑w 
E61E soundfx_list:           ds 1                                ; 0217↑o 057F↑o 
E61F sound_buffer:           ds 1                                ; 0586↑o
E620                         ds 1
E621                         ds 1
E622                         ds 1
E623                         ds 1
E624                         ds 1
E625                         ds 1
E626                         ds 1
E627                         ds 1
E628                         ds 1
E629                         ds 1
E62A                         ds 1
E62B unk_E62B:               ds 1                                ; 05E0↑o
E62C unk_E62C:               ds 1                                ; 05E3↑o
E62D unk_E62D:               ds 1                                ; 656E↑r 6575↑w
E62E unk_E62E:               ds 1                                ; 6568↑r 6571↑w
E62F unk_E62F:               ds 1                                ; 6562↑r 656B↑w
E630 unk_E630:               ds 1                                ; 6565↑w
E631 unk_E631:               ds 1                                ; 05FC↑o 0615↑r 
E632 coin_count:             ds 1                                ; 061E↑r 073E↑o 
E633 unk_E633:               ds 1                                ; 06C7↑r 07C2↑w
E634 credits_per_coin:       ds 1                                ; 0747↑r 07FE↑w 
E635 game_credits:           ds 1                                ; 0206↑o 0230↑r 
E636 unk_E636:               ds 1                                ; loc_6B5↑r
E636                                                             ; loc_6CD↑w
E637 unk_E637:               ds 1                                ; loc_6D2↑r
E637                                                             ; loc_6E1↑w 
E638 unk_E638:               ds 1                                ; 0629↑o 190D↑o 
E639                         ds 1
E63A                         ds 1
E63B                         ds 1
E63C                         ds 1
E63D                         ds 1
E63E                         ds 1
E63F unk_E63F:               ds 1                                ; B113↑o
E640                         ds 1
E641                         ds 1
E642                         ds 1
E643                         ds 1
E644                         ds 1
E645                         ds 1
E646 unk_E646:               ds 1                                ; B11C↑o
E647                         ds 1
E648                         ds 1
E649                         ds 1
E64A                         ds 1
E64B                         ds 1
E64C                         ds 1
E64D george_score:           ds 1                                ; 0315↑o 0385↑o 
E64E                         ds 1
E64F                         ds 1
E650                         ds 1
E651                         ds 1
E652                         ds 1
E653 unk_E653:               ds 1                                ; loc_1063↑o
E654 lizzie_score:           ds 1                                ; 0336↑o 03BE↑o 
E655                         ds 1
E656                         ds 1
E657                         ds 1
E658                         ds 1
E659                         ds 1
E65A unk_E65A:               ds 1                                ; loc_105E↑o
E65B ralf_score:             ds 1                                ; 0357↑o 03F7↑o 
E65C                         ds 1
E65D                         ds 1
E65E                         ds 1
E65F                         ds 1
E660                         ds 1
E661 unk_E661:               ds 1                                ; 1059↑o
E662 free_play:              ds 1                                ; 0785↑w
E662                                                             ; sub_812↑r 
E663 easy_hard_normal:       ds 1                                ; 078C↑w 0816↑r 
E664 easy_game:              ds 1                                ; 0795↑w
E664                                                             ; sub_C91↑r 
E665 keep_score_when_continue:ds 1                               ; 06A8↑r 079C↑w 
E666 coin_A_value:           ds 1                                ; 07A3↑w 07D5↑r
E667 coin_B_value1:          ds 1                                ; 07AA↑w
E667                                                             ; loc_7DC↑r
E668 coin_B_value2:          ds 1                                ; 07B1↑w
E668                                                             ; loc_7E4↑r
E669 advance_cheat:          ds 1                                ; 07B7↑w
E669                                                             ; sub_A06↑r
E66A watchdog_flag:          ds 1                                ; 01E4↑r 01E8↑w 
E66B sound_handshake:        ds 1                                ; 05A1↑w 06C4↑w
E66C unk_E66C:               ds 1                                ; 0644↑w 069E↑r 
E66D                         ds 1
E66E unk_E66E:               ds 1                                ; 0647↑w 0730↑r 
E66F                         ds 1
E670 unk_E670:               ds 1                                ; 08C6↑o
E671 unk_E671:               ds 1                                ; 08E1↑o
E671                                                             ; sub_5D46↑r 
E672 unk_E672:               ds 1                                ; 0834↑w
E673 byte_E673:              ds 1                                ; 090F↑r
E673                                                             ; loc_918↑w 
E674 background_number:      ds 1                                ; 8955↑w CD85↑r 
E675 unused_live_status:     ds 1                                ; 0103↑w 0875↑w 
E676 global_sound_enable:    ds 1                                ; 0108↑w 0155↑w 
E677                         ds 1
E678 game_difficulty:        ds 1                                ; loc_81F↑w
E678                                                             ; 5233↑r 
E679 byte_E679:              ds 1                                ; 0884↑w 0AFF↑o 
E67A unk_E67A:               ds 1                                ; 6781↑r 6787↑w
E67B startup_sound_rotate:   ds 1                                ; startup_sound↑r
E67B                                                             ; 651C↑w
E67C coinB_credits:          ds 1                                ; 06AE↑r 07EF↑w
E67D                         ds 1
E67E                         ds 1
E67F                         ds 1
E680                         ds 1
E681                         ds 1
E682                         ds 1
E683                         ds 1
E684                         ds 1
E685                         ds 1
E686                         ds 1
E687                         ds 1
E688                         ds 1
E689                         ds 1
E68A                         ds 1
E68B                         ds 1
E68C                         ds 1
E68D                         ds 1
E68E                         ds 1
E68F                         ds 1
E690                         ds 1
E691                         ds 1
E692                         ds 1
E693                         ds 1
E694                         ds 1
E695                         ds 1
E696                         ds 1
E697                         ds 1
E698                         ds 1
E699                         ds 1
E69A                         ds 1
E69B                         ds 1
E69C                         ds 1
E69D                         ds 1
E69E                         ds 1
E69F                         ds 1
E6A0                         ds 1
E6A1                         ds 1
E6A2                         ds 1
E6A3                         ds 1
E6A4                         ds 1
E6A5                         ds 1
E6A6                         ds 1
E6A7                         ds 1
E6A8                         ds 1
E6A9                         ds 1
E6AA                         ds 1
E6AB                         ds 1
E6AC                         ds 1
E6AD                         ds 1
E6AE                         ds 1
E6AF                         ds 1
E6B0                         ds 1
E6B1                         ds 1
E6B2                         ds 1
E6B3                         ds 1
E6B4                         ds 1
E6B5                         ds 1
E6B6                         ds 1
E6B7                         ds 1
E6B8                         ds 1
E6B9                         ds 1
E6BA                         ds 1
E6BB                         ds 1
E6BC                         ds 1
E6BD                         ds 1
E6BE                         ds 1
E6BF                         ds 1
E6C0                         ds 1
E6C1                         ds 1
E6C2                         ds 1
E6C3                         ds 1
E6C4                         ds 1
E6C5                         ds 1
E6C6                         ds 1
E6C7                         ds 1
E6C8                         ds 1
E6C9                         ds 1
E6CA                         ds 1
E6CB                         ds 1
E6CC                         ds 1
E6CD                         ds 1
E6CE                         ds 1
E6CF                         ds 1
E6D0                         ds 1
E6D1                         ds 1
E6D2                         ds 1
E6D3                         ds 1
E6D4                         ds 1
E6D5                         ds 1
E6D6                         ds 1
E6D7                         ds 1
E6D8                         ds 1
E6D9                         ds 1
E6DA                         ds 1
E6DB                         ds 1
E6DC                         ds 1
E6DD                         ds 1
E6DE                         ds 1
E6DF                         ds 1
E6E0                         ds 1
E6E1                         ds 1
E6E2                         ds 1
E6E3                         ds 1
E6E4                         ds 1
E6E5                         ds 1
E6E6                         ds 1
E6E7                         ds 1
E6E8                         ds 1
E6E9                         ds 1
E6EA                         ds 1
E6EB                         ds 1
E6EC                         ds 1
E6ED                         ds 1
E6EE                         ds 1
E6EF                         ds 1
E6F0                         ds 1
E6F1                         ds 1
E6F2                         ds 1
E6F3                         ds 1
E6F4                         ds 1
E6F5                         ds 1
E6F6                         ds 1
E6F7                         ds 1
E6F8                         ds 1
E6F9                         ds 1
E6FA                         ds 1
E6FB                         ds 1
E6FC                         ds 1
E6FD                         ds 1
E6FE                         ds 1
E6FF                         ds 1
E700                         ds 1
E701                         ds 1
E702                         ds 1
E703                         ds 1
E704                         ds 1
E705                         ds 1
E706                         ds 1
E707                         ds 1
E708                         ds 1
E709                         ds 1
E70A                         ds 1
E70B                         ds 1
E70C                         ds 1
E70D                         ds 1
E70E                         ds 1
E70F                         ds 1
E710                         ds 1
E711                         ds 1
E712                         ds 1
E713                         ds 1
E714                         ds 1
E715                         ds 1
E716                         ds 1
E717                         ds 1
E718                         ds 1
E719                         ds 1
E71A                         ds 1
E71B                         ds 1
E71C                         ds 1
E71D                         ds 1
E71E                         ds 1
E71F                         ds 1
E720                         ds 1
E721                         ds 1
E722                         ds 1
E723                         ds 1
E724                         ds 1
E725                         ds 1
E726                         ds 1
E727                         ds 1
E728                         ds 1
E729                         ds 1
E72A                         ds 1
E72B                         ds 1
E72C                         ds 1
E72D                         ds 1
E72E                         ds 1
E72F                         ds 1
E730                         ds 1
E731                         ds 1
E732                         ds 1
E733                         ds 1
E734                         ds 1
E735                         ds 1
E736                         ds 1
E737                         ds 1
E738                         ds 1
E739                         ds 1
E73A                         ds 1
E73B                         ds 1
E73C                         ds 1
E73D                         ds 1
E73E                         ds 1
E73F                         ds 1
E740                         ds 1
E741                         ds 1
E742                         ds 1
E743                         ds 1
E744                         ds 1
E745                         ds 1
E746                         ds 1
E747                         ds 1
E748                         ds 1
E749                         ds 1
E74A                         ds 1
E74B                         ds 1
E74C                         ds 1
E74D                         ds 1
E74E                         ds 1
E74F                         ds 1
E750                         ds 1
E751                         ds 1
E752                         ds 1
E753                         ds 1
E754                         ds 1
E755                         ds 1
E756                         ds 1
E757                         ds 1
E758                         ds 1
E759                         ds 1
E75A                         ds 1
E75B                         ds 1
E75C                         ds 1
E75D                         ds 1
E75E                         ds 1
E75F                         ds 1
E760                         ds 1
E761                         ds 1
E762                         ds 1
E763                         ds 1
E764                         ds 1
E765                         ds 1
E766                         ds 1
E767                         ds 1
E768                         ds 1
E769                         ds 1
E76A                         ds 1
E76B                         ds 1
E76C                         ds 1
E76D                         ds 1
E76E                         ds 1
E76F                         ds 1
E770                         ds 1
E771                         ds 1
E772                         ds 1
E773                         ds 1
E774                         ds 1
E775                         ds 1
E776                         ds 1
E777                         ds 1
E778                         ds 1
E779                         ds 1
E77A                         ds 1
E77B                         ds 1
E77C                         ds 1
E77D                         ds 1
E77E                         ds 1
E77F                         ds 1
E780                         ds 1
E781                         ds 1
E782                         ds 1
E783                         ds 1
E784                         ds 1
E785                         ds 1
E786                         ds 1
E787                         ds 1
E788                         ds 1
E789                         ds 1
E78A                         ds 1
E78B                         ds 1
E78C                         ds 1
E78D                         ds 1
E78E                         ds 1
E78F                         ds 1
E790                         ds 1
E791                         ds 1
E792                         ds 1
E793                         ds 1
E794                         ds 1
E795                         ds 1
E796                         ds 1
E797                         ds 1
E798                         ds 1
E799                         ds 1
E79A                         ds 1
E79B                         ds 1
E79C                         ds 1
E79D                         ds 1
E79E                         ds 1
E79F                         ds 1
E7A0                         ds 1
E7A1                         ds 1
E7A2                         ds 1
E7A3                         ds 1
E7A4                         ds 1
E7A5                         ds 1
E7A6                         ds 1
E7A7                         ds 1
E7A8                         ds 1
E7A9                         ds 1
E7AA                         ds 1
E7AB                         ds 1
E7AC                         ds 1
E7AD                         ds 1
E7AE                         ds 1
E7AF                         ds 1
E7B0                         ds 1
E7B1                         ds 1
E7B2                         ds 1
E7B3                         ds 1
E7B4                         ds 1
E7B5                         ds 1
E7B6                         ds 1
E7B7                         ds 1
E7B8                         ds 1
E7B9                         ds 1
E7BA                         ds 1
E7BB                         ds 1
E7BC                         ds 1
E7BD                         ds 1
E7BE                         ds 1
E7BF                         ds 1
E7C0                         ds 1
E7C1                         ds 1
E7C2                         ds 1
E7C3                         ds 1
E7C4                         ds 1
E7C5                         ds 1
E7C6                         ds 1
E7C7                         ds 1
E7C8                         ds 1
E7C9                         ds 1
E7CA                         ds 1
E7CB                         ds 1
E7CC                         ds 1
E7CD                         ds 1
E7CE                         ds 1
E7CF                         ds 1
E7D0                         ds 1
E7D1                         ds 1
E7D2                         ds 1
E7D3                         ds 1
E7D4                         ds 1
E7D5                         ds 1
E7D6                         ds 1
E7D7                         ds 1
E7D8                         ds 1
E7D9                         ds 1
E7DA                         ds 1
E7DB                         ds 1
E7DC                         ds 1
E7DD                         ds 1
E7DE                         ds 1
E7DF                         ds 1
E7E0                         ds 1
E7E1                         ds 1
E7E2                         ds 1
E7E3                         ds 1
E7E4                         ds 1
E7E5                         ds 1
E7E6                         ds 1
E7E7                         ds 1
E7E8                         ds 1
E7E9                         ds 1
E7EA                         ds 1
E7EB                         ds 1
E7EC                         ds 1
E7ED                         ds 1
E7EE                         ds 1
E7EF                         ds 1
E7F0                         ds 1
E7F1                         ds 1
E7F2                         ds 1
E7F3                         ds 1
E7F4                         ds 1
E7F5                         ds 1
E7F6                         ds 1
E7F7                         ds 1
E7F8                         ds 1
E7F9                         ds 1
E7FA                         ds 1
E7FB                         ds 1
E7FC                         ds 1
E7FD                         ds 1
E7FE stack_pointer_top:      ds 1                                ; 011A↑o 013C↑o
E7FE ; end of 'WORK_RAM'
E7FE
E7FF unk_0000E7FF:           ds 1                                ; DE51↑w DECC↑w 
E800 ; ===========================================================================
E800
E800 ; Segment type: Regular
E800                         segment sprite_ram
E800                         org 0E800h
E800 sprite0_y:              ds 1                                ; 0FBB↑o
E800                                                             ; ; Rampage / MCR3 Sprite Format (4 bytes per sprite):
E800                                                             ; ;
E800                                                             ; ;   +0 : Y position raw        -> final Y = (241 - spriteram[0]) * 2
E800                                                             ; ;   +1 : Flags
E800                                                             ; ;         Bit 0–2  : Color index (inverted in MAME, e.g. color = ~flags & 0xF)
E800                                                             ; ;         Bit 3    : High bit of sprite code
E800                                                             ; ;         Bit 4    : Flip X
E800                                                             ; ;         Bit 5    : Flip Y
E800                                                             ; ;         Bit 6–7  : (Unused)
E800                                                             ; ;   +2 : Code low  -> final code = code_lo + (bit3<<8)
E800                                                             ; ;   +3 : X position raw        -> final X = (spriteram[3] - 3) * 2
E801 sprite0_flags:          ds 1
E802 sprite0_code:           ds 1
E803 sprite0_x:              ds 1
E804 sprite1_y:              ds 1                                ; sub_C3AA↑o
E805 sprite1_flags:          ds 1
E806 sprite1_code:           ds 1
E807 sprite1_x:              ds 1
E808 sprite2_y:              ds 1
E809 sprite2_flags:          ds 1
E80A sprite2_code:           ds 1
E80B sprite2_x:              ds 1
E80C sprite3_y:              ds 1
E80D sprite3_flags:          ds 1
E80E sprite3_code:           ds 1
E80F sprite3_x:              ds 1
E810 sprite4_y:              ds 1                                ; CF19↑o CF28↑o 
E811 sprite4_flags:          ds 1
E812 sprite4_code:           ds 1
E813 sprite4_x:              ds 1
E814 sprite5_y:              ds 1                                ; sub_4412↑o
E814                                                             ; AEF4↑o 
E815 sprite5_flags:          ds 1
E816 sprite5_code:           ds 1
E817 sprite5_x:              ds 1
E818 sprite6_y:              ds 1
E819 sprite6_flags:          ds 1
E81A sprite6_code:           ds 1
E81B sprite6_x:              ds 1
E81C sprite7_y:              ds 1
E81D sprite7_flags:          ds 1
E81E sprite7_code:           ds 1
E81F sprite7_x:              ds 1
E820 sprite8_y:              ds 1
E821 sprite8_flags:          ds 1
E822 sprite8_code:           ds 1
E823 sprite8_x:              ds 1
E824 sprite9_y:              ds 1
E825 sprite9_flags:          ds 1
E826 sprite9_code:           ds 1
E827 sprite9_x:              ds 1
E828 sprite10_y:             ds 1
E829 sprite10_flags:         ds 1
E82A sprite10_code:          ds 1
E82B sprite10_x:             ds 1
E82C sprite11_y:             ds 1
E82D sprite11_flags:         ds 1
E82E sprite11_code:          ds 1
E82F sprite11_x:             ds 1
E830 sprite12_y:             ds 1
E831 sprite12_flags:         ds 1
E832 sprite12_code:          ds 1
E833 sprite12_x:             ds 1
E834 sprite13_y:             ds 1
E835 sprite13_flags:         ds 1
E836 sprite13_code:          ds 1
E837 sprite13_x:             ds 1
E838 sprite14_y:             ds 1
E839 sprite14_flags:         ds 1
E83A sprite14_code:          ds 1
E83B sprite14_x:             ds 1
E83C sprite15_y:             ds 1
E83D sprite15_flags:         ds 1
E83E sprite15_code:          ds 1
E83F sprite15_x:             ds 1
E840 sprite16_y:             ds 1
E841 sprite16_flags:         ds 1
E842 sprite16_code:          ds 1
E843 sprite16_x:             ds 1
E844 sprite17_y:             ds 1
E845 sprite17_flags:         ds 1
E846 sprite17_code:          ds 1
E847 sprite17_x:             ds 1
E848 sprite18_y:             ds 1
E849 sprite18_flags:         ds 1
E84A sprite18_code:          ds 1
E84B sprite18_x:             ds 1
E84C sprite19_y:             ds 1
E84D sprite19_flags:         ds 1
E84E sprite19_code:          ds 1
E84F sprite19_x:             ds 1
E850 sprite20_y:             ds 1
E851 sprite20_flags:         ds 1
E852 sprite20_code:          ds 1
E853 sprite20_x:             ds 1
E854 sprite21_y:             ds 1
E855 sprite21_flags:         ds 1
E856 sprite21_code:          ds 1
E857 sprite21_x:             ds 1
E858 sprite22_y:             ds 1
E859 sprite22_flags:         ds 1
E85A sprite22_code:          ds 1
E85B sprite22_x:             ds 1
E85C sprite23_y:             ds 1                                ; B6C7↑o B6DB↑o 
E85D sprite23_flags:         ds 1
E85E sprite23_code:          ds 1
E85F sprite23_x:             ds 1
E860 sprite24_y:             ds 1
E861 sprite24_flags:         ds 1
E862 sprite24_code:          ds 1
E863 sprite24_x:             ds 1
E864 sprite25_y:             ds 1
E865 sprite25_flags:         ds 1
E866 sprite25_code:          ds 1
E867 sprite25_x:             ds 1
E868 sprite26_y:             ds 1                                ; sub_5B00↑o
E868                                                             ; sub_5EAD↑o
E869 sprite26_flags:         ds 1
E86A sprite26_code:          ds 1
E86B sprite26_x:             ds 1
E86C sprite27_y:             ds 1
E86D sprite27_flags:         ds 1
E86E sprite27_code:          ds 1
E86F sprite27_x:             ds 1
E870 sprite28_y:             ds 1
E871 sprite28_flags:         ds 1
E872 sprite28_code:          ds 1
E873 sprite28_x:             ds 1
E874 sprite29_y:             ds 1
E875 sprite29_flags:         ds 1
E876 sprite29_code:          ds 1
E877 sprite29_x:             ds 1
E878 sprite30_y:             ds 1
E879 sprite30_flags:         ds 1
E87A sprite30_code:          ds 1
E87B sprite30_x:             ds 1
E87C sprite31_y:             ds 1
E87D sprite31_flags:         ds 1
E87E sprite31_code:          ds 1
E87F sprite31_x:             ds 1
E880 sprite32_y:             ds 1
E881 sprite32_flags:         ds 1
E882 sprite32_code:          ds 1
E883 sprite32_x:             ds 1
E884 sprite33_y:             ds 1
E885 sprite33_flags:         ds 1
E886 sprite33_code:          ds 1
E887 sprite33_x:             ds 1
E888 sprite34_y:             ds 1                                ; 5665↑o
E888                                                             ; loc_56C0↑o 
E889 sprite34_flags:         ds 1
E88A sprite34_code:          ds 1
E88B sprite34_x:             ds 1
E88C sprite35_y:             ds 1
E88D sprite35_flags:         ds 1
E88E sprite35_code:          ds 1
E88F sprite35_x:             ds 1
E890 sprite36_y:             ds 1
E891 sprite36_flags:         ds 1
E892 sprite36_code:          ds 1
E893 sprite36_x:             ds 1
E894 sprite37_y:             ds 1
E895 sprite37_flags:         ds 1
E896 sprite37_code:          ds 1
E897 sprite37_x:             ds 1
E898 sprite38_y:             ds 1
E899 sprite38_flags:         ds 1
E89A sprite38_code:          ds 1
E89B sprite38_x:             ds 1
E89C sprite39_y:             ds 1
E89D sprite39_flags:         ds 1
E89E sprite39_code:          ds 1
E89F sprite39_x:             ds 1
E8A0 sprite40_y:             ds 1
E8A1 sprite40_flags:         ds 1
E8A2 sprite40_code:          ds 1
E8A3 sprite40_x:             ds 1
E8A4 sprite41_y:             ds 1
E8A5 sprite41_flags:         ds 1
E8A6 sprite41_code:          ds 1
E8A7 sprite41_x:             ds 1
E8A8 sprite42_y:             ds 1
E8A9 sprite42_flags:         ds 1
E8AA sprite42_code:          ds 1
E8AB sprite42_x:             ds 1
E8AC sprite43_y:             ds 1
E8AD sprite43_flags:         ds 1
E8AE sprite43_code:          ds 1
E8AF sprite43_x:             ds 1
E8B0 sprite44_y:             ds 1
E8B1 sprite44_flags:         ds 1
E8B2 sprite44_code:          ds 1
E8B3 sprite44_x:             ds 1
E8B4 sprite45_y:             ds 1
E8B5 sprite45_flags:         ds 1
E8B6 sprite45_code:          ds 1
E8B7 sprite45_x:             ds 1
E8B8 sprite46_y:             ds 1
E8B9 sprite46_flags:         ds 1
E8BA sprite46_code:          ds 1
E8BB sprite46_x:             ds 1
E8BC sprite47_y:             ds 1
E8BD sprite47_flags:         ds 1
E8BE sprite47_code:          ds 1
E8BF sprite47_x:             ds 1
E8C0 sprite48_y:             ds 1
E8C1 sprite48_flags:         ds 1
E8C2 sprite48_code:          ds 1
E8C3 sprite48_x:             ds 1
E8C4 sprite49_y:             ds 1
E8C5 sprite49_flags:         ds 1
E8C6 sprite49_code:          ds 1
E8C7 sprite49_x:             ds 1
E8C8 sprite50_y:             ds 1                                ; sub_C9C5↑o
E8C8                                                             ; C9E9↑o 
E8C9 sprite50_flags:         ds 1
E8CA sprite50_code:          ds 1
E8CB sprite50_x:             ds 1
E8CC sprite51_y:             ds 1
E8CD sprite51_flags:         ds 1
E8CE sprite51_code:          ds 1
E8CF sprite51_x:             ds 1
E8D0 sprite52_y:             ds 1                                ; sub_1537↑o
E8D0                                                             ; 1627↑o 
E8D1 sprite52_flags:         ds 1
E8D2 sprite52_code:          ds 1
E8D3 sprite52_x:             ds 1
E8D4 sprite53_y:             ds 1                                ; D596↑o
E8D4                                                             ; sub_D5A5↑o 
E8D5 sprite53_flags:         ds 1
E8D6 sprite53_code:          ds 1
E8D7 sprite53_x:             ds 1
E8D8 sprite54_y:             ds 1                                ; 153D↑o 1641↑o 
E8D9 sprite54_flags:         ds 1
E8DA sprite54_code:          ds 1
E8DB sprite54_x:             ds 1
E8DC sprite55_y:             ds 1                                ; D5EF↑o D635↑o
E8DD sprite55_flags:         ds 1
E8DE sprite55_code:          ds 1
E8DF sprite55_x:             ds 1
E8E0 sprite56_y:             ds 1                                ; 1544↑o 1659↑o 
E8E1 sprite56_flags:         ds 1
E8E2 sprite56_code:          ds 1
E8E3 sprite56_x:             ds 1
E8E4 sprite57_y:             ds 1                                ; 2101↑o 2107↑o 
E8E4                                                             ; George Sprites when Climbing
E8E5 sprite57_flags:         ds 1
E8E6 sprite57_code:          ds 1
E8E7 sprite57_x:             ds 1
E8E8 sprite58_y:             ds 1
E8E9 sprite58_flags:         ds 1
E8EA sprite58_code:          ds 1
E8EB sprite58_x:             ds 1
E8EC sprite59_y:             ds 1
E8ED sprite59_flags:         ds 1
E8EE sprite59_code:          ds 1
E8EF sprite59_x:             ds 1
E8F0 sprite60_y:             ds 1
E8F1 sprite60_flags:         ds 1
E8F2 sprite60_code:          ds 1
E8F3 sprite60_x:             ds 1
E8F4 sprite61_y:             ds 1
E8F5 sprite61_flags:         ds 1
E8F6 sprite61_code:          ds 1
E8F7 sprite61_x:             ds 1
E8F8 sprite62_y:             ds 1
E8F9 sprite62_flags:         ds 1
E8FA sprite62_code:          ds 1
E8FB sprite62_x:             ds 1
E8FC sprite63_y:             ds 1
E8FD sprite63_flags:         ds 1
E8FE sprite63_code:          ds 1
E8FF sprite63_x:             ds 1
E900 sprite64_y:             ds 1
E901 sprite64_flags:         ds 1
E902 sprite64_code:          ds 1
E903 sprite64_x:             ds 1
E904 sprite65_y:             ds 1                                ; 20FF↑o
E904                                                             ; off_2103↑o 
E904                                                             ; George priority when someone is climbing
E905 sprite65_flags:         ds 1
E906 sprite65_code:          ds 1
E907 sprite65_x:             ds 1
E908 sprite66_y:             ds 1
E909 sprite66_flags:         ds 1
E90A sprite66_code:          ds 1
E90B sprite66_x:             ds 1
E90C sprite67_y:             ds 1
E90D sprite67_flags:         ds 1
E90E sprite67_code:          ds 1
E90F sprite67_x:             ds 1
E910 sprite68_y:             ds 1
E911 sprite68_flags:         ds 1
E912 sprite68_code:          ds 1
E913 sprite68_x:             ds 1
E914 sprite69_y:             ds 1
E915 sprite69_flags:         ds 1
E916 sprite69_code:          ds 1
E917 sprite69_x:             ds 1
E918 sprite70_y:             ds 1
E919 sprite70_flags:         ds 1
E91A sprite70_code:          ds 1
E91B sprite70_x:             ds 1
E91C sprite71_y:             ds 1
E91D sprite71_flags:         ds 1
E91E sprite71_code:          ds 1
E91F sprite71_x:             ds 1
E920 sprite72_y:             ds 1
E921 sprite72_flags:         ds 1
E922 sprite72_code:          ds 1
E923 sprite72_x:             ds 1
E924 sprite73_y:             ds 1                                ; off_20FD↑o
E924                                                             ; 2105↑o 
E924                                                             ; George Sprites when on ground
E925 sprite73_flags:         ds 1
E926 sprite73_code:          ds 1
E927 sprite73_x:             ds 1
E928 sprite74_y:             ds 1
E929 sprite74_flags:         ds 1
E92A sprite74_code:          ds 1
E92B sprite74_x:             ds 1
E92C sprite75_y:             ds 1
E92D sprite75_flags:         ds 1
E92E sprite75_code:          ds 1
E92F sprite75_x:             ds 1
E930 sprite76_y:             ds 1
E931 sprite76_flags:         ds 1
E932 sprite76_code:          ds 1
E933 sprite76_x:             ds 1
E934 sprite77_y:             ds 1
E935 sprite77_flags:         ds 1
E936 sprite77_code:          ds 1
E937 sprite77_x:             ds 1
E938 sprite78_y:             ds 1
E939 sprite78_flags:         ds 1
E93A sprite78_code:          ds 1
E93B sprite78_x:             ds 1
E93C sprite79_y:             ds 1
E93D sprite79_flags:         ds 1
E93E sprite79_code:          ds 1
E93F sprite79_x:             ds 1
E940 sprite80_y:             ds 1
E941 sprite80_flags:         ds 1
E942 sprite80_code:          ds 1
E943 sprite80_x:             ds 1
E944 sprite81_y:             ds 1
E945 sprite81_flags:         ds 1
E946 sprite81_code:          ds 1
E947 sprite81_x:             ds 1
E948 sprite82_y:             ds 1
E949 sprite82_flags:         ds 1
E94A sprite82_code:          ds 1
E94B sprite82_x:             ds 1
E94C sprite83_y:             ds 1
E94D sprite83_flags:         ds 1
E94E sprite83_code:          ds 1
E94F sprite83_x:             ds 1
E950 sprite84_y:             ds 1
E951 sprite84_flags:         ds 1
E952 sprite84_code:          ds 1
E953 sprite84_x:             ds 1
E954 sprite85_y:             ds 1
E955 sprite85_flags:         ds 1
E956 sprite85_code:          ds 1
E957 sprite85_x:             ds 1
E958 sprite86_y:             ds 1
E959 sprite86_flags:         ds 1
E95A sprite86_code:          ds 1
E95B sprite86_x:             ds 1
E95C sprite87_y:             ds 1                                ; sub_3C32↑o
E95D sprite87_flags:         ds 1
E95E sprite87_code:          ds 1
E95F sprite87_x:             ds 1
E960 sprite88_y:             ds 1
E961 sprite88_flags:         ds 1
E962 sprite88_code:          ds 1
E963 sprite88_x:             ds 1
E964 sprite89_y:             ds 1
E965 sprite89_flags:         ds 1
E966 sprite89_code:          ds 1
E967 sprite89_x:             ds 1
E968 sprite90_y:             ds 1
E969 sprite90_flags:         ds 1
E96A sprite90_code:          ds 1
E96B sprite90_x:             ds 1
E96C sprite91_y:             ds 1
E96D sprite91_flags:         ds 1
E96E sprite91_code:          ds 1
E96F sprite91_x:             ds 1
E970 sprite92_y:             ds 1
E971 sprite92_flags:         ds 1
E972 sprite92_code:          ds 1
E973 sprite92_x:             ds 1
E974 sprite93_y:             ds 1
E975 sprite93_flags:         ds 1
E976 sprite93_code:          ds 1
E977 sprite93_x:             ds 1
E978 sprite94_y:             ds 1
E979 sprite94_flags:         ds 1
E97A sprite94_code:          ds 1
E97B sprite94_x:             ds 1
E97C sprite95_y:             ds 1
E97D sprite95_flags:         ds 1
E97E sprite95_code:          ds 1
E97F sprite95_x:             ds 1
E980 sprite96_y:             ds 1
E981 sprite96_flags:         ds 1
E982 sprite96_code:          ds 1
E983 sprite96_x:             ds 1
E984 sprite97_y:             ds 1
E985 sprite97_flags:         ds 1
E986 sprite97_code:          ds 1
E987 sprite97_x:             ds 1
E988 sprite98_y:             ds 1
E989 sprite98_flags:         ds 1
E98A sprite98_code:          ds 1
E98B sprite98_x:             ds 1
E98C sprite99_y:             ds 1
E98D sprite99_flags:         ds 1
E98E sprite99_code:          ds 1
E98F sprite99_x:             ds 1
E990 sprite100_y:            ds 1
E991 sprite100_flags:        ds 1
E992 sprite100_code:         ds 1
E993 sprite100_x:            ds 1
E994 sprite101_y:            ds 1                                ; 0E11↑o 0E24↑o 
E995 sprite101_flags:        ds 1
E996 sprite101_code:         ds 1
E997 sprite101_x:            ds 1
E998 sprite102_y:            ds 1
E999 sprite102_flags:        ds 1
E99A sprite102_code:         ds 1
E99B sprite102_x:            ds 1
E99C sprite103_y:            ds 1
E99D sprite103_flags:        ds 1
E99E sprite103_code:         ds 1
E99F sprite103_x:            ds 1
E9A0 sprite104_y:            ds 1
E9A1 sprite104_flags:        ds 1
E9A2 sprite104_code:         ds 1
E9A3 sprite104_x:            ds 1
E9A4 sprite105_y:            ds 1                                ; B54E↑o B5BF↑o 
E9A5 sprite105_flags:        ds 1
E9A6 sprite105_code:         ds 1
E9A7 sprite105_x:            ds 1
E9A8 sprite106_y:            ds 1
E9A9 sprite106_flags:        ds 1
E9AA sprite106_code:         ds 1
E9AB sprite106_x:            ds 1
E9AC sprite107_y:            ds 1                                ; BAE1↑o
E9AD sprite107_flags:        ds 1
E9AE sprite107_code:         ds 1
E9AF sprite107_x:            ds 1
E9B0 sprite108_y:            ds 1                                ; C6C1↑o C734↑o 
E9B1 sprite108_flags:        ds 1
E9B2 sprite108_code:         ds 1
E9B3 sprite108_x:            ds 1
E9B4 sprite109_y:            ds 1
E9B5 sprite109_flags:        ds 1
E9B6 sprite109_code:         ds 1
E9B7 sprite109_x:            ds 1
E9B8 sprite110_y:            ds 1
E9B9 sprite110_flags:        ds 1
E9BA sprite110_code:         ds 1
E9BB sprite110_x:            ds 1
E9BC sprite111_y:            ds 1                                ; sub_C396↑o
E9BD sprite111_flags:        ds 1
E9BE sprite111_code:         ds 1
E9BF sprite111_x:            ds 1
E9C0 sprite112_y:            ds 1
E9C1 sprite112_flags:        ds 1
E9C2 sprite112_code:         ds 1
E9C3 sprite112_x:            ds 1
E9C4 sprite113_y:            ds 1
E9C5 sprite113_flags:        ds 1
E9C6 sprite113_code:         ds 1
E9C7 sprite113_x:            ds 1
E9C8 sprite114_y:            ds 1
E9C9 sprite114_flags:        ds 1
E9CA sprite114_code:         ds 1
E9CB sprite114_x:            ds 1
E9CC sprite115_y:            ds 1
E9CD sprite115_flags:        ds 1
E9CE sprite115_code:         ds 1
E9CF sprite115_x:            ds 1
E9D0 sprite116_y:            ds 1
E9D1 sprite116_flags:        ds 1
E9D2 sprite116_code:         ds 1
E9D3 sprite116_x:            ds 1
E9D4 sprite117_y:            ds 1                                ; 56C5↑o
E9D4                                                             ; loc_56E1↑o
E9D5 sprite117_flags:        ds 1
E9D6 sprite117_code:         ds 1
E9D7 sprite117_x:            ds 1
E9D8 sprite118_y:            ds 1                                ; CCEC↑o
E9D8                                                             ; loc_CD35↑o 
E9D9 sprite118_flags:        ds 1
E9DA sprite118_code:         ds 1
E9DB sprite118_x:            ds 1
E9DC sprite119_y:            ds 1                                ; D389↑o
E9DD sprite119_flags:        ds 1
E9DE sprite119_code:         ds 1
E9DF sprite119_x:            ds 1
E9E0 sprite120_y:            ds 1
E9E1 sprite120_flags:        ds 1
E9E2 sprite120_code:         ds 1
E9E3 sprite120_x:            ds 1
E9E4 sprite121_y:            ds 1
E9E5 sprite121_flags:        ds 1
E9E6 sprite121_code:         ds 1
E9E7 sprite121_x:            ds 1
E9E8 sprite122_y:            ds 1
E9E9 sprite122_flags:        ds 1
E9EA sprite122_code:         ds 1
E9EB sprite122_x:            ds 1
E9EC sprite123_y:            ds 1
E9ED sprite123_flags:        ds 1
E9EE sprite123_code:         ds 1
E9EF sprite123_x:            ds 1
E9F0 sprite124_y:            ds 1
E9F1 sprite124_flags:        ds 1
E9F2 sprite124_code:         ds 1
E9F3 sprite124_x:            ds 1
E9F4 sprite125_y:            ds 1
E9F5 sprite125_flags:        ds 1
E9F6 sprite125_code:         ds 1
E9F7 sprite125_x:            ds 1
E9F8 sprite126_y:            ds 1                                ; 093D↑o 0EE6↑o 
E9F9 sprite126_flags:        ds 1
E9FA sprite126_code:         ds 1
E9FB sprite126_x:            ds 1
E9FC sprite127_y:            ds 1
E9FD sprite127_flags:        ds 1
E9FE sprite127_code:         ds 1
E9FF sprite127_x:            ds 1
E9FF ; end of 'sprite_ram'
E9FF
EC00 ; ===========================================================================
EC00
EC00 ; Segment type: Regular
EC00                         segment paletteram
EC00                         org 0EC00h
EC00 PALETTE_RAM_BASE:       ds 1                                ; 1010↑o DDBD↑o
EC01                         ds 1
EC02                         ds 1
EC03                         ds 1
EC04                         ds 1
EC05                         ds 1
EC06                         ds 1
EC07                         ds 1
EC08                         ds 1
EC09                         ds 1
EC0A                         ds 1
EC0B                         ds 1
EC0C                         ds 1
EC0D                         ds 1
EC0E                         ds 1
EC0F                         ds 1
EC10                         ds 1
EC11                         ds 1
EC12                         ds 1
EC13                         ds 1
EC14                         ds 1
EC15                         ds 1
EC16                         ds 1
EC17                         ds 1
EC18                         ds 1
EC19                         ds 1
EC1A                         ds 1
EC1B                         ds 1
EC1C                         ds 1
EC1D                         ds 1
EC1E                         ds 1
EC1F                         ds 1
EC20                         ds 1
EC21                         ds 1
EC22 byte_EC22:              ds 1                                ; B1EC↑w B317↑w
EC23                         ds 1
EC24                         ds 1
EC25                         ds 1
EC26                         ds 1
EC27                         ds 1
EC28                         ds 1
EC29                         ds 1
EC2A                         ds 1
EC2B                         ds 1
EC2C                         ds 1
EC2D                         ds 1
EC2E                         ds 1
EC2F                         ds 1
EC30                         ds 1
EC31                         ds 1
EC32                         ds 1
EC33                         ds 1
EC34                         ds 1
EC35                         ds 1
EC36                         ds 1
EC37                         ds 1
EC38                         ds 1
EC39                         ds 1
EC3A                         ds 1
EC3B                         ds 1
EC3C                         ds 1
EC3D                         ds 1
EC3E                         ds 1
EC3F                         ds 1
EC40                         ds 1
EC41                         ds 1
EC42 byte_EC42:              ds 1                                ; B1EF↑w B31A↑w
EC43                         ds 1
EC44                         ds 1
EC45                         ds 1
EC46                         ds 1
EC47                         ds 1
EC48                         ds 1
EC49                         ds 1
EC4A                         ds 1
EC4B                         ds 1
EC4C                         ds 1
EC4D                         ds 1
EC4E                         ds 1
EC4F                         ds 1
EC50                         ds 1
EC51                         ds 1
EC52                         ds 1
EC53                         ds 1
EC54                         ds 1
EC55                         ds 1
EC56                         ds 1
EC57                         ds 1
EC58                         ds 1
EC59                         ds 1
EC5A                         ds 1
EC5B                         ds 1
EC5C                         ds 1
EC5D                         ds 1
EC5E                         ds 1
EC5F                         ds 1
EC60                         ds 1
EC61                         ds 1
EC62 byte_EC62:              ds 1                                ; B1F2↑w B31D↑w
EC63                         ds 1
EC64                         ds 1
EC65                         ds 1
EC66                         ds 1
EC67                         ds 1
EC68                         ds 1
EC69                         ds 1
EC6A                         ds 1
EC6B                         ds 1
EC6C                         ds 1
EC6D                         ds 1
EC6E                         ds 1
EC6F                         ds 1
EC70                         ds 1
EC71                         ds 1
EC72                         ds 1
EC73                         ds 1
EC74                         ds 1
EC75                         ds 1
EC76                         ds 1
EC77                         ds 1
EC78                         ds 1
EC79                         ds 1
EC7A                         ds 1
EC7B                         ds 1
EC7C                         ds 1
EC7D                         ds 1
EC7E                         ds 1
EC7F                         ds 1
EC7F ; end of 'paletteram'
EC7F
F000 ; ===========================================================================
F000
F000 ; Segment type: Regular
F000                         segment bg_videoram
F000                         org 0F000h
F000 bg_videoram:            ds 40h                              ; 102E↑o
F000                                                             ; unpack_fullscreen_data↑o 
F000                                                             ; Rampage/MCR3 Tilemap 2-byte Format (bg_videoram):
F000                                                             ; Bit  15   14   13   12   11   10    9    8    7    6    5    4    3    2    1    0
F000                                                             ;       |ch |pa |pa |xf |yf |----------------------Tile Code-----------------------|
F000                                                             ;       |    |    |    |    |                    (0–9: lo bits)
F000                                                             ;    ch: bit 14, high bit of code (<<10)
F000                                                             ;    pa: bits 13-12, palette (0-3)
F000                                                             ;    xf: bit 10, x flip
F000                                                             ;    yf: bit 11, y flip
F000                                                             ; Extraction:
F000                                                             ;    code    = (word & 0x3FF) | ((word >> 4) & 0x400)
F000                                                             ;    yflip   = (word >> 10) & 1
F000                                                             ;    xflip   = (word >> 11) & 1
F000                                                             ;    palette = (word >> 12) & 0x3
F040 bg_row02:               ds 40h                              ; 0312↑o
F040                                                             ; loc_382↑o 
F040                                                             ; Background video RAM row
F080 bg_row03:               ds 40h                              ; unpack_screen_data_2linesdown↑o
F080                                                             ; 031F↑o 
F080                                                             ; Background video RAM row
F0C0 bg_row04:               ds 40h                              ; B355↑o AFC3↑o 
F0C0                                                             ; Background video RAM row
F100 bg_row05:               ds 40h                              ; B15F↑o
F100                                                             ; coin_chute_2↑o 
F100                                                             ; Background video RAM row
F140 bg_row06:               ds 40h                              ; B203↑o
F140                                                             ; service_button↑o 
F140                                                             ; Background video RAM row
F180 bg_row07:               ds 40h                              ; Background video RAM row
F1C0 bg_row08:               ds 40h                              ; left_joystick_text↑o
F1C0                                                             ; DD9E↑o
F1C0                                                             ; Background video RAM row
F200 bg_row09:               ds 40h                              ; AED6↑o
F200                                                             ; left_jump_text↑o
F200                                                             ; Background video RAM row
F240 bg_row10:               ds 40h                              ; left_punch_text↑o
F240                                                             ; Background video RAM row
F280 bg_row11:               ds 40h                              ; 6618↑o 667F↑o 
F280                                                             ; Background video RAM row
F2C0 bg_row12:               ds 40h                              ; middle_joystick_text↑o
F2C0                                                             ; Background video RAM row
F300 bg_row13:               ds 40h                              ; middle_jump_text↑o
F300                                                             ; DF99↑o
F300                                                             ; Background video RAM row
F340 bg_row14:               ds 40h                              ; middle_punch_text↑o
F340                                                             ; Background video RAM row
F380 bg_row15:               ds 40h                              ; DF9B↑o
F380                                                             ; Background video RAM row
F3C0 bg_row16:               ds 40h                              ; right_joystick_text↑o
F3C0                                                             ; Background video RAM row
F400 bg_row17:               ds 40h                              ; DAB8↑o
F400                                                             ; right_jump_text↑o
F400                                                             ; Background video RAM row
F440 bg_row18:               ds 40h                              ; right_punch_test↑o
F440                                                             ; Background video RAM row
F480 bg_row19:               ds 40h                              ; DABC↑o
F480                                                             ; off_DCE3↑o
F480                                                             ; Background video RAM row
F4C0 bg_row20:               ds 40h                              ; score_option_off_text↑o
F4C0                                                             ; Background video RAM row
F500 bg_row21:               ds 40h                              ; 65F3↑o 6638↑o 
F500                                                             ; Background video RAM row
F540 bg_row22:               ds 40h                              ; difficult_level_menu↑o
F540                                                             ; Background video RAM row
F580 bg_row23:               ds 40h                              ; Background video RAM row
F5C0 bg_row24:               ds 40h                              ; DAC4↑o DAD2↑o
F5C0                                                             ; Background video RAM row
F600 bg_row25:               ds 40h                              ; display_coin_credits↑o
F600                                                             ; Background video RAM row
F640 bg_row26:               ds 40h                              ; 31EA↑o 8CC0↑o 
F640                                                             ; Background video RAM row
F680 bg_row27:               ds 40h                              ; 8CCC↑o DAD6↑o
F680                                                             ; Background video RAM row
F6C0 bg_row28:               ds 40h                              ; 322E↑o 32C5↑o 
F6C0                                                             ; Background video RAM row
F700 bg_row29:               ds 40h                              ; base_strip_plot↑o
F700                                                             ; 49A2↑o 
F700                                                             ; Background video RAM row
F740 bg_row30:               ds 40h                              ; 4AEF↑o D029↑o
F740                                                             ; Background video RAM row
F780 bg_row31:               ds 40h                              ; 44F2↑o 452F↑o
F780                                                             ; Background video RAM row
F7C0 bg_row32:               ds 40h                              ; Background video RAM row
F7C0 ; end of 'bg_videoram'
F7C0
F800                         ds 1
F801                         ds 1
F802                         ds 1
F803                         ds 1
F804                         ds 1
F805                         ds 1
F806                         ds 1
F807                         ds 1
F808                         ds 1
F809                         ds 1
F80A                         ds 1
F80B                         ds 1
F80C                         ds 1
F80D                         ds 1
F80E                         ds 1
F80F                         ds 1
F810                         ds 1                                ; 6459↑o
F811                         ds 1
F812                         ds 1
F813                         ds 1
F814                         ds 1
F815                         ds 1
F816                         ds 1
F817                         ds 1
F818                         ds 1
F819                         ds 1
F81A                         ds 1
F81B                         ds 1
F81C                         ds 1
F81D                         ds 1
F81E                         ds 1
F81F                         ds 1
F820                         ds 1
F821                         ds 1
F822                         ds 1
F823                         ds 1
F824                         ds 1
F825                         ds 1
F826                         ds 1
F827                         ds 1
F828                         ds 1
F829                         ds 1
F82A                         ds 1
F82B                         ds 1
F82C                         ds 1
F82D                         ds 1
F82E                         ds 1
F82F                         ds 1
F830                         ds 1
F831                         ds 1
F832                         ds 1
F833                         ds 1
F834                         ds 1
F835                         ds 1
F836                         ds 1
F837                         ds 1
F838                         ds 1
F839                         ds 1
F83A                         ds 1
F83B                         ds 1
F83C                         ds 1
F83D                         ds 1
F83E                         ds 1
F83F                         ds 1
F840                         ds 1
F841                         ds 1
F842                         ds 1
F843                         ds 1
F844                         ds 1
F845                         ds 1
F846                         ds 1
F847                         ds 1
F848                         ds 1
F849                         ds 1
F84A                         ds 1
F84B                         ds 1
F84C                         ds 1
F84D                         ds 1
F84E                         ds 1
F84F                         ds 1
F850                         ds 1
F851                         ds 1
F852                         ds 1
F853                         ds 1
F854                         ds 1
F855                         ds 1
F856                         ds 1
F857                         ds 1
F858                         ds 1
F859                         ds 1
F85A                         ds 1
F85B                         ds 1
F85C                         ds 1
F85D                         ds 1
F85E                         ds 1
F85F                         ds 1
F860                         ds 1
F861                         ds 1
F862                         ds 1
F863                         ds 1
F864                         ds 1
F865                         ds 1
F866                         ds 1
F867                         ds 1
F868                         ds 1
F869                         ds 1
F86A                         ds 1
F86B                         ds 1
F86C                         ds 1
F86D                         ds 1
F86E                         ds 1
F86F                         ds 1
F870                         ds 1
F871                         ds 1
F872                         ds 1
F873                         ds 1
F874                         ds 1
F875                         ds 1
F876                         ds 1
F877                         ds 1
F878                         ds 1
F879                         ds 1
F87A                         ds 1
F87B                         ds 1
F87C                         ds 1
F87D                         ds 1
F87E                         ds 1
F87F                         ds 1
F880                         ds 1
F881                         ds 1
F882                         ds 1
F883                         ds 1
F884                         ds 1
F885                         ds 1
F886                         ds 1
F887                         ds 1
F888                         ds 1
F889                         ds 1
F88A                         ds 1
F88B                         ds 1
F88C                         ds 1
F88D                         ds 1
F88E                         ds 1
F88F                         ds 1
F890                         ds 1
F891                         ds 1
F892                         ds 1
F893                         ds 1
F894                         ds 1
F895                         ds 1
F896                         ds 1
F897                         ds 1
F898                         ds 1
F899                         ds 1
F89A                         ds 1
F89B                         ds 1
F89C                         ds 1
F89D                         ds 1
F89E                         ds 1
F89F                         ds 1
F8A0                         ds 1
F8A1                         ds 1
F8A2                         ds 1
F8A3                         ds 1
F8A4                         ds 1
F8A5                         ds 1
F8A6                         ds 1
F8A7                         ds 1
F8A8                         ds 1
F8A9                         ds 1
F8AA                         ds 1
F8AB                         ds 1
F8AC                         ds 1
F8AD                         ds 1
F8AE                         ds 1
F8AF                         ds 1
F8B0                         ds 1
F8B1                         ds 1
F8B2                         ds 1
F8B3                         ds 1
F8B4                         ds 1
F8B5                         ds 1
F8B6                         ds 1
F8B7                         ds 1
F8B8                         ds 1
F8B9                         ds 1
F8BA                         ds 1
F8BB                         ds 1
F8BC                         ds 1
F8BD                         ds 1
F8BE                         ds 1
F8BF                         ds 1
F8C0                         ds 1
F8C1                         ds 1
F8C2                         ds 1
F8C3                         ds 1
F8C4                         ds 1
F8C5                         ds 1
F8C6                         ds 1
F8C7                         ds 1
F8C8                         ds 1
F8C9                         ds 1
F8CA                         ds 1
F8CB                         ds 1
F8CC                         ds 1
F8CD                         ds 1
F8CE                         ds 1
F8CF                         ds 1
F8D0                         ds 1
F8D1                         ds 1
F8D2                         ds 1
F8D3                         ds 1
F8D4                         ds 1
F8D5                         ds 1
F8D6                         ds 1
F8D7                         ds 1
F8D8                         ds 1
F8D9                         ds 1
F8DA                         ds 1
F8DB                         ds 1
F8DC                         ds 1
F8DD                         ds 1
F8DE                         ds 1
F8DF                         ds 1
F8E0                         ds 1
F8E1                         ds 1
F8E2                         ds 1
F8E3                         ds 1
F8E4                         ds 1
F8E5                         ds 1
F8E6                         ds 1
F8E7                         ds 1
F8E8                         ds 1
F8E9                         ds 1
F8EA                         ds 1
F8EB                         ds 1
F8EC                         ds 1
F8ED                         ds 1
F8EE                         ds 1
F8EF                         ds 1
F8F0                         ds 1
F8F1                         ds 1
F8F2                         ds 1
F8F3                         ds 1
F8F4                         ds 1
F8F5                         ds 1
F8F6                         ds 1
F8F7                         ds 1
F8F8                         ds 1
F8F9                         ds 1
F8FA                         ds 1
F8FB                         ds 1
F8FC                         ds 1
F8FD                         ds 1
F8FE                         ds 1
F8FF                         ds 1
F8FF
F8FF                         end
